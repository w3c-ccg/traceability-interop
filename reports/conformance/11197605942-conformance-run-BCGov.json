{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a081a455-8cf6-4975-abcf-803c1be2a4f8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bb39a673-5cab-4511-8263-e14f80c8cb2d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "034ad798-e08f-4844-bab2-fd5339699a11",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b55f6ca1-54d4-4cce-b3dd-af87f97e5ab2"
                }
              }
            ]
          },
          {
            "id": "af11d864-1a76-4b32-bba5-83a52546249b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8925b2c1-c37b-4c19-8241-0c9cf211fe85",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d29be3d0-24de-431c-ae0c-dd564ecd0f90"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aef3850a-ce0e-4dea-95a1-1796f8092650",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "30822036-8053-4ed3-ad40-be55d77a3bc7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9490393-22a5-48bf-9bea-500560430477",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46bf8042-ceb6-40c4-b061-8b9455e965b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0726995a-1404-4aff-8fdf-5331a2f9f81d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5703473-1a52-4af2-bcd2-ecb2b3951fa4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b98af3e-b87d-4781-81a7-6cbff61c4f82"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7fd1ff5f-2358-437f-9712-0740843d396c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75bd35c0-5822-4bf9-8dda-d27e8a366c78"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d22ea6d8-6f15-4239-aa8d-6b0fcd80df55",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0306b59b-4efd-4feb-a7f6-f942c0ff2bca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac306b61-0d93-417c-b2e8-17d27e7f4aeb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33eb6560-acab-4546-a0ac-64980fd1df23"
            }
          }
        ]
      },
      {
        "id": "d5989c59-9745-456e-a9e7-f3d1f454359e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f632f0a7-7e5b-4e17-8363-7342622d095e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "293fb33c-8831-4247-b355-4e187fd75fe8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fff03212-2f61-49ac-bb6f-8465a584dc9b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3747be-fea8-4da3-83ee-6f5efda5c212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f87f4c2-f4a7-42f6-9e83-45fae3e3a9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cc48c2-9a3a-4683-9084-d11045a51b59",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b7c8a7-996f-4b49-81f8-047ac881b9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc5c52d3-50af-425f-ac49-d50302acfd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3e44fd-f24f-454e-8deb-e8b21d47e3a4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b272ad-d882-48df-a828-b39f029e014e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b161492f-eb20-4c4b-ae03-97310c97b07d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5764fc0-048a-4eb8-97b1-36f7d17767ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26126ae9-67dc-444d-9641-281524a0efea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bc540b-f6d0-4196-9a08-224f4cdebcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ca0c444-99e2-484c-8c76-d8d5aa693687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb847542-88a5-46fb-b44e-f3aa64d52d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fed34ef-8a78-40e2-ad67-7338abcf7f4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "39114638-ccb8-4c7d-b6df-0d06d82397bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d927353e-6b3f-456e-9677-f23210f40d9e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2244a8ca-c724-457f-9bd8-e5773da9a749",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b07e87c5-a991-4ece-bf5c-6420d1268bce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7121f85-128f-4908-ad6e-fc06a6f973ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3667318b-2639-4750-8673-d6b3d73a9db3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6454b658-32b3-4599-835a-21465bbd536b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "010bf29f-4365-452c-8a10-59e19d37d803"
            }
          }
        ]
      },
      {
        "id": "b7ed395c-4899-4e8d-b86f-1d372154d565",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "eb308542-95f3-4a12-97a3-3834abf27b9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b735f563-278e-45c6-9558-4dfcc9127d91",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ad74c514-93cd-4985-b9f5-8c661d8df1cf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d917f71-c299-456c-90d7-72e9518a88f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37847e07-7cfc-47da-a15f-15e3452857bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8648f49-59a1-4ec8-90c6-3814e4c78d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5de288c8-3db8-468c-a370-0949b2f8348b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd81f3b5-cc5f-48ea-a85f-ef0b3f966cac",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acc94f5-e6ab-4bbc-ad7f-8dc1730c21ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870541fa-f7f1-442b-8f86-19684794e156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2d60a3-e376-41d9-aa45-43314f7fd092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d303d31f-3568-4af0-8661-960b0c163608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8835755b-9e42-4b6a-a5ee-18c8d4e8fba8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83650fd1-4a90-43fc-93f7-bc431d709d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df68917-123f-4330-b243-a3c112ce1b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0908544-572c-4da6-96ee-a5e51405d14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43a3892a-c223-4804-9a08-b04d6309bcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97cd096-dfa9-4d15-8977-3d4010b621ce",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5dc30f-dc7e-4bad-adbb-0aef1bbe99b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65540610-ac85-4f24-90af-4dab9c5e15b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4253c11-e5d3-4c76-9e2e-c5d86e8d740d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cd57323-d77e-4e14-9560-dbebd25c8ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5bf39e-0f3e-4d41-a292-0edbf5992f8a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5aa7bf1-4137-4bf6-b30c-7b87d5f6ee5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33523728-4c92-421e-a4fe-2dcd35432f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19757de1-0b60-4de6-a494-1964b146dc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fde6729-91d7-40af-911e-bbca21b80063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12070ee-6da5-4ed2-a98b-60d234d6905b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479625ad-d590-4574-a4b5-e14de4e5a08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf9bb5e-a39b-4985-8a42-d2d56c7e1019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e850f2-addf-4293-8a10-4ee3968c16df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "662b60ce-ae5c-4bff-b2b6-163252001116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3439424-7a22-4bf9-aca5-e48dea50a0c5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d3b493-99fa-4e96-9984-1168bb58a114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2acf53-d428-41ce-ab32-1c522e599b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6d1939-bce8-4ab7-ab76-ef38b442c659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd074194-8396-4757-a931-833b2ca103ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ccee3b-6c4c-49f0-863d-f615b2edd29d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3296c341-6778-4f96-8228-73c3d8f1cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfbe2cf-8be7-4d50-8302-a59772a05845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156c68d3-fc12-4b01-84f1-84371c116a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13a97503-a312-4f42-81d6-2cd79e383efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8392d9-07f7-432d-b28b-f166ac639e6e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9726f966-d23c-4ac7-bf92-c5f45fa75eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e075ba4-fb30-4056-aeec-dedb1fb3e585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04878abb-1887-4721-a84f-dc5e03b039ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c66b38a-f55a-495c-b9e3-5587eeab397a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8921387c-6c38-43e5-b0a3-66e295f88c10",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f459ee78-f148-4c96-a7c6-bc0a6b502ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5483cf82-18bb-44d0-9b1b-30a89c0c6980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28948460-7657-43ae-9764-c79cfd23200f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a05f06c7-d80c-45ee-afb1-898ad6b0e3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af01666-b067-43ae-ab0a-9a1e5ab1a59a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e619b130-7f75-46cc-862a-6742f494146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c6f75e-90b6-4808-95d1-78dfc647f111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbda0fd8-9352-4cf4-b6b8-342439d20ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cdc691b-7c26-405b-b69b-53f41196ed1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0be6113-6be1-4c96-acb5-8059cb1a7aea",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9038c381-a378-4806-97f2-cc5161fd67d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179999f8-29af-4d1a-8ba0-31c2b10cb7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72443df8-6954-4d9f-b4b0-179dc9d38199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40af7510-a2a4-4107-973a-0dc5cfdca7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f2e43f-8717-42bd-8a84-98b3624aabf7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3371454-8491-4747-b46d-135061d8cca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82b33ef-7ef2-4bd0-8a4a-d75557b70b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643af1f2-55ba-435b-b335-6c7021e6c417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01ed3663-9a1f-450b-b93d-0556ffc6df82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12b60bd-6802-40e9-924b-de4f545dea2f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b7cb6d-0f04-40a5-8fea-94eb643f5d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507a96d6-7262-42e7-8198-3af80082ee94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9c1137-0f61-48f0-b307-12f5d749593e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60a5dd48-d326-4c6a-8658-21dfd03fb45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5c4d0f-cfab-46c6-9d9c-64fb9da94ffb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c900d06b-270f-4b07-ae88-9cf243592f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162abf35-bc4c-4479-a437-8e4c87f2b428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe469a5-4f5a-4b43-b7d3-2b8edd61474d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07562d61-5e36-4ecb-aa55-aa8e04b77915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a981ebd8-b3d0-447d-8da1-ceee7d134764",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e09919-7bbd-462c-9456-43f6d6410b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6225e273-2594-489c-b1df-5ccbf2f73ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee653a8-7d10-481f-8054-dda8aac0b4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8a23320-5e7d-479d-bec0-600ba77237a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37161ff5-0d15-4b5f-affc-12b05385f26f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a026f72-8911-4cb4-aa13-1fa002548541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9a2900-f7f9-444a-a1ce-9f11d0d7ac69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6498123-2198-4298-b7a9-92f0e65373bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a2ee6a7-209b-49cf-93e4-29e842f82219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ba28d6-ade3-4319-b20a-937af0b9bbb0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b7c3ac-8ad2-42c3-b041-4c12b7313a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f175bd4-2553-4821-aaaa-89242a91923a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a958caeb-302f-472b-8b45-fa2645d596d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d1e9cd-d6af-4dcf-8932-16323a6948af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121ed040-269a-4a99-a495-412c0b894377",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dacfe22-3063-4054-8526-15babc3da98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91301561-4d16-4306-8318-15cf6ef8ed0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345980b6-66d2-485b-8033-ec1e8bb5d5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0319b86e-2f2d-4c60-83b9-d4408ca72c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e46fcb7-ad9d-4096-be1a-47695bceeef8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3aceb95-a084-4c21-ae2e-8749c127bb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604534b8-5576-4d8e-a37f-265b0896e6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00bc504-50e7-4dbc-ae20-e8188e1b6894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcba52f-2c62-42b0-9a3a-0794f4c2c351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885a6099-db21-45d6-9c62-6d4cb8bf8711",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1756e74d-6428-4060-84eb-3dab7f1ae321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e62c3cb-dd7a-4d47-8c1a-1abc28b1f642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5c0362-09d2-4e74-8508-4763ddd2851e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c5491b-714d-42f4-9c4c-205b596d4103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d59c916-5157-4cfc-8192-272ac2ecaebb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd5d2bb-2fac-450c-bb49-55ae7ca9cb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13adf05f-539f-4b74-82f3-5d74f8065153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71699a17-0cb9-409a-9b46-d7f55424eaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb6794c-459a-4792-8852-fa5c9788a196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7243e69c-48fd-4e5b-bf6d-679579646f0b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035c2031-3ea3-4479-ab86-5bcade886b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38363449-f8ce-454d-86af-5a657d21a61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba15959-f304-4e8e-a463-5f3b74d51335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e6b46f-0c9a-405d-9c3b-841fe920c66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69632eb-6e08-4d88-b920-425f42c6cea4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78e6d8b-bb01-460d-98ea-b257654d2abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68d0fba-011b-4e49-af69-a22cf30dcb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65097c9-1377-4cc5-a46a-69ce56a2dcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "942a808a-c0c2-4270-b223-2574a0abb8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b596d07-e7b3-40ac-8005-76096c83d317",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a968672-8388-42f1-a41e-8c1399cf848b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc3430a-2d83-4dae-9271-89bed8301f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802f7f9a-a62d-4792-a2a3-b8b7e3bf480b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bd4e40-ddd8-46b5-9d38-e33056512236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3222170-9903-43f9-a875-96d0919dc4b7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df162cdc-b631-4ce8-8d4c-106752dcdfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4545ac3d-ac32-4a59-9a07-44bbf44b6320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca227fa-4b44-4999-88b6-a740aa24aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f5462b-4500-4317-8c7a-b133bf19b66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9de3757-3bc3-4ee2-8947-09801ff823be",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2093a6-430f-490b-b819-04dd6f54d7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc2ca60-85ce-4c15-8ca0-c3902cc79bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca97a20-960b-4242-8d1f-76b0952097d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2828b070-052a-4cd2-886f-1419dc4b70ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da071c13-417f-430b-80ce-9275cb6a902f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e387ade8-22a7-4608-a0a0-8d26a5563473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54439c6b-3e94-44bf-93fa-26592e8f593c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606c79ff-c4e4-4b03-824a-ad9441fa3e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b153e797-6e5b-40a8-88ea-fdeaac0bd53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cee9fb8-92bf-4ad3-ba81-2951a6a7399a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f12a463-12b9-4a0b-b00e-34d6cd29c248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dab8659-3e41-4e3e-adda-e5f22a74d0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6ab484-25f0-44d6-bc35-172a837fb39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd460c5-4cfd-40ee-b7a8-3b7594b3a5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb54c1df-aef1-4f67-8ca6-4f9605059037",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca34727-b8fe-44df-934a-fc5989a9d615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530e9b91-5094-4fd0-8d67-5dbb62190cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4357c645-4ea7-42f9-96a1-f7c273104523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f55db80-9a74-4501-874f-13256ddb0f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb111210-9c73-4c05-99e4-c5b9999c37bf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0db18b8-f386-4686-82a5-7f1c39770f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af58e55f-823d-4b69-8a3b-3a591d48f463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d861df9-61ab-4f81-b241-f363dfaf98e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "496d3135-93d6-45df-b8c9-433e2e0b9f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa409d2-009b-4a04-9ecd-43e441ab5914",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359790fb-a152-4beb-a3a9-dbe7f84c9a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975bcfe3-53cd-42c9-80a0-2a447df7ed66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39c459a-79ee-4fbe-ba68-84b1428f3507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92a7811f-8831-43c3-b6f4-9d7571aa834d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d986c3ee-58de-407f-8650-de47a04a8829",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e97468e-4292-434d-85ab-69054258a573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fe2192-4240-48f3-b9f7-70408359d77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7308cb-8f60-4f6a-aa99-34e33660af98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa0da8a-1509-41de-a2b3-2bf8985acc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0f4363-9308-410f-913a-42b59e2dc630",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4299f25-d6a4-463f-9ed3-10bf18427db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb307f7-1fbd-46b7-86e7-bfe182b70421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d2fb61-2878-43fa-ad9d-a2f09e895249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ffb3df-4fb9-4b00-96cd-09e75146d782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5854e2-c781-49cc-8863-fbaac333fd58",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2536e3-a5e3-4c5e-801f-b15f8a9629ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463f73cd-5de0-4008-982e-9ec02499295c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfefc07-9d8b-456a-8118-807d59ab8484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fe62cb32-24ef-4616-8d06-076056fcaa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fea25e-0248-40fa-888b-e64cff8a1417",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c57281-c82c-4664-93b3-bc8045fdc105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9a88046-e96f-4229-8a89-436c11246dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b451840-1b05-49a7-a90e-6b75e92fcb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84f0b61f-b0b4-4621-8966-f598820ace78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ab650d-2c86-4db0-9fda-78a09f56b273",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d39743a-120e-42e4-97af-13fb76c1c26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1876703-c48d-41f5-b608-7f269ce01241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047963da-f10b-413e-9232-f8bd88e67a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c24fbcde-c2e4-40b9-994f-45a033f2f9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066275cb-e114-4331-adca-e20584c9c701",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67821196-9bf4-45c5-b041-b13d9b98db32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791773ad-783e-4f9c-9c07-85748a4aed8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505fef47-2bde-42e1-bafa-5b0bfb7c9828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "800cb4f9-3c64-4a7e-ab66-82126a85adca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52442bb8-a397-4e3e-8c3a-4db04f1cad3d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb38a29-85be-43f9-b8e9-234ac8a6a94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa1cee8-d680-4b5b-9a46-9d388805b763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d68a59-5b79-4d6a-9f9a-ea1a33b0a5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1edb044-410d-4387-a371-f95beb8c5af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec29c9b4-91d5-4daf-a0f6-6cbaf7970366",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab83f8a-3f6d-41b0-9ce2-a6fada92cc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905073c3-d609-4d2c-b90c-c43fec815b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40d8678-21c8-4364-81d4-588fe7171eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "017f3a11-f819-41ab-aebe-42861f4c60fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69865fa2-89b3-4327-9a4a-d07de8cd6c19",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4b7a2a-eb2b-4136-9ca1-5a7b4a240796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aead9a3-7d16-41e3-b943-de12301b1aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e37da90-c402-4fe0-a065-c21c32c835df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "71751b91-18a8-4533-b19c-2a609afceaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a42a6f-deae-4fac-973b-dc568d10c61e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be747e9b-d301-40fb-8598-860118a14e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b04b32-a7c6-49ff-bc4d-4a00a815fdac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1354c917-9277-42f8-9493-aedc95079c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf0c6c2-6272-4e70-91ab-83c424cba3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15f83b4-a1e6-408e-bcd6-6c99c8dd6d87",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7141cc8f-ec53-4b26-9638-b7c59a0f8f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fa41d9-61e4-46c2-ac61-a6a9070954ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b263b07d-0da6-4428-9227-7f4a1862c257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "43b583fc-9c99-412d-b0d6-25d744f2362e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfabdeba-a673-49c4-9fd1-2ed92144db20",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf086444-c0b7-4c06-bab3-1cbb3dcd9fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c147a481-0a7a-494a-a386-8109cbe6c0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6416b77d-e364-422c-a9e1-eeb48ac8f336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd3befb-208d-401a-8c84-8f9034193786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed045aea-0d7f-46c7-b9c4-20f769e30002",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c67af0-45f6-421a-9d24-1a199d092e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6dc859-1850-4d33-8c0c-7be44b09a219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68aa6650-251f-4d33-8b70-c4f7ea25190c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b157ff9-3481-4458-be6e-bb3078b087ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8a4913-6a7c-4693-8a72-9574484166eb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ec03d3-6b99-46f0-9288-c5f68db3caaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2af604-446d-400d-bcfd-eb71e81213bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebce62a-d839-450c-b046-3edd2a5d904a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afaab8db-c014-4d66-a7d1-c5f465153dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e3e0c4-ad75-438a-8740-4286f11a5dea",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3973860c-177f-45da-8c14-0c6d0f0a754f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e3ce71-7ce8-483c-a90d-e8d4cf304262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa07e5c-fc59-44bf-a31c-0af641115131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "479a9d01-7a74-4c75-b48d-669b540ba282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e29d67-55d5-42aa-8d16-dc9c71a7b6cd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150d8f8f-5789-45ce-901c-f759d2d179dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9b1264-3172-4782-994a-ff7335a9f386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e004d488-9026-4118-ac27-788cdd9aafb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad8a11-002b-418b-9270-cdbbfae4321c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf82e80-80d0-4ca8-8609-0eca45db8bd3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f20eb9-ae22-483f-8240-09297cf66547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca61598c-a0ce-41e7-8433-557b08ea64ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42754667-e54a-4a16-9b10-0c500a5fd4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63ddc528-3afb-4acb-b77e-c56d37f6585a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fae4aaf-4b61-47af-a724-6dc654662f8c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bb5df4-49de-4d02-98fb-555ba59324d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348c858c-420d-4199-afa6-1fae005d6c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02d3d7b-10ec-41c8-87f3-a5faf86570e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "254ee0ed-ac6f-40fd-8f1f-91987e9b1ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d893a96-27ed-4fe3-ac8e-347aff2bd1f5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d8cb3a-c2e3-45fe-89f8-bfb9d73b758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cff037-28ba-46a0-b754-54ad179dc756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00826f7c-6b77-477d-9d1f-8c6b698b7723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8694d8-8b4e-4373-b91b-6d6870363fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30b4d88-e9dc-4cba-865f-1d51aa6a6601",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db24d48-8d75-4a01-a7d0-41a4cf3c8231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b0a349-fe2e-4048-b8ca-89d185c49720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a2a62a-f2c3-43ba-be83-f5d80a87e24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "163cb949-ddd6-4d4d-92c0-f7a7bedc31f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ada2413-9942-4c98-b62c-e64bfecb640f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8c6a58-aefe-418d-af7c-5c29fd216824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff63ab5-4b7a-4525-a81e-02263d3af46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a1b5d6-fd2d-4941-90b5-39d2076fc2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1ff570-dd9a-4651-acfd-80122906842d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb950a6-6704-4ce3-b372-8d3a01516d05",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da05376-8c93-40af-a73b-53063dd80ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbf465c-5b40-4ac6-9a11-2e540b8cbfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8328f35-2d41-469e-9370-b26d7fa15aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06b5af85-07a4-4d4d-ac9c-160808cd8b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206e30ff-2eeb-4ca9-a6e6-4a7b3fee6455",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d15a69f-c09d-43bb-963f-d1a6385d1016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143a8615-19ef-48b9-8e31-104bc1f5a30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ff8783-b651-4eca-ada8-88abb6276c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcdeb955-7b10-40bb-9638-902678c923bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ce65ca-241e-4bf8-b35c-59decb9b6414",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cf888f-1cd7-4aa0-8463-5db5ba8c97e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5284ec16-0bb8-439f-aff9-29ca9ef4cc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47640358-4f44-4f41-b030-8e42ec97eb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2e93a3-d1db-4544-9d7d-062e953840b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20175ad-fa35-4720-b1cc-654f6f1129dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142f5a70-1d31-46e9-bccc-ddb5baaeb701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b0b32f-5032-457b-b02d-eebe314b6214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f619d546-f2b8-412c-b2b1-7c1ac38fdfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9dc84d-0cc7-41ac-b072-d75327d052a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b122f3-0eaf-4e9b-b3b1-a52d227410c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3077db4f-8239-44f1-903c-9584dde9602e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246f7b1c-349e-4834-8b48-1aeafe44ab21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b433181c-539a-4268-8dad-6bceb91799e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9c4416-a5e3-490a-80fa-1ff31b7028a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0648e42d-4b84-419c-8b3d-0c24ce2b8057",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c466c156-86a8-461a-a820-41cbcd536242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aadab24-74a1-438e-9ad7-fec53328564d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e726e50-f14e-4852-9b69-0fb589d2601a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "53663f54-5144-470c-9095-fa6bfc3cd9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc98686c-199c-413a-bfcd-8061152fa14b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e14bd1-be49-47db-a3ff-7baf39f8e134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078c3736-dda9-4743-ad29-fcb27982734f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcae3f45-e1bf-4743-b9f2-3bdd57eece97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c42e5bc-be79-4a84-a627-405bebd5d53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ce8d7e-40b9-4b65-9e04-b8e5dd1d28b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d60095e-7184-4dcc-b6bc-c6067b71df86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f211e0de-bdfd-4664-8402-ca56d55af3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21744e48-750b-4012-80a3-ac7cd5734b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "896ec4ec-9ffe-4feb-8d18-868979bb421e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438e6e20-2c9a-48bf-9761-eaf4d4139808",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b73b667-0484-4a24-a790-5cbb88d6dbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c14e329-d845-4ebd-a6fd-071e2699d90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16943a1c-53db-402a-bd06-6d0075f35af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c752b953-371d-4e81-9a96-e5fc2dfeb9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d8afbe-bc6c-46df-94c4-1c57d81b84de",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705216ab-d44e-44a8-8bcc-759666021e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bac059e-83f7-45f8-8756-feb7d310f3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd750d75-b1f5-49f4-b198-2e203c814b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe39c3e-4b52-4d05-b2f8-ffc013f22c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fffa92-11d9-4a31-8d18-80e56d36bebf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7488990-f967-418f-aedf-307439f5980a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ddb056-4f3c-46df-bccd-3788c1ca34ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81a092d-1b50-4d76-a25f-2e08dcbe961b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a20f61ff-d39e-4cee-bfa3-bb8f6cea7721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93682ba-3477-4dd4-b0b9-d5ad0b70704d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b3757f-d5eb-4d9d-8d9b-4dcc14978426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1312a2-5048-428a-b409-745e46b84182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70699446-0e61-4aad-8649-a20b9e96d8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12721d54-dc9e-495b-97d8-abcf83f694dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedf53dc-fd29-4285-8f94-d723d1bf68bb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92da8f35-a22a-453c-998a-b0c3dd39fa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f49e993-e0f8-4c13-a2c1-f21f7007f21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff3f6f7-d9db-4b8a-a27d-ebdd9c95148c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef9bb69-da3e-4c5e-b8d9-a6b7ce7c1b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fcaebe-45bd-4df5-b9d7-975565daa75b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d3cc05-d267-4f67-896b-ce83108cb86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edf572d-9c2a-470a-885b-992f54043325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9ac2de-6d50-47ae-9f96-1eb4e85c32fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7830ba5-0856-426a-aa2c-191906243978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4766e79c-4734-4c2f-909e-cd17851cae9c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d5ef6f-5e1c-411f-86e1-46e808e6d246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f00b565-a271-4080-a011-78ad23b30ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416816e6-27d8-4265-afc0-045db8101754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8fe5527-803f-41be-8441-43b992f0d726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e049ee6-2bb0-4e2f-bbe0-df408bff19ae",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba28caf-18c9-4dbd-84a5-fc4377ac0d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b88b7c-cba7-44e4-ad8d-0820c0669c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40d1b3b-e6bc-4cb5-9013-688304cdb25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a17f4f3-187a-4a61-b60e-e6793f5cb83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3466eb74-c1e3-430d-a590-8cb2f95493b5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bac299a-7224-4e05-8986-0eba7012de89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76909b2-3709-4a66-a598-2ff1c9c92f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcda905-e623-4c20-818c-98e79c28b4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1700231-c136-4a65-8b37-f7b938821c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd7f591-c1c9-4aef-aa61-1b5e74a3e323",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62adffd6-91a8-4c00-9ef1-3220ae28b589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29296f08-09b3-48ec-b667-4376590a0ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59797eb4-b5ac-4921-9209-dc9a865f348f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9dd1ad-7890-48df-9386-04b14a589e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbf1d67-125e-4cb3-80c8-08f1e87fed83",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23218431-da23-49b8-8b0c-5139ccbb3740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e5b87b-7756-48f4-8782-d3d77d12c672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03844b82-9f40-4632-bd0f-387f0c52ad58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92d23461-dcc3-470d-8ddb-e5a1a015dc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed3f38b-092b-477d-ae60-a74824ecd6e9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8365c45-c277-41b4-94b7-83d9bd4feb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f9b716-3bed-4ceb-bc4d-dd5f678fc330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b77ef2-7fb3-473e-b5b6-ecc8fed66eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7800617-8d22-413f-b600-3e6dcf086d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9b4455-a166-40ce-873b-5bb1844a970e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9189ec6-61f9-4355-b5e4-8a5e51d23e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510dc90e-3e6a-4ab6-871d-e2c0fe684461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c81e079-aa84-4f1d-83cb-da3fba96188b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "facff5ed-d1ea-47ee-b2c1-8063773cf4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f354c64-70af-4660-8e29-9ef4d94ad437",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc8be7e-1d3d-4dcf-8ee7-ba0364ba80af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b8888b-ac3d-472d-8da8-d6779316ad32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fe7a3a-9b70-4202-a6f8-27543fb9b841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27929d77-51be-4631-bb46-7f7b8f06688a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0ab100-566e-4b53-ac51-3eddf9aed63d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4f477b-499f-43fa-9c7d-dafd23d35a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d75aa73-4ffb-42b5-8551-6482ef5178c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7069f3-32bd-4d18-a39d-a3a623a5ef1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23d3ce5b-a07c-4073-afd2-f08492e2b6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac84dc6-9033-4f62-8ca8-d3ef47349b4e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6dac2d-5932-4790-bcc1-c0b4f0cbcd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940c9db7-3205-40b3-8431-f2672bc4519b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1bc937-f1ce-471a-8348-b96fdeee7584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c63d442-24eb-4919-a344-7a0c21ea8ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8179e496-dbdd-43bd-a693-82ec56c17a8b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52aa15c1-b6a7-4411-b756-fecafd372026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd393cd-b77f-459d-9bdf-b6e30c17dc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48a5206-49f7-4feb-9252-e5128b07b5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1099527-ba8c-4dae-b51c-e0b88c618d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9152e6d-ba5e-4950-a3ab-4e5613111687",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07c60ab-652a-4172-a967-63fd8dbd8e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05aceb13-ca65-47aa-96a3-4e370800c87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2659d11-c92f-4d0f-8222-ebbdc1425bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "800255be-4b3c-43bd-bd1d-573285cb5f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b07d52-0436-4bc3-9207-4278aaa869dc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e4c8b2-7abd-4639-adec-345343ef5532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e4aef8-164c-4ce2-b555-1144894e7037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160afea2-75d3-4406-8e4a-6ca74a2a2ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "758edb85-db63-40d4-9187-f7b2725f5150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f9dfec-1194-411d-8700-1a870331b9b2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49b9d8f-e1fb-4a1d-b97a-a1e3c796e672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39cb4c7-d970-45c7-963c-3670ae1b0782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328bca28-5a92-4a35-ae88-8f6a7a427ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "005686fd-c2b0-438f-8bf0-da9ff7f2bbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f962cd76-c28a-4a9c-b920-e50e63533e4c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f23679-62a9-493c-b91c-89f16d2af8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce923ae4-da9d-4c43-8094-edd516b1b231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e03b9b-7331-4fb8-8d39-7f031b323c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8a7509-9e63-4457-8756-044662c54439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f946d8-e0f7-49e9-8fc3-a9fa5badafea",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5c7ec4-7e48-45b8-81f9-fe44b4d07206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe0a6a5-b701-4153-bdcd-d2c71bc972a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e58b36-f822-4d91-825c-1749e23ff53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a3b5c96-f3d9-4c95-b044-144b29bdeea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdbf038-5573-4d06-84e0-2e4d45b57184",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fa7465-3450-4923-9afc-19486adb8bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff2df19-ffbe-4b83-a9d5-9bd3ea8caace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da25301-0247-4284-a443-788e85031484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c004fb78-fed5-4cec-900a-47c27e884132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590e777e-85c8-4084-9f02-c822009357c6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d016b5d-d941-4663-af43-e35a87ea1b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6983f858-654a-4ddc-9aba-8881fb275827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431a015b-5546-4d7a-ae96-a2ee4262ac6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d437e2b-a4f4-458b-90a5-b6a401aa7ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971d550f-ec22-473d-8d6f-12d2b6c3db67",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3991b699-c346-4252-ad6c-d5c10fb0d887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a375a7-6630-44fd-90c8-f06ea47a71b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a7b88c-791b-4d58-a7ce-179aae5bae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2371771-2106-42a7-a52f-a135a3f6ec63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a99377-4724-4135-86f8-9c58cfa95d71",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f047c1b5-0c6f-490f-be98-93792d3c4ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ac71af-a5e5-4c66-8e07-951379c2b917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ad1482-65a3-4d6e-bdaf-aa1dac0b034e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9e041d-79bb-42d2-b742-551cad1c9b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706277ac-b28a-4797-a8c3-01379734cd0f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b365f9-632c-4569-98ff-91ea10fcb2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0101206e-24f5-40c2-ab28-ac2519e8211a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2edbda5-86d8-4b9c-9dd0-0125d8214042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e45534f-5be1-472a-8a54-db7464c1d792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8624237-d1f2-4c04-ba7d-5593ebcc58a0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a856868-2572-47c8-a570-aea5291f07a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5108b9-a63b-494c-b5e4-1accc0631299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d0a2f7-09a9-4bd3-a4a3-05a6f83efc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b24024-f710-4567-b956-f7bfa3335314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565fd007-38eb-40ae-b1dd-e84f77990041",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d9b654-ea85-4f82-b17e-c47cefe203d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a633eadc-e240-40ee-aebc-e666d416df5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f824e31-0077-45a2-9b38-f2eac90b9a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "234f1898-9e60-46b6-a4e7-cc7039a88320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7b17c1-cc78-4e40-a53e-f02d22f9814d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfc5abf-7f1a-4d28-88d1-d6bacdf2e71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6801ce8e-b697-49d7-8750-3cd868fc36b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b13913-8b70-4f3d-8de1-c08b00bb0f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd213e0-91c3-4174-b354-1c898e034967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad14c22-3e21-42fa-ab1d-bd3d3a4fcac1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2db382c-829b-4a7b-ae37-7333b07e1542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e66172d5-3a81-46b1-b31a-479c508c4bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdec97fe-4d5d-4721-985a-294df8657288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a259f93-51a3-4673-b278-724217d447f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec2928a5-7416-4695-a6ae-aedaa3a31e57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75a7b3e9-9c62-4bd0-95c7-9854a6d76df5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f9f108-0750-400e-88b0-f1e972cd360c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2951ba5a-e1c4-4a6b-9ca6-403f44c32c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90645ddf-be55-4e0b-a51f-b9824f9a1162",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c1af34e-ef21-4cad-9f9a-6bf5cbf31c1c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daf782eb-c80a-43fd-9e4e-62872c1519a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76f6bcf7-ac60-4ff9-979e-64d47a75c014"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac0b6ba2-1191-4eba-812e-c41d57508753",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c06e2096-8ac0-40d4-81c9-447d799f8982"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a0abd32-b282-4754-a286-79ebb2196e80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fed1237-4197-4dc4-9b36-89559edb0d5e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89ab70d0-5ea0-4d45-877a-91539cb59f84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6bb0b8fd-57b7-4f8c-89de-a6ab41507df9"
                }
              }
            ]
          },
          {
            "id": "20a564fd-f95e-460a-be21-3c54e0a07bfd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "71439037-a7ce-4276-bdc4-c95d2a4c68e1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fbaf1cd2-ba49-497d-93cb-1d57f98f641f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebcfa5f-ac70-4f1d-8e04-fa13379a6244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5c6775d4-c5d3-4936-ad06-a2e51015d8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ca4599-fa96-43f4-bc5a-93160291f1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68390844-6ffb-4644-a0ee-a6115b42be8b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6db4c87d-4a1c-4745-879e-450260d28e51",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7860bd8-f6d4-46a9-8851-430a7f2aaf7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40132d72-356a-4d66-a8bd-3421f7c6aaee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43dad489-b249-4933-bc27-2102f1d600a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1434863c-da74-4ca4-be89-a6dea18138e2"
                    }
                  }
                ]
              },
              {
                "id": "1be6020a-2dd9-4ed3-bc7f-56326f46a733",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a4db045-3efd-4ccc-8b20-8a7912e1523e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "497860be-465e-4fb9-b062-7496c773bfda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c40a2e6f-c14d-4175-9355-aa797f6356e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2bf518e9-e995-4ea7-aa48-09b26d0e8efd"
                    }
                  }
                ]
              },
              {
                "id": "89857b18-7ecd-421f-9ee5-0f74b8d92b22",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b149e0b-4b58-4f84-860a-20534938fa2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "679473cf-ee09-4cca-9c92-3cd1105f254f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "872b12c7-d2dd-470b-bdd6-83feb4edb0cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4232a07b-647c-4f6a-869e-d150e881d41e"
                    }
                  }
                ]
              },
              {
                "id": "3a993f47-c31f-4e08-bf66-bdac9f179192",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06a42d03-3014-430a-95a0-9dd96cf236cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9691c784-dfea-4aab-954d-ea10e3ea741a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2efdb878-1e9e-407b-8b0c-7c2219bfb52d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1781fa4d-c9f7-4e6a-a25c-44203ea55358"
                    }
                  }
                ]
              },
              {
                "id": "7a808399-5dd0-41e3-8fcc-bf83836fcdd7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9a104f5-4cb3-4441-8adb-0da89b54fc76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ae1626c-923d-4a75-9ff1-d20b46da996e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4ad6f89-d2bc-4db4-b606-22e8f3edf674",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fe39964f-73db-48cb-922d-44d212944d95"
                    }
                  }
                ]
              },
              {
                "id": "9b0c6ac2-be92-4ad0-8b4f-fc9448849b5d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfe685db-0cfb-4afd-bb4a-408c11d9334d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf2eda6d-6d9f-4436-b1de-e303e2467798"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1633ce82-e23c-407a-912a-1db8fc12abf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "787eceaf-d934-42b3-a528-92cbee338527"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d40eee5-0025-4b75-bebd-e4c2aae0ad32",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "521bcb50-d19a-428f-af87-fd1ae7280831"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "791fbb26-fa76-4402-a364-3ef2c2942630",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cce104d6-a40e-478f-8fa7-2f22f59b4577"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea6c8d12-24fc-4f57-976d-115338c85cac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bf6ebfcd-8bfe-4b94-9949-058772608eb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3353f0cc-b56c-4dfe-b5c5-4d242deb6602",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1da525e3-9dcf-40d0-a477-eea833ddfe73"
            }
          }
        ]
      },
      {
        "id": "9133954d-37c4-4f71-9877-fa7a9afde147",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d07e2e8d-077d-4a0d-930a-f8c57b98ad0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "470a0929-feef-4e96-863a-cf6b7a5a9320",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d3a44c45-4c97-448d-9d9e-3e543c3e4089",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d579ba9-cc99-4140-b5aa-8c62fc16190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f30ac4-762a-4490-9304-de4a00f208b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbd69c0-e276-4768-b123-f800ab81778b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b16ad226-c692-4a70-bf38-ae55d23fc2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461a1be7-b918-4f7a-88a0-350574550188",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c984c1c7-a99b-419d-b45f-2a06d60171dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb0f397-db70-4b3c-8c5e-45f82c34811f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcc5428-31f1-4e96-9fe2-1e63c3ca2f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c11ca656-78bf-44b4-bf46-08b3885766ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d177273-0eae-41d8-a36c-4124049c6c42",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587c2d42-a2d1-43b4-93df-cf15e33881f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177ac800-2e72-44ba-ab15-e5a5951ba8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a154b353-bc6f-4bdd-beb6-568346b0d975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afc6f474-5f23-4988-b617-49c24bf7ddb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f6f571-c753-467d-9be1-d0dc19634978",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6041f3fc-61c8-43c2-b8d1-f5846a45c0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33757c3-25de-4361-a26c-743fc204b21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a8fe55-bf9e-463c-8bfb-976702fd7274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5951801c-f419-4b00-bad3-b4ee837ff969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a749b03-cbe4-490e-88cd-8100aef1d406",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199e2d40-8841-411d-8f1b-f8d244673289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c873c6-10ed-4de8-9d6b-91576f77f6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c5c8f6-fcb7-4cb4-b727-1ec5497e099e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1614d19a-484e-44a6-b9f6-1180d1780d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec140f7a-e108-4439-9dc7-d57b4452b8c0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97188ac8-23a3-4fb5-8a2b-bccfb99c677c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85bfe9b-7eee-49dc-9765-151e6c704412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08de1fce-8cf1-4d59-bc97-80674feb5e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7633b1c-72e4-49eb-8a95-b32f43ce6a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47af86c-a29a-4c78-b7b9-edfee838a6bb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afee1d9-c47a-4fca-a73e-bdbd546c6204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57f09cb-52f7-4ed1-9c84-f2f9e7754689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e4312e-57bc-4459-a7cd-70bc1d5c7bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "570d2979-200a-4b4a-b7a0-a05e9a3919a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea35dd4d-4310-4353-b8b9-2675adfbf260",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70810ac2-dbce-40d9-8706-00fbca80c777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed641ed3-aa6c-41b4-9110-f68881b6bb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b127a9f-223a-43eb-9005-021f37e9a8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8371ddd-8f0e-4ae4-84e6-878520b95e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407b7394-c6c5-4591-92f6-07fee0e630e4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df06934-f6b6-469b-b7ff-cdcf6f0e25a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e3745c-2cac-4c25-ad1b-45261d983e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250efb53-aec1-4923-8ccd-595cf3309b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b8fc57-440c-4df1-8b69-7cc5e3eb34f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef31d18e-5ee9-4afb-a66e-78d4a02f03c2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420cca4e-70f9-47ca-ac09-42e5d0d2516d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b407a490-3406-462a-88cf-9d303a9e6247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a924ea-6161-4bdc-80a9-02178996c00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "701af1fb-bc87-4abb-96b0-e86221537a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dd2ff2-b361-448c-9edb-1bae5542ab28",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ddd70e-9f29-4278-9083-19632c2b5c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3226e58-cd08-4893-a65a-2f922935c005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc66699-2752-4fb0-8d8c-f1d10b134ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "480b209e-ce33-497c-90e6-ef290e422af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bcc45e-810f-4666-ac66-97a6f4474108",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b94e025-0285-437e-a343-be17123f2eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd860059-cbef-42a3-9e03-386b4aae5f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e430b1-03ad-499b-99a1-f6af9f41276a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29d2129b-2fad-4576-afac-541e1a1a234c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074cdbc4-11f2-4a74-8084-f9509049e21e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ba233a-9420-4c37-a1d6-ea3341cacb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9943b9c-04bf-4b39-b4e4-19ba8cd2c278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a6a490-2d13-423b-92eb-8317c7725893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b21f1e-f3bc-46e0-8829-8374223f1e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3bb70a-40f2-40fc-a39f-a08b56559ea9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd7813a-f122-4328-84c0-c8fe1087eddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b376e1c-eef5-49c4-9378-1ee131a3d1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa219af-9c8f-402a-a89e-663dc683274c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fac487-8bc8-47e1-a005-10287d1b8937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1145075a-5f32-4729-989b-adecf1626d35",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ba8a53-c07d-4379-99cb-476152d2d00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0eac632-8cda-4650-a6fa-c9d5ad3e88d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e9d638-f67d-4115-be2d-70c4042ef006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "228d279a-31f6-4866-ba25-aabe60cae112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ce9ae5-0fce-476d-9f1f-eec09a2e75f3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f01f40c-3647-42f3-b1a8-9852d3a3a0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5751c8f-dbbd-466f-ab87-beb66fd92a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a588ead9-bab2-4ea7-a5d1-353a26c90554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1588b5e-d77a-424f-8658-85f069efb999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cf35ae-2b69-4654-ae1a-380b17fa6044",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3114675a-3f99-430f-ae75-fc78ddf9744b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acce04f9-71ff-45d3-84b7-c1f671019777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae56ba62-9513-4d2a-8bac-47b413657a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a59f6874-480f-435b-bf5d-1c15b643cdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a40021a-ccc2-4dd1-ae99-177dbbb1a448",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c57003-ffa7-4b7b-a366-854a40a58912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67a3338-af2f-4fe9-b04c-482b733c4de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a7e780-e438-4507-a16e-7b127105f193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "04ce3152-fb58-4a28-873a-706f0d4aed01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41f1963-4a7d-4f65-b406-e075707fb17c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86818a65-e66a-4e9b-9506-cdb6977db89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a96099f-6cd8-4a5c-8234-8a56a22983b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d2792c-aa0b-4d0c-92a8-e6651f63f610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13a20b6b-bc20-48f1-a9e9-f7b75445ff10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0bee00-a4f8-41c6-95c7-92d9557cd67b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cab660-13a6-4b68-a4fe-56a2baaca1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8d3941-7a67-4a8d-af49-c1d8bd92f2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f343d64d-7a07-4b5f-aa72-90fe1c432d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b322803-7116-40f8-b368-ce2a1119db1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38ca656-3cc0-4a73-b318-bfde65241f75",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e95005d-61fd-4d0f-a43f-4c2679dd251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32618443-773d-412c-9eda-57f956eeba83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a677c4-8bae-44e0-8239-238c6d63a0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4471dc16-ec7e-4895-bdad-9384b7fa336b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e62ce61-db3e-48d6-92b9-7a6b39b7b957",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e90f918-7ea4-4b18-bce5-c829ab9a6b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18660a1f-5a43-4528-815a-aa754fe0b930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00b5b12-ca75-49f7-afa7-1005b1826f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b992640-9285-4499-bd35-d2a0f5d7985f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd41ac9d-77f8-474c-82a2-8fa56ab5c0d4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ce7c22-18f7-49b6-98cc-f0482af63b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3852f22-69de-42f8-845e-5af4d2a0add9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51ab330-f4b2-4d51-8616-d40fc14df493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d0173f-52b9-46d7-88d9-749ff99e9fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abf5bf1-76db-4a9a-afe7-6472ec01eaf4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad7362b-13a4-4252-a31b-bca88fdf2b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b60add1-6e89-4aed-8afd-45b034af62c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d31af5-6b0b-4315-a94c-32165ae4444a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcb6f8b-ea2a-413b-b6c9-59679a1bbbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eba8b9e-529e-4a62-99a1-ea79ab9e159b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5097a610-8a4d-4f2a-9e1b-597cddf6adc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5398a7bf-da2d-49e1-8cd6-8ede97e4d311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b09f7f-21f2-44f2-a86d-0af4493c4a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a37d16f9-14d4-468f-b1d2-8e0ba23cb791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57610ea1-a334-4255-a77a-d781022bbf77",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502e8355-f4a5-4655-93d2-b54495b2f387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279ac8f3-4fed-4f5c-a200-a6b57116adfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411c6996-43bd-42d2-90c8-39d3656c5ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdacfb68-fa49-4f9f-a2d3-1eb8465f3165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2592fa-4eae-4a54-8785-8c48b49118ff",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9ecfef-2386-4f93-822d-2d074d978d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da502e77-d21b-4f98-bbb7-36f15027f874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796d789b-092e-47d2-904a-b469fcd8917e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98f7bcd-d406-4a62-b848-d48d28a21da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425d2961-e595-4f5e-b731-b62b20e787a3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cb31ba-c93a-48b8-bbd8-406b4129c8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbfdc504-c242-4c2c-9cc0-a78926e23507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7d20c4-4964-4340-91f7-de391917611b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ff45d6-76c3-42d6-b849-59ac2bd20bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c4911e-9faa-402c-8c28-2d47aa056d93",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fa2533-3345-47c4-9869-be9d35f54d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c713d0-c430-4f74-bc8d-9c5a87fa147c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a607a35e-fdc8-4841-9237-0bef78c9ac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09f91ce-b033-4f03-b8bc-dd27ef1522ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6104a470-1cb9-4cda-b40a-151540199ad4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbdab38-910a-4c2f-878d-7e6db8d0d05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4299472c-1da8-4d45-b10e-3c4a4397d6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94b5cbf-ab5b-4d9c-a721-af0325d0c8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "521000fe-9323-4c7f-b4aa-6008b38719f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07439df2-7816-49d6-bbe9-68cf44eb7e0e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4481861c-790a-45f0-9285-8c4e0dc34cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3097bb-4fdf-42f4-ab66-4e11117300c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20a02ee-2a87-4b11-9e07-2a3cd0f1ff9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87a8e9c5-50e4-47b0-a4b8-caf06ef3e1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666052d7-ee24-4ad6-84d4-830a60769ff2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c841447b-df8b-441b-92c1-ce5c8ae0fd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7fde48-d4a4-40d6-ba1f-28481899b081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10507272-fa78-4d94-8179-70b08c5a7d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25db5db5-9f9d-4fdb-8192-4c4d4ab439fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235267d6-9261-427a-bba2-2a59394b7590",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc3f7d1-f643-4595-8c3c-d9991dafff80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0aa98a3-7bbd-44db-bfab-100e1603d3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79b469d-6781-4850-ba49-6f0c7b4168fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff20f4f-da61-4531-aa34-80961cda91f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95671413-1285-4764-a117-a960d4bf95e3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d18bac5-9ba3-4316-b484-50742d62807b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db971d0-d65d-45b5-983e-5e6a13d359a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e825d65c-af6b-44ab-a541-f71802016704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72745010-493f-470a-83b7-4e09da54c7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bd14f3-3d08-43f9-ab1b-9ee6511f6f89",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92313b6c-0d71-4d92-892b-aa2444bcb7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a79f729-e0b1-4238-8c92-42e6477b4ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7723b3-1fc7-4ddd-b650-83269d908fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b9a0d1-6ada-41bc-9516-c894f1cc7e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cbd1be-53e4-4abd-9637-002697e57583",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e8a7ca-69f6-4deb-bea3-bc2ba29cc6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db2b352-0599-4836-9128-cb0e9ad96490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cc1710-0724-4fac-9f14-d906e499abfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f67ca10-3f3a-4000-aefe-68e16e0a12a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f5afa5-9b72-4085-ba20-9ee4c0c5363d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfa5b19-6e87-4757-9369-ff862b08b690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2e32c9-41c2-4047-9de0-44e6c791a331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c0077b-c297-4187-bc1c-3c5db4848eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "577ce3fa-c17c-4cf0-a655-2af65c4ea437"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ddd27333-6701-48b7-9a33-16b0513677dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dee0c7a9-7fa7-4696-8b17-dccbdc18685e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979b2001-d618-49ac-b011-697c598d3613",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7d5641-af8a-42fe-b3fc-c3622a3bbadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d965c7bf-bb79-44e4-85a5-69179a11d084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f743122-a3d6-49e8-8eb6-372aef589879"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ed058d7-c209-4933-b055-ff018976aa11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c16c70e-c7bf-4436-ab32-89c82b7ac49a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8703d334-380b-41cd-8480-7b6e055f977f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bece9a6f-5859-4815-b534-1ef848691065"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ec0f2b2-75df-4c20-a0d9-f8fbc36e0a8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08ab3ba2-72a4-45b0-a384-f9c35b6a274d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23f620c6-5244-44a3-8cdc-c3aee90711b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "309e4c05-0b98-494c-8674-beb7ea5c74a9"
            }
          }
        ]
      },
      {
        "id": "b510db2a-8548-4b6c-8f87-63590e391610",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7810d4e0-ae7b-4165-bce2-59a1e0753da5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fa8c9b1-3561-4312-90c3-1176e6d686ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ccac1edf-3459-4a0f-8d4b-a3156028a354",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58291970-36e8-49a8-9099-27cff4b0e120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36b2950-62b6-4797-8e42-9dd421959afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96112e73-b3a2-407d-87db-59688cb6fe45",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51006050-f74b-4a60-b2a8-91121bb50672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e601475-b08c-4181-a684-f834ccf7a319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c78200-b494-4754-a594-70de8742b920",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f535c100-ddf9-4740-9043-d21a1e254824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbb8928-20f3-4af3-b558-7788cc79517e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dc5d41-2242-4613-b3e9-57e1de891477",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246df6a9-0b0b-4947-9632-e8f43664c8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeeef70d-b496-44b8-adc7-87136903ea7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbe678f-c095-491e-88b3-07f8ec19fdc9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5501748d-3ac2-4a23-a101-78b2e44918bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb870e8-2705-4152-9d60-8f8f10649f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfb193e-8ecb-40ba-abdc-984d5ff39a32",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7208a64-b37f-4769-abeb-8aaec9f19eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e02c8cc-795a-4b1e-ae54-d1e0a0520146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25455bd-58a3-4640-9656-ad57f13431e2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7e28d7-28f3-4849-b35f-aa0fb07b90f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce82095-2592-4895-98df-aed4f0547609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894129a0-de0f-4f47-85de-10cc66931870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ec94e4-bcb0-484b-ac3d-f82a91480515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b410f7aa-e6f4-41af-be79-a0fb20a3d288",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366b7eb4-6a53-4de0-b502-a6522c68d918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea95529-760d-431a-84bf-acfa446e8eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dc54fd-0129-40dc-9bd6-71fc8ce06735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c57d19b-3300-496d-954b-a6b6d1822b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07dcedd-b605-4361-b441-fb40f233b89f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ef71d0-b429-4028-a499-09c532feb30f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3643306-4165-4131-9124-275686bb2786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcfe0b4-f30c-417a-9c75-80d705b3c03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694bcb0b-e3e8-42e0-97a7-58cfc74c1323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a44c936-4dfe-4ce1-ba2b-df72f1f40003",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4169815-35b4-4479-bf2f-a25685ad9185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5b05174-3f4f-4765-a8be-404529c3e7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "745db8c2-dc9e-4cbe-bd25-09c4b08e629c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1855470-f00a-4847-b66d-816973924f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d615d7-a0ac-499e-a4ff-378d70af7f52",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080842c7-3090-4596-8de8-031c0cc1ab05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aeea2e8-e669-48a8-a4ee-7b84a299b0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2faf5051-5c95-42f5-9c3f-1e3c0f27f97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ccc8fe-6160-421c-95e5-b1ec9b46483e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad74153-9094-4f84-afae-7976b330abea",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371221c8-4bf0-4770-9297-629ac5b3c8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332b942e-6dc7-4a90-ae0c-910ebaf5f7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bf9cbd-e57c-46c7-8c57-a11b2a5e6640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3adf1079-aee7-40a2-aa6f-8034b841e004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106088c9-1583-43c4-8536-151c6fa0eada",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f676d8d8-d236-40b5-a75b-e3c40e86d7d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913e2f9c-450f-4b0f-ad57-6f5903580505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db70cf22-089a-4bb2-9e4d-9d90b61a6433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280a6199-66eb-495b-94cd-28f8ea90ae20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5a70c4-b5c2-4717-80b3-c3229fde30a3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50d39ac-bd73-4c8f-8955-9bd3a913a7b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d407c4e3-4e0c-4017-a5db-d102f897670a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca84fa8-50aa-4e77-b3f0-c5a5fd024a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efc76d7-1899-4754-bce6-b8707f1c745d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dd1d1f-c228-423b-b905-b2b35fa26e92",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df01c6f-cc6e-4ba0-97ac-5e62b02aeb8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b52ab96-7a90-42db-a79e-05fd86212925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07323fd-f280-4d7f-b8fa-e79e98364289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92eace9-fdaf-464b-854e-1b835ba7952a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8d9308-b8ce-45dd-a852-5b1b79573742",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf5763d-84b0-4d4e-b99f-1e0092228a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a184619c-015a-411e-a567-0bdbf80522a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ea11a7-f573-417b-a159-5f40065966fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdcdf584-c90d-44c1-aa4a-eeb172d20535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da88c512-bbb3-4c35-bae0-1287dda40945",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7891fb7d-b356-4045-b051-b2188aa448ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02ca21d-9841-48a0-9f1e-1f3669923061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c129bf9-3d36-4baf-ac11-dfe76970794e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dedaad5-8ca9-43d5-bc47-38f2e048b12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3972c9c2-973b-4c46-9d56-4b3d9f28649e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5abefb-76e5-45a6-845e-ea4ce12f64df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaf4f3f-86ec-44a4-97a8-ab09e051be7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a27cc0-d520-4c0e-b5e1-3cfc6b1413da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159da792-b0c8-4446-9ba6-5144f192ece0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcefcb1-767b-4d6c-9fe9-d72432a98de9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bf473a-0187-4768-85a3-dff66a5f7998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e379c2ba-4d6f-462b-bb1e-9a206917127b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80be6304-de3b-4208-9a21-eff9eb352670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a8837e-a784-4eab-8c11-8352e163ec5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba52be64-b6d1-49da-a46b-bc47e4f4cb6a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a103b5d5-e1fc-4058-9c94-e47fe8a11d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ef8880-41df-4413-a34e-42fb21cdb36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efab82b-81e6-4cda-9ddc-7348d7edab6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083f8e37-59b3-4f83-bbea-22d8508ce3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c32ddf1-78f0-4fcf-977b-e011b9b058c5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9320515-0b19-430a-b146-f720d3f69826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2f2ba7-7957-407a-9bd8-8eb108edd26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3507a9d9-94f0-4ae1-8884-75324ef82daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ab7524-fec0-464c-be80-3a8bb2d4ea5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5b53ec-4935-4db3-a08e-d34cd023248d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8d6ac6-a87c-4f23-ab75-837db384bbfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2777e8-74a9-4924-a1aa-d40432129e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5588458f-21e5-4f60-ad35-6afb377e1d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79edeae-6069-4971-9289-6e5b191d13c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0945735a-50c9-4fb5-943e-437556231bdc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6841ecab-d47d-4966-bb7c-fb6c4bb11abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66311d1-0460-43fd-b404-02107a958c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3102e8e9-6edd-4eba-9850-29e2e4866c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef546ec8-f450-4470-a53a-7b0ecdc4823a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfd5e06-6733-43b9-8f25-c5dc772142c9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a03753-e201-4621-83d5-328b5bb52ca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3520df0a-5d94-4c78-899d-d10a60d86bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f5698a-d9ae-48de-a277-663aa4d90b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449ff7d7-6abd-405c-9906-2b2efbcb8266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e527ebc-3b39-4351-866b-ac98d982ad84",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124ab7b3-1958-44a2-be74-ed4fc1aa039e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca5919c-b3f5-45d4-906a-3b8666599333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864e2301-7bf7-441c-8205-6e84feccfecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223eaa91-9a39-466a-92d6-433d8130b331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4bd693-8669-4a5b-91d1-46ebec99d2ec",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9a9d45-36cf-445f-9a49-bc53c1222dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b743c1de-ed91-43de-8084-4d464d03f376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f471d7-3629-4717-9a05-07e220773d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eff41fa-91f8-4934-a14a-819da325663b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3063899-2ed1-43de-9446-490aaadcc073",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84db1401-81f3-4e8e-a1cd-01ab9551cde9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d3f1fb-071c-4528-9bef-5db202509952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86afb27-07e9-49bd-98e3-0939ba1f52c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc46e0d-89c4-4bde-af4c-88d8cc23c312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17711a13-efca-4480-92a9-781f7773af44",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b90d19-0e33-4576-bc2a-b07979fa551a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6dee44-905e-4263-98fe-1f6449d6f037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5dd42a-40f0-4a95-beb7-81368d5087ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45aee09-be1a-41d9-9f03-5644ec7d1f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa9f53f-c4a2-427a-b053-dff26a383858",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b671f1-8ca9-43c2-b183-68476df41dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dee0e9e-fd6a-492b-a478-ebb0267043ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60723bf-fadf-473a-80f6-8c1b5eeac809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5bcf20-a0f4-4544-9525-eef6e0a5b3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6da4b1-a53b-49c4-9696-183c64bb4ee1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0ff630-4873-45de-adef-79e6a05bcb6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa61655c-b47e-45c3-a0c6-4f8c871f4d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72875fe7-9d85-4bf5-baa2-abff12a780c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6bf764-8b51-4b36-8dcb-5d2f32026211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b468af-b25a-4166-b398-24423356bf40",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85de74f-d771-40d2-8c91-c09d7973f225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7c9a864-4585-466a-8578-c8841b4a086a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460e1d62-b9a9-4d50-b5c0-dd32d88425b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98effff8-43d6-4eb0-a7d3-e3ad0e55aa77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2850ecf3-f5ed-4721-8389-2deb9bbf8ebd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e386022-ec6e-4327-988e-3d51a1fd8d9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e440c2-a058-437b-beac-8f47005d1145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d4e8a-e032-423b-90ae-029b21469cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277f901c-029a-4eb0-92f6-f549566be893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5a318a-c805-45d7-8673-217066a78bf5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80d4c37-cbb1-4284-9608-be326743f08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "695ae05f-d4a4-434d-ae9b-9921a9fbc212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8587f470-498c-48ac-99a9-0d56bda17e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0aba9cc-d4df-4491-9b81-799680dbb5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139c7ab9-3a40-4e95-b6be-4627ca0bd071",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc97d539-ef5c-49cf-9427-e735052d6d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f55627b-008f-4c09-86bd-a2662d359ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1888308f-5b5d-4204-bda5-c842eff061d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168bf32f-665b-4f94-810c-1d5d606d9386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde0ad79-65f0-430c-a98d-c4d2f4348d99",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3831d37e-67ec-4d2a-bd8a-42eb15cdf786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1707ac37-aad7-4b7f-9097-ea122217d244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ab3cfd-79ae-4f22-b74f-4fd75eac1209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce27ee37-6dfb-429b-b1bd-a47952592791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72a41b8-b178-4f67-8fb6-0dabbefaf148",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3647970f-d30c-4a4d-aca3-f8ee51e82535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12a8d59-7c46-47a7-8724-30aad0e25cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0627bde2-96dc-425f-b0a1-e203cbdce410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868c65c5-72c8-41e0-9aac-6d128acb2bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c990e4a3-ced9-4ddb-9177-2a9aef3cadd6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a110502e-7a02-4de6-b3b5-c0e89b31634a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38151543-16b4-4e24-8066-6c1ae0da758d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d4707c-972e-4914-a60f-b42ea3f11ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d973326f-e201-4679-aa48-8acb274d62eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5624390b-7765-4e7d-af60-7067f085dac8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e254b7-3982-4aaf-8106-9914c7d91566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7dffccf-e3b4-477a-b725-bd40db64fa5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2127a8-3744-4bc9-9074-9fda8a4f5387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bb892f-a97c-4db7-8f80-c3d21156e214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10628f90-ee62-4806-b2b8-92b669a19bb5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed74674b-62eb-422d-b4fe-5c22d88f305c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878548c0-096f-4938-8ab7-b352a2123746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7a6295-4112-48a2-8c11-5269c9f201e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56b08ba-c20a-471e-842e-642fe4ac281a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fd00de-9d06-4b90-971c-e9899471c1a3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d81cb99-f42b-4ab2-a6c8-153f16195203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe47f23-f57a-4925-a590-ef0f13eb34f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703dfaf1-0c4d-4621-9c6a-9f75f51ad201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f36a401-40ca-4d79-91b1-994eb1d1d413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef864b0-7258-4c6b-be18-fa20c5f2d29c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c83310-69e0-4fb7-b8a4-704a6091ed77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91db1620-4e34-45b2-aea7-a6c059a613fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598f5a6b-a2e4-43fa-b183-ed5cfab76b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4cb67b-2bb7-4b04-b058-659bca8a600b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228a5c1c-7868-4f97-b256-c27b31233ab2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2496f9a-078f-4309-a756-82ed4fb65cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52678b19-e60d-4f0d-a3c8-36ff3d359fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197ca54e-55c3-4faf-b9fd-cb4f073fc74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ebad64-3197-46bc-80ff-b00cc0b7f05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108eb053-1690-4f2e-8d30-e399c9ba778c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2272f2fc-ec73-4a9c-99d9-d3310dd8775f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9d7bb2-962b-47e6-8f48-dae9911733e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5fdc07-200f-4324-b3f5-f3f9eee0a281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdfb383-e1df-4c0c-a7e8-1988d757934c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c5a81c-3e98-47db-9e83-4261d99b51b9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d459b9c6-a078-4515-ab49-ed26b135dcd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458a928b-dc52-45f2-aa4e-92fd7487aa26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2bd3b1-186c-4c87-bf83-8e25a5241dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c8155b-7b1c-4527-990e-c067b2cdacca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29953253-71d1-4dcc-91be-d26cb84703c9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e12d51-f8cd-4019-abf9-3a9e7eca8839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2c105b-9d21-4be1-9d26-0c41fd805c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be07381f-992b-4ac8-8dcf-3436418a78d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fbd557-6a5f-42a9-b4fc-d9c7fd7debc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be451a07-d5b2-4f3f-8920-ef24449ead13",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29a9177-4734-4a72-839a-4dc7654d390b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc119aee-08bc-4129-9f09-529f30861849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a868dac-fa07-4d1d-a868-77da9741c352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b90fe25-eec8-4ad2-8095-35790967af1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0e5f54-38bd-4529-9cdb-d67a651b15ff",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f719f3a-2748-4fab-b3e3-e868c180e148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fe5e84-f024-44e6-a4ef-b8198d471df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ac0a0a-35dc-41ea-b171-ab41fbe4ac8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5359066d-d5f8-4bdc-a715-d9a99f77d416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a056b5-9e7d-4e15-add7-cc9b1c2f5159",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e0a30d-1e8d-45f0-a134-a206970c7d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5186e19-1e6b-4af0-a7ca-a15da9d5871f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd9324e-12a7-449d-96be-9fa9fa86e9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e09c90-39db-45d6-b2fa-9d8c821ef78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b034b39-5f23-4c52-885c-09e67c5005bd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cb3241-f577-43b4-94f2-496da84dd0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916ffc4f-d44c-4806-9305-9a316c3f6516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c397298-9b07-4e3e-bf5e-df9e81766ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296caca9-ce78-440a-a6c8-98c4da02f672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d232ee6e-eb45-4824-bd30-eb9e98c846bc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebe3cb4-15a6-418b-bb78-dc9754a1473f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3358d754-102d-4a2e-b055-cb5dfce6ee82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c96b0-9490-44e8-bbe0-77f847382775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a963e80a-ac08-43d3-9155-de62ca45d292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b54f58-9c04-4c5c-aade-83c090c46856",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f70521-8596-40fb-bb5c-e177bec87ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da96a07b-c38f-4ba8-aafe-63e0704474f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c58773-0461-4d3e-b151-a91363b68ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb9db59-bcf6-4745-a319-e5b2ac1742e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0753ca93-e19c-4e21-9f57-0e17afc44fb9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2318df-b46c-4e02-8175-39d1f4334a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5831b8a2-1b94-43a3-9527-0bc2d794419a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c497af0-177a-4083-bf27-b91c16387e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33c3273-bdf6-4941-95ef-08b42c67daa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef68ed2-94d6-4df0-9cdc-51346c74f3c6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1012a00-4dae-4079-a59f-c56cd69fe3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536887b8-8cd9-4b20-8f85-e9f068c8994c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916afb9b-707a-4663-816f-fda1c70ac9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbe8eb9-0f33-4e3a-a6a2-4d78e08624df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9f46ab-c4f9-4a5b-82a7-5b914a408a08",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3d57ff-0838-48c7-821e-a333a77b350e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3ce5bc-dde2-4492-b926-d8d667b487d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52af9f09-ec18-4246-b9f5-e59c5a3bcd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb26afc-51db-46b3-87ff-ee6e5f85beb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19aacbe8-b9dc-451c-9ba7-5bbdb9dded12",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6686b0b-47cf-4b9c-8e7a-76e5bf342ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7c9684-8c98-4f30-9d84-961c6a34dfc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0612d4a8-c247-4f91-a64a-7a66e7ea7d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536fd75d-8e5e-43bd-90a2-353998c7ff76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85708039-ea5e-4953-8fa2-504afe25edc3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba035bd1-6bb2-47f8-ad8b-a564d7df7773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062b88b9-5c8c-4824-ba6b-f88c8ec463e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8604e534-bfb0-4bf5-8888-aa4cb683e4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6776439c-e877-403a-b79a-90571027d0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5aba25-491b-44b4-a44b-772f8a967f77",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ad184a-adf7-4ac3-9c84-f8eea8111474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436000aa-b9d4-4107-9e4b-6851135975c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e466325a-4448-411b-b99f-1c1af8571dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e290e659-ec85-440e-a5c8-c7329c510add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ddad88-8831-4438-b7ea-5c7330598f89",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7223db-905f-4824-99cc-4ed952abbfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff451952-4c8e-4815-a9ee-616fe742bdba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f482e57a-b1b7-432e-9e6a-d955a7e464dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88bb5351-2d75-4716-9351-643688b7e8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900e93ea-13cf-46b5-aed5-0cdce4d91ea0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1bd552-3904-4607-b1c9-75a6febb387d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f72431-b33d-4c45-812a-b497f7c076df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a117f5-40ed-467b-8c83-0c2ff7f56061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f06ac2d-e95f-4a02-bb76-c40238313ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da9af87-21d2-45e7-bb9a-156be102561c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615acff8-436f-4a67-891d-1cef2cf4e803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1a74a8-e00e-41a7-99c3-d6ebd4560cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683aaa9f-08e9-4d74-a17e-f4f9dcdb27d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf20c1e2-410d-4973-8447-9f1ee7040cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f80bad-8dd6-4e52-97e7-ea7cb73fdfff",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f169dec-43d1-442b-93bd-aa9f164f9fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8b168b-07fb-4f05-acd7-ea3ac48fc8b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc010862-1d0a-4002-bb88-d7f81a74ce79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eda5d2a-eb75-4aa6-b2d6-cd21805228ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937ac9ef-0b07-4a1d-933a-2c97e3b9f5ad",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9f3e1d-ae09-4c1e-9d85-0ef18f29b7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6bd0f58-6b00-4999-b197-1fa35a7fcbcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d2744a-a719-4fed-aad4-121e003d7636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c400542-261d-4f1c-8735-de644d05e170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbba6929-50ea-4b15-8ba2-702ef098d925",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f8013a-d79a-48a4-b856-c76a2591ac76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e98f98-f738-47d4-983d-b7c706deac8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce0a508-b2f5-47a9-ae98-cfb4a328517e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f47fb96-d02a-4945-b867-70efa6ef91e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c5d249-0fa6-4aa7-a279-ce75c401e741",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75302556-760e-44cd-9be0-f45036a6d2a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "540d4025-3e2f-49cc-9dd0-73dc1fe7351e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1580975-d6e6-4144-94b5-eee323c80613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d362bb6-1ad0-4b53-8601-e1ca482215ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9368009-74c8-4788-ac3f-83a201c3be81",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de6ce10-cbf2-445e-ad93-2142f8d098c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dff4cf53-a061-4fe2-b580-17f429f8cf7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb706934-7d93-42dd-a806-c4225f4b28a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409ca7ca-a12c-4990-8029-f6f058bb2698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c260e8-1b06-4f6a-9856-d044c8391be7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0472bcec-dfa5-4727-a47c-85ec6c232c61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c28e957b-1dff-41f1-a143-ab2decc1688f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e7d357-12c9-4a69-b215-8df394b9bff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56e29d6-878e-432a-b098-b9bea709adbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d519b6e-7422-4f10-880d-aabd5d891b17",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a5aa00-a785-4bbe-a3e7-08e378f9831f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6d5524c-13ce-4b1f-8c00-8765d3172043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f447d7e-ae13-4554-90d3-70600d728431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bda144b-4ac8-4f30-af97-217bdcf2b4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece90eb3-5fe3-4b64-ac66-6cffe8280e1d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c47ba9-458f-4b2f-9284-bfa21d578ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b774dfba-118f-474e-ac08-d1802e1dedd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6066eac-56a7-4e77-856c-aa6e3e1cac5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9babbf42-a7c4-4323-aa52-0c46e8172d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f05f8ad-6d72-475b-b939-c89aa6c1e3cd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbadaec-460e-4ced-bcdf-c4afc8cac6d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4eb3373-7814-4cef-b50e-4cc1e45f381f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13c7920-0e37-4618-974a-062d6f5b5374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c969146-5c03-444e-933c-d0449b513365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a525f0a5-5827-4829-9de6-38b0ad6849fc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6163a880-3f27-4b91-8786-b7a65d047dcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a4f5dc4-65a4-4ea6-bb62-d9d9b43ee14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd544da3-3b67-4a46-abf7-7e5a1ea79823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b52654-8224-4423-b609-13fd57fd42ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11100d72-0079-4875-a41b-dbe2a7a40867",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b06673-a655-4d42-afc8-a94eb29d3677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "966b19b2-57f0-4642-8e6e-ff4dc9a40d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efee79ec-5512-44b1-8023-d4e5506b8960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c42efe-12ff-44ce-bd94-72581612c527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cedba5-fbc6-499e-844b-6b8f5f6ec3b8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa64c12-8745-41b9-a51b-c59085cb5c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ad2e6e-6d7b-45bf-b0ca-cfedbf76306e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5a5826-67eb-414e-9c45-8e3aa1b5ef7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6402b516-7ce4-49eb-81f4-ecdbc1cde54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812fc367-511b-4694-bc2d-da8fa38c7952",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91dc66d-8ff5-4697-b8d2-37bf1305f7a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dcfa61a-8637-4ee9-b451-1c208fc0f43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354dc037-e6f5-40be-92c7-d7e6389bde37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8b83d6-4f37-42fd-8b60-fac072df257d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71939da9-fcf3-456d-aa71-28dfdddcf95f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc0752a-7bd6-447f-9c32-092c914d951a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c6539c1-8fef-4cd5-b5d7-acd0192e8d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05fe80b-fce9-43a8-b739-0f1b7b202d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb9a383-0653-49d8-be6c-a82bcb0b723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57175ca-100f-4361-8592-7788a67cdcb6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38f8bf1-e872-4507-b19c-768fdce71066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "850e856f-dbf5-4bda-ab4e-63efb99bec35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88104c91-d54a-4e97-8c80-df15d47eb388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba20f877-af21-486c-8773-d75d75b71fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3836b22-cf2a-47ac-bd5c-2f3f3ad354df",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479b7a31-da33-4343-8e4b-ec228b6b3017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3cc03a5-d8de-4bbe-8949-cd0d99d8179e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ee126c-9878-4139-8a6a-fd567640ee05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84176387-3d66-473d-8d25-af49876e0ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca547b3-84c9-4ede-978b-2896314f9b25",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56f7b00-1205-42de-ba75-5cde1b3b44c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec60033-670e-4945-b9cd-e9269d7ac604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c06bff8-0750-4858-bab0-f4eef9525ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa70e258-f3ad-41c2-b2b6-afc9fa243883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8606cf-9707-4806-a9f0-62d273c50ae1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a82685-449c-4773-81c8-4e1680f20bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6d5f4c-c081-4765-902a-f6b9ae77ba0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed09aa1c-0ad3-4696-9d54-a04991110d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6844cd7-2f86-485f-b539-da6426bd2243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908ccf15-1d27-482f-9e3c-9c335efe84a4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fae1a7-c1a1-4e1d-ba7f-6f5a78d209ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7219785-1785-4ffa-9679-41f83fc8f526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ba98ec-623d-4094-bb01-e181b1ca851d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6849f27b-e102-4fcd-afaa-492d667b9013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dd302f-19d0-4228-b05a-4811ad7615c7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636f1f8a-4c98-456c-aa69-4db72a92fd52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71cbc0b5-dda3-4762-aaa9-cacd40091711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b4a88b-b873-4e3f-a1f2-b84a751a8ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af88c18-8b06-45de-a371-bbbb34ae971a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d2e390-3143-4458-bbaf-d969cbe70ef9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a162d6-cb11-4c73-8162-a3c488d002d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e41fe78-b958-442c-b07f-c78a5fdcf122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8eecae-c233-4346-91ab-07d6136666bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce67e1d6-4058-4fe4-bad2-dab5df44e738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac99a22f-1fc1-4b8a-ad6b-4440c5fa3e9a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5732afce-3dbf-4ffd-b758-ed91a61fa990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c533cb7-a0ba-43b9-929e-dfafd2f67ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4d9962-b39d-4f4e-8ae6-2406c3b9703f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11ddf2c-1c14-41b4-8c66-05205077c66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e4aa02-0746-421c-b940-09aa83237d57",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bc3d39-f640-42b5-872d-6b42dc31d003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6edb305b-1976-4b92-a9f7-a5e1ddc226d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25face4b-85ed-4381-acd1-c92f29d25f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e935a02-1e52-4f9d-99fa-d3ae50cc7a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c068471b-732d-4e51-92e7-4fb54ff2fa58",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f312707c-7f80-491a-80e3-5adcfab68cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa952f4-678b-499c-8164-87cea7b14eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2ce160-5f93-4e7e-8fa3-9865c9cc46ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d398b765-401f-4a14-82ab-aaf888a05e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcbadc5-b5be-45f5-8b91-1fa315f5ef09",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66457db-10c5-4bd0-a022-ea4a4d755d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8601240-ca08-4c36-820d-5944d282fc9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e025deab-962d-42d4-8f65-1d43178aac7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3ff124-2d20-40a7-8877-58a74be646fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b5fd13-3bb0-42e1-8683-0d1f24b0996c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e81b391-1491-462f-9d84-d4b96ea24c37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a127bc1-26f9-4739-abfe-f00b8f664a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6bdb7a-374d-4b38-9d87-3ccdb9164b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5088f427-2c11-4e70-9d13-f47c4fbfc23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e95b91-34af-4c34-9193-dde712816eca",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8297872e-7bc6-47c2-b348-a7ef3801fe1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13326937-f076-4c83-a69d-50a7d20381e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e286c328-4007-4110-b5d7-72d78e719fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd770825-99eb-4679-aaa7-2f58c5713e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1a7134-489d-48b7-9d95-945e91c9c2a6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2632ce71-1f77-465e-9391-8dd7025a37f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd34f0ef-8319-4129-82c2-aa07cbd82613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b762185-f337-4982-9012-7d40d5d3afca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b41fec-24b0-4999-9dd5-51eb049f0525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af9b892-ed88-4da4-b507-c7775987d4b6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874c192e-bdf5-4246-82b5-6399cb20c6e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "114723b0-b427-4a48-bbbd-c9229c479635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb94a3d-1bfd-40aa-bef2-1d86a3aad21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411de58c-f78a-4342-b00e-2a2ad672bda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c55e0a1-a5a7-46df-b6f9-ec3a0305527c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ff7975-6749-4d85-a133-906e2ee6a2dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a89fb83f-84d9-4d22-b079-4003d1c7b37f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fac9a2-d754-47bb-af46-759b664d6f61",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39cdc4a-60c9-49a7-af72-752ce540b386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67b7ecd-95b7-4463-8df6-5b8e6f0b93b1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2a1557-c16a-4515-994e-9bdedc7a5928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f768dccc-4304-4e90-8d93-ed6f18639200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2f27b9-1161-43a5-8f39-9a8a5e6fe80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a3cce3-ca1a-4a0d-8dcd-8a06c4d7a4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bf5e51-e153-4e9b-9171-028b2b83aee0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e602ae-199b-459d-b9b5-fca38bce107e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6caf1d9-704c-4af9-96e2-139e8507b337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad47bb99-c1cd-476f-ba8c-530c321512b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628bceb8-2012-4426-979b-9575d4b90c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db8c6a1-48e2-4984-b6b3-1a42bdf6bdc8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3e8aa7-4b1c-47bf-b89f-6861dc1feaae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0866bcf3-1426-4c02-9892-0e40ce85c3bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5596b1-0f8e-4c94-9e3e-ec15f6baeb24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b22daa1-47a8-4a03-8722-9d4835553cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059c8a3c-74c0-44e4-b026-81fba16e3ee8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298e3975-b8c4-453d-a99e-03f0e5c3b673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43ee1f32-5864-460c-8501-40966823f994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058fee80-cb33-4c82-acd0-f7d6e6f8ce6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2442105b-bc4c-41c6-ab14-9d2c7881de30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1963c47b-23fe-48da-97f5-0c4ad45f1fb5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6325f554-e00b-4257-aff4-79894d0a187f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2edf5de-c09b-45db-ae9a-27c04d6a6dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34beb8e6-eb16-48b1-8ad5-17e728ee9b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bfd4e9-4748-456b-b82d-6046eb028c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841b8b63-591f-4aef-9c73-276b224f841a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeb6e1f-fb7b-4016-9d6e-ac4a018b59a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a881c0-b64e-4354-9c2b-3553b693885b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf11082-f90d-4a3b-99b3-8764b49ba026",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fcd71e-4df5-4efb-9826-94c9798b57b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe743c3b-d40c-46f7-8fa9-99ef96945775",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe80dc9-09b3-4329-8f9f-c1c309f31cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc745a23-aad2-42c9-91f1-306a032ad6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad22a32-1c26-4d32-b9f7-808ef114efca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b0d79a-d0d2-4121-9a44-a012885fa090"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e34df18-a9f1-447e-961f-edf42a112ef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fe43937-11c3-4c19-af77-8c54cb58b7a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6735f10-5f71-4d16-9cc8-bdbe0633db3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f279f38-0264-4f76-b964-58203cf8cf13"
                    }
                  }
                ]
              },
              {
                "id": "da8c723c-df5f-4e60-ae29-564b5be1ff7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c011def-92ec-453a-ad8a-1d208fe83774",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d1626f-fe9f-4653-af87-af1b4d27bd9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5c65f58e-adca-4c08-bb58-7ae74b94f494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdddbcbe-0888-4b69-b379-a5bb80c01b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ac14bf2-db42-4c58-81e0-ed746bc0ae1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d472bbc-8494-4bfa-a945-f38198d391bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3659c8e-00e4-459e-bc40-723a04d48d8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea3e5ee0-ef41-41ff-b315-49fa57a05e05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "852112e8-c7fb-4d51-b852-b8a011c8dbb0"
                    }
                  }
                ]
              },
              {
                "id": "32d47380-b573-42af-80a0-8e0149b4fff4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a905d9bf-0520-44c7-bbd9-bc0acde67de9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae73d0ce-dc99-43bc-96e2-6198ddd90b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a1117f76-f570-41de-a7c8-343b09a95b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dc3f23-e98e-4904-817e-e85251547eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640abb27-39c1-43e1-9c5e-03afe076e4b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a89e053a-bb31-4df8-8aaa-deaf6b38c7a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "700048a1-30a0-4bb4-84ad-ecd4697240d6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9eb03a2-79fa-4f3b-a975-8caa140aa236",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "af826012-f69b-4b03-b8a7-34633882ec1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11bbb469-a524-4e52-a572-8028f7bafadf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90834403-01bf-4fa8-88d4-780833554657"
                    }
                  }
                ]
              },
              {
                "id": "dbe48b21-6670-44bc-b8a3-4099f0bdb945",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbfaee8f-b94c-4aac-9642-323fd36b50c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "99761288-16ca-4418-9c45-d67ed432153e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67d1164a-f758-43db-9522-0ed63af2c458",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e72a923f-9651-456f-a1bf-c70adbe39e11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f2f1315-15da-4179-8dd1-d981fd6297e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5cdc09e3-f2cc-40f3-9ddc-61fde6fa1b8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f70d402-5083-427d-a061-dac74b07299a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9644ec7-ffde-46a9-8826-5977b9fb8f01"
            }
          }
        ]
      },
      {
        "id": "dbe18847-9cfc-4e0c-94e2-6c4817ba1be7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5ddf0185-5bf9-4b61-b05e-297d7219482d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eee84b5c-9fdc-4df5-924b-bd604202fab5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54f01178-3b0b-49fb-9f1a-3d8fbb08db0d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b724eee-2234-4eb3-8cd7-0a93c42e10c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ae9533ba-2f08-4378-82d7-65ce65b35d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de2f6a9-1ddc-45f4-ba70-66d289bf48af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b3f7294-f3d4-4325-84bb-877d344f836c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83e22b44-6750-4e87-8cc4-07d7229d99ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bbb4e45-35d1-4b64-a691-efb2b1bec442"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0102a6e-08fc-42bd-800f-c4c75c8c1650",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "926227d7-1655-4b2d-b12d-9ff58c41d8ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebea495d-620a-4f65-84b8-e08c4959e7b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9302e698-745e-41b6-8d05-917f9c8a007e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdcb00e9-a240-447b-a2dd-bbe8ed006f13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9739f1e-fc21-48b4-a46b-8b44c185d50c"
            }
          }
        ]
      },
      {
        "id": "3eeb5af1-1ab7-4b7d-b7c2-2821bbffb39e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "41e32563-f502-4524-8f54-6bf1b600659f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "344b71c0-3a54-4425-9811-71a954283218",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58030f55-ef2e-4af0-8334-398af8d8cae2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aecd8f-13d3-4f52-9eaf-9a8f08d89143",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58892752-f081-4deb-a329-dd10c39c98e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2e8265-1727-4379-a988-d1b2f6514386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddb45e28-b516-4f71-837c-24539a14b89f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7e69283-ff62-4c39-8a96-7ed64b1ad3eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d55b2739-ce38-4e37-913a-3104bb2fe7bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a02fd905-70bc-4f58-b128-c90d9f03d79e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cef78465-3af7-4e88-a54e-f8b7bcade40d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbaa23f6-fe58-4232-9eec-8aee64b9a53a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "85e94bb5-1f29-4c7c-8b4c-4d9d37838f9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "462e8fc5-39b6-40e3-9378-e450abe83db3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "395bad90-55f6-4cea-b162-8e65416e9f5f"
            }
          }
        ]
      },
      {
        "id": "c1675d4c-e5df-43e7-b3f7-4c9c2e542504",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "885f42bc-4c68-4eff-ad0e-0a74814374e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edfd1ab4-bb73-48cf-9078-6756df588e17",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a1787dd-d5b3-40d6-ae8d-25c9a873ad66",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92598064-ef0f-4463-9bb5-35c8abc25798",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06752580-9c7c-45e9-8527-966e3b4d534b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1792379b-1d4f-4d07-82ba-105f46c05dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8072f676-c518-4945-b6bd-e5ff2d4507bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82d8d60a-6e04-472f-aeb6-e8c6e405a590",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d039bc60-a58e-4a54-a6f4-e76ef932784c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f0c6583-0763-466d-9c67-2f34505d5f5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74ffe560-c60b-4231-abae-b8aa01372dc0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fcd79e4-a89c-4c32-beb0-d237b3a57e33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7347ab29-adcb-42e2-88ce-6425c03ceb0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bb1e9f2-4949-46cf-98a7-a184564daf51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98e5567b-d721-46c0-8303-93ed97deecd0"
            }
          }
        ]
      },
      {
        "id": "aea6ee09-89dc-4aba-857d-9049cb23301e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6836ede3-3e69-4a0e-92e0-5cb0aeb91d77",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e69fa089-d991-4e76-96c6-ed66b64c87ba",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "84057c27-7476-4397-8bf5-cf3a8394e96a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bc42347-bad8-4998-8538-adb9b6fe9a69",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be0d1b5f-3546-4f37-a9d4-a12a4f9705d7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 737.3412698412698,
      "responseMin": 6,
      "responseMax": 27149,
      "responseSd": 4036.085832072003,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728175829580,
      "completed": 1728176023887
    },
    "executions": [
      {
        "id": "bb39a673-5cab-4511-8263-e14f80c8cb2d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "392a7f40-1594-4268-8ba8-b029da7c9b14",
          "httpRequestId": "280dc8d7-cfbb-4de0-9e06-205abd770192"
        },
        "item": {
          "id": "bb39a673-5cab-4511-8263-e14f80c8cb2d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6656f53d-05af-419a-be8a-204adea84500",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "af11d864-1a76-4b32-bba5-83a52546249b",
        "cursor": {
          "ref": "40639b95-cab6-4e47-98b2-68f72d013589",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cc531b88-2b03-4247-a651-8c210cbf0133"
        },
        "item": {
          "id": "af11d864-1a76-4b32-bba5-83a52546249b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "86de8080-94b9-458e-a001-4114cf52ef53",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "f9490393-22a5-48bf-9bea-500560430477",
        "cursor": {
          "ref": "cf9fa05e-b2fd-44b4-af39-f7b61d69ad78",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b7ad3ea2-c121-456f-aa64-48ccffe1f2dc"
        },
        "item": {
          "id": "f9490393-22a5-48bf-9bea-500560430477",
          "name": "did_json"
        },
        "response": {
          "id": "e616582b-4c11-46ef-847e-02e7aff4d7a6",
          "status": "OK",
          "code": 200,
          "responseTime": 170,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff03212-2f61-49ac-bb6f-8465a584dc9b",
        "cursor": {
          "ref": "278ee416-b9b2-42a0-a676-ca785befd51b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0f41e2a1-fb51-46ec-8262-761a462559cd"
        },
        "item": {
          "id": "fff03212-2f61-49ac-bb6f-8465a584dc9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "8f586baf-1e71-446a-b9fc-13004845812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2424,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff03212-2f61-49ac-bb6f-8465a584dc9b",
        "cursor": {
          "ref": "278ee416-b9b2-42a0-a676-ca785befd51b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0f41e2a1-fb51-46ec-8262-761a462559cd"
        },
        "item": {
          "id": "fff03212-2f61-49ac-bb6f-8465a584dc9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "8f586baf-1e71-446a-b9fc-13004845812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2424,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cc48c2-9a3a-4683-9084-d11045a51b59",
        "cursor": {
          "ref": "e9c701d5-1b5d-455f-8a70-5682d60c5382",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4a636a51-194e-4e92-b016-efb7cfe2439c"
        },
        "item": {
          "id": "b4cc48c2-9a3a-4683-9084-d11045a51b59",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "601db184-51ec-421a-b4b6-9faf4bacb04f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2624,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3e44fd-f24f-454e-8deb-e8b21d47e3a4",
        "cursor": {
          "ref": "61d7bd8a-ad3b-44fd-bfd1-f41e297f1ada",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1f12a114-c476-410b-b139-3684214fcd66"
        },
        "item": {
          "id": "dc3e44fd-f24f-454e-8deb-e8b21d47e3a4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "be6de5d1-7877-4f23-a18c-a2d5b62a7eb7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2139,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26126ae9-67dc-444d-9641-281524a0efea",
        "cursor": {
          "ref": "0e286d24-a5ca-44a7-86dc-c119392e900e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1bbd7cee-b215-49f2-ad6c-027aa8df0ddf"
        },
        "item": {
          "id": "26126ae9-67dc-444d-9641-281524a0efea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0749dcb3-e6a0-45e7-8bf9-e8339256305e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d927353e-6b3f-456e-9677-f23210f40d9e",
        "cursor": {
          "ref": "dd2f9c24-48b8-42ed-bdbb-f48093492f89",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "434cef6a-c13b-4d92-a395-ca3af1b0347d"
        },
        "item": {
          "id": "d927353e-6b3f-456e-9677-f23210f40d9e",
          "name": "identifiers"
        },
        "response": {
          "id": "d43abbbb-c1d7-479b-8bd4-d16d8dae5f46",
          "status": "OK",
          "code": 200,
          "responseTime": 2825,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad74c514-93cd-4985-b9f5-8c661d8df1cf",
        "cursor": {
          "ref": "88842726-258a-4bd3-9c58-9c8d6789399d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6574bb40-1308-4b15-a517-228107d23750"
        },
        "item": {
          "id": "ad74c514-93cd-4985-b9f5-8c661d8df1cf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a2062a5f-0dd7-4246-8e83-52274be3f841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd81f3b5-cc5f-48ea-a85f-ef0b3f966cac",
        "cursor": {
          "ref": "f69214fe-12a3-4edf-9556-523caa2345da",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9185cdfc-58c7-425e-a200-a1a26fb6f870"
        },
        "item": {
          "id": "bd81f3b5-cc5f-48ea-a85f-ef0b3f966cac",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "939489c6-a5ab-44b8-a0e9-0654ebbab350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8835755b-9e42-4b6a-a5ee-18c8d4e8fba8",
        "cursor": {
          "ref": "5f222365-25a7-4c6a-a983-4da52c5dafbc",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9d70ae24-e429-47db-8e95-fb0bf62c552b"
        },
        "item": {
          "id": "8835755b-9e42-4b6a-a5ee-18c8d4e8fba8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c42681f0-0ddf-4b7d-968c-98f40988ef92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97cd096-dfa9-4d15-8977-3d4010b621ce",
        "cursor": {
          "ref": "89112cbd-c384-4fe1-b83d-aade7b3a402e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2b23c469-d704-4e89-9699-20171abbc83b"
        },
        "item": {
          "id": "d97cd096-dfa9-4d15-8977-3d4010b621ce",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b8fa9bd2-35c4-4ca5-9180-2bf5ddb8956d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5bf39e-0f3e-4d41-a292-0edbf5992f8a",
        "cursor": {
          "ref": "c35057dd-7ca3-4550-b54d-b5d65942edc3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e6ea2c29-54b4-4439-a020-dbbc7cf22550"
        },
        "item": {
          "id": "1e5bf39e-0f3e-4d41-a292-0edbf5992f8a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6d3923e0-2166-48e2-b1ac-99871078b1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12070ee-6da5-4ed2-a98b-60d234d6905b",
        "cursor": {
          "ref": "47d1e4a4-c200-49b4-94a4-0f08669f5bff",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8c87d2ca-4bf6-4edb-a6f6-fe8a07e4c989"
        },
        "item": {
          "id": "c12070ee-6da5-4ed2-a98b-60d234d6905b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "39e43544-8f50-4660-9729-ee233f96b008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3439424-7a22-4bf9-aca5-e48dea50a0c5",
        "cursor": {
          "ref": "b19a8794-d05a-469b-a73f-dde7c502f8d1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ff7c551d-3bd2-4418-96bb-23416ffe1879"
        },
        "item": {
          "id": "c3439424-7a22-4bf9-aca5-e48dea50a0c5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0d3aa2e8-ae41-4574-85ce-0202c1dde010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ccee3b-6c4c-49f0-863d-f615b2edd29d",
        "cursor": {
          "ref": "fef1dff7-cd0b-461f-84ed-b2404b250d85",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "263dd091-0035-4e6c-b488-77104c3dbfe1"
        },
        "item": {
          "id": "72ccee3b-6c4c-49f0-863d-f615b2edd29d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a8a69f41-252c-4c57-b6f9-ea89ddd90d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8392d9-07f7-432d-b28b-f166ac639e6e",
        "cursor": {
          "ref": "64da36a1-5ce9-4fcf-bed2-e4258d3cf6b6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "319665c5-4871-4030-8742-b0e011caabe0"
        },
        "item": {
          "id": "1a8392d9-07f7-432d-b28b-f166ac639e6e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cd727f72-a17c-4172-b2f5-33d949c070fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8921387c-6c38-43e5-b0a3-66e295f88c10",
        "cursor": {
          "ref": "1b07c27a-2028-4f52-831b-e581fc576b9a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ad886fcb-5a00-4547-964b-2bf99a2e2fe7"
        },
        "item": {
          "id": "8921387c-6c38-43e5-b0a3-66e295f88c10",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6c85378b-fb27-4e72-8b94-eaee713e6493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af01666-b067-43ae-ab0a-9a1e5ab1a59a",
        "cursor": {
          "ref": "8349c799-2e02-48ad-afae-11cee49add07",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6b9c2965-a141-4227-aaa4-819f0b57b7f6"
        },
        "item": {
          "id": "5af01666-b067-43ae-ab0a-9a1e5ab1a59a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6e377a06-f2a6-48a8-bacc-7d8628ca8bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0be6113-6be1-4c96-acb5-8059cb1a7aea",
        "cursor": {
          "ref": "62587bef-effe-4843-9563-72c7c766e5f5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dfcadaec-e6e9-4ee2-9c5d-f2d48d38ccf6"
        },
        "item": {
          "id": "e0be6113-6be1-4c96-acb5-8059cb1a7aea",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b252544a-5270-4b70-99aa-64c712d65513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f2e43f-8717-42bd-8a84-98b3624aabf7",
        "cursor": {
          "ref": "b0080c74-9f56-49f2-9a0e-5b00fe6e3fb7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e381545f-56de-4094-b3c3-6630f075c2cb"
        },
        "item": {
          "id": "63f2e43f-8717-42bd-8a84-98b3624aabf7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c0fdd942-a18c-4704-b75f-0178438019f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12b60bd-6802-40e9-924b-de4f545dea2f",
        "cursor": {
          "ref": "13d212e6-c25d-446b-b957-49ac350ed07f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b700080c-2a83-4d00-9a8b-e51f3b3e9597"
        },
        "item": {
          "id": "c12b60bd-6802-40e9-924b-de4f545dea2f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6c597d44-d8df-41ef-aca1-0d52b64fe291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5c4d0f-cfab-46c6-9d9c-64fb9da94ffb",
        "cursor": {
          "ref": "451f33f6-8fc4-4527-935f-7d7385361a8f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "55cee7bd-6794-4479-ae99-228a872bf48f"
        },
        "item": {
          "id": "2d5c4d0f-cfab-46c6-9d9c-64fb9da94ffb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1ce9ab8c-0fd5-4fef-9016-723d69184d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a981ebd8-b3d0-447d-8da1-ceee7d134764",
        "cursor": {
          "ref": "0215b6f4-13bb-471f-baac-4452d7ccb249",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "076cb1c2-e836-46f8-a1b3-31b37ed5e694"
        },
        "item": {
          "id": "a981ebd8-b3d0-447d-8da1-ceee7d134764",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "afed8e84-bc8a-4f20-8607-542d2a641005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37161ff5-0d15-4b5f-affc-12b05385f26f",
        "cursor": {
          "ref": "e30a671e-0155-4a8e-ab26-bce9622a25b9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e7159bfe-8e28-4323-8ff5-4fba7bfcd9d8"
        },
        "item": {
          "id": "37161ff5-0d15-4b5f-affc-12b05385f26f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "51f5b98a-c994-43f9-be53-c094fddbb438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ba28d6-ade3-4319-b20a-937af0b9bbb0",
        "cursor": {
          "ref": "93b80aca-8ce9-473d-a557-eb77ada0b8a1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "811d7409-cda0-4ce0-87fa-c7b59458d02d"
        },
        "item": {
          "id": "b3ba28d6-ade3-4319-b20a-937af0b9bbb0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7ada85c6-0a62-4450-9c43-9e1f6ffc3b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121ed040-269a-4a99-a495-412c0b894377",
        "cursor": {
          "ref": "716c016c-9ad8-4788-a5c5-ad1443ffca45",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6a9e7c43-68dc-40b2-8134-de8573f15120"
        },
        "item": {
          "id": "121ed040-269a-4a99-a495-412c0b894377",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8d24245e-e8be-49bc-b039-c748c1eb718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e46fcb7-ad9d-4096-be1a-47695bceeef8",
        "cursor": {
          "ref": "c79a0ac8-abfc-4a10-88b8-1bb575d2ecc1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ce34967f-8948-4179-b080-4f3104b7bb21"
        },
        "item": {
          "id": "8e46fcb7-ad9d-4096-be1a-47695bceeef8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fc6d1791-e318-4879-b94e-1bbb323f16f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885a6099-db21-45d6-9c62-6d4cb8bf8711",
        "cursor": {
          "ref": "cd230c29-602f-4b05-93e0-e2f38af39a76",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a3787c4c-0b28-4ac6-9f4f-4f21c4345a89"
        },
        "item": {
          "id": "885a6099-db21-45d6-9c62-6d4cb8bf8711",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "43806047-62a4-4d28-9e64-e6cf5f5a6c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d59c916-5157-4cfc-8192-272ac2ecaebb",
        "cursor": {
          "ref": "f5c4ba70-46ea-4ba4-b7db-cdffd688f2f3",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cdd337f7-b9aa-4b58-8c66-f0e9a2757fd2"
        },
        "item": {
          "id": "5d59c916-5157-4cfc-8192-272ac2ecaebb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dcda9296-9571-4a64-8caa-b55ab3d46f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7243e69c-48fd-4e5b-bf6d-679579646f0b",
        "cursor": {
          "ref": "7f1a8577-25b1-4539-8671-413891f61193",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "71524a2a-362c-4707-a809-cbc77588bd4e"
        },
        "item": {
          "id": "7243e69c-48fd-4e5b-bf6d-679579646f0b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d777ca74-b5a0-4753-9b7b-94c7887df124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69632eb-6e08-4d88-b920-425f42c6cea4",
        "cursor": {
          "ref": "985cb155-fbb5-4945-a3d7-8330472f4003",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a24cc9f9-add2-4ca7-9acd-3fbf11df11d8"
        },
        "item": {
          "id": "a69632eb-6e08-4d88-b920-425f42c6cea4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "254190de-9be7-4755-8818-c3961ddd0c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b596d07-e7b3-40ac-8005-76096c83d317",
        "cursor": {
          "ref": "aa1587a5-ac49-4612-916e-21d0d1102c9f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2b2b4606-b134-4dba-b38f-7168f22aa781"
        },
        "item": {
          "id": "1b596d07-e7b3-40ac-8005-76096c83d317",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7769173b-9647-453e-8ac9-baecc94e4f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3222170-9903-43f9-a875-96d0919dc4b7",
        "cursor": {
          "ref": "81d15331-b55f-4d17-a667-d5b6ebb38f5e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "518d505c-6ade-4efc-9077-413964ce5397"
        },
        "item": {
          "id": "e3222170-9903-43f9-a875-96d0919dc4b7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9c60ff8c-14db-4ded-ad94-49e91b52b091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9de3757-3bc3-4ee2-8947-09801ff823be",
        "cursor": {
          "ref": "e0931b1c-4712-4ea9-83fc-87f0620a6d53",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "52150fb5-d030-400c-b479-bc10510407e5"
        },
        "item": {
          "id": "b9de3757-3bc3-4ee2-8947-09801ff823be",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3ffbae77-4e37-443a-894e-7977b023cc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da071c13-417f-430b-80ce-9275cb6a902f",
        "cursor": {
          "ref": "dfdb8884-6cd4-4d44-bb0a-c075e4dd4699",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ce036067-da7a-4979-a0c6-d5212036389e"
        },
        "item": {
          "id": "da071c13-417f-430b-80ce-9275cb6a902f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "26f42354-7657-43f0-8ebe-8e46cb547af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cee9fb8-92bf-4ad3-ba81-2951a6a7399a",
        "cursor": {
          "ref": "f6504d5d-18e5-45d9-8da4-586cc09a3e70",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1e0c8fa0-28e7-4010-9c82-1c67d94b991b"
        },
        "item": {
          "id": "7cee9fb8-92bf-4ad3-ba81-2951a6a7399a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1cdf4ec4-46e7-4fc1-9ffb-0976bd8d3640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb54c1df-aef1-4f67-8ca6-4f9605059037",
        "cursor": {
          "ref": "5d0aa562-0f98-44a0-9ce9-7bf8714b925d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0df51244-5bbc-4704-8a42-0b0803482e2e"
        },
        "item": {
          "id": "bb54c1df-aef1-4f67-8ca6-4f9605059037",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6b793a0b-beab-42a5-b2e0-2b3596a8f520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb111210-9c73-4c05-99e4-c5b9999c37bf",
        "cursor": {
          "ref": "4f75d449-b73b-4e66-b1d4-42137b3ea862",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0452c8da-407a-4f04-af99-2ded4019b3c4"
        },
        "item": {
          "id": "cb111210-9c73-4c05-99e4-c5b9999c37bf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8159c555-edbc-4cb8-8645-bb79b92d59f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa409d2-009b-4a04-9ecd-43e441ab5914",
        "cursor": {
          "ref": "ac4a3e34-7dc1-4495-84a2-d5bffe8b6b23",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "59a835fd-7e02-434d-8688-9a5b35dd657b"
        },
        "item": {
          "id": "8fa409d2-009b-4a04-9ecd-43e441ab5914",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cbed652f-795a-420b-be64-9a8c8da5e914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d986c3ee-58de-407f-8650-de47a04a8829",
        "cursor": {
          "ref": "5c1941b3-4829-4bfe-a878-5dd37da56c1d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "04f60c71-87a4-4bae-b88f-35856e024a4c"
        },
        "item": {
          "id": "d986c3ee-58de-407f-8650-de47a04a8829",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5f223c46-08e3-4b50-92f9-296256221022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0f4363-9308-410f-913a-42b59e2dc630",
        "cursor": {
          "ref": "8b369981-c095-440b-94cd-5d988f859a63",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "262ceda3-8796-4ef6-a2f9-95995f59a1f4"
        },
        "item": {
          "id": "0e0f4363-9308-410f-913a-42b59e2dc630",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "766b66eb-f7d2-4efe-89bd-2e593626a9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5854e2-c781-49cc-8863-fbaac333fd58",
        "cursor": {
          "ref": "70cbbd50-0599-45dd-b247-bd2e79fdae6b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bfd825ff-a077-4131-bb7d-8ca014bb9e7a"
        },
        "item": {
          "id": "6b5854e2-c781-49cc-8863-fbaac333fd58",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eef15450-35d8-45a2-98cf-77abfe360c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fea25e-0248-40fa-888b-e64cff8a1417",
        "cursor": {
          "ref": "d2be7fe6-7fe2-4fde-ae51-b991b5697d0d",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5eaac9ef-486a-4458-ac6d-2294512e190b"
        },
        "item": {
          "id": "b5fea25e-0248-40fa-888b-e64cff8a1417",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "83ee3fb5-fd4b-44c2-ae1d-447e689f0843",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ab650d-2c86-4db0-9fda-78a09f56b273",
        "cursor": {
          "ref": "d49a8c37-01b2-42ee-8f35-635e049f0b3f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5e04eb1a-d534-4d27-bfdb-cda6f902786c"
        },
        "item": {
          "id": "15ab650d-2c86-4db0-9fda-78a09f56b273",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2d8885bf-b1f0-429e-a013-22a35a04f37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066275cb-e114-4331-adca-e20584c9c701",
        "cursor": {
          "ref": "951f0f11-94f4-4b47-b26a-c01e0a8166c9",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e73cb773-1d49-4e36-bd89-cd425d6835a6"
        },
        "item": {
          "id": "066275cb-e114-4331-adca-e20584c9c701",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dce0552c-5aa2-4c3f-9ee5-da60333021f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52442bb8-a397-4e3e-8c3a-4db04f1cad3d",
        "cursor": {
          "ref": "2fe5eb7e-4ad9-4a36-a60c-aaf43255c61d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a085bc43-5f9a-4964-ac95-e8f2932e9aea"
        },
        "item": {
          "id": "52442bb8-a397-4e3e-8c3a-4db04f1cad3d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f176cfda-63b4-4da4-b1b0-7ef72ceb3d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec29c9b4-91d5-4daf-a0f6-6cbaf7970366",
        "cursor": {
          "ref": "5ded4958-7558-4a7b-81a3-e6554d963907",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eb6e831d-3041-4358-9715-fc4ab9c95c04"
        },
        "item": {
          "id": "ec29c9b4-91d5-4daf-a0f6-6cbaf7970366",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9dd86e81-0239-418e-80ec-b3ee8e0a3b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69865fa2-89b3-4327-9a4a-d07de8cd6c19",
        "cursor": {
          "ref": "26abc2c0-460a-43ce-b040-5c55aa63f3aa",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f2dfbc2d-e808-47ac-84c1-bdf6b79957df"
        },
        "item": {
          "id": "69865fa2-89b3-4327-9a4a-d07de8cd6c19",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d8cf1656-fa35-44e3-9379-f83ff6bf9352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a42a6f-deae-4fac-973b-dc568d10c61e",
        "cursor": {
          "ref": "aeec56eb-a46d-45af-a7ed-0c7f275c1454",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e6cdc2dd-017b-4252-9827-295fa8680779"
        },
        "item": {
          "id": "20a42a6f-deae-4fac-973b-dc568d10c61e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7815f857-2e92-46a7-bccb-c0d0a58b73ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15f83b4-a1e6-408e-bcd6-6c99c8dd6d87",
        "cursor": {
          "ref": "d2987c70-44aa-4e88-a55a-8ea3159bbe3d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8c687932-228d-4388-bf7d-24bd3759afba"
        },
        "item": {
          "id": "d15f83b4-a1e6-408e-bcd6-6c99c8dd6d87",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "033fba5d-8136-4e4f-a40d-7effd047d719",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfabdeba-a673-49c4-9fd1-2ed92144db20",
        "cursor": {
          "ref": "9428f867-5ce4-47d7-b175-853b3faf9acf",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9775c460-29ee-457c-8e7d-01fc444d68fc"
        },
        "item": {
          "id": "dfabdeba-a673-49c4-9fd1-2ed92144db20",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ebf2541d-6b7e-4909-aa7e-5e5dff1d48a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed045aea-0d7f-46c7-b9c4-20f769e30002",
        "cursor": {
          "ref": "12034a6b-0ba5-47ac-a6b0-0277a3f836ec",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c51d2127-18ad-4448-be84-a75463080d25"
        },
        "item": {
          "id": "ed045aea-0d7f-46c7-b9c4-20f769e30002",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "62766c07-115a-4aa2-aff3-e13f24ba84ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8a4913-6a7c-4693-8a72-9574484166eb",
        "cursor": {
          "ref": "a2452c9e-3842-45d2-90b9-556486eda23e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "90d1a1a2-6423-44e1-8c62-708ab4b2f737"
        },
        "item": {
          "id": "cf8a4913-6a7c-4693-8a72-9574484166eb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cf9a4b76-d95b-4925-a1fb-564d16aeaed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e3e0c4-ad75-438a-8740-4286f11a5dea",
        "cursor": {
          "ref": "3783a018-5d62-4962-b1b4-f932d3f3abcf",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "768beb78-29ce-4159-a91f-2684a19d6f9e"
        },
        "item": {
          "id": "30e3e0c4-ad75-438a-8740-4286f11a5dea",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c517a864-b7f5-4364-82c0-b12436850427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e29d67-55d5-42aa-8d16-dc9c71a7b6cd",
        "cursor": {
          "ref": "08fa37b3-84c4-4ad8-90b8-4116ef69c39b",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bb792750-74f0-404f-a435-cd45e84d1738"
        },
        "item": {
          "id": "04e29d67-55d5-42aa-8d16-dc9c71a7b6cd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "adac2f7d-fd9f-4501-819e-372ed9c78c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf82e80-80d0-4ca8-8609-0eca45db8bd3",
        "cursor": {
          "ref": "600d2e0c-cfd7-457c-ace0-9f62c0b2c08b",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d442bfd0-0b53-4c4c-bc06-48c00a690bb9"
        },
        "item": {
          "id": "4cf82e80-80d0-4ca8-8609-0eca45db8bd3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a21e01e4-2219-40ab-93dc-668d0ffa05dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fae4aaf-4b61-47af-a724-6dc654662f8c",
        "cursor": {
          "ref": "2c291347-c197-450f-abb4-0ba0acc54535",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f1169911-2aa1-442d-bd2a-b999d01b890d"
        },
        "item": {
          "id": "8fae4aaf-4b61-47af-a724-6dc654662f8c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "248824a7-2911-4644-b2ca-c3e006196bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d893a96-27ed-4fe3-ac8e-347aff2bd1f5",
        "cursor": {
          "ref": "a5d9260a-300f-4ba4-948c-432bc4d44297",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3967027e-100c-43b0-a70e-50a7ce41fa30"
        },
        "item": {
          "id": "9d893a96-27ed-4fe3-ac8e-347aff2bd1f5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4b8cd55f-55c4-4c6c-b628-555baa641185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30b4d88-e9dc-4cba-865f-1d51aa6a6601",
        "cursor": {
          "ref": "cfa543e6-d10a-43e6-b40f-857354a84159",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "706e36ab-2ed6-40e2-81f3-8b8f68341d40"
        },
        "item": {
          "id": "f30b4d88-e9dc-4cba-865f-1d51aa6a6601",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "24e6750e-2962-4a35-aa51-624328dbeb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ada2413-9942-4c98-b62c-e64bfecb640f",
        "cursor": {
          "ref": "af3d92c9-c6f8-4270-a356-f15550f60509",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "542a43f9-94ae-49b7-8ba0-4c542d6924b4"
        },
        "item": {
          "id": "2ada2413-9942-4c98-b62c-e64bfecb640f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "66817374-108b-49c0-aefa-56c9088d8f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb950a6-6704-4ce3-b372-8d3a01516d05",
        "cursor": {
          "ref": "f6564f4a-67f8-4d00-9061-e408d4d28d30",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8c847736-9c39-4c17-85d0-f2dc4cd7d203"
        },
        "item": {
          "id": "dcb950a6-6704-4ce3-b372-8d3a01516d05",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f495eb1a-3539-42e2-98da-7032bfb15101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206e30ff-2eeb-4ca9-a6e6-4a7b3fee6455",
        "cursor": {
          "ref": "0b2062d0-d2d1-467a-a6a2-a5e1c9281a8b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2ac8c02b-c76f-45dd-817b-cacb9a138e0c"
        },
        "item": {
          "id": "206e30ff-2eeb-4ca9-a6e6-4a7b3fee6455",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "91983844-9e1a-4c19-b48d-2964d9ae38e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ce65ca-241e-4bf8-b35c-59decb9b6414",
        "cursor": {
          "ref": "40b2b6d5-da28-4b0d-a8d2-7d43dfb83f5e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "63c77161-503c-47e6-b7c9-b53cc6f0ba21"
        },
        "item": {
          "id": "72ce65ca-241e-4bf8-b35c-59decb9b6414",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3371baff-cde4-47be-80e8-49cb6d5c4e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20175ad-fa35-4720-b1cc-654f6f1129dd",
        "cursor": {
          "ref": "aee67445-3336-453e-b146-f0f6492f29f4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "33eb68dd-bd1b-4e99-aae4-266735f10764"
        },
        "item": {
          "id": "c20175ad-fa35-4720-b1cc-654f6f1129dd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e2a0fe22-4253-4200-9fcb-f382043107c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b122f3-0eaf-4e9b-b3b1-a52d227410c6",
        "cursor": {
          "ref": "19d0c832-4b64-4b02-a24c-ee34a6ee2c66",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7d2b4ab6-8cdf-464d-a266-9f9e61025f62"
        },
        "item": {
          "id": "58b122f3-0eaf-4e9b-b3b1-a52d227410c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3ab5d89f-c474-4338-b0f2-9f60c50a6ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0648e42d-4b84-419c-8b3d-0c24ce2b8057",
        "cursor": {
          "ref": "25912a2d-4d8a-408f-951d-3c8496e410c1",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fb31b684-fbbe-4bed-8fce-bc36ddfc0fde"
        },
        "item": {
          "id": "0648e42d-4b84-419c-8b3d-0c24ce2b8057",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "15bd593e-0265-4fc1-a09b-4df56eb56083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc98686c-199c-413a-bfcd-8061152fa14b",
        "cursor": {
          "ref": "547a2e37-2330-40ae-b670-afa601ebc758",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d59d2f2d-347d-438e-956c-ab4032f35a74"
        },
        "item": {
          "id": "cc98686c-199c-413a-bfcd-8061152fa14b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7381f68a-ba05-4ec1-a0ad-54065be3ce59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ce8d7e-40b9-4b65-9e04-b8e5dd1d28b5",
        "cursor": {
          "ref": "c8cb5a0a-611e-4f7d-9c6d-d9ae699c9fd5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e560ca42-48cd-463d-9aab-ee962d7ececb"
        },
        "item": {
          "id": "c4ce8d7e-40b9-4b65-9e04-b8e5dd1d28b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3293e792-7961-45cd-a1f2-1417cbae728f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438e6e20-2c9a-48bf-9761-eaf4d4139808",
        "cursor": {
          "ref": "6e12b3ef-022a-4329-8b56-11c68ee15966",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eef04e72-efd0-4d41-b0cb-f0a726a1aa48"
        },
        "item": {
          "id": "438e6e20-2c9a-48bf-9761-eaf4d4139808",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d4456b23-fe2a-4c49-8d57-0b2d330ba574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d8afbe-bc6c-46df-94c4-1c57d81b84de",
        "cursor": {
          "ref": "bb0129cf-8700-4527-9e65-567d34e0f400",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f32dd237-1151-45a7-93e8-668d54440781"
        },
        "item": {
          "id": "f5d8afbe-bc6c-46df-94c4-1c57d81b84de",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2f6293f1-7382-49d5-87e4-4c3b03b26d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fffa92-11d9-4a31-8d18-80e56d36bebf",
        "cursor": {
          "ref": "ecb8aa7b-67f0-4a7a-b591-1fd75c22f8b3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b8b5a879-baaa-4b79-8f60-587490c25f70"
        },
        "item": {
          "id": "64fffa92-11d9-4a31-8d18-80e56d36bebf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "33762041-db60-4a87-a2e7-a18abb26c612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93682ba-3477-4dd4-b0b9-d5ad0b70704d",
        "cursor": {
          "ref": "334e8f82-08c4-4cff-8fc5-8b6d8e8964cd",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7ee2add3-68c6-4c3a-a0f9-231fc993ef29"
        },
        "item": {
          "id": "c93682ba-3477-4dd4-b0b9-d5ad0b70704d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "654720b3-6e81-48b3-8c4c-eb85062d1446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedf53dc-fd29-4285-8f94-d723d1bf68bb",
        "cursor": {
          "ref": "d58afb32-0bec-41d2-820b-d74b69dca0f7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c6114983-1b95-4d71-a5ec-cd316043fc90"
        },
        "item": {
          "id": "aedf53dc-fd29-4285-8f94-d723d1bf68bb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9d1543a4-c221-4b54-adb8-26c4729f88bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fcaebe-45bd-4df5-b9d7-975565daa75b",
        "cursor": {
          "ref": "24ebd668-c83f-4dbd-8d68-e6e8edbd1600",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e07b7b3d-1252-40ea-b931-e423cd52a66d"
        },
        "item": {
          "id": "a8fcaebe-45bd-4df5-b9d7-975565daa75b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4c9e4282-f297-4025-91f0-4325945596a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4766e79c-4734-4c2f-909e-cd17851cae9c",
        "cursor": {
          "ref": "922d2231-3f15-49d4-9533-e147ea468780",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3a9b6f3d-eca6-485a-9cf0-f7e8add0cf4d"
        },
        "item": {
          "id": "4766e79c-4734-4c2f-909e-cd17851cae9c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1f240b06-8925-42fe-b7d7-05366f6288ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e049ee6-2bb0-4e2f-bbe0-df408bff19ae",
        "cursor": {
          "ref": "95f1b87f-3196-4665-ac75-f5eaf5de9bb1",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9897c2e9-beb0-4582-b477-99d7c8601d14"
        },
        "item": {
          "id": "0e049ee6-2bb0-4e2f-bbe0-df408bff19ae",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e37c7caf-694a-400f-857b-8d3ce18cd7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3466eb74-c1e3-430d-a590-8cb2f95493b5",
        "cursor": {
          "ref": "cfb68db5-1062-435f-9da7-366bed318aed",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f1693edf-9331-480e-a700-898233785783"
        },
        "item": {
          "id": "3466eb74-c1e3-430d-a590-8cb2f95493b5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "37e88191-6d90-4858-afaf-9494ac8d1219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd7f591-c1c9-4aef-aa61-1b5e74a3e323",
        "cursor": {
          "ref": "1f823965-8c5a-4c77-a8af-b46a1eecd3be",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9f225ec7-c57c-4e1c-9294-c52e42a1326a"
        },
        "item": {
          "id": "edd7f591-c1c9-4aef-aa61-1b5e74a3e323",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5489ebcc-2a21-47d5-bfcd-708d3cf0ffef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbf1d67-125e-4cb3-80c8-08f1e87fed83",
        "cursor": {
          "ref": "a3bd18cf-5b65-4d9d-96f6-c2814d6444ad",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9ede7fd8-0cfb-4157-b47b-f81698d33bb7"
        },
        "item": {
          "id": "6cbf1d67-125e-4cb3-80c8-08f1e87fed83",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "af7c21c7-b88a-4cab-b312-e515825eb413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed3f38b-092b-477d-ae60-a74824ecd6e9",
        "cursor": {
          "ref": "6edd716d-f9dc-4a16-be01-52148b8bb970",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e44aecf4-7196-484b-b6c9-68b6b642c0cb"
        },
        "item": {
          "id": "2ed3f38b-092b-477d-ae60-a74824ecd6e9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fd31bfa3-baa3-467d-bfdf-bfade323da8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9b4455-a166-40ce-873b-5bb1844a970e",
        "cursor": {
          "ref": "828cd697-551e-435d-b565-52e4eab491ba",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c72741a9-b71a-412f-8770-336347dd412f"
        },
        "item": {
          "id": "9d9b4455-a166-40ce-873b-5bb1844a970e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "91738fa1-82a1-4b06-a012-00bf1df5ec85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f354c64-70af-4660-8e29-9ef4d94ad437",
        "cursor": {
          "ref": "56ec6f74-2f3e-4094-b843-034b769d4927",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4c39e1ff-e9da-4b8f-b444-3bde2ac349fa"
        },
        "item": {
          "id": "7f354c64-70af-4660-8e29-9ef4d94ad437",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2eabefca-4115-4b0f-a8a3-9e16e57a9f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0ab100-566e-4b53-ac51-3eddf9aed63d",
        "cursor": {
          "ref": "e659739e-3af3-47b1-a573-2acfc70a9005",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ee44b3db-f8ec-442a-867b-863cdd4e887a"
        },
        "item": {
          "id": "8a0ab100-566e-4b53-ac51-3eddf9aed63d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9b1e84e9-ce76-439f-a40e-cbc2694681e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac84dc6-9033-4f62-8ca8-d3ef47349b4e",
        "cursor": {
          "ref": "358d5c16-9697-4e8c-b6b8-7ad141acd560",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1fbea341-b845-421d-a80c-5874381bcc7e"
        },
        "item": {
          "id": "eac84dc6-9033-4f62-8ca8-d3ef47349b4e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1c896717-65c4-429f-a1f6-c186c6b41edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8179e496-dbdd-43bd-a693-82ec56c17a8b",
        "cursor": {
          "ref": "d2d43560-955e-49a0-a9b0-b6d751c5e503",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "aa1238c7-5570-42ef-aedb-1fd0b655b538"
        },
        "item": {
          "id": "8179e496-dbdd-43bd-a693-82ec56c17a8b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4adf7428-6a03-4bef-8c40-311bb85487b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9152e6d-ba5e-4950-a3ab-4e5613111687",
        "cursor": {
          "ref": "73998939-217e-42e3-91c2-35f153e72eed",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ecd3f88f-bdaf-4e30-950d-a195b5a30316"
        },
        "item": {
          "id": "d9152e6d-ba5e-4950-a3ab-4e5613111687",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "92603cf1-07f6-46ec-a84e-301801c24c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b07d52-0436-4bc3-9207-4278aaa869dc",
        "cursor": {
          "ref": "e37f0ea1-0279-4b42-bdb3-094db7544b6d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f7bec29b-dd1a-415b-a7ff-0eee2e83c3ab"
        },
        "item": {
          "id": "03b07d52-0436-4bc3-9207-4278aaa869dc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "84508d14-abfc-410c-a781-adbb1c9e4971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f9dfec-1194-411d-8700-1a870331b9b2",
        "cursor": {
          "ref": "856fd649-b429-4380-99ed-71f79677332f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "775eb863-3383-4e11-bea9-280801ede4d0"
        },
        "item": {
          "id": "76f9dfec-1194-411d-8700-1a870331b9b2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "64b7157a-5ace-4158-a931-37129db4b2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f962cd76-c28a-4a9c-b920-e50e63533e4c",
        "cursor": {
          "ref": "8e336b7e-f5fd-439e-817a-797f2572a68f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "07670327-4c6b-4b90-999a-7e5822b8fdd0"
        },
        "item": {
          "id": "f962cd76-c28a-4a9c-b920-e50e63533e4c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9b595f9e-648e-43b9-b259-431737b716d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f946d8-e0f7-49e9-8fc3-a9fa5badafea",
        "cursor": {
          "ref": "b7120b8f-9866-4775-9279-010be73e2a71",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1f49cff9-9273-4469-9117-7397afd0081d"
        },
        "item": {
          "id": "75f946d8-e0f7-49e9-8fc3-a9fa5badafea",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "820df379-00a2-4d88-9bc8-498bc886455c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdbf038-5573-4d06-84e0-2e4d45b57184",
        "cursor": {
          "ref": "7590a5da-3794-449f-9485-aa230b2f70c7",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1322786d-1558-48a3-b7fc-cd0ec23d21a8"
        },
        "item": {
          "id": "dbdbf038-5573-4d06-84e0-2e4d45b57184",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b2246885-3f05-43f1-82ed-3a5964a5d314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590e777e-85c8-4084-9f02-c822009357c6",
        "cursor": {
          "ref": "02500cc3-e614-43f0-811f-acadf52c07e9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e36067ab-0461-467e-ae97-8cefccdcd40d"
        },
        "item": {
          "id": "590e777e-85c8-4084-9f02-c822009357c6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d522e722-7c1a-4bb8-b3c3-86739781429c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971d550f-ec22-473d-8d6f-12d2b6c3db67",
        "cursor": {
          "ref": "2043abb5-3e0f-4a2f-ba05-bff8941a963a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ffc4ecaa-5ef7-45e3-836c-68a97035be22"
        },
        "item": {
          "id": "971d550f-ec22-473d-8d6f-12d2b6c3db67",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1276bd11-967a-4869-a193-b9bdd26e010d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a99377-4724-4135-86f8-9c58cfa95d71",
        "cursor": {
          "ref": "439ac495-2fef-485a-b498-e96965c8b17b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c0a7279f-4cba-4742-a443-b7d6a1407a69"
        },
        "item": {
          "id": "17a99377-4724-4135-86f8-9c58cfa95d71",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "58fe46cd-ad1d-41b2-b7d0-eb0a5c9bec64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706277ac-b28a-4797-a8c3-01379734cd0f",
        "cursor": {
          "ref": "82ec5fc8-867f-4c7c-82fc-3f3f55549c71",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "059711eb-8e3c-4217-b6c0-32caa5a4e94e"
        },
        "item": {
          "id": "706277ac-b28a-4797-a8c3-01379734cd0f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c178c02e-69ae-471a-9055-45b6441e4a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8624237-d1f2-4c04-ba7d-5593ebcc58a0",
        "cursor": {
          "ref": "bdbdd9bb-32e8-4164-89c5-29a93134b014",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bebcc55f-c505-4036-979f-e9afad3828ed"
        },
        "item": {
          "id": "f8624237-d1f2-4c04-ba7d-5593ebcc58a0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "80ddb657-f12d-4576-9dda-2a7e48e44ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565fd007-38eb-40ae-b1dd-e84f77990041",
        "cursor": {
          "ref": "88c17162-2033-4c4f-9ebb-73f6d1893679",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ced8d130-760b-447d-afa8-bb4adc6967d3"
        },
        "item": {
          "id": "565fd007-38eb-40ae-b1dd-e84f77990041",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d87b72d7-8799-41c3-9226-4067ae9a900e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7b17c1-cc78-4e40-a53e-f02d22f9814d",
        "cursor": {
          "ref": "2fce73e8-55fa-42a9-932e-a6e4a2358589",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bf9e55c1-2c8c-414c-9638-7f9eebdd15fb"
        },
        "item": {
          "id": "4a7b17c1-cc78-4e40-a53e-f02d22f9814d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5f997938-861c-4a92-8bff-2e7a826a47ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad14c22-3e21-42fa-ab1d-bd3d3a4fcac1",
        "cursor": {
          "ref": "4bb913d8-b335-4829-9f1c-b62e2ecaaa5a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1665e90e-0e87-475c-bcc7-5956eda9a13f"
        },
        "item": {
          "id": "1ad14c22-3e21-42fa-ab1d-bd3d3a4fcac1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3127a6dc-3ba2-458e-a6fe-84e9518876f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a7b3e9-9c62-4bd0-95c7-9854a6d76df5",
        "cursor": {
          "ref": "ce06b7f5-b8d6-447b-9de5-a93c993b6aa8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7ba73ef8-59da-4ae5-823f-1d9b2e637cf6"
        },
        "item": {
          "id": "75a7b3e9-9c62-4bd0-95c7-9854a6d76df5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d30d685-2e11-4a03-ad55-2a19e87d912f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaf1cd2-ba49-497d-93cb-1d57f98f641f",
        "cursor": {
          "ref": "ce282c41-0b5c-42e7-bb23-34570a1fc7f2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ad9dbda0-9769-4de0-9e6d-0ba40576af34"
        },
        "item": {
          "id": "fbaf1cd2-ba49-497d-93cb-1d57f98f641f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "147327b2-1bd7-4f6c-99c0-cc1295ce0c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6db4c87d-4a1c-4745-879e-450260d28e51",
        "cursor": {
          "ref": "5a6b7d6b-3282-4789-9c26-b42eeb97e30a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0c11ed75-2299-4687-9e20-1b549a160c78"
        },
        "item": {
          "id": "6db4c87d-4a1c-4745-879e-450260d28e51",
          "name": "credentials_issue"
        },
        "response": {
          "id": "16cf743d-0979-4a68-8a3e-28ba441b31e1",
          "status": "Created",
          "code": 201,
          "responseTime": 27149,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be6020a-2dd9-4ed3-bc7f-56326f46a733",
        "cursor": {
          "ref": "44157e2d-0c27-4c80-ad1e-b08028458402",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8ccc410c-439f-46d3-bc77-4c76826106a3"
        },
        "item": {
          "id": "1be6020a-2dd9-4ed3-bc7f-56326f46a733",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8f8f8d83-bb63-48d2-b4a3-ceacb28c8c45",
          "status": "Created",
          "code": 201,
          "responseTime": 26924,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "89857b18-7ecd-421f-9ee5-0f74b8d92b22",
        "cursor": {
          "ref": "586bbba3-4c4f-451f-9c36-63b12e7915d1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2597728c-6150-4ca7-b7af-4afe2479a381"
        },
        "item": {
          "id": "89857b18-7ecd-421f-9ee5-0f74b8d92b22",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "82bdc9d1-e75f-4eca-b2e6-a7a70ea77d93",
          "status": "Created",
          "code": 201,
          "responseTime": 26362,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a993f47-c31f-4e08-bf66-bdac9f179192",
        "cursor": {
          "ref": "c511633a-4569-44b1-8d4d-b7cd7285fbb5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5848fe4d-4e5b-4c03-a2d3-a90fae5db3b7"
        },
        "item": {
          "id": "3a993f47-c31f-4e08-bf66-bdac9f179192",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1278c3d5-5186-4359-baab-96e21dfef92c",
          "status": "Created",
          "code": 201,
          "responseTime": 26075,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a808399-5dd0-41e3-8fcc-bf83836fcdd7",
        "cursor": {
          "ref": "18c7d0c8-27fc-4af2-a501-0def9e227c6c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e8cde979-7c5c-4699-bc88-14725ceb458c"
        },
        "item": {
          "id": "7a808399-5dd0-41e3-8fcc-bf83836fcdd7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "de7e8b6b-5376-4462-96b6-403eba9dc0fc",
          "status": "Created",
          "code": 201,
          "responseTime": 25970,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-10-06T00:52:59Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-10-06T00:52:59Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9b0c6ac2-be92-4ad0-8b4f-fc9448849b5d",
        "cursor": {
          "ref": "5d6d4b68-b9ab-4fbb-9bb4-9c786c24719f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9e014971-8260-4584-9113-1e6c39d8bd56"
        },
        "item": {
          "id": "9b0c6ac2-be92-4ad0-8b4f-fc9448849b5d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d9f7817b-1a0e-4a9d-96c9-1af84ed05a61",
          "status": "Created",
          "code": 201,
          "responseTime": 26031,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a44c45-4c97-448d-9d9e-3e543c3e4089",
        "cursor": {
          "ref": "84714418-c467-47f1-92fc-a0e9204cd184",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0b95a69b-b111-4729-901b-3d26c4c00dd6"
        },
        "item": {
          "id": "d3a44c45-4c97-448d-9d9e-3e543c3e4089",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3512f292-4c0e-42c4-8e79-2d9e2617068c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461a1be7-b918-4f7a-88a0-350574550188",
        "cursor": {
          "ref": "d9886084-c112-4bbf-80b9-4969670d5d02",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6f8653bf-09cc-4dc8-83ca-87c53285db4a"
        },
        "item": {
          "id": "461a1be7-b918-4f7a-88a0-350574550188",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "abb082f8-2047-490b-9ba6-f18ffe2820bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d177273-0eae-41d8-a36c-4124049c6c42",
        "cursor": {
          "ref": "6cfa2c6b-b2e0-4689-853c-fd27eacf767c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "86b34775-ec18-4061-b0de-f4995cc457ae"
        },
        "item": {
          "id": "8d177273-0eae-41d8-a36c-4124049c6c42",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d38fa050-e36f-4827-96ba-379ea5e76dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f6f571-c753-467d-9be1-d0dc19634978",
        "cursor": {
          "ref": "44d0c129-ff7f-4bcb-84b2-ed85aa22facd",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dc7cc0c7-d35b-4d8e-bf5c-ccb1f8e37099"
        },
        "item": {
          "id": "c2f6f571-c753-467d-9be1-d0dc19634978",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "307b5c8f-8cb6-4cc4-8993-e69b73064c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a749b03-cbe4-490e-88cd-8100aef1d406",
        "cursor": {
          "ref": "18a7625e-6296-4dbb-954d-61b73793d78b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2f11aa9f-fa45-4042-a750-d45e1c199508"
        },
        "item": {
          "id": "1a749b03-cbe4-490e-88cd-8100aef1d406",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "88278860-4527-4ec9-87d8-797fce4f269d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec140f7a-e108-4439-9dc7-d57b4452b8c0",
        "cursor": {
          "ref": "d5c48043-63a1-4db1-ab65-ded858db15e2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f1efb520-b0f5-4476-8058-f8d924cef488"
        },
        "item": {
          "id": "ec140f7a-e108-4439-9dc7-d57b4452b8c0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "66c75752-fe57-4ec7-b31e-24566c1a023f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47af86c-a29a-4c78-b7b9-edfee838a6bb",
        "cursor": {
          "ref": "c57c5dae-f559-41bf-8996-ae4c841de9d1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "62ee1f2f-15cf-4842-a7d9-61bb15354879"
        },
        "item": {
          "id": "b47af86c-a29a-4c78-b7b9-edfee838a6bb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1869bdff-f837-483e-bd14-896dd7e06b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea35dd4d-4310-4353-b8b9-2675adfbf260",
        "cursor": {
          "ref": "a3fe8372-c21a-4a6a-9e46-6318461b0cfd",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "aeb19a10-1071-42d9-94ae-41a1c1d73428"
        },
        "item": {
          "id": "ea35dd4d-4310-4353-b8b9-2675adfbf260",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7828dc9c-0c70-4766-b2e8-e441e0ab3e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407b7394-c6c5-4591-92f6-07fee0e630e4",
        "cursor": {
          "ref": "6d9ecf59-08c1-4dc0-80f2-c4b51835a1ca",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e6005408-0d94-4535-bae4-138809553238"
        },
        "item": {
          "id": "407b7394-c6c5-4591-92f6-07fee0e630e4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "85f956fc-3ce2-4752-93b2-afebd9a7e58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef31d18e-5ee9-4afb-a66e-78d4a02f03c2",
        "cursor": {
          "ref": "9430b827-9317-4dad-a0e3-d7cf764c2d18",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b824733f-5bf0-4f2c-9c20-2bd4503c9cce"
        },
        "item": {
          "id": "ef31d18e-5ee9-4afb-a66e-78d4a02f03c2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f8bf15d8-a6c1-403b-81d6-ce2d169d7ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dd2ff2-b361-448c-9edb-1bae5542ab28",
        "cursor": {
          "ref": "237225af-97ee-45f1-903e-eea451ecb591",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "62a5e8cc-eb8e-48e8-9b6b-d2b7e3eedf2b"
        },
        "item": {
          "id": "d6dd2ff2-b361-448c-9edb-1bae5542ab28",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "473ba867-8d89-4465-bc18-9d78cc3f895e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bcc45e-810f-4666-ac66-97a6f4474108",
        "cursor": {
          "ref": "3667dbcc-7650-47c9-bfed-68339459fce7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9576e2d3-48f0-4dd4-9b9c-5b6dc0bcca66"
        },
        "item": {
          "id": "60bcc45e-810f-4666-ac66-97a6f4474108",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6949a8d1-417b-4dce-83d2-799c8565fe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074cdbc4-11f2-4a74-8084-f9509049e21e",
        "cursor": {
          "ref": "f7db1b91-170f-47e3-99c2-4e2fb08c3ed0",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e16661a1-be62-4caf-81c9-4ef6ca4b9bf8"
        },
        "item": {
          "id": "074cdbc4-11f2-4a74-8084-f9509049e21e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6e471ad0-cc3b-4867-b2b8-610903c3d3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3bb70a-40f2-40fc-a39f-a08b56559ea9",
        "cursor": {
          "ref": "3c4785e5-740c-49ed-92df-c5b760d82b1c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "715d4883-6f83-4958-9f81-f02e0cbf92f4"
        },
        "item": {
          "id": "2a3bb70a-40f2-40fc-a39f-a08b56559ea9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a55a51c8-df61-45b8-b51d-10c32e46df78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1145075a-5f32-4729-989b-adecf1626d35",
        "cursor": {
          "ref": "90a5d814-543b-419c-8480-03aa4bab0a4a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a68abd65-463f-4704-a9aa-32cf5d1c42ec"
        },
        "item": {
          "id": "1145075a-5f32-4729-989b-adecf1626d35",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d853bf83-5ef4-456b-92ff-0e7ef44e08a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ce9ae5-0fce-476d-9f1f-eec09a2e75f3",
        "cursor": {
          "ref": "465e1f0e-469e-479a-81a8-9c5e53a9e329",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6ab26f94-b3c5-48c2-bdac-c112117ac601"
        },
        "item": {
          "id": "72ce9ae5-0fce-476d-9f1f-eec09a2e75f3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "17d3d3cc-ed05-495a-87ad-87f524a6f459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cf35ae-2b69-4654-ae1a-380b17fa6044",
        "cursor": {
          "ref": "a4baa1d0-d0bf-4848-b961-892336d32ffd",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "772ca747-112a-4819-9710-42eaed338ec5"
        },
        "item": {
          "id": "a4cf35ae-2b69-4654-ae1a-380b17fa6044",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8217df84-3580-4c75-9d5f-321c71ebac85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a40021a-ccc2-4dd1-ae99-177dbbb1a448",
        "cursor": {
          "ref": "d28127d0-8cf9-4ebc-bc0f-a1ebf4094b8b",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "78a321ce-7a32-4e33-8a6a-ae76b35d2b83"
        },
        "item": {
          "id": "2a40021a-ccc2-4dd1-ae99-177dbbb1a448",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7054751a-a9e0-43c2-b217-b82b0f5b2c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41f1963-4a7d-4f65-b406-e075707fb17c",
        "cursor": {
          "ref": "ce2ce1b7-57cf-4ac9-a019-394c395443a3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6323f9d6-5e9e-45af-9ba0-c49e3c7a014a"
        },
        "item": {
          "id": "f41f1963-4a7d-4f65-b406-e075707fb17c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce71a11a-96f8-49e6-a616-3f8173f23328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0bee00-a4f8-41c6-95c7-92d9557cd67b",
        "cursor": {
          "ref": "b72508c1-fef6-4d0c-bc72-4135d011a511",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4c32f68f-ad83-44d1-a155-d13a1473bf55"
        },
        "item": {
          "id": "4c0bee00-a4f8-41c6-95c7-92d9557cd67b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0d9ce4b6-db6c-47d2-9507-5c68a78deec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38ca656-3cc0-4a73-b318-bfde65241f75",
        "cursor": {
          "ref": "7ea478d1-53dd-4aad-9e6e-bbfcf8b3a9ab",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "94ec57d0-785b-4a7c-ab9b-d13a69363549"
        },
        "item": {
          "id": "a38ca656-3cc0-4a73-b318-bfde65241f75",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7fa94b00-4b21-437b-919b-850ae5f5d698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e62ce61-db3e-48d6-92b9-7a6b39b7b957",
        "cursor": {
          "ref": "26578d27-e4cb-4e95-8a15-782d49b2a011",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "42dfa0d6-ff72-4b3d-8a2e-e5249fdffd47"
        },
        "item": {
          "id": "3e62ce61-db3e-48d6-92b9-7a6b39b7b957",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "14bd25a3-9e51-4e5f-ade3-8b11aec5dbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd41ac9d-77f8-474c-82a2-8fa56ab5c0d4",
        "cursor": {
          "ref": "03727490-0307-43cd-8d64-f33daa4fdd82",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "42c22fc3-b4f3-4213-9ab3-82548b1615a4"
        },
        "item": {
          "id": "bd41ac9d-77f8-474c-82a2-8fa56ab5c0d4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "380cc7f6-ff4e-4c1c-b33f-b29bb415ddac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abf5bf1-76db-4a9a-afe7-6472ec01eaf4",
        "cursor": {
          "ref": "18f37a38-7e64-4102-ac53-ebe3f6e75440",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f2108c7b-ee16-4692-b966-9f48a0774a23"
        },
        "item": {
          "id": "1abf5bf1-76db-4a9a-afe7-6472ec01eaf4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5b5928ad-7aa0-4482-bf68-dd2dbe90b788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eba8b9e-529e-4a62-99a1-ea79ab9e159b",
        "cursor": {
          "ref": "017caf02-faf5-43ee-9270-d8e0ea51725f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "51905e70-46ea-4e5e-aedf-c7f275062e19"
        },
        "item": {
          "id": "1eba8b9e-529e-4a62-99a1-ea79ab9e159b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ad5ca9bc-a1b6-4505-893c-eb056da39d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57610ea1-a334-4255-a77a-d781022bbf77",
        "cursor": {
          "ref": "04db6290-2c16-4e5e-bca5-17eb6003504c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "91ebb783-382e-4f70-8a58-55f457761c40"
        },
        "item": {
          "id": "57610ea1-a334-4255-a77a-d781022bbf77",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "99b69c76-393b-462e-8964-6371f1e5d478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2592fa-4eae-4a54-8785-8c48b49118ff",
        "cursor": {
          "ref": "f35a102f-e0c6-4aa2-a6a1-d0f657463439",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "afbfb2c3-71f4-4b46-b089-1517cc49ac0f"
        },
        "item": {
          "id": "3f2592fa-4eae-4a54-8785-8c48b49118ff",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b17da652-862b-4d06-a5e3-3ee15bb7c695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425d2961-e595-4f5e-b731-b62b20e787a3",
        "cursor": {
          "ref": "2a97072b-91b3-42e5-a10e-5a4569d52c2d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "31ee7ab1-f4e3-442a-87cb-af9d35a05b94"
        },
        "item": {
          "id": "425d2961-e595-4f5e-b731-b62b20e787a3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2a873586-8376-4b66-8cf6-835642a6c21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c4911e-9faa-402c-8c28-2d47aa056d93",
        "cursor": {
          "ref": "594d3eb3-dfc0-4ed1-82ee-951d1b3de1c0",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4bbf2d92-9b16-483f-a695-bc4f5d87202a"
        },
        "item": {
          "id": "78c4911e-9faa-402c-8c28-2d47aa056d93",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2b814de6-0d9e-4fbb-a304-044a73b422a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6104a470-1cb9-4cda-b40a-151540199ad4",
        "cursor": {
          "ref": "7aa23056-b47e-46f8-8b99-7c15a1415f90",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "17fd374c-9e51-4a0c-afca-3f506414190b"
        },
        "item": {
          "id": "6104a470-1cb9-4cda-b40a-151540199ad4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "754760b6-b3c7-461a-b3ec-9b07b547b966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07439df2-7816-49d6-bbe9-68cf44eb7e0e",
        "cursor": {
          "ref": "1c597474-928d-4d81-802c-dcfa6af954d7",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "13a64e5d-041b-412e-8701-adc0edc9ac4c"
        },
        "item": {
          "id": "07439df2-7816-49d6-bbe9-68cf44eb7e0e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "80812bca-af84-4e5e-a59e-e21558be6611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666052d7-ee24-4ad6-84d4-830a60769ff2",
        "cursor": {
          "ref": "11ff4fbc-a6ab-4653-b6d6-10cf57d52a8f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9c044aba-e108-4c8e-b273-c08ff90887b2"
        },
        "item": {
          "id": "666052d7-ee24-4ad6-84d4-830a60769ff2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a152c357-73a3-49b4-95f1-d322e068fe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235267d6-9261-427a-bba2-2a59394b7590",
        "cursor": {
          "ref": "4174168b-eeec-49eb-aa92-1faf24e5266c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fb4874ca-e91b-4f17-a17e-d4ff68e0db9d"
        },
        "item": {
          "id": "235267d6-9261-427a-bba2-2a59394b7590",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bf015483-9153-4dae-b177-482115a5b303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95671413-1285-4764-a117-a960d4bf95e3",
        "cursor": {
          "ref": "962afc74-f344-4317-ab2f-ef8e9c252a1f",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b92563a8-7292-45ad-ab52-e4074f6db0c4"
        },
        "item": {
          "id": "95671413-1285-4764-a117-a960d4bf95e3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "04b147ee-b6b5-44c4-94ed-3ea3369d0369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bd14f3-3d08-43f9-ab1b-9ee6511f6f89",
        "cursor": {
          "ref": "4d27948b-c2e8-418c-b1a0-290945aae636",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "02d00e5e-bdba-435a-a130-7e0de19fddce"
        },
        "item": {
          "id": "c4bd14f3-3d08-43f9-ab1b-9ee6511f6f89",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c8ede1a2-7566-4e17-9000-e0887eb17569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cbd1be-53e4-4abd-9637-002697e57583",
        "cursor": {
          "ref": "3dabef04-a161-4829-aa7b-fe8f9e62862c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "42b9422b-afa5-426d-b36b-851373035081"
        },
        "item": {
          "id": "a5cbd1be-53e4-4abd-9637-002697e57583",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3fc7d7e1-c15d-4f66-894b-ddb1526d1620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f5afa5-9b72-4085-ba20-9ee4c0c5363d",
        "cursor": {
          "ref": "8cf9754d-713f-4cf2-b5cb-eb64af0bf4d0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0b4bbf19-fc9e-401c-8cfc-3718a70d784f"
        },
        "item": {
          "id": "05f5afa5-9b72-4085-ba20-9ee4c0c5363d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e811c1f1-2a47-4fcb-8c4a-b4f3c2cf7aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee0c7a9-7fa7-4696-8b17-dccbdc18685e",
        "cursor": {
          "ref": "d4a658a6-cf4b-4cf1-96b3-e7cd5c55e03c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "96e501a1-40f8-4d9b-9f7c-e51d54ce870f"
        },
        "item": {
          "id": "dee0c7a9-7fa7-4696-8b17-dccbdc18685e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ea221452-e9cf-454b-ab45-593fc07f4f8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccac1edf-3459-4a0f-8d4b-a3156028a354",
        "cursor": {
          "ref": "ca0f73f9-a676-46dd-b3bc-0a7333d075b9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6ad404b5-22f5-458e-9c3b-390be95e467a"
        },
        "item": {
          "id": "ccac1edf-3459-4a0f-8d4b-a3156028a354",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "44b459e5-1ee4-4216-aa17-c1e9ac3a2bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96112e73-b3a2-407d-87db-59688cb6fe45",
        "cursor": {
          "ref": "0ba10f32-b74c-468e-a01e-ff2b1fdf85e4",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1c13ef77-069f-40b2-879e-7be13a2fcd8a"
        },
        "item": {
          "id": "96112e73-b3a2-407d-87db-59688cb6fe45",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a28e8af0-8304-4ae4-b152-45595a4ece8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c78200-b494-4754-a594-70de8742b920",
        "cursor": {
          "ref": "28e3d683-94bb-452c-ad88-5176c327db06",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b1f83695-bcc0-4579-bf50-6388b7324d69"
        },
        "item": {
          "id": "c3c78200-b494-4754-a594-70de8742b920",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8deb762b-84a9-4a16-a944-998b88cbe7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dc5d41-2242-4613-b3e9-57e1de891477",
        "cursor": {
          "ref": "17958f3b-0d31-4bf5-8b8f-853ae739b35c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a3a59180-a636-4539-aff2-0a58ed39b691"
        },
        "item": {
          "id": "08dc5d41-2242-4613-b3e9-57e1de891477",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "01c01fd5-1a9e-41ee-9640-240baabbd255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbe678f-c095-491e-88b3-07f8ec19fdc9",
        "cursor": {
          "ref": "6cc06da6-131c-4a7e-84f8-a6dcdf745191",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a310c223-509a-408a-93df-2282f302abc6"
        },
        "item": {
          "id": "9cbe678f-c095-491e-88b3-07f8ec19fdc9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d43d5e03-e0bc-4962-8531-36c52a92cb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfb193e-8ecb-40ba-abdc-984d5ff39a32",
        "cursor": {
          "ref": "b360c0cb-b974-46fb-8abd-401406bf4428",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2da576ad-304f-4e9b-9e14-1d7e9ea60033"
        },
        "item": {
          "id": "6bfb193e-8ecb-40ba-abdc-984d5ff39a32",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "85f0f76b-5aa6-4110-8447-46c996ba3270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25455bd-58a3-4640-9656-ad57f13431e2",
        "cursor": {
          "ref": "e28cb0b2-5700-4ed2-9379-84f5d00cc1a5",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d846a6c6-c328-49b7-9e50-447eccce6638"
        },
        "item": {
          "id": "d25455bd-58a3-4640-9656-ad57f13431e2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e05bc45a-7585-4d97-a04f-989e5088baaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b410f7aa-e6f4-41af-be79-a0fb20a3d288",
        "cursor": {
          "ref": "26a71fda-84d7-47fa-9fb3-49a7273a0eb0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6eda999c-47f1-4804-8d06-1658848cdec5"
        },
        "item": {
          "id": "b410f7aa-e6f4-41af-be79-a0fb20a3d288",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "db006b74-944a-4563-991f-013972e288de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07dcedd-b605-4361-b441-fb40f233b89f",
        "cursor": {
          "ref": "4db042da-f6ca-4821-bbe0-8b9a8a820ec8",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6e52b3b8-c641-4995-a90d-0af4cc15400f"
        },
        "item": {
          "id": "c07dcedd-b605-4361-b441-fb40f233b89f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "17eb9649-cb0d-4a3f-8bc4-567db69dda19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a44c936-4dfe-4ce1-ba2b-df72f1f40003",
        "cursor": {
          "ref": "3424729a-debb-499c-be94-19bb9fc69d0f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "10b70669-d778-4538-a6bc-6a8e91e9bcd5"
        },
        "item": {
          "id": "5a44c936-4dfe-4ce1-ba2b-df72f1f40003",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9ed09189-c378-45ae-90d2-86ff9e733974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d615d7-a0ac-499e-a4ff-378d70af7f52",
        "cursor": {
          "ref": "df1d8c9c-e7ee-4342-a256-6982dee4f817",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a27bbe30-f7f9-486a-b9e6-40fcece8d493"
        },
        "item": {
          "id": "b9d615d7-a0ac-499e-a4ff-378d70af7f52",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cf0bf6cd-fdf2-4709-a8c8-ddb875caec9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad74153-9094-4f84-afae-7976b330abea",
        "cursor": {
          "ref": "e6e6dabf-0742-4993-be3d-e36d3c7fc12a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fd114acb-84db-4b7e-8b1d-30f9dd072eab"
        },
        "item": {
          "id": "bad74153-9094-4f84-afae-7976b330abea",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f0350d77-3db2-4403-ab27-9071922dc137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106088c9-1583-43c4-8536-151c6fa0eada",
        "cursor": {
          "ref": "cd173522-e406-4a60-b25d-226a95acda13",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "701df715-869c-49d2-bc48-55e41f57a07b"
        },
        "item": {
          "id": "106088c9-1583-43c4-8536-151c6fa0eada",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "18ff079a-c6d9-48f6-9a90-68b53c181fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5a70c4-b5c2-4717-80b3-c3229fde30a3",
        "cursor": {
          "ref": "bd2bc1b2-58f3-4d14-a278-422c8a75e150",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d0ed7495-577b-4431-bb85-7a3186f09949"
        },
        "item": {
          "id": "fc5a70c4-b5c2-4717-80b3-c3229fde30a3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fe22022a-686a-44cf-b4be-d3bcf8d84852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dd1d1f-c228-423b-b905-b2b35fa26e92",
        "cursor": {
          "ref": "f6bf970f-15ca-4db4-aabb-5594a484ebc6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2c285ccb-b111-4f7b-91c8-86a9f4a4da2a"
        },
        "item": {
          "id": "44dd1d1f-c228-423b-b905-b2b35fa26e92",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "898d002f-a750-4bd5-8e9c-9939e12e5a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8d9308-b8ce-45dd-a852-5b1b79573742",
        "cursor": {
          "ref": "a7b9d873-bf83-4a58-836b-19b3bba0f7d9",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "951423a0-e598-40d1-ab55-076575d52781"
        },
        "item": {
          "id": "ea8d9308-b8ce-45dd-a852-5b1b79573742",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e26035a3-8d17-4579-afd5-c37c78f266b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da88c512-bbb3-4c35-bae0-1287dda40945",
        "cursor": {
          "ref": "4214c8af-72a4-453b-be07-3a1f569a28c4",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "94864e01-8d44-47e5-8ef8-d2cada05e935"
        },
        "item": {
          "id": "da88c512-bbb3-4c35-bae0-1287dda40945",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1829aec3-a5f3-4f25-ac6e-03ceecd609e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3972c9c2-973b-4c46-9d56-4b3d9f28649e",
        "cursor": {
          "ref": "09a77b4d-3a6f-40b1-b52a-61e34ee6467d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aa4ceabc-b7fc-4b59-b98c-0f57ac66d8e6"
        },
        "item": {
          "id": "3972c9c2-973b-4c46-9d56-4b3d9f28649e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6c55dfd4-de15-41f6-934f-b2719807820f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcefcb1-767b-4d6c-9fe9-d72432a98de9",
        "cursor": {
          "ref": "ee5a0be4-0e66-4446-a5c5-b634ecff28e1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1f6faeed-3566-4db6-be59-ec4e3e09b336"
        },
        "item": {
          "id": "7dcefcb1-767b-4d6c-9fe9-d72432a98de9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9a4054e9-393a-4781-85d1-3b5b0ea2d204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba52be64-b6d1-49da-a46b-bc47e4f4cb6a",
        "cursor": {
          "ref": "906a0595-4709-4d53-a696-317dfbdcde50",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9eb2269e-e3c3-4650-9158-f7b5121593de"
        },
        "item": {
          "id": "ba52be64-b6d1-49da-a46b-bc47e4f4cb6a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9ecb4734-27f1-46a0-bf90-f64b1e8f430b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c32ddf1-78f0-4fcf-977b-e011b9b058c5",
        "cursor": {
          "ref": "616e8cbf-5374-4f19-9851-ababb063f687",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b9287a47-0ef6-40fc-94be-7f2dd73ace35"
        },
        "item": {
          "id": "7c32ddf1-78f0-4fcf-977b-e011b9b058c5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0e5d95e1-300b-40eb-8ca5-65a551240ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5b53ec-4935-4db3-a08e-d34cd023248d",
        "cursor": {
          "ref": "3f79e8af-49a7-4370-b8bf-1acfd7ac0c6f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dbf77b6c-4316-4c5a-af52-2d19a2b26848"
        },
        "item": {
          "id": "0a5b53ec-4935-4db3-a08e-d34cd023248d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cca40603-c911-439d-96bc-ba820c6a4288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0945735a-50c9-4fb5-943e-437556231bdc",
        "cursor": {
          "ref": "3cda5d2d-789d-46f7-b820-7b0ea701215e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d6a9f056-72f2-445b-a185-9c54f847cbd9"
        },
        "item": {
          "id": "0945735a-50c9-4fb5-943e-437556231bdc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "463c0047-c8b8-4b71-a466-26391f819753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfd5e06-6733-43b9-8f25-c5dc772142c9",
        "cursor": {
          "ref": "4c434664-3c05-45de-92de-c7effd9bc146",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "62b0691f-86e4-446c-a571-3650e4551d05"
        },
        "item": {
          "id": "3bfd5e06-6733-43b9-8f25-c5dc772142c9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ad438785-1ce7-449f-b71c-533328d9c40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e527ebc-3b39-4351-866b-ac98d982ad84",
        "cursor": {
          "ref": "db76454b-06fe-41c4-9ea6-2652b1704bc9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "65650c1a-9ffe-4969-8c2f-8574c99b358f"
        },
        "item": {
          "id": "5e527ebc-3b39-4351-866b-ac98d982ad84",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4b84d136-9a67-4f25-a1c2-86e8b472589a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4bd693-8669-4a5b-91d1-46ebec99d2ec",
        "cursor": {
          "ref": "62a7772b-ea3a-4b6c-8092-a9d18ea11987",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fe1fd397-e209-4a96-aa06-f1712c23458d"
        },
        "item": {
          "id": "1e4bd693-8669-4a5b-91d1-46ebec99d2ec",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0c2d83c4-da6b-4f27-98c3-bc31fd989095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3063899-2ed1-43de-9446-490aaadcc073",
        "cursor": {
          "ref": "9041f3f5-33c8-4d22-9475-423fef7f8ee7",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1e90ebad-c87c-43f9-b6f8-ef3ff9a2a249"
        },
        "item": {
          "id": "e3063899-2ed1-43de-9446-490aaadcc073",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8d9c0a47-a32b-401a-9b16-223904861520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17711a13-efca-4480-92a9-781f7773af44",
        "cursor": {
          "ref": "6784e1ad-3fd9-4c62-828b-59181eecc7b2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "37887cad-f489-4207-97ec-67bd29cde896"
        },
        "item": {
          "id": "17711a13-efca-4480-92a9-781f7773af44",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "407aa1cb-948a-4dd1-b69d-208e11208706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa9f53f-c4a2-427a-b053-dff26a383858",
        "cursor": {
          "ref": "cc61bec9-e3c3-47df-9bdf-2d1639f6e71a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ede104e7-df96-455d-9fc4-7bfb1a3954d0"
        },
        "item": {
          "id": "dfa9f53f-c4a2-427a-b053-dff26a383858",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9547e7ab-99a7-4fdc-9101-8aa559a71906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6da4b1-a53b-49c4-9696-183c64bb4ee1",
        "cursor": {
          "ref": "a270a876-76cd-4ff9-8cf4-f4d621ceb6a3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7d6265c2-9ed3-4b9e-b30f-c1eed751f0c0"
        },
        "item": {
          "id": "3b6da4b1-a53b-49c4-9696-183c64bb4ee1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7ecdddac-cea0-408e-bcf3-a12124bd7b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b468af-b25a-4166-b398-24423356bf40",
        "cursor": {
          "ref": "7d5a3a59-58e5-47a7-b05d-a54bbfa78ce5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e953ea7c-22cf-46e4-8399-9258e8de2d6f"
        },
        "item": {
          "id": "10b468af-b25a-4166-b398-24423356bf40",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1e35262e-ec2e-49ed-a0e1-3926fe74a88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2850ecf3-f5ed-4721-8389-2deb9bbf8ebd",
        "cursor": {
          "ref": "7292f286-5c36-492a-846d-7942176eb244",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "42990f21-25df-4728-93f6-42cc1321de2d"
        },
        "item": {
          "id": "2850ecf3-f5ed-4721-8389-2deb9bbf8ebd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8a6bb84d-ef1d-4b86-bea2-e2f3ba05b036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5a318a-c805-45d7-8673-217066a78bf5",
        "cursor": {
          "ref": "4f8076f2-ee7b-4ce7-85ac-e8954457c0bf",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e2968cad-eb1d-4016-8d41-bda0cd63b412"
        },
        "item": {
          "id": "6d5a318a-c805-45d7-8673-217066a78bf5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8c6acce9-1f61-4750-8a1f-1141ca1e4c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139c7ab9-3a40-4e95-b6be-4627ca0bd071",
        "cursor": {
          "ref": "0a87c86f-7c3d-4972-ad25-b7cc41f30165",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6858b3f4-6175-4991-94ce-eb976343e0da"
        },
        "item": {
          "id": "139c7ab9-3a40-4e95-b6be-4627ca0bd071",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8124c806-ffc2-4296-ab64-55e9f3a79365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde0ad79-65f0-430c-a98d-c4d2f4348d99",
        "cursor": {
          "ref": "127db3f6-3204-4ca1-8b82-a92ceaba5b48",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "85e645a5-8cda-42b6-8947-e93eccc25e20"
        },
        "item": {
          "id": "fde0ad79-65f0-430c-a98d-c4d2f4348d99",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "380788a3-c09b-40c9-9faa-4f371a7e824f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72a41b8-b178-4f67-8fb6-0dabbefaf148",
        "cursor": {
          "ref": "903c0879-0fbd-4950-ac72-59e67185265a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d52c2bdb-687e-40bf-a0e1-0a34bdc50412"
        },
        "item": {
          "id": "c72a41b8-b178-4f67-8fb6-0dabbefaf148",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "797e8e02-3e21-49b9-abd1-aa2e914cea04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c990e4a3-ced9-4ddb-9177-2a9aef3cadd6",
        "cursor": {
          "ref": "0950dfef-0ca8-47b1-9866-f9993d09523a",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f248730c-4bb9-48d9-a27d-e2ecbfb8e4e7"
        },
        "item": {
          "id": "c990e4a3-ced9-4ddb-9177-2a9aef3cadd6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "478147c2-1b12-4185-809e-3f792b643853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5624390b-7765-4e7d-af60-7067f085dac8",
        "cursor": {
          "ref": "30d3a786-098c-413b-84ab-f79410284d30",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d3c6275d-4911-42b1-867e-df9071123ecb"
        },
        "item": {
          "id": "5624390b-7765-4e7d-af60-7067f085dac8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8ba2ba25-f671-4bfe-abdb-6f38b9bfd77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10628f90-ee62-4806-b2b8-92b669a19bb5",
        "cursor": {
          "ref": "9976da20-d4a8-43c4-a5aa-b077e2243b55",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1cc1c2b3-ec56-42aa-ae75-eef3ee226e53"
        },
        "item": {
          "id": "10628f90-ee62-4806-b2b8-92b669a19bb5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8ec1cc70-17ef-4635-8db9-b687b3cfed9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fd00de-9d06-4b90-971c-e9899471c1a3",
        "cursor": {
          "ref": "71095acb-62b1-42f6-bfd4-c45782ca2e65",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7df24f71-4de2-4f3e-814b-562c84776716"
        },
        "item": {
          "id": "85fd00de-9d06-4b90-971c-e9899471c1a3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7c4f58b6-4895-484d-b74e-d087822fe5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef864b0-7258-4c6b-be18-fa20c5f2d29c",
        "cursor": {
          "ref": "9c70316d-3688-4b3f-b2ce-f860edf7209f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "875ac2ed-0f4a-44c5-b4d1-b4ffa4f1ceee"
        },
        "item": {
          "id": "1ef864b0-7258-4c6b-be18-fa20c5f2d29c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1f41849d-b7be-45bb-aec9-ae58b8570f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228a5c1c-7868-4f97-b256-c27b31233ab2",
        "cursor": {
          "ref": "a03ae393-706d-4905-a4c8-d9e03c045f8e",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4ee1f7df-9371-4626-97cc-64ffc3263c4e"
        },
        "item": {
          "id": "228a5c1c-7868-4f97-b256-c27b31233ab2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "97429b1c-b016-4bf0-9601-aa859ce62b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108eb053-1690-4f2e-8d30-e399c9ba778c",
        "cursor": {
          "ref": "fd8e293d-59d1-4aff-b57f-2cf29787a4c6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9393dcaa-8952-4542-8483-2f8113fdffc9"
        },
        "item": {
          "id": "108eb053-1690-4f2e-8d30-e399c9ba778c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "27b0990d-904f-4306-97bf-1a9401c3acea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c5a81c-3e98-47db-9e83-4261d99b51b9",
        "cursor": {
          "ref": "e4c6030f-fb0a-4454-96dc-e78f355edfa0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1dc432f0-1540-42bc-8c72-e1a26e3e9fd3"
        },
        "item": {
          "id": "21c5a81c-3e98-47db-9e83-4261d99b51b9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "657d6ea5-a94e-443d-8c86-331654b02a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29953253-71d1-4dcc-91be-d26cb84703c9",
        "cursor": {
          "ref": "c2cc8b5e-8bc8-49c5-88e4-c9a1421796d8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "058412d2-ff00-4b02-8eb2-42fecd61a438"
        },
        "item": {
          "id": "29953253-71d1-4dcc-91be-d26cb84703c9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4b9f99f6-84c7-487f-af2e-bab9df98e943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be451a07-d5b2-4f3f-8920-ef24449ead13",
        "cursor": {
          "ref": "51e60bc6-72ba-47af-a35d-fe6689e76984",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "73389c3c-cbe5-43df-82a0-d8b34a9984e9"
        },
        "item": {
          "id": "be451a07-d5b2-4f3f-8920-ef24449ead13",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8ffa4d6c-6899-4f0c-9140-4f21159c7bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0e5f54-38bd-4529-9cdb-d67a651b15ff",
        "cursor": {
          "ref": "5ef0c958-f04b-4b06-9068-4f83526ea69e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fffeb8f2-8985-4fe2-9996-e84db84a40fe"
        },
        "item": {
          "id": "1f0e5f54-38bd-4529-9cdb-d67a651b15ff",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ea6f4b6e-09a3-4b76-bb90-44d09667c626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a056b5-9e7d-4e15-add7-cc9b1c2f5159",
        "cursor": {
          "ref": "0dee3173-5d75-4ccc-88aa-c115c393d4a7",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fbfdadb2-18ab-4748-8612-bfc4d163c700"
        },
        "item": {
          "id": "83a056b5-9e7d-4e15-add7-cc9b1c2f5159",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cf09137d-ee6c-43e6-b15c-18fced97c33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b034b39-5f23-4c52-885c-09e67c5005bd",
        "cursor": {
          "ref": "f63ebd29-47a2-4adf-9128-fbcaa68259c0",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "335c118c-601d-42eb-a75f-d9a68c70cefe"
        },
        "item": {
          "id": "9b034b39-5f23-4c52-885c-09e67c5005bd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "89f2b47f-a407-4e72-83ff-14187c62ca15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d232ee6e-eb45-4824-bd30-eb9e98c846bc",
        "cursor": {
          "ref": "472a296d-21ad-4697-afb1-abf371d70b4f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b540ea70-910e-45be-86b5-eefa5583cd49"
        },
        "item": {
          "id": "d232ee6e-eb45-4824-bd30-eb9e98c846bc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5fcc1f5e-f225-4497-bda1-bf286fbb64d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b54f58-9c04-4c5c-aade-83c090c46856",
        "cursor": {
          "ref": "c5b77795-822d-46af-b13d-7357fab1fd8b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "22a6ff47-8712-4a41-8e38-2466aae261dc"
        },
        "item": {
          "id": "f8b54f58-9c04-4c5c-aade-83c090c46856",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bc07d16f-9041-45aa-a828-33715d2a5882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0753ca93-e19c-4e21-9f57-0e17afc44fb9",
        "cursor": {
          "ref": "8d8672dd-23a2-427e-aed4-c37bbbff29a1",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7f01aa23-ca48-4f23-8301-dc9f81dac914"
        },
        "item": {
          "id": "0753ca93-e19c-4e21-9f57-0e17afc44fb9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "04b6e961-b195-4499-a572-c9f062ff1460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef68ed2-94d6-4df0-9cdc-51346c74f3c6",
        "cursor": {
          "ref": "6726080b-fe54-47d7-82b7-8dc2f893e092",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3e1ad6e6-28da-4987-bcfc-2f9c0b499e97"
        },
        "item": {
          "id": "2ef68ed2-94d6-4df0-9cdc-51346c74f3c6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4735a026-bf90-4850-a115-70280d83e3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9f46ab-c4f9-4a5b-82a7-5b914a408a08",
        "cursor": {
          "ref": "71bb0b1e-de8f-4afd-9e23-5b961995788a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8162b7f5-b581-460f-8ffe-87219c1b2fff"
        },
        "item": {
          "id": "cf9f46ab-c4f9-4a5b-82a7-5b914a408a08",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3e9c53df-4951-4539-9c49-1641e9918391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19aacbe8-b9dc-451c-9ba7-5bbdb9dded12",
        "cursor": {
          "ref": "2e9eb9ec-225d-4de5-bae8-ba5f04ebafc4",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3f7901e3-c387-4aca-8456-410cc02bdbb2"
        },
        "item": {
          "id": "19aacbe8-b9dc-451c-9ba7-5bbdb9dded12",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5d86010c-1a87-42de-9e7a-9f5aae2b0aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85708039-ea5e-4953-8fa2-504afe25edc3",
        "cursor": {
          "ref": "e05e96f9-1c87-43f3-b8d0-d98bc0b12579",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "98498518-ee9d-4d85-a181-56474b8347d2"
        },
        "item": {
          "id": "85708039-ea5e-4953-8fa2-504afe25edc3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2fe3bc12-c2c6-424c-b7c7-407779a40f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5aba25-491b-44b4-a44b-772f8a967f77",
        "cursor": {
          "ref": "495f3f2b-ba10-422a-b221-a7daf39695da",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "15851fae-584f-48f2-b39d-21f9701dbb46"
        },
        "item": {
          "id": "4e5aba25-491b-44b4-a44b-772f8a967f77",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "54243487-d028-4a20-b139-d8614a1ffc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ddad88-8831-4438-b7ea-5c7330598f89",
        "cursor": {
          "ref": "34349d9a-0b4e-4971-b703-25f7cd19be4b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b0ddbe0a-2050-4202-a6b7-b65af1523f19"
        },
        "item": {
          "id": "01ddad88-8831-4438-b7ea-5c7330598f89",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "932e26ad-05a2-4f61-8223-ab06fbc6c75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900e93ea-13cf-46b5-aed5-0cdce4d91ea0",
        "cursor": {
          "ref": "3f6d3198-b409-4320-b933-501ce68f0f01",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5655a5b4-dd7d-4578-b034-0e22f259cad1"
        },
        "item": {
          "id": "900e93ea-13cf-46b5-aed5-0cdce4d91ea0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a1c6e004-e529-4734-b4c2-0e32b877d3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da9af87-21d2-45e7-bb9a-156be102561c",
        "cursor": {
          "ref": "df230450-8518-4078-a794-14456b27b6c8",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4b1b363f-75e0-47b0-bda4-d88306416d05"
        },
        "item": {
          "id": "2da9af87-21d2-45e7-bb9a-156be102561c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ed026ddd-3da1-4af4-8e59-c79812a949a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f80bad-8dd6-4e52-97e7-ea7cb73fdfff",
        "cursor": {
          "ref": "25b17698-ae2e-47c8-bed6-d9e1dd1c192a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "97c01f7a-3fd2-4b1e-9452-d0f533741619"
        },
        "item": {
          "id": "b1f80bad-8dd6-4e52-97e7-ea7cb73fdfff",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d9d8f5bb-4765-4400-bbe1-951acfd71283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937ac9ef-0b07-4a1d-933a-2c97e3b9f5ad",
        "cursor": {
          "ref": "f62e2ddd-9348-4695-8bf4-355f8c6434f6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e551466d-78d7-4110-a802-52e8d6c912c7"
        },
        "item": {
          "id": "937ac9ef-0b07-4a1d-933a-2c97e3b9f5ad",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6007564b-34d3-4bfa-86a1-3145329b2098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbba6929-50ea-4b15-8ba2-702ef098d925",
        "cursor": {
          "ref": "6178d06c-416f-4321-b150-1c129a5c47b4",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "85d4591f-e282-4b39-847d-0c51abd9c474"
        },
        "item": {
          "id": "fbba6929-50ea-4b15-8ba2-702ef098d925",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fabccb1e-5d29-47e0-afa1-499a1ea82b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c5d249-0fa6-4aa7-a279-ce75c401e741",
        "cursor": {
          "ref": "067b3d17-5244-4400-918e-2edd3accd34b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a3ea642e-a81f-4dc3-a34c-97cf4030eeed"
        },
        "item": {
          "id": "a6c5d249-0fa6-4aa7-a279-ce75c401e741",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b9e399cc-5e83-4cb8-a0ff-11522a99ee3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9368009-74c8-4788-ac3f-83a201c3be81",
        "cursor": {
          "ref": "fea64451-bf42-4477-8682-d6f93e624ae0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "37a76bd2-7021-40fb-abef-662fee3d9c13"
        },
        "item": {
          "id": "a9368009-74c8-4788-ac3f-83a201c3be81",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d9577057-6758-428a-83c2-b3f07e0d2619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c260e8-1b06-4f6a-9856-d044c8391be7",
        "cursor": {
          "ref": "ae32fc96-1df2-41e5-81dc-c92c680690eb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6fbcda1b-41e5-42bd-bdb1-6b2b6f695a73"
        },
        "item": {
          "id": "97c260e8-1b06-4f6a-9856-d044c8391be7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "89873f63-dac0-4ecb-9539-57e4770142e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d519b6e-7422-4f10-880d-aabd5d891b17",
        "cursor": {
          "ref": "a29b702a-d07b-49d7-9caf-885f6a881e12",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d7a7c487-2fb5-4b73-9475-300a338f0eab"
        },
        "item": {
          "id": "6d519b6e-7422-4f10-880d-aabd5d891b17",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b48c521b-83f1-47c9-9637-d329a1ff75d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece90eb3-5fe3-4b64-ac66-6cffe8280e1d",
        "cursor": {
          "ref": "fce28685-cda6-4a78-bd92-bb3cd533fc09",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "50d7ee28-7a74-49b7-83d1-e1e217904b69"
        },
        "item": {
          "id": "ece90eb3-5fe3-4b64-ac66-6cffe8280e1d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d973a0a3-424e-4420-8ba1-2601e330db0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f05f8ad-6d72-475b-b939-c89aa6c1e3cd",
        "cursor": {
          "ref": "54eabaee-37a3-4d1a-a7ec-76432447df39",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "86ec54ad-4029-423f-9ade-c111d02705ae"
        },
        "item": {
          "id": "6f05f8ad-6d72-475b-b939-c89aa6c1e3cd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d7ea515d-951d-42c6-9c6a-308d749a0f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a525f0a5-5827-4829-9de6-38b0ad6849fc",
        "cursor": {
          "ref": "3d411c5e-f4be-4c99-b56d-bfe457fcbf61",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9bf11126-4be8-42c2-8dd9-5c91f2afb1fb"
        },
        "item": {
          "id": "a525f0a5-5827-4829-9de6-38b0ad6849fc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d855dc61-7054-479a-baf7-7491a78cf690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11100d72-0079-4875-a41b-dbe2a7a40867",
        "cursor": {
          "ref": "1cf1d811-2771-4293-bfb1-b774827c13fb",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5e1b5564-70e9-4f87-b253-5ac85ac603bf"
        },
        "item": {
          "id": "11100d72-0079-4875-a41b-dbe2a7a40867",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8ee13029-f553-41f5-a98d-28776e41b4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cedba5-fbc6-499e-844b-6b8f5f6ec3b8",
        "cursor": {
          "ref": "28ff6143-8442-4312-8399-49748abfb721",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bad3f387-3ed9-497e-b3d1-89b2a5f5b80f"
        },
        "item": {
          "id": "b9cedba5-fbc6-499e-844b-6b8f5f6ec3b8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7a072563-1688-4d30-a8f7-cc03cd4cebc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812fc367-511b-4694-bc2d-da8fa38c7952",
        "cursor": {
          "ref": "df1e011a-8930-4497-a666-a24428cfd028",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6845ca4a-1944-4681-b6d9-b174582b2706"
        },
        "item": {
          "id": "812fc367-511b-4694-bc2d-da8fa38c7952",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8f32471c-c645-4d4a-8097-d2dd9d0fe4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71939da9-fcf3-456d-aa71-28dfdddcf95f",
        "cursor": {
          "ref": "7af47926-4ac4-49df-8adf-a4ef2ab40c1b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8b164649-76a1-4423-bdd5-d207d2f175ce"
        },
        "item": {
          "id": "71939da9-fcf3-456d-aa71-28dfdddcf95f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "955d62fb-d5c8-422e-89e9-df687e81590a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57175ca-100f-4361-8592-7788a67cdcb6",
        "cursor": {
          "ref": "41f0c65c-0972-4099-93bc-8358e8327939",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "200e4234-f2d8-4552-b002-32d08c07b8c3"
        },
        "item": {
          "id": "d57175ca-100f-4361-8592-7788a67cdcb6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "952deea8-1e45-41d3-a2f8-aeeefa525236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3836b22-cf2a-47ac-bd5c-2f3f3ad354df",
        "cursor": {
          "ref": "787411d7-ef9b-4bcf-8d5d-a632074c1f8c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2451ecf8-9a34-41ad-aae2-4d2d87e99b24"
        },
        "item": {
          "id": "d3836b22-cf2a-47ac-bd5c-2f3f3ad354df",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "941b4e46-a534-43c8-844b-665b49dc67a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca547b3-84c9-4ede-978b-2896314f9b25",
        "cursor": {
          "ref": "56283fb2-bbb3-4ff7-969a-c266bcb92b01",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ba5bb8ea-39e5-4941-a214-a89cbce09b26"
        },
        "item": {
          "id": "0ca547b3-84c9-4ede-978b-2896314f9b25",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4cd88425-968c-4060-aab4-57eec61112cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8606cf-9707-4806-a9f0-62d273c50ae1",
        "cursor": {
          "ref": "e2f04755-dc62-4023-859b-54b7fb5e9b4b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8e9a3148-c9f0-4377-8a50-3e0c1667bf3e"
        },
        "item": {
          "id": "1f8606cf-9707-4806-a9f0-62d273c50ae1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "56070f62-f6c3-4a8a-94f4-19ca6cb51c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908ccf15-1d27-482f-9e3c-9c335efe84a4",
        "cursor": {
          "ref": "e56a89bc-4972-4a42-8745-a5970df86a1b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3c4473e6-85a3-4d0a-810e-9b9a0ec0cbf8"
        },
        "item": {
          "id": "908ccf15-1d27-482f-9e3c-9c335efe84a4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "77d3abf8-0571-4149-b9ff-ea4debb728a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dd302f-19d0-4228-b05a-4811ad7615c7",
        "cursor": {
          "ref": "fc74aaa4-45f8-4b98-a18e-f096142fe26b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3db2bfa4-dbf4-4599-8d9b-4d5adef1eac0"
        },
        "item": {
          "id": "90dd302f-19d0-4228-b05a-4811ad7615c7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9640173d-7f0d-4799-b2a6-d52d71ac952d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d2e390-3143-4458-bbaf-d969cbe70ef9",
        "cursor": {
          "ref": "297d7451-0b47-4dc1-82b0-57d16e63d85b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8c1bb54c-da20-496a-9bd4-d940706bcbaf"
        },
        "item": {
          "id": "60d2e390-3143-4458-bbaf-d969cbe70ef9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1f362ec1-84e8-4240-8d1f-0bdf73274880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac99a22f-1fc1-4b8a-ad6b-4440c5fa3e9a",
        "cursor": {
          "ref": "7ed5e1d7-133a-4489-8cf5-85299c8e7850",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "33eae225-7ba3-4444-9577-0aad2fc0ba05"
        },
        "item": {
          "id": "ac99a22f-1fc1-4b8a-ad6b-4440c5fa3e9a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "66a33f48-db66-43bf-9424-8c4c62490e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e4aa02-0746-421c-b940-09aa83237d57",
        "cursor": {
          "ref": "cebd60cc-65c2-4b96-aaf4-ada7b4f09037",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4ed97829-1cad-4116-88d7-4b18859f4eba"
        },
        "item": {
          "id": "e1e4aa02-0746-421c-b940-09aa83237d57",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "856777c3-4710-44de-9819-60e9c4ecd97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c068471b-732d-4e51-92e7-4fb54ff2fa58",
        "cursor": {
          "ref": "eec86276-f75b-4b9a-beab-74947b3ed6d4",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "da44b401-31eb-4245-a00c-5a8229000eb8"
        },
        "item": {
          "id": "c068471b-732d-4e51-92e7-4fb54ff2fa58",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b3e2a145-c2f6-4ecb-a3e7-d62e5d17895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcbadc5-b5be-45f5-8b91-1fa315f5ef09",
        "cursor": {
          "ref": "967949f4-2080-4795-a80b-497988b6fb11",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a7210ce9-bab5-4546-9dc1-f6cd4cdc5dc8"
        },
        "item": {
          "id": "5bcbadc5-b5be-45f5-8b91-1fa315f5ef09",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e435d583-fdd8-4c3f-9a45-5faff02699e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b5fd13-3bb0-42e1-8683-0d1f24b0996c",
        "cursor": {
          "ref": "fd7c49d2-26bf-4c88-a0f2-b7e2eabd05e9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "496a8c06-07cc-4c03-8679-cd9c147c51fd"
        },
        "item": {
          "id": "30b5fd13-3bb0-42e1-8683-0d1f24b0996c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "17aa6101-5d7c-4fc9-a74c-cc704999fa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e95b91-34af-4c34-9193-dde712816eca",
        "cursor": {
          "ref": "ea181930-e964-4774-ab81-94dab8b160e6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0dbd86c7-01a7-46fc-a433-f9f597e399cd"
        },
        "item": {
          "id": "67e95b91-34af-4c34-9193-dde712816eca",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "84781aaf-af02-42d7-801a-46f8bee22bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1a7134-489d-48b7-9d95-945e91c9c2a6",
        "cursor": {
          "ref": "f0dd75e1-6832-4e2f-83ac-253bf6130a28",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e55a9501-fd14-41c7-bb7f-bdfca70a1f2f"
        },
        "item": {
          "id": "8e1a7134-489d-48b7-9d95-945e91c9c2a6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ceda6530-84f5-4817-9427-3280cdb451cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af9b892-ed88-4da4-b507-c7775987d4b6",
        "cursor": {
          "ref": "ffd18baf-2699-499e-9c77-3c69f4d221ae",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8903c7e7-052c-48d9-8c00-8c6e985a0ccb"
        },
        "item": {
          "id": "7af9b892-ed88-4da4-b507-c7775987d4b6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3fb29891-b40a-4a37-9cbf-112f7c1ce7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c55e0a1-a5a7-46df-b6f9-ec3a0305527c",
        "cursor": {
          "ref": "9d02c4c3-a8b7-4184-9643-bfa2fc4693a1",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5c2d5a51-fea2-4e38-80d5-33e027732c71"
        },
        "item": {
          "id": "1c55e0a1-a5a7-46df-b6f9-ec3a0305527c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0b153ea1-be87-4a0b-83c9-7289babecd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67b7ecd-95b7-4463-8df6-5b8e6f0b93b1",
        "cursor": {
          "ref": "eddbb621-14ef-406c-8471-5f46ff66a224",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4a5282f2-bfc0-4635-950a-c575dedc0b79"
        },
        "item": {
          "id": "c67b7ecd-95b7-4463-8df6-5b8e6f0b93b1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1d4d767c-fcd3-4229-a295-13a82ee2920c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bf5e51-e153-4e9b-9171-028b2b83aee0",
        "cursor": {
          "ref": "d7efa75c-102e-42ca-9a0e-27dc927f8e1b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "75c12c0d-b825-4dc0-9c3b-cda0e7835a08"
        },
        "item": {
          "id": "82bf5e51-e153-4e9b-9171-028b2b83aee0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5727649f-9756-4eac-b403-e62ddb0deebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db8c6a1-48e2-4984-b6b3-1a42bdf6bdc8",
        "cursor": {
          "ref": "7c16cc78-9bae-4502-ac39-530251c3da83",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "17871b53-2354-46e9-a279-02691f823e3c"
        },
        "item": {
          "id": "6db8c6a1-48e2-4984-b6b3-1a42bdf6bdc8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cc2b8400-7898-42ee-aa81-87f337393028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059c8a3c-74c0-44e4-b026-81fba16e3ee8",
        "cursor": {
          "ref": "6f718243-6611-41f0-a463-b07b266e6cf2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "95fc5aa9-6fa8-4fe7-a5a1-950d988c107d"
        },
        "item": {
          "id": "059c8a3c-74c0-44e4-b026-81fba16e3ee8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9391234c-7e95-4214-bcd3-71305b78b5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1963c47b-23fe-48da-97f5-0c4ad45f1fb5",
        "cursor": {
          "ref": "0d9b0673-3316-4767-982b-8e1a51558f6f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "43cccc23-886f-46ab-b05a-f2ebeb93cc3c"
        },
        "item": {
          "id": "1963c47b-23fe-48da-97f5-0c4ad45f1fb5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "82087e95-ebfb-4021-9f33-ac942cb09736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841b8b63-591f-4aef-9c73-276b224f841a",
        "cursor": {
          "ref": "3b2f5976-db0d-401a-a635-3b88b5fd9c61",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5cf696f8-c6ca-49e8-afc8-6584990df2f1"
        },
        "item": {
          "id": "841b8b63-591f-4aef-9c73-276b224f841a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f42b51a0-ff38-4f2f-b78c-ca8bc773aa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe743c3b-d40c-46f7-8fa9-99ef96945775",
        "cursor": {
          "ref": "06eb2473-c617-4963-b8cc-8e12aa24844d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c4c1fa4f-a8e1-4e7f-9652-3a0601132c54"
        },
        "item": {
          "id": "fe743c3b-d40c-46f7-8fa9-99ef96945775",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "63623247-c7da-41a5-bf4f-952eb092c206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c011def-92ec-453a-ad8a-1d208fe83774",
        "cursor": {
          "ref": "f7d76b22-fe00-484f-b63e-7c1e10196729",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cd7a9a19-23e7-4d58-854d-58274bc2f58f"
        },
        "item": {
          "id": "6c011def-92ec-453a-ad8a-1d208fe83774",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b9ef9262-3605-4148-b7d0-47a077221b44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a905d9bf-0520-44c7-bbd9-bc0acde67de9",
        "cursor": {
          "ref": "a01744e8-e310-4a4e-a037-58c54976d4ee",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "842859cc-dab3-4c1c-aad4-3858f38df916"
        },
        "item": {
          "id": "a905d9bf-0520-44c7-bbd9-bc0acde67de9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "32f00015-bc16-4032-95cf-ce4a9df720a0",
          "status": "OK",
          "code": 200,
          "responseTime": 2094,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "700048a1-30a0-4bb4-84ad-ecd4697240d6",
        "cursor": {
          "ref": "a1270643-cfa5-495d-9f6c-b092dc6ad8af",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f41865df-54d5-40c1-926b-4ab8555c4094"
        },
        "item": {
          "id": "700048a1-30a0-4bb4-84ad-ecd4697240d6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d6b966cf-e1a8-4568-9112-1e7aa2e0dbd5",
          "status": "OK",
          "code": 200,
          "responseTime": 3515,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe48b21-6670-44bc-b8a3-4099f0bdb945",
        "cursor": {
          "ref": "3745c69f-4a62-41ef-9a5b-a49b967c4c56",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f0e01019-c759-4664-bb47-8785eab334cc"
        },
        "item": {
          "id": "dbe48b21-6670-44bc-b8a3-4099f0bdb945",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cd703c79-2012-483c-b699-fe4719981423",
          "status": "OK",
          "code": 200,
          "responseTime": 3284,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f01178-3b0b-49fb-9f1a-3d8fbb08db0d",
        "cursor": {
          "ref": "b4bc40fc-ba0b-4c4c-929e-952d59d2afe5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3efdbd20-0dfe-498b-a57d-8de2a2f242bf"
        },
        "item": {
          "id": "54f01178-3b0b-49fb-9f1a-3d8fbb08db0d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59b68199-d000-4be8-859a-fb69fe51307b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f01178-3b0b-49fb-9f1a-3d8fbb08db0d",
        "cursor": {
          "ref": "b4bc40fc-ba0b-4c4c-929e-952d59d2afe5",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3efdbd20-0dfe-498b-a57d-8de2a2f242bf"
        },
        "item": {
          "id": "54f01178-3b0b-49fb-9f1a-3d8fbb08db0d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59b68199-d000-4be8-859a-fb69fe51307b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58030f55-ef2e-4af0-8334-398af8d8cae2",
        "cursor": {
          "ref": "18345c4e-141b-4816-83dd-51114bea2801",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "96ba54de-36ed-48ef-8de0-3b9b335d7599"
        },
        "item": {
          "id": "58030f55-ef2e-4af0-8334-398af8d8cae2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "895de4a7-bdda-4ff4-bee3-f0b3c21f6c61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1787dd-d5b3-40d6-ae8d-25c9a873ad66",
        "cursor": {
          "ref": "73d905d4-0041-4da4-bbe2-95aab7e7a26b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e54cace7-8b24-488b-9a53-e22481756ea7"
        },
        "item": {
          "id": "4a1787dd-d5b3-40d6-ae8d-25c9a873ad66",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d2d1e6a5-0a5b-4d37-9a93-a3af65048385",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}