{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d909e7c2-cabe-4715-bd52-f80e63f51b1c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8c1b1e5e-b355-4eda-8327-2189096bd403",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4a64454-c845-4419-b1bc-b0a52a41c66c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d2b45dac-4112-4b8d-aa87-3e35287e7eb6"
                }
              }
            ]
          },
          {
            "id": "5651931c-0150-4d60-a061-138571e0359b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a00cb24d-7bf1-4be8-b803-0c084cb3c53e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e7814eac-af9f-4361-b97d-08af3fd9078e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "55a924c3-8b56-4abd-8949-8961f57789a5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7dca3bf6-abfe-4198-a46e-09051c852e0f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "884feca3-c888-4691-a7d7-2b089d84b1ca",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c622b0fa-9e4d-40b4-980b-79176303eb0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2e85c5a-9b27-48b4-8be8-fed98366d6d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c75f5210-b883-4e1c-914c-3c1b9eeb745f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b57f303-dda0-4ae0-afec-dab473948fee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "98f1341a-ec3d-4d53-b032-e48d6e8f25dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7395532-a15d-4a2d-a8de-e8913489cc12"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b97a479-7c00-4b64-8375-1603e55ccf48",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fb34b181-ae34-4a5d-b68a-4212803f7e09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13abdeaa-a07c-4481-bcc0-5a7c6e239b20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61f0e4d0-aa9a-46f1-aebb-48b016368ba0"
            }
          }
        ]
      },
      {
        "id": "093e859a-6598-4973-a095-371c6bfd6723",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "945ca608-6423-4a33-9334-6653e64e2764",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f9ee35b-e839-4bdd-a2cb-995ca1970b8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be4a8481-9d2d-486a-b525-f8d0fc94dbd1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a338fa-62e5-45c6-9577-39ff23a633c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcdb6b9c-3e20-456d-8f52-0f46653e03b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63b6e95-4357-4332-9fab-9a067d231b79",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14aae84a-31cf-440c-b4bf-f0c5496eeb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7992acce-4826-4b0a-b2da-f893f99fa1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbcd033-f274-4dcb-8ce0-c3dd3e809dd5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261535a6-422c-40ee-8106-3eae9205f56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cdac743-844b-4b17-a0ec-e7be1f2015f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a3a8158-55b2-4491-ae63-e2eaeb2605d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abb12d65-a8aa-4389-999c-1343c50eb18f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fbd9df-6eda-4249-8c9d-8119470c27fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9b7e039-0f43-44e9-8ba6-a7ca601d011b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a000e587-689e-46dc-acb3-560dcb9eb32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58de974b-731a-4bd0-a75b-975a4648ee2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71faaefc-2bb2-4c1b-aef1-440282dffb66",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fefb1f-4dc2-478e-b6de-ca136032d017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d19c8874-c321-4376-b3af-41214503eacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce570e44-1faf-4a5c-aa8f-0257cd822e64",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "8466615e-91c0-4134-b099-57472ffc4e2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9476411-23a0-45f2-aad6-f636b8ecd635",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37c04e14-d880-4721-ae21-456b9e3037c9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cdddbff-0aff-4d92-a853-f3198e2529af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d3c01876-4a0e-4a2a-add6-e82d29830848"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ae80fb2-a2ab-4240-bbe4-bf6cc5246850",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "fe84c5d2-94ea-4239-8a64-339c6f7dd592"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa2814f4-e7f3-45c2-a817-3083657962d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7effdef5-fc2d-420d-a83c-52c3b7950825"
            }
          }
        ]
      },
      {
        "id": "2a51a5b5-3ab5-4e34-b9c5-2b9deaca351c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "20766196-0a68-4496-b18e-e9507bda158e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3298c3e-fd03-40cd-895c-e11b61ae2f13",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6e74eff2-efc0-4c94-a54d-52106c9a52e7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475a7834-91fb-48f6-bc12-8ec094e50bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c171e4d7-2777-4ef0-b214-e207faf4e56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3f6a5a-79fb-4c21-8aed-ed22bd1e48da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81fa60b7-6281-4468-ae5f-9a635e644d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a42021-d342-4a39-83b8-33476f25e3d3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95470a2e-b14a-4717-8104-eccccd1c352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f753f98c-de32-4fb1-b296-cf9eff9a61f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea64acd-937f-4bf8-bee3-348944449a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "433df964-cb6d-4d53-a4bf-26705a39a04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3225e96-543c-47c1-aa09-0604c58a3dc2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891b0418-f93c-4e9c-81fc-5721f75ff74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859ca95a-2ddf-493f-aa4f-b4449c58805e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2d51ec-1260-441f-a372-a7eee90be18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "954e0e4c-f7e2-41b6-9c0b-dada9f3fb339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2739c49-195f-4b8e-8ef8-4040e5f62ce7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17175df2-7b3d-40ee-b2db-fbaf4f8813b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fe1588-55fc-41c7-9501-e5baedb57e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a21022-01ea-4ea6-9637-39df3dc20459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6c4e31a-6d0b-4b35-a2f6-ca394d10cd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fff9e7c-d41d-4c2d-a92a-7ba8dc4972b5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc83b12c-3b10-4f11-bbb9-3060e4143c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434b9f9f-da9e-46af-8826-028addf2642f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6490ba3c-3113-4c6e-8569-36364ccdcf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b778be7-67fb-4a72-8701-89ccc5f82d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6093fe-4c77-40dc-b424-3a731325378d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f922f44-005f-4353-8ba6-462e27137899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65e0156-1300-426c-9978-2a3695a28f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b770580-4f8a-41e5-ad45-e76bab42a917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acfe74fc-783a-41cb-ab02-3d3985468f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacf0452-a243-46c5-b527-38bd9eb0fe66",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496ce6b8-0220-42ce-93d1-fc8605abf9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d664ef-c9eb-45f8-bcde-d08cb2818469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d163bd-3cf5-43ff-a394-e2d9687db904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fe46e1f-5858-4019-ba99-6d826d4e8ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829fccc9-0808-4846-bd77-0bc061a616ad",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffd0b47-e0b6-431f-b1a8-4815ff6ef870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237252f4-3b7b-44fa-9350-93bd9eaf8316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f7c3b7-148f-4202-93ab-ed0c4debde1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0230964-085c-42a4-8b82-9cfe32dfffb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1178b347-b5be-497d-a285-8bf5a9bc87bb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4205ddbd-0518-4d52-87f2-698169a57a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffaea54-5752-4e5c-ba57-e04b9ad72126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad18eed9-f36b-4e91-b95e-3614de524c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54a13169-ce07-4267-9ba6-9aafb7af1341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328d1881-a98a-46d1-9b71-1e6ae8b7b404",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37a17d2-ee22-4c28-94e7-80811dded7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f34701-f8eb-4baa-a72a-a7936b96b1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63876aa2-ed24-4f9c-8862-c6cf6e6afdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44aa587d-933c-484f-ab55-03b92c11de1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56448288-5f5e-4d44-8167-ab9371115565",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449fa24a-847c-42e8-8fd1-7f895491ff14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3dd4d1-3b0d-428b-a5eb-d5a306c34491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2909aa-c42f-4dff-a000-86e9570d158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cc45772-e069-4bfe-b857-2ead89451d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25fffc5-efa9-4529-a676-0b8ce6bb7260",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a72f481-4eb3-4c0e-9a29-086d0b658f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc036c8-6d16-4dd9-9467-eb17d945d000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3f417e-67a1-4036-928a-87ef8c0f8647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4caa758b-12da-49c9-8d0d-f8d778207d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701c22f8-aac1-43f9-bfbb-d985eade5baa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a8ce09-53c1-4ba0-be44-95a49f1749fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44c1986-3dcb-4fe9-875b-b63d3389846d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3773334-d44a-48a9-a869-271e4f87e8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63f54175-f4bd-4d91-8d18-b249d60a92d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda79809-c5cb-4ca7-b8f4-601d8b671c18",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a465c99-bd9e-4499-a687-1800191fd452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4395456d-ca23-45c5-80df-2f9df1fffe51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927b5285-83e8-42ad-bdd9-2ee3f6f42124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faba987e-79f8-4e32-88de-b32025d235d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628a152c-54be-4618-919b-fcf4c1ad2413",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5621285-fda6-41b5-8443-23a15e3e237a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a8a406-aa78-42a5-925f-707be61859cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31492152-5869-41dc-9894-c77c47f4bef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4472b803-ed8a-4a4a-ac1c-1c304ef042f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7304e58f-a06b-48b7-a832-51cb26089415",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b2ebbe-3ac1-4af1-80cf-dbefc397064a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5f6d7b-da18-4d94-b4d0-f2f465d1e42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323bb1d1-ff9e-461b-9f97-934e8d8705f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9185522-4108-43d7-86ae-a28a99f7503e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40032d75-fe17-4116-9bf0-92cfa5c4633a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279ae158-a44c-4045-991d-8d84773c7c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0683a89-1f8d-4280-a3c3-42e84cfbb8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4090a63-0c31-4234-8ac7-69ad94a20e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fc7c7f5-966c-477b-a4ae-3b26602a7072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1fd3aa-5696-4644-acc6-914c6aac8c8b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117646f2-1859-44b2-b944-868604b91c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9b1c1d-7189-4b14-bbf2-ac55643a409e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84c7f26-0743-4d8e-8f57-153b8c7f3210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "022f0689-7317-4c11-b654-c7adf1606e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394f132a-1ba0-4a37-95c4-2aed649dce32",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae700bf4-91aa-4fd7-804e-ad8a97f1018e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f93b9dc-fe6f-4c36-a2b4-cdba20eca4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d4429c-7fbf-43c0-957a-1b922f6d644d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f75292-287c-4dc2-8fd4-a7b30cbf7f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed247cf-1cdc-4ef6-a4ea-3bb98a7c6de0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f04dca3-328d-4226-80ff-07df05c41d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a23073-6d4a-45de-8116-f13fc80ff557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ffd5f8-0cd6-47e6-bda2-af60f9d407ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a5a591-cd0b-4ab9-bbc8-ee840a79c2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8618d6db-63fe-4741-bd3d-bbb1d07e2d4b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bf5e9b-a4a7-4579-a6aa-76779ca88b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27c05bb-4601-4e9a-b3b0-889251f46ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abefd9e-1bd6-4daa-a5a3-d6dbb48a3917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24bd852a-44d5-4218-a625-84bf78d5282e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d15b194-8c8e-4fe3-a31b-5feb1ecf7fb3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd59ee1-c62f-4d04-ba87-c6ef1869c980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a54fc5-e6fb-4667-ac79-ebad17cb3699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b31d338-37a8-40d0-9c43-def24254b1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11ad8708-1dc2-43cb-9315-583ca9e6c6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5c67d4-3d7f-44b6-a6b9-7c18bb7e73fd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6656f18c-eb45-4e72-97e1-efac42bceab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacafcb4-ed38-4668-a987-804cd0ebe1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c201f519-afda-4364-bc62-f7fcf7609295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53938538-6d5c-4347-a993-8e6b119c26cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37faee89-69bc-40f2-b127-f0af5066a6ae",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5482e1-e3c3-4a76-af1d-4f9cbb17a2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c8370e-7903-46b7-95df-3afbc59c5c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a65aae-2584-4bdb-befc-2e5f2a3c0c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "86e5abba-8480-4301-9dea-dcbfb1a8cd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae4294a-db3a-417c-92aa-87fa469904f7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53e5cb0-5100-48b6-9930-4e82392302e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50a329d-4c92-4aef-b952-02cae5788b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40df66ac-546b-4d2f-addf-bedf1d88102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44379be9-40a7-4a36-b925-bb4f68271ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc020b03-597b-4c24-b757-459a6de8fc79",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dd5013-1ab2-4ba9-8d29-190053924c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1e492b-8703-4f5d-8689-c08b6fed88ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5313944b-0bc6-4d0e-bcb4-faa7f6237644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbbae20-e605-4d32-a697-b2ea1687fc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5aaa95-e5e1-4b40-8efd-99e5f34d4c1d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35251fcc-de68-4757-8c90-5fa1e501e301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5980b51a-a916-4569-94f1-3bc8946bdea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb218c6-a3aa-4b83-bdbc-bc302bb30206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "10d9d0af-8aee-4c44-8fe5-5b193f6f1ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ac3045-cb78-4aec-b6ff-e2d609bccb47",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab18ee3d-4b43-4f48-8b79-eee0042d5406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65a4256-899c-4190-a06f-c9d39c1079e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febd426e-8030-4c07-ac88-3598c4ab4d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc31505-6a2d-4c24-931c-836336b570ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753169ef-8c6d-4d2c-b689-99963d46bfeb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb5788e-d4d2-45df-bcec-58c8e69addd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec229dea-86f5-4652-b6e4-6126f9dd2914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacd64bb-b6dc-45ad-92ac-aaaf9c4969ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4f761f-ef14-4b6c-b1e2-82620c5fee9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37f8d8e-8491-4af9-852c-5d938e1a1660",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2317b6cc-eb87-4764-bc7c-fe73a707cf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bc678d-81db-46c0-ba47-71082dbc198d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8f72b7-45f7-4d20-bedd-cf89214de007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c63039ec-ea30-483d-a10a-2be113b41682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20e6930-e7a9-44b1-b67d-b4302b12cfca",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb77e48-a299-459a-b466-58f59bed2d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5d8c0a-5489-4a01-9c14-8d2160d61f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bdf9ba-322b-4163-906d-629d86f26f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f6f6f0-7bac-475a-9ca1-b1e74ae35c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ffca3d-56a8-46b4-9343-75346e96343c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03dfb36-ba3a-4253-8c84-730b741ed5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4167035-6d9d-4e63-8f40-3b3ea1c76176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdcab15-d3ec-4138-8396-0cf0296ee77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31bcdab2-4b78-41b2-94f7-4f1863c53a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ca5f2b-29f8-4109-bdda-fbf7e00517c7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec0df2c-0111-4680-aa1c-45b452a54bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ea6754-befc-4a6e-9d69-a75f1c326259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08300ea-3f68-4539-8965-744269dc1f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c82ab777-ebb3-4ecc-b706-9ee00b42b843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1ef02a-01c3-4dea-9537-be44755d6cfa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6e4d6e-7265-4147-9a32-0c975332f605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0be7cd-30e9-4626-b6b9-4c529df5327f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cc137a-17b0-4212-990c-141475cef4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e377c840-6e9c-45ef-81d9-146f6745899f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e024734-9783-4d9a-bae0-9385100ef2f3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becc20f5-a39a-42c3-9f72-8e8f2a303550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d99afc1-8804-4bf7-81dc-014ac6ba7735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb27d63f-c003-4f2d-b187-3338ecaec878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e07c8978-1df2-4ac6-aa7a-6e06a4961234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a094e68-6067-4d13-bf32-19285ad8549f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57436ccd-ceca-4a74-91d4-f4f9b700cfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef030239-a5b7-4b28-a457-b5479b27d3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34573fbf-d224-4882-96c2-9cd7bf6ced1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1dfbd9-0c62-446b-8f08-8edb4cd5b88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db717a3-cbfd-416e-ad01-b28f631599a2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b43e53-ef8b-49ee-8fc6-0525fc0db0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fae2af-3224-484a-8245-58ecb1cb47f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716894f3-71b5-4d6a-8d8f-90ab24aebe8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1c8f89-4f86-46ad-89d1-d2fe1a492265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcd3f56-3aaa-4500-93d4-fd42083bc228",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1468778-488f-47f6-99b7-c8832d4c36c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a881b1c-6e32-4128-a226-062d4aa92cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfd08d2-4a73-445c-87b5-7d1c3aa1e302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "897bc8db-6c16-483b-8ca5-c629acc98eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4585691e-0383-4eeb-8d39-6aeb71010c94",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072e0461-b9fb-488a-a19a-24f460ce6979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af91950-6a67-4de4-81fe-e60eba305d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21218904-6162-4dd9-800a-4adf5be3b2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "664dfe5d-588b-45d2-aae5-555acfcd2153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47430aff-00cf-417e-812f-81c13755c614",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8784bb3e-9140-415a-96d4-93e8f96b548d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee32a47-f8e6-46a1-8ab6-49dc3c6ba314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ba63e3-aeb8-416c-9730-eddaa5e7f52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "db864980-a4f7-4d0e-8e60-f99fbfcc4ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df676a3f-6e34-45c5-9614-c31a6b129bca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f004fa62-069a-4f44-ad22-7d2f3ceb008a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a34f6f-7a52-4265-ac4e-58a95349686a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabf68df-53b8-480b-88e5-16fd810d986b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0afc08-c1ed-4c0a-a649-0f853588f4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f55729-7b8f-487b-97af-7befdaa75fd6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60cf31d-c96d-42ac-869c-cff2e5323a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fa85dd-80c8-4c81-a428-3a4ea03fdb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4582bb07-a1f1-40f9-8a58-bdd19aeefd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "420625ad-9d72-48c5-a4a1-6703625d7af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22226646-93b1-47d3-8e18-ba13a7a4b5ef",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf21b17-0f2f-4073-8fdd-74538e78ad44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c657f4-514e-4ac1-813d-669751330ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d861d15-21bf-498f-b98b-9a899201ca61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "679be9f4-60f5-4ab1-ad9a-3ab244ed87e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849dbbd3-2f1c-4c04-bfed-adf613781902",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78743260-033f-4e80-ac1b-d814a35d2b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911c156d-0de9-485f-bae0-067e9f3d7f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e99fb6-83fb-4834-b5ea-09768cddadb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3efe53-b646-4d73-95ab-85127a5fb214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03ef4a5-e665-4d82-b490-d01ac8d7bdaf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c716b69-b286-4a80-9c6a-98c77e4b3a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44664007-5015-4438-996b-769e71c7541d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92618a76-94e6-4889-91ad-5b80b71c178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9dd0ee-24b8-48ba-bca7-4ddf2c2cdace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b376df-69f4-4fbb-b37c-c38cb70bb143",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2115b86b-2a19-4615-a56c-371eaef625db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e406a87-24cd-43d1-bd5c-8df1252d04b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0201353-dd50-4074-ab9d-d97c13ed7943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e4db95-b926-4684-bd04-5ba0ced63834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd915ee-02f8-4aa2-8c63-fecbe4b6e7dd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67269fd-a3e4-4032-99c6-2236f35a2bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b545fd-250f-46e4-9b3c-a952260f6cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c199baac-c8af-4f91-91a4-8a3283634a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d33b28-2f6c-4b7e-88e9-d8ce2f92f2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d12f596-a495-4a6e-8606-dd42fa6c2d70",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49e9eb2-658b-43c3-ab05-4a10ea63db18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dfcc63-00a2-40ae-bf86-a0497a69fc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1b3dd6-c9ee-41e5-9a38-bbbb9ddcb165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2261d5ea-3241-40ef-b170-2c02da71399d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7c30b0-e276-4585-a4a6-eb532a9b4896",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f5a66c-1737-464d-850d-cc4ec5159dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c4a0eb-e3eb-45db-91e3-4b85b177e2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1539e80-7f88-40fe-9868-140fac09509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "485eb4c7-7875-4248-bc0d-81fac399c8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ec3d40-1a6b-4bef-9371-351ca18a7462",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04ae764-447b-45a3-9fcc-dc1c92ff3a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7066d4d-f829-498e-a2bb-6779d3d8e232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7702f542-a463-49c9-8f33-86376937f104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13cbf451-59db-4b45-be28-b09a12c4af70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493f187d-d811-4078-b3ce-a5bb63021afa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94efdc5b-1370-4a52-9561-243165f622a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2955399e-a3df-4b43-9f2f-e6c2eba857d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216a5a40-a4ef-48e5-b945-0a99f5312644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b37f18-e6a5-4687-8a63-5ba16553e961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f3bb76-89d1-43db-b30e-23576cb0d0ed",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca337e4-6095-4c2c-bbe8-995513b1a351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d558aa-bcba-41f0-9d0d-407b822c9fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658ece85-b42d-4499-9875-8cf349f35978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd226ff-7bb0-40cf-8641-9c2d96e8196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94935379-5a9a-4299-bc44-158c34c4c0b4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4e7c77-8e55-46ba-9344-31022a9e1728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6805f5e1-8874-4e46-b4af-3df22362614e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f7bc1e-960e-43bd-8a11-2cacf8423c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c5e678-f80f-4d2a-843f-9011f8aab248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0da961-ede0-4a07-97dc-bfdb49ab48fc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec16813-4cff-4078-8a9d-2bd7df4a5454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85008a35-d720-498a-97db-e54702c72a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061473d2-1fc4-454d-9f5b-cef9cc907131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fa72ed-4823-4ef6-92a3-b27c5e5f1d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd29e3a-d4d2-4692-9872-649dce7fa758",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07b67b9-2688-4327-9dba-a911df036cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1314e6-9ad9-48d4-9ab5-f1b5fc63719a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bf0565-732f-471d-b820-2bea4a0f00a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d23e5f5-49e1-4841-84c3-af98f6a32be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfcc478-c6fe-42a1-8e2d-920b0b1738eb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c68378-79e8-4726-8709-440aef300887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521211ef-d43b-4634-9a7f-8f661f9f1352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207d4c06-0ef4-425b-83dc-25cd77439f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "08141529-a64f-4479-8d44-e83b0836fb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d4b92b-75c4-43ac-862b-d4e518ae1867",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4d555b-04dd-4ef1-9bce-0ae36791d687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c89ce57-0b1a-4a3d-bf9f-25771bd96c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c14a99-0c13-49d4-b48c-c2465cd36af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c334c40-2adf-43af-92a7-1a17ebef7d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa96db2b-e6dc-44a7-b70b-42128c67e19d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36896d8-50f7-4d58-8a20-3fe8d1cb122f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b147ad-b91e-430c-a928-daa213f5300f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5a4d32-69c6-4d9f-8230-71b471956cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1ba035-514b-4cd5-8bab-b05151adf02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511527e5-392d-46bb-9b07-d8d996472cd6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91728a37-e02b-454a-881a-51503a7c37ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8256c9fb-54bb-4825-a77b-9729f47d1bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0759c390-f653-47b0-ad7c-d8b3bc4b6145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce9e794-3153-4b3e-a220-d6b35b729cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216f6d46-4889-4f90-999f-2ea66b3bf068",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a901f0d-27b8-4642-9085-c6e4d3b37be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed95aa0f-b412-4f96-9d31-8eecb5636f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7840700-1d74-4aa8-915e-698ba713f8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "625c5198-8896-47c3-b0dc-d6b1f0d470a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585422be-a5e9-4410-b2e2-01176529e6ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820c0a62-f823-43e6-9d64-6d099983174b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659da158-06be-4f5e-a1b3-42034b2291b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a561cbb5-f996-4707-a0c5-880806835c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5038f4ac-c8a5-439c-9510-27f2f55f9d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38af6e76-8e98-46d4-8f3a-18a2f30a2789",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbda1972-b5d1-4e33-bd4a-610539f0727b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33312d96-d94c-460b-92e1-8f65c8ec64f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8aea78-b85c-48ff-bc7a-3409943f1c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45f30d8-3e51-4fd2-9707-9e76ae7e81bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf841c3-23fe-4485-8574-da96bf212591",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83e8fa5-473f-4fc9-bc48-965c8466c0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f57d03-ed93-45e3-b2ce-36ef9b8172a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6f4be0-e991-44f7-91c8-f362fac0276e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fce1191-83bd-43ee-90e9-82edfb79c1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0116b9-b83e-47a1-ae3c-d8769512e418",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d0daf6-1b3e-467b-90da-a8bf293645fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303dd7d0-7366-46dc-b359-dfd2b896d3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aed373a-a850-432e-81b3-74b2c94486ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98bc38eb-c31a-45b9-b119-7e19931143dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd9b543-f33b-4b67-bca3-f32e64c6bcb1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58ead87-7652-47f3-bdf9-45d28a0ddf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50469e30-81fe-4609-8237-69c16d486a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73495121-b809-48cb-b0c2-f54bbe2ed2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2dea23-19d6-4e6b-8abe-472599dd4711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a31af2-95ff-4cd0-9ca8-08c47aad2855",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4e0083-f2b4-473c-9731-8c7a3aec0ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3115eb-7fa5-4925-b3ed-49b204045256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef0ea01-7715-4ca7-9182-795f31464bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdc6d05-65ef-4803-b35e-e584ce0c99f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16d9227-ac35-435c-ae84-0095283c4ece",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d3c5b8-b278-42a9-9f2f-50e032d1f62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3e77e0-6bf8-449e-b191-e16b993b3d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8247f1aa-4acc-4613-a7b7-b09746461aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f73f24-3edb-4a27-b14b-f52854298ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76eb4827-8461-4e1b-b22b-65a0a120e6c2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7908d23e-667b-4453-bce6-e38e8f857ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d64198e-6ceb-4a1e-b44c-b9b675e016cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1eac85-afe8-4a57-b140-ea71654b6c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e457be7-ffe8-467b-a437-f04894a98c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d10fac9-55bb-4a70-911e-7ff8768d52d6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6277afcf-8fa9-4788-9cad-b45028426302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dc5c43-c803-4b7c-b1bf-dc8a00bf1b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be244a3-0e85-4886-aab4-5275766a00f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "199859cf-1ea2-4335-abb7-a5c51e0e7fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff6bd9b-d58f-4388-8d20-cdeae0972ca7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4053ed-f278-4d04-a01e-4e97e46b583e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22171cd-4c9d-4701-854f-50271d99169f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774204ed-686b-49fa-a5fd-ce8b4be22b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02244ad8-8f05-400c-a5b1-ac2d8fe0b9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0184323e-55ae-4bde-a16a-f006743c556a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19adeda8-1daf-491c-a07f-aff3534a7b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a1befb-9317-4b4a-b6e0-40a6d14689db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b2ba88-3665-4255-83df-b90e2190939a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b243257-7ae9-4a82-ba91-94a1c1164693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060649c3-414d-4937-9e17-bccfc94447bb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b54b9af-1ecb-4066-971e-563b5669b916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ce5bec-53de-4d45-a3e8-7c455948abbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130aae3f-460a-401b-ba66-b5ea7c49924e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2af8872-32f9-4e7e-b8a0-8d18b9eb24d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c345252-9962-4fae-9596-97cbdae7122c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e835cb24-f7ea-4f15-83ba-0119758143e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995e1424-1c8e-4541-8b8e-27689188989f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825973af-00f5-44b8-b64d-4c55a76b4d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d80d2ca5-8481-4b15-b11e-4d89f2cee2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9191867-5acb-4558-b846-9f59c97e02d4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830d13ac-e63c-4cb1-b892-4e5e53b407a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6924ff4a-6a13-472b-b581-fb665f0858e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccff897-5e71-418b-ba53-023424b8810f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "620df3ff-7b0b-4bd4-9440-f4b22221d053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b0c320-ca02-4a79-a852-095883b6ed6e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709705e9-dca0-457a-a3c1-01fcf47ecc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f32f0e-bb08-42fe-bbf3-4de8bb9e97da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf1858e-2715-452a-a12a-040147fefe14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "563525c9-b67f-4c4a-8a45-f7d2e82beedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3fe629-2c0c-4bed-8004-c92d14476305",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae312a6-b4b0-41dd-8eeb-d8cca7d6b82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3402ab41-d9d9-4eb8-a3d0-9e939a390ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e353387-f1c3-4baf-97f5-1811d49181a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f49c286-0ecb-4f32-b4be-83a94d6c5cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9cc247-6bc7-4534-90fb-37c12be188a6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a242c824-bf0f-494f-b37a-c464a76c6e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6da1cb7-d51c-4774-9f9c-8b0921e83fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1b7bdf-17eb-4ae2-805a-c4d60bde544c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73af17d2-017f-4d85-9162-f1c296449772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33924dd1-56e2-462b-9546-b262cdf6cf5a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abab086a-475d-4444-87d0-c9f32bc35ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31fd650-0a5c-4d89-b4b5-7e2c362f3103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba986cf-be28-4bc9-bad7-c22754840cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d111aa6-dac4-41e9-b33e-446613fa38c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9c95f5-99e8-4979-a0f6-b45218b1f178",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5e757e-dc9b-4c50-972a-df090683c08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61645a31-614f-495c-b28f-9e49fe09e9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97bc490-ab43-4a46-8355-5511a1cd7ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb64bab5-81dd-4b13-bd22-0a2042a0974a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f33d30b-9f73-471e-9030-bb494fafb21c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f5be2a-b401-47c1-aa43-977af5303a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5a9354-9f42-4eef-ae3d-45e453950018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeea493f-3aaa-4cf5-b071-60a45cf8414d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cedfef34-040d-4f14-bac3-117bac45b4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a0d9d4-2b22-4903-99fb-3078bf17d938",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925af746-b01c-47db-ab9b-7d3f5f659a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b9aa3f-d304-47ef-a1e3-fe7960c37b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535c0ed6-9d97-421a-b613-3d117dba1e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea5cba5-e7c6-46c9-bffc-ecfbc9efd40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a970449f-062c-43c3-90f7-3ce9b91edd7f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9aaba6e-ca3c-4c02-a384-cf8241aa5d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d682fb3d-2407-4514-b717-a05aaeca9276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6ab6df-a57f-4359-8af9-968405e0f6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "449729e6-ad17-46f3-bded-4f45985e2b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce09316c-e0cb-4720-8620-4b1fd43ab45c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874a3ec1-3557-4f42-9050-82bababfeb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8525b07-f020-4bf8-b708-08979f0e1287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33bade2-79d8-4613-a399-f65f9a5563c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50e96e63-0e68-4333-ba10-349551cbf94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f936ebb-f420-444b-9995-de0601a286e6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e10941-d16d-4d10-992b-f314b949fdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067cac55-3398-49e0-8917-db0f6cc1eb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b84f64-1414-4729-b053-226af1f27e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0782547-34e0-4675-8d22-11d94ef23f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0c5b3f-1f6b-4144-8683-baa3f5b42f01",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a87b666-5062-4c06-85de-c32c3658f16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e93674-b507-4e0e-8a98-8fb78cfe9837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce918ea-de9b-4248-acbe-4153bf3c346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c58742-6857-44bc-a1bc-09abefe3776c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e2a097-b029-423c-9ace-2be25dc5f4d1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec528c3b-ee6d-4bc0-8fb8-2f89abd45abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddfcb37-fc22-47f0-97e0-33e9a8fd5194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9574e9-8f2c-4757-bae1-b9ea41f286b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e03aa6-74f6-4512-ab91-424586c2f76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da010b6a-57d7-49d2-876b-b8d2c1944390",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61875b1f-9e73-4440-8a84-a17d8fd8dd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00646a9-a96f-4dd3-a1e3-137112c7770c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e1203d-56e4-4f10-8b6a-8fc150ad6fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ae18d1-ece2-4588-a577-9f27ae2aafdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0796db66-267d-4c99-a3ee-3de42b8f1d08",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd57972e-a011-49e2-bda3-18a698791420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b527e7a-ab72-465b-bf43-be9a12002cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ffcde7-aa3a-481a-a2bf-243fe48122d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8151b436-26d1-4680-be31-9e5d8d6e73b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dab78c7-034f-43ed-aecf-40a67394dd1a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a03628b-8aeb-4436-8358-3490a6d382eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca44f1cd-dec6-46f9-971d-ae7ab64648ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478a9c00-9b6d-4888-9a75-1bd20a7cf92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6699f046-3e74-4946-b784-554e3a21c07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff97c55-c455-40bf-8cb2-e623ba49639b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9efd68f-1a72-4fdc-a86d-abe5fc6c4d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68ec4e0-f3d0-4e7d-98d0-49a0bba80f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bc497c-aabe-4e59-81fb-e30a6234b424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "67992dbf-c207-4cbf-9047-2fa424a13ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa9c2e4-0f9c-435c-ac95-8416b258cd7d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45264989-1491-4189-99b1-766c766b53b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b70fa7-4c90-419b-a81a-52d713e4f4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a380e3e4-d9a9-492e-8d30-af3149a39891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc9a8f2-240c-46f3-8677-86137fb6857c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0049a8-04e1-4ce0-8c21-cadc2e7bc0b8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6bbe1c-3f5a-41db-a202-08094679f4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "33185fe9-cf74-447e-8ce4-929449c8a150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0a29b8-cb9d-4524-abc3-6a1686968fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf23d4f-78e2-4e08-ad12-5900eaa5a2e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1deca38a-3bae-4225-94dc-3fb55c96b6f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e57aac59-360f-42b5-8071-69b5b39eadba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba3a4d2-cab6-4387-b219-429971e86c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b7c15d9-6258-4cc4-9b01-6e7dc6885c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475d4df3-53db-479c-9d8e-714fb0cb4985",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "122c8311-47fb-43c5-8189-a727ac1c9cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0d3b06-ed48-4969-b57e-d5be98ecc2ca",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109ffd56-a73e-4b56-8d94-a6850bc7c70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3038043-6c5f-406c-8ec1-476376d2e8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a51d732-802f-41df-8235-d48e9ba926f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6552f255-cc87-4527-b446-57f7c13b7f66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab82d472-8c19-4328-8367-05c0b0fb6062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3acdb7c8-7d99-4716-ab8e-0704884f01e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4ecf637-da6f-48a7-b23e-3c4ea270c123",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cac1cb17-8b9c-41b9-9be6-5326644fd87b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "376e3267-7250-4f89-aae0-655da759ad07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "850d8437-3456-48ee-8997-fd9204750e6e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "410b8261-c4ea-4589-a708-35df35dfdac8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44c83cfb-561c-45ce-b6eb-f669b17819a1"
                }
              }
            ]
          },
          {
            "id": "b932787c-8086-44fe-b13f-8d02084ce40a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e58bafc-02bb-46c5-ad9b-aa323a7717d0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65c07348-e4a0-47b4-8ad5-0b7ccfd790c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50384941-ce7c-47b1-b6ba-dc3f450dc1bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec8d4531-8061-4c78-a2ce-d5089f38af38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c32eb91-c304-4e32-866e-0b5cd784fdaf"
                    }
                  }
                ]
              },
              {
                "id": "b926a7e5-06ed-42d9-9a5f-b4610cfd6506",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "943e2b8f-5535-4562-8a69-e416545a3c80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "404cff44-7ca9-453f-ab20-29d450d23b94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c24d3a7-a954-4e44-a941-f1d1e0a30024",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93c783ae-683b-4c50-86fb-3dac605f5000"
                    }
                  }
                ]
              },
              {
                "id": "60b12ca5-8ca5-413f-abbb-c7eb6e1c0b95",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18c96d67-3fde-4850-8ebe-9aedf71ef550",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11ace0bc-569c-45c8-9275-dcd672f7b548"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d768cd1a-02b3-44a8-b6c5-d87ba5288d7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0ff0213-3899-4ce0-b406-8bff85f6263b"
                    }
                  }
                ]
              },
              {
                "id": "d7a3e44d-f977-432b-ab43-03c89706c596",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3a0e3e8-0ebb-4f6b-8b49-b15a9f13979b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fb82972-a4f6-4081-bf06-d9c6d630d025"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b48380e-8625-4181-a754-2ca15964377b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f50c4f87-7d95-4cfe-bbfe-1d59653155c1"
                    }
                  }
                ]
              },
              {
                "id": "3013ef31-46d4-4247-82f6-cc5dcc0160e3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e41adbd-ab33-4fbf-abef-40af33f9063c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "798fd8d9-a6a9-4149-a34f-c9ec64059f99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "104fca0e-0562-4891-8300-02db734d2a02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "13200515-cea5-4891-aba8-02744251ca63"
                    }
                  }
                ]
              },
              {
                "id": "537400f6-8eff-4513-aca9-6b3061cea157",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "432d65e1-0118-4b7b-ae34-f6c2e30c139b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a55262c-fc60-4cdb-a375-f67a31cfdf5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f64ade1-485a-4049-ae83-2bb1c0035a63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4fdfbc9-9759-4c4f-b09a-ec5c3badea3e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6870d680-7af0-40de-a519-45758c4f1636",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3eb41c3-d204-4256-890b-bdeda6fc2907"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d094494c-0a39-4d4f-b189-6ab4e5baf1a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a1dd7fc-0e4f-4087-9d32-b406c4a413f5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e9795b1-6b2b-4045-a8a0-1831ba1d78de",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e9f9a627-954d-4ce9-90b1-eb1b114210b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "144a6710-88e9-4531-b3ce-267ea9c68553",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1870a4c5-d17b-44f0-a0bd-031aba8dfb4b"
            }
          }
        ]
      },
      {
        "id": "0b8df301-461e-440f-83d6-e4e6df315eca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e218b7d3-7868-4c73-aee7-31896cefa7b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea4db3ec-d463-4917-8c51-fdd27c750013",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9662409d-0a44-40cf-8c82-4b66fb3833a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2548c98-6f34-4904-a497-7448e40b48a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9ebbce-c3ef-42cc-849e-e78d5682f64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b73582-b0ea-4b1f-b973-1c5af6134584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a77f8a-c9f4-4041-b820-43e9496d0b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0853ebe6-9fec-47ce-8f96-ea093b4e2084",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad57acd-0958-4aa1-900d-649fb8b0f784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4be8072-e580-46e2-862f-1e2933078410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84d2f12-3a91-4600-a22d-7ce282c9f435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b9f87b-4fd0-44c7-b657-2e5483d8ad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de2bd26-c669-4a6e-a02c-726149b5a115",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62bded0-af4e-409f-8fc0-fb7daf2dc76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4c7f7b-23d7-4e8a-94c1-3dda9a48597a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ff4057-dcc7-4c89-bfeb-b9d7b6f9d6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97a7a356-433d-4c06-9613-d1a3fa43cb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78275e72-120e-4164-8900-36418acd763c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8784e35-4679-4d0a-94a0-91bac32ea95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73e1c6d-dc0c-4967-9321-1555cc2af6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a879ece-9f7b-4696-b557-e6ae9f5f57a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a44c56-213c-4d03-8208-d8cb61505a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa01999-5fd2-4bb1-b46f-ec393ef27b44",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c46f1c-07f6-4f74-a606-652bb023201c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8920445-b913-48ac-8793-c7eb587bea1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49618ba-4df4-488d-a6d3-b42208297f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9778bea-944d-4575-a691-fe9d614b24fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb97ec4f-930b-4d76-9ca5-07d438f083c7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c512d7-c321-4311-9a6e-563d6a83f2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f357b76a-1d9f-4c07-bdad-65b4a2f9357c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffec81d8-665d-462e-b6ed-02c27f4ff608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "761afc1e-c222-495e-a368-3ee9bb124214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7440b40b-bbad-4459-9d89-bd360273f9ed",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5cbc53-50de-425b-9ac0-cb89cde314fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a3f782-076b-41c9-abfd-115b58be4c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e685c219-5ae9-43d6-ae5d-4e9f993177b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83467d9-533b-4c09-844d-9e2bd092565b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20e0e9d-1d0a-4a28-8e4c-0f5869469aa8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1053fa48-d64b-45b2-9f20-d5d377f5cbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9af4f8f-5e08-4356-94dd-75236342bd83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e8d3cb-c2e3-4ff1-8dbc-9cda2d4b9c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5731570c-ef31-4847-8f77-03494d934d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8910602-bef0-4495-8234-dc4043a1bf20",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca1b5b0-26c5-4eea-8f3c-5d289600c2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e968167-bd97-4acc-aa50-6c5bc5aeb8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a6da16-4274-4929-9d24-619f43ec27ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52b4bc5c-244c-4d93-8769-d58a3aa29900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a654ddf5-124e-47cd-bb51-89041af8c8b1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f26f2d-ec69-4986-b750-859a8d0f42e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b3f893-730a-4177-a3ca-faa85036b794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e85021-3a80-4693-86a8-0d85d5b66889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06d2aa20-745f-414e-80a5-aa52590a1fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c26a344-78b1-4ff5-8ded-9ad94d60941d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edad7c65-8972-43c8-85ce-8462660695d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4f8703-8c82-49a8-af32-384e520756a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07353220-8e4e-4e39-8952-8218927c136b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "66cdead1-4f7c-4a24-9d9f-7df70f55b134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a484adf-45fc-45b8-aa03-207258f003e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb65dda0-59d8-413b-a0ee-c4cf862041ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6c36d2-3352-43be-8abb-c1c3b4952aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf61db4b-cbd6-4218-a394-24716fccf684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e1552d-573c-4c78-80fa-d5b2df767e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f7f790-1eed-4753-9516-2bde8457585d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1329e3-24e1-4fb1-8a9d-8ecb5ca19eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34afe90f-6cdb-46aa-9f75-30267c2e6e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108095da-2cd9-4abd-902e-d0b1e1b281c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ae58d0-4804-4700-b6e7-a161f7ab2e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8486581f-536f-4099-8aa5-08d5c53c492d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c2200a-a3b8-45bb-b808-c5e9df06ce6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7c7d18-e557-410b-9525-56fc45e083e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3af8e7-5d62-4754-8251-43f60305aa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a5ff7a-a07f-4bc3-ba2f-68a8e8323bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f14c3e-d743-42ae-a3c0-ad556ff3aa8d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0152aa-9fd1-42a4-b3f0-8b9c593299c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69deff3c-119c-4c74-a14e-064e262f524f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908488b5-fc9b-456a-974a-7ff188066b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd14c80-ee6c-43d9-8489-4e442dbe5614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13555a9e-ac4f-43f2-8a94-75bee5f6a83d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7ddf66-f7f5-463d-8490-8952e7306c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc9dce1-7316-4ebb-9b85-62102f9161f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685fbb07-f244-4fe8-ba77-55a97f72aa38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa27dbe4-df8d-4fb0-a193-13f4f9273558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6b1191-bf52-426f-8271-db341861d30d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908b8afe-4fb7-42da-9672-a6ba6cca43bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bf3496-970b-4ab8-a1ec-56be7f13658b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28963978-796b-4663-8395-65cc55c0c3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2d9633-ea92-48c5-93cc-ff775f1310e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480af5f0-6a66-4708-aa87-ba92b0c1d814",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dbc876-6962-4f88-bf46-b0ae73aafa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e91f3b-3b3f-4f6a-87d1-a178df25db49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7eff66-79e2-4c53-b3e0-d4b2bb9e8b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d5314b-784d-4dd5-8b2b-aba96e736568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3603a59-f582-49aa-aaeb-c773f21d3b93",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40a9d7b-0ba2-4e79-ba72-a2a6a40150cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9900c19-b7cf-4a5f-bc8a-40bed71fd9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9596161e-b5ea-435f-a085-9421b6868936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afd370dc-0cbf-4671-b308-7fb2fd939ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd0e67b-0c07-47c1-a8b8-79db5ed3b75a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bf3709-76d9-4087-bd76-a70f43c19a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88885783-4b57-448b-8f2f-0bc234e8c2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d9f132-733f-4000-bc9e-17dc2e0d12c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac37ed2-f16e-4452-9740-aa3e082aa482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e78514a-c77d-46e9-9f9e-89fb02e1f99c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402af898-372e-4994-8910-1a2fd20a42d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04220e34-84d8-42b2-ac13-ff9e2f3f128a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4101e8-a6b0-4a04-9560-36523b85136c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8007b5-b7c7-493e-85ab-7202bc6d5035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba618a8-60a4-4653-814e-401af3bbf288",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e377ce27-6b49-4c48-b334-59063cefe462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6c996d-1dab-41c1-9484-e25283246157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93397dd-593e-497e-b3d2-1d0dac4ee650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8501942c-5c4b-48fd-a968-9d3fd9bdfe59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d24176-3431-4783-8070-9690ba1a1c22",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271d57fb-4b98-4068-b869-bbc7fbf745ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb20a6d-21e2-4e2f-a161-e0518d5db226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e436db-20fb-4f6e-822a-2835c101103e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "796499e6-feb2-444c-b2dd-72f419595779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b270273-edaf-4121-adbf-d73927f6cdf0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13fcdf9-4608-420f-a85b-4270492d1652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8997013c-e89f-41c3-9c6b-c8523d92a0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9109c11e-f1c5-466f-9270-bd80eb8d94d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5830c9f3-076a-4230-9d2b-20681ac9ffa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67430bd-db83-4b26-9eec-29bdb72051c3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770605a-e97d-4661-83cb-5690123308a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05c865e-ef4c-45d7-b692-e2618c3335de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e2ef54-84e3-4528-9c07-530cfe344815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cef30657-b6fd-44eb-ba14-05dbf987aa78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7edac2-f125-4e92-8d00-07f1103a2f9b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa45190b-1b00-4f83-8c6a-d5b529538945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19188d3-e0bd-48d7-a30a-1d62f09cbea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cb0d90-9d85-4b33-b47a-8ce451196cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a65400b-e249-4737-8f38-b3bc27b3d182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e67259a-bf46-4b51-aeb6-4c55f2349f0c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8889757b-db2d-404d-aeeb-75a669002340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3375094e-dddc-4499-808e-cd2e699b00aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41fa1dc-8ad0-4ca8-a989-c6bd54c62100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca59fd1-06fc-4b8d-9b84-512b34d82973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d455b010-492d-48f8-b771-b1a99abf5f08",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb044d11-3101-411d-b61d-c4c9818e5599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30850f2e-1501-4789-90af-dfe55ac26049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505c6dca-6cd8-4f18-8b31-322019452c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b65b855-f73d-4a1c-8448-e0958d3f26a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a37dd6a-df8b-4b12-b4cc-fd77bcdbdd6e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3accb3a-f227-4c77-9857-2e898ba2e238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ad8b1d-e402-4a5c-b147-bc25ca16fe8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082b5b13-01ce-4cfd-808e-d1cc4842ee9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd69423-0e7b-42d7-bf97-467a2b0545ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db8054e-d43f-4e88-a84c-4c92b1d97a95",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cee77c-3e14-4d3c-ba35-23cf1dfe09fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59841e16-5a74-4c39-a296-93c7e32d5777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e6326f-646e-428b-93b9-33f06e5dca3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4715b5-4f95-4294-828d-563965638dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d714ea-2d5a-4281-b883-47f77be1e974",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84861bf8-3849-499f-99c8-be3d29c626c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef62da94-72ba-4d06-a948-50a20f304362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d9cfe1-2df7-4040-b8f0-0311a0df0c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68449217-90e9-4dea-9c0f-b3892a6f4564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60a6b3a-a31f-46a2-96f2-eadc9a994066",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f2fc7f-87d0-4317-8e9f-087b8facf449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38025605-1ecf-40f9-ad30-1a98181268fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa54a63d-f645-42c3-9f64-7dbd932e144b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff51b8e-5243-4945-a146-941c2dcc554a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3bcebd25-7514-496d-bc62-4eaa4decafea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f157e1e-1ebb-48a5-96bf-5fbc4d4abc19",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b0edad-bfb1-491b-afc6-f47117c1577c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6e3ac7-7b43-47d2-bd9b-74b994171c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29dfe49-a547-4620-b9c3-b0bc680899ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a6aea87-ddce-4cb1-b0d3-5c82b463cc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5deb45a0-7d47-4948-8467-9b39574c615a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e10ca5d-8a5b-43ea-a9d7-51ea2276c8f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5d6c21-804e-4fcb-bb0b-4cd0042b7b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b050b0f8-2eaf-464f-8a32-a1a284414970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d46be685-aae6-4408-a680-743ab32cd170"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79e1918d-4bb8-4acc-bbe6-ba27a8960615",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf0b9b08-c770-47d7-b3d2-56354e8ec427"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfe80d2e-56d9-4851-823c-b7e9f98cb681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6858716-f160-4051-9311-0e6e52cdc5af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "629f8ef3-dffa-4ca8-b62f-dbfd1567903d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ad636267-eb34-49d4-8f6d-ffc6046d5845"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff28bd1d-35c9-404c-a61d-fe1c41036262",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1246a0b-6982-45c2-a865-6e04a7432907"
            }
          }
        ]
      },
      {
        "id": "5947baa2-9714-4f66-a86b-8a15ef0bd86e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ba89283f-0497-44e1-a0cc-fcd8c93835fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84a1bffc-78d9-4eed-93d9-38bfa80bfcd4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4bfbe081-29fe-4432-9a06-3a53aa8ac530",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217a6657-5728-497d-a239-e6aa470a4282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abed0fea-c927-47aa-a0e5-353499ce0059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5071b1c5-3a55-4c66-8732-1c7a2d4c6240",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1679ba48-4bcc-432e-bbe7-c396ffc51f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc47ff05-57a1-4321-b8ee-7b676cad6192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46866836-e0e0-40d1-9ed2-79652574be22",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1082db7-67d0-4b2a-acff-564873556e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd939ff-b51f-4d78-b958-be22b32bcf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd743ef-4a98-4bb0-a561-170f8ebd7548",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2be098e-00c5-46ee-a3b0-8e4f1c994b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8271bd-781f-45a2-8e19-e897dac4bcf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb89f637-36f9-4677-bac0-59f9d94510f5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebeb4ed-9a31-4ad5-9cdb-0d7ed24b9318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9caeca6-0414-4263-a958-08960d3d7e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7affea25-4049-4722-9e4f-36741c3c04bb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbe53d0-aba6-4ad3-adf0-7e5cc8d33485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e7e304-6ec5-4fe8-addd-d95fadb3c0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2848ee-d971-42d4-b535-d26edf4d3c6f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5643df30-f802-4f38-8333-a27f925ebee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb0c0df-6d3d-48d5-b446-d98c0b2b6de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7f822d-f83e-471a-9a0f-c7aa067c2388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316d8bec-3f9d-4aa9-adfd-ac1edf532f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f653b83a-942e-467b-96a6-b20ca40d1422",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc828163-7b0f-490b-ae12-6bba86c340dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68acbdd9-3b29-460b-bb3e-ae3f74fb221b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d28f11-d84d-4733-a8ea-c239bdb8a645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22ff44c-f3fd-4390-93f9-f2a822b76b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dee650-975a-4921-ad70-50bf11197c5e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341b3911-1d4b-40ae-8271-cf634f5c39be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03c6ff2-656f-46be-a53a-e72f6b57cb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99aba50-a7ee-4767-b575-9af02e8dde32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9980d86-659b-4fa2-9c42-4d8c233acb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ee3c8b-3cef-4613-8f47-59f4c2b8010f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da1319e-0e7c-4b2c-b858-f43641c27f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57b27715-dc4c-4319-9d67-6a2795924a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40b0979-773b-479a-af4e-514f1e2d80b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46d8bde-ef2c-49f8-b460-bab9bdb4d2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fc1d82-c814-4c9c-94f5-ef44f86d3e51",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb30c9f-715e-4494-89b9-afd6d40e05fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c88576c-71da-4bc9-b4e1-669b57cfae9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d057454-2292-466b-9266-c8c64a60a62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cd6898-1f98-4c6d-b8e3-8594046a4171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f195895d-fbb8-4dba-8d96-d35000c5cc34",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe70b8bc-5e07-45ba-a996-b641feccf687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fb09db-1b1d-4ec3-b9fe-994b3a3c2b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54807998-b444-4458-9fb3-b27e94df673f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd1084a-b7af-4a94-96d4-f0a5009d8092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18218bf-8ad5-4971-9190-017d0cc2e68d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefcd407-ad86-4d0f-ae71-900b114f892f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f2e093-f789-4d7a-99c7-81fb7f90275f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977dbec5-9b0d-485d-a928-f497568d8425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441132ef-4f06-4b37-8b72-6067ec33223f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf3f3f4-8bb4-4bbd-93a4-6b025db78660",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431b6ff1-5541-4774-9f8e-dcc56bf99c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8063760d-60ee-41b9-92d9-26c363a80b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da315460-8d90-43a3-b165-ead00937ec95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adcdb87-8a5b-4799-a56b-a8d15f117266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3a7735-7246-40f6-93c6-22996a67ab4c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a765e94d-dcb4-46d3-9cec-a5afe9a85f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "494bb5a4-c29d-4380-8db9-c6b98d6da2d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e581aa1f-ba57-4666-a796-0a761695a833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417b8b5b-c467-4b58-a90d-a28577762ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e636e833-7f86-4d0e-aabf-17c1c43e0d2d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f3b134-b6b2-4c46-be59-2aba06f7ae78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3688510c-3e19-4e28-9565-b10c8125e765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4906860d-5950-45fa-b4a8-2fea5273c760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1d1196-e513-4c25-9b50-803cdcf50a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef27fe8f-c746-4d34-ad8b-f1ef79d20953",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c3339a-482e-42a1-ade5-9fb4e125280b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfefb31-5c4c-4639-a6d3-3f2ead66779c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008c3c76-284b-407f-a6f7-bc2d42a4ddd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a57a71-66a9-47ce-91c3-e642ba71faae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fb0fb5-076e-4da0-a4e2-e73916e3d58b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c5f63a-bb4a-4bd4-80e7-1a80e82e6766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3187c844-9344-40c0-9732-4752c5c7a5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2622e544-6202-4db8-b1a2-1cdbddc0cd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df64d912-184d-409c-abc7-18c45b7279ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943a8112-5465-4f34-b115-d93825fdef2b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fc4e1c-6155-4a3d-9745-acf4fe2027a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e76b49-dba4-4683-9f77-b89d1b528885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd26bdd9-51c0-4426-b677-d65bcad26b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305b8f20-7ab2-44ca-a096-1044f80d308a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276f3155-9014-486e-ab85-b6a2cf017e23",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccac9d04-e44c-4e21-b232-1661207104c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2235e2c-5075-454a-b50c-de6b19fa3120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5ada89-1549-4b5c-aa68-b3b37a395b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1622219-74c2-47a1-b320-39adda554e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52369626-5781-43c7-87cc-770e815b545e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cce8da-1cfa-4f5b-b997-30f03807fb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528c784d-ccbb-459f-bc0e-5447aa645fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeebc54-a4b3-4f49-b2fd-2bb736264580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4522c16d-1b5e-4026-93da-b003a02099fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ea9cc5-d32c-4d06-8fbe-db6d087fbe33",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828f24dc-5f11-480f-a691-8be6cd2b40f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec42e49-332a-4cc1-9ddf-cbb13a0ab458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d266ab97-198c-4dab-ac3f-2eea8b1da81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ac2d94-ec4b-4896-a7fb-239fc8c8d5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ce1acb-3096-4cbd-bcbd-66620211b688",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940c0928-bb18-4a6b-9acd-74af4a1dca43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d2b444-0244-4c28-84d7-f36d647b0ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0713039e-4400-4939-9cf6-df4c2694e184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2834e73-2218-453f-94f9-929f648dd870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5eeb2c3-fffc-4b0f-8660-643a4846e6d7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257104e5-584e-4bca-af6f-7b0d3ccc5817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64d84e39-a683-401f-9c03-c27bc9077702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf62b95a-f2b2-482d-acd3-87a90567d54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325ce828-6f56-4766-ae60-5871a05a2883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50308fd-63e2-40ed-972a-f5b06cf2f33b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8539cebf-b5dd-4bf5-8a17-da1c1946961a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aedb7c6-71c9-4bab-bc88-31d1e0e2dea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8f480a-d77c-433a-89cb-7dcb17e1f56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba7567ea-4f96-47b3-8c28-f14004e7dbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b111ff-f509-419d-bcec-759fa3012eb4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23a800a-4af0-4a7e-af27-d0f9dbc9d16c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f19e0ef6-b1db-4631-9c25-f11eba62d3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86744db8-ef4d-4e9a-8a16-aff5fbda4b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46736ff-df50-439d-8ee0-33f9b48094bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43901962-ec0d-4712-ac82-80974305ab46",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119976ef-b202-44b5-93cb-3a659975ac2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e18e90-fdc8-4c64-bb8b-932ed6ac59df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a40f37e-48dd-441c-aef1-a579a9c7e5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39582f39-ff16-4513-98b8-35e5470d9010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16033e4e-bd75-4b0f-8bb6-75675e6b0338",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb06b525-17de-4bad-ba0d-d1cff0ab0244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ee10e3-04e3-4c57-968c-7c64d80ff8d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352e9524-9846-4c20-8783-12ab1b9aeed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273c9126-f64f-4af3-bd5a-27b51f5aac5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578025be-022c-4ad7-b649-2efc54ab1c92",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d1eb6e-e3ff-4007-9374-fb27a09039d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "879d3900-35cc-4d2a-ae16-a9513e211521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38252c5-9dee-481d-9454-d112b010c0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c73daa-211c-46f9-8405-a054e52e6a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dd945e-daa9-48be-bb30-ef84e5a517b0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e989620-60ec-4b1f-bad6-6d012a568a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e92f710-d2e6-40de-a847-8ec3d02964e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3b4e15-97a4-478d-9dc7-3c65efdf67e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d6ec43-afc8-4da4-8626-492db6d95530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f347d5f3-4973-44a9-937d-79690e5f48b4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a396205-34b3-48e3-b844-aa43aaecbcb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fca773c-4b4d-4925-b2d0-769f1dddc96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42656cfb-d019-413b-a286-3634002723eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e564aa-2f44-4d9e-b254-ddbbe4067f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51960ff-362d-44cf-b6c0-1d1636a9f801",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2d6502-bf70-4202-ac6a-c77e45a976fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49f07b71-6977-4235-9c64-ea80d9da40a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5404a11-95e6-4d9c-97ed-0636da6dadf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a5cc19c-40c5-44f2-81d4-b08496032540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc26abc8-6e9a-4ba7-98b6-7464f3af99ca",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28481476-face-4cc3-b1ec-2a2c6029c8db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ccf03e-a04b-43a0-82ac-dc906f21a7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80356ba-4e7c-41ba-984d-068651e3f4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098b3437-bec7-42d7-b561-ea4e21afe71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46a19b9-1bd3-40fd-bd3d-fede9fe00ebc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f75c85-28ed-4a4d-934e-d233ac713c67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746d03bc-b0d0-4b34-b0eb-1cb25cd76232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "440b7520-a886-4feb-9d7f-a6b6800edf3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad91514b-195b-43bc-a897-0ca2e1ac3085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f36f46-4adb-4b11-a846-5a4aa0486889",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcd46aa-4b48-4432-9424-bef6e23e4a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e29ec1-8f03-45cc-9cf9-403a4ab6fb63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43c76eb-610d-43e7-a5f1-0dc94482e615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a61b81-7a05-48bb-9816-c2ec62945ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c1b866-56c4-48e7-b06b-f02d0c19b639",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c559a025-cd3c-493b-9afb-5565e9045e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4716814-7cf9-49b6-a33a-fcb3eb1325b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b2e8ae-28f1-4074-8ce7-6f7a50961159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537e823b-1da0-4788-b03c-9d2dcff47589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f1009a-45b9-4bfa-99cb-6b24797be6f7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222b6e20-40d3-4717-b61c-7ab4b25ae79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c687d842-55d6-4235-be6f-188d93db9078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734ad0f8-9693-4dd4-ae24-0b22d5215c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd690971-2cde-4cb2-b73e-121950e2911e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0b8084-f765-45d1-a43d-e9fb4a469593",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd599ffb-727c-424d-b15c-4ce18fd35692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca5c448-1aef-49ec-a14a-813c62255308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49493b49-39b9-45db-a364-353fffc6f962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f2b8de-36cc-44de-89d4-45f2d2d4d645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0b71e8-80f0-4fe2-baa7-3f925c6e34e5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10f65ea-b4aa-43d4-abae-634a93e9cb40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5ac869-a702-4839-9f62-9ff1c2d673e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa0437c-de1c-4e3a-a304-aef1e94177be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8cc8f9-1364-4a8c-b98a-a03897664f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6522fd-8be3-4182-9d67-32bf6e11c275",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ef440c-17cf-48f6-a657-18a155c0b418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cd4a95-dc06-4543-8e73-1ef8c454b018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c37192e-9fca-4913-b7dd-ef28a673f948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95571533-5b83-4c76-8e7b-f162d23f22e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e750a33-8a9d-434e-a8aa-7e161b45d18d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc81cfec-6458-4c33-9cbe-59e54e661769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d06526-5a17-4597-87ae-42ac87bfb333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb240808-784d-4677-a900-48334bff8c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38888131-4e83-4dc3-8578-4b61c256f3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9415d8-0a75-40d2-a0c9-b29aa7286abe",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec06053-791a-4c0a-8f3f-e47f480bcfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f2787b-f17a-4193-a8cd-3f174308ed25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a35af6-dcbe-4b89-b300-ebfe5944fd49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9428ffa5-b39d-4dc0-920e-cc1b6df0c215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316cf571-b60d-40e0-bc6e-4664b246a094",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb98e2dd-220a-4702-b2bf-434b83e2393b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8f84c3-fd12-4e43-9d17-effc560fc028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef97d455-140d-48be-9629-c4d3ec9871dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b711db-7fe1-48d3-b441-2a36eeda8a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d6c083-25cb-41f8-a98d-fb4a86ee8e81",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3242932e-dd57-4769-a44f-5c94af2d7820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c764efa-5db7-48da-aac9-307f4128ad41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c0daea-37fe-42d5-81b6-07dd391e66c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6cd91c-a781-4f2a-aa7d-6f251ae74aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42951bd4-ff92-4a60-a2a5-f7ece64830d1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e60538-aecf-4f60-80d8-85cb9e459856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ed9e02-2488-43f4-a085-a1df263d28a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70ff99a-c6de-449c-a85b-f151da749eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5db471-ab83-492d-8448-a98e80379907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ec0cc4-4194-4990-bd04-c9f76a751243",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ca1784-32bd-4708-b68f-bd947824b01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3678f709-37ec-43c6-9210-b9104c91e992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b86b5e2-8cf5-4a38-9712-aa7bbc0503d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fa00cf-7a20-4ae3-92f9-e357bf7475e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fe5d47-b25f-4baf-960c-df57fc63e01a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e7e5f5-6fb8-4096-ab33-f45835e902ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e12c8f-9398-447d-91a4-79c2c4c8c550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e43660-daae-42d5-8082-5aae16f292da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5029bbc-034f-4859-a643-77cf635f989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919b0ba5-85f8-46ca-b78f-5597b22f75a1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8fa02b-a984-48c4-b569-049405977e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e41f0ca-2378-4354-8e9f-d9e23f25570d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "becd4f78-6991-473b-b926-76a621e72145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d413f00-7694-45c7-975f-e767ee975832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0a4c40-1fd0-46cf-bed7-8d7f0c7bdac4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8862c4e8-5c9b-42a1-84bc-b53fb593d24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2715b239-7715-4625-8d20-692fd08587ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df67d15-74b3-426d-96c3-1b96b8bd9c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed72891-38d0-4d6c-8629-36ff58f3227e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4490289e-1545-402f-b77b-121e17e57ba7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95869587-567d-4156-8bb0-144c3a34187f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba93e80-a045-4d44-af4f-ae96eb128da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea3ffa0-b38f-4b15-a2da-9fc557bacf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de17a8f8-394e-4d01-a226-0963d6f0b086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c87c4f-3488-4a66-8e3c-d0441f048d9c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cc8027-4727-4385-bd94-7ac0b2592ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc4915c-adec-4c41-80e0-19bd678c2b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bb7d27-d3ed-4dde-873a-f9ea941d7162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6002f46-7153-4535-8688-06d6a05451b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a7512c-ac81-4f64-b603-c931bfdeed81",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c450ec-d7c9-4bac-a1b1-f3555c79f466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45eec816-108b-43a5-ae5e-6eab167139c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09f0fa0-c0e4-48b2-9f65-a7eb2b002bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d646b5df-8903-4da5-8571-57adfba05684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2cee5c-5ceb-4df1-9f32-7e6279c4a6f4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc44ca81-5571-4216-90b0-7b0cc1b30625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065c76d3-3024-4159-9775-0d8ad588d777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b06b75b-89f5-4b43-b6c8-5fa75141dce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b801a34-7d2d-4984-affc-cf52e3a07c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24dd474-3cb6-40a2-ad84-173a97a82fa4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ed0c62-a0ab-4972-8fcf-1a2dc9940637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c89fe1-9967-4c29-93dc-a2aaa97aec9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b404b465-fdfb-4682-8a81-7fbb70329156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757cc2be-8824-43a6-8e08-4a0133d9b99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7f7592-84b2-4198-a8ea-622fea0f1bbb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631bd65b-012a-4fee-9428-c30ea710a823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca947c0-d195-48a6-963e-834ef5206b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8786247a-7c17-424d-a9f6-a039a8f60a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3f28dc-3ed6-4e93-a6c3-c9afd19259e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7c6740-5136-474f-92b2-f99986ddf3df",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3caea67a-ce06-4fd6-80b1-41be51bb280d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7f1019-37c1-4c5a-9e50-cf8be89687be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688b8487-0da8-4c1e-9ae7-03c37eb93db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73be77c4-35d2-42db-9818-5b3d84812ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4b0ad3-ee91-4bd0-bc53-ca2fa038b041",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9ad694-daba-4d9d-aded-12eb6d93c94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8c2fd0-8151-4905-a422-c1c7fb7dfe0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c458f6-3ff4-4803-829b-38b17eebadcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2dce20-e491-4a43-85a3-2fecf53a045c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774f072d-f5b1-4109-abfa-7ef505771d87",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655d04d0-cb17-441e-86a7-fc01913f7a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9ad907-1a68-46b5-8001-289da511e5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b544b5-0e5a-427d-a296-98d14981b7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616edfc9-2230-4313-80af-89c6ac38ca66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568b80f1-a737-485a-a1f5-5b4249d7fd6c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a95485-da8d-4517-a709-7649c474120c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12af7b0-c1c0-47ef-9292-79b4d77e2cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5090329-718a-4dde-84e7-5135b97e44c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa25a018-533f-4eca-9887-a65eaf1cfc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb9f3ec-d5af-4aa6-b94f-9f67babb8004",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc4f403-5514-4353-a26d-3524b900b871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3c6681-6076-40ed-9430-78dfccfcdfaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dbd7c7-0dcb-436a-a666-1f7117fc40b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25b8f82-ab02-477b-a309-636c95b27f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f385e708-6387-43e7-94e2-50e127c2c148",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1665b8a3-c844-4aba-9164-6c3232bba202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2d8fb5-7320-4c7c-8f9b-da7f5cd22ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186736c8-029a-4a3d-aa63-bb93a73a5d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0057e1e9-b56a-469e-825f-d0e5a7e3a8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ca5f21-4f95-49e6-8c85-5a1bfa05329f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c47fab-a991-4fff-af36-21f38857d68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9e65b2-d3af-4f98-80c1-e5f2e89a8ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a6dc03-d085-409c-8971-5ca08e8dd0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0755f0e7-1134-478e-9626-4e9d2d16b5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9d9898-e25f-49e9-a774-d4d4610491cc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07143dd8-261d-406f-8602-90af54003e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690db478-5422-48d2-8b18-7be0b6e994ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef920373-ebca-4e5c-95be-fd698432c656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd5d00c-f05e-4989-93e2-80484fe24cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c21f0da-87ca-4ab7-be0b-319f8de2b3c2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33589270-30c4-43b3-9d68-4f2ef3bab1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cd3d4b4-4759-471e-8d45-d5bd19038e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b30b5b3-e1e4-4804-bfae-00c01aa0230e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46112f2-c697-496b-89fe-8669ff89eb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1005d1ae-eb52-4ece-b3c1-2fd80d33af22",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09367aee-ce5a-4a50-8612-22103143d8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a301d819-feaf-4699-b0de-86ad36e4243d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06759fcd-78db-40f2-a4bb-821ef7d713d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603ebbbb-71b6-4704-9487-f35fa06937bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e37f26-4c3f-4169-b406-01c12e5dde42",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1fcc8e-e4c2-4946-9756-092988bc9eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cadd58d4-6cce-4eee-8ea2-211ca56dcae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbe3306-053f-4ba5-a66d-5038e6fdf781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b2c312-6504-48da-8e84-75e773d601af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1611adb1-b7a9-4cb9-beab-6b7b3aa371c7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3deab5-ee45-4136-b139-8c176a6d1803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ef687d-b8e7-4dc2-b3c0-527d4df490ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a7bea8-95d3-46c2-9058-cabd2ffbbe33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1dd151-cc14-4aae-82ca-2eba2c2cc79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23d857f-dfbb-4afa-9ca3-9ac957261ef3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28e5830-9cc0-4ff7-afef-7550e26d5810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e0d2eb-6711-400d-b23a-4c15e02ee1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2ae89b-31fa-4e88-8705-be836bafdbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e94a632-0983-4134-aaa3-9dfe4f82f723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194557f6-1eb6-4ee8-9364-45f3dabee1b4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48df638-010f-4c55-89e6-6a831a23a878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5665039f-9070-4dff-a71b-2b5751bf02a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98d704b-588b-4008-beb2-191871a1d133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb513e6-ee1f-4729-a982-ff906c907bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9e7398-39d9-4ca0-b5b9-e8ce572bd476",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd5e406-4039-4a91-a309-98ecb8355219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b2c7b4-4295-4193-ba23-7584bdf2aa31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57056ad-cfc1-47b7-82a2-a13790e08a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02444003-c59d-4b09-a172-52ca4e93027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c26902-baf7-425f-9d0a-7a9c2fbae60b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb99364e-0320-46f1-a466-3e50d7fe9b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b387466c-6e33-4ed8-9eb4-a1f671009c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddde9d92-2dba-4502-b3c7-18b0c2779c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99a1e22-708b-42c4-970e-fef71ea60ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bcd912-44a0-409a-bead-3f68f0803284",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d0b380-18c4-441d-8d15-863fbbb2a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aadcd4ca-05af-44a8-9dd8-7d16e75cfc84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d9a5d6-5c33-4f37-8db6-4cd3f83896bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebdcf5ef-ebad-4407-a9ba-5050a2c3e777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585e538d-789d-4855-8552-bf3e8e69d29d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128a62a1-3781-4d38-9b81-0221324ba989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f264c140-ed18-4907-a297-b6ca560dba66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4827d26c-19d8-45cb-9c44-335a2e816501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe19224c-d4dd-4c46-9d5e-7d18ace370e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25091fec-0ae7-443d-b4a9-c792f5348f3c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d77614-1a9a-4b13-b58c-cdd795270492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e59715f-cd69-4c27-a331-1d30b9cc5203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7680515-b4c5-431b-a5c9-3655d836c071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16331be3-3a6a-48e6-b15e-8009d86c448d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea172c6-a1c7-4677-8690-1c82e0a0a012",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bf87cd-11f3-41a7-b1f4-4d1ccb7fcc91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e8c3be0-720c-4e48-81fe-29a9b373a2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015ff32a-edd5-4cc8-aac1-d3371f563772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51b3573-4f4b-4338-aa63-f6ed0dd9cddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04641b2e-338d-43b3-8193-03b5de1aaf73",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534fee46-be98-42a9-8782-28947710e909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6fc424-4705-4f24-9225-643ae1e17e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450aa2f8-27c2-4a42-9b52-1f065bac8cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90dd94c-c7f9-4b52-ad34-68081c126242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57968d78-2ca2-49ca-b073-95ab3ea030a0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19603687-ee39-4916-8944-11cd5a037eb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47bb659f-91bf-4424-b3ec-8771bcad99b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99efdf5f-d7cf-4d3a-98cd-d17d1eec5fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6f0d2e-71cb-45d0-96ec-33c413c9d46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12876062-9f29-4d1f-af40-e14f50f4235c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ebd36a-1dc0-4288-98d9-c93e23c1bebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0548979-dc6b-425a-a944-36125a5b74c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb8de53-3a1e-4271-ac2a-dd1f0c2c51dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641428ad-adc6-429c-a28b-de859e268187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3736ec-46f1-458b-8dd5-7fa089a7180e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2894518e-5056-4991-9b79-995ae5987ac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a67f53-278b-4c51-96f4-866a92624ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd79cd7-ef7f-4c88-9d70-18749c87f1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cdeebd-32d1-4f5d-b516-253255d408a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9703c35b-35e2-47be-a6ef-e18f3530ad3a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d924dd-e648-41f0-8bdc-3e2fd769a442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb838a9-e500-4e92-b326-74a80189d0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2f628d-efc3-4230-8c9d-98c8d7e7ef36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc59921-a31b-4701-bb14-da526375f4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfca7bd-79d9-4851-a007-b8d22a8faeb4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8d42dc-d47c-4270-897c-928c9b7acbd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae413558-42a7-4627-aef0-0753c9c3971d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f3dc57-d8ff-482d-9c25-3ceda650acc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84118368-bdeb-4ebe-a774-fe20a518404c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0018dd9-a5b4-4de6-83ee-f4021e58c7b4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5212a40d-bed0-4255-a092-495b6b993a17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75fb40d-0760-4107-93be-df85855724ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c69a33-d794-42fc-b948-418ac47dbeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe45194a-80f1-4748-b6da-40f189e0e510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85aea39-e668-4980-a869-92c67b92682e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c78fc89-65f9-4c45-9290-5fd96b49fbea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b731c5e-d92b-4a2e-8f9d-dbfd8c13b0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb10366-a717-463a-a06b-63ad7c812e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2022de12-2977-4d58-8f3d-28e6f4ce574c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db995cc9-fac6-41b5-a25f-df52df71d06b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d013a297-995d-4556-a4b3-88bdb4117179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6e22ac-0ff7-44c7-93f2-9dff9850b24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a09507a-6d70-4609-bb18-557a49748cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963aa807-b019-4fc4-bfd8-2b00a2c58448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9c2d6c-b9f2-49e2-bbb5-3c33af0b92de",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400c7546-3b35-4d74-b1aa-c44791568033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b61f52f-cb2f-4522-b6e8-3a966356e17f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d52c9f0-e18a-42b3-a092-d159b2531ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e393ff-e01c-4fde-a675-a6162792aefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf64c7e-2c1c-46fd-931f-e15f93120027",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab12b03-ea1c-4c84-95df-0f95c28913d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4172024a-c627-4e8f-ae17-4cc9c4988719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7770f1-b7dd-4bd4-97ab-52233ec19e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8cd24d-e520-48f7-a648-789310a55ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5059588d-1de6-4a13-84d5-2becee95b49c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845cab11-8dc9-432a-95c0-4fdae75647f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110fed89-3d96-41e0-8a26-f11d3c1d6a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3f66c7-b5cb-4f57-b523-303cba7fcc90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d3047a-b7f6-471e-a19b-8af8aae9263e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f595656d-6816-420d-bceb-b8f368bea506",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e81606-d2aa-4ad5-b8b4-8a9bcbfea602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "525b9bdc-d187-4a63-b009-084a850e946c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc65c57b-17d0-4026-89d2-4b2408bede15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2dd2f21-a544-4ec4-b160-6c04e5c9966b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be69334-a5e6-4d97-85da-5ce33721bb82",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110b9625-8c4d-4736-a0bd-418e35f7b2d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50939f03-a393-4cde-a83a-fab211e250d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c6a13f-be4e-4456-b8af-cbf1664732c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0cbdbc-fcf2-46da-b2b2-4c8ad486951c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d249e132-9dad-4b4e-9a6e-cb235ff0eac0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf48cb7-3c01-4aa5-bb89-85120dfb3ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe78e82-2103-4a28-a918-c951860b0324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028f5296-c69e-4bcf-8eae-42d9735962b3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29b9894-4faa-4951-8fd6-cad39d02d60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f186e667-3c83-4add-842e-c3dfe9c61271",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8c238e-e138-4555-a1a5-bf74ccb61f8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f30979f-81a4-42e9-9635-03f27e72c072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497eef81-53d1-4655-859e-d0d9093e77c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db4767a-2cb9-4c91-97a5-6883ecc6f5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19be9d2c-12e5-426c-a371-65d316c403ce",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee64e6d-6082-4f5e-96c1-3265ad6a1016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad791bbb-4c77-4d4d-925d-20962d101de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d672fc86-4f29-4eba-92a4-89d78063addd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fda11e-a9ea-4012-b75b-e1e8665ce2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60fad7d-1209-420e-b474-39cb850a8b27",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bf737e-a1c0-463d-9170-868501ddbae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75367fef-99dc-4ca8-bf74-741c3939650c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3904dd36-66aa-4c74-a60a-e32cae5f5c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47db98c9-a92e-47ef-a7c0-7a5443532c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8946a951-2179-49fa-97a5-8f04f9b3d4e6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb50ff2e-d609-4fe1-b427-b3c0c14cc561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b94ee0-71ca-4198-a51d-f29b1938ec59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8150ac8-d151-4532-abda-c9cb5dff5cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa40927d-6a44-468b-b23d-bea16b069472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e37ba6f-117b-4dda-9ce5-1cf2296ed910",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547a598d-7f62-425f-913e-45df4e9c697d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca9df939-aa06-41e1-9817-4ff49b504005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee459c7-ff96-405a-87d6-59a9226a71b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8781ac8b-9a4e-44ef-8f2a-e75c17bbd02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9523562d-bd65-4250-9cfa-ed74da80a712",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ca22c6-4fd5-4772-8110-334539f11bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d67c89bb-710d-4069-96f6-1a9090cf559d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cda29a-0676-4adc-85b9-0d490dc4b4ad",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c9d5cd-ab0e-4001-acda-8079db11182c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9117685-06a2-4d02-a5f3-02748f8160ba",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca50e64-a70a-4e80-85c6-9da75215ed16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc6d05a-2f12-4667-ab19-82aa039d8275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ba839f-c450-4a15-8981-3ba1eba6cccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d605835-8b46-457c-9975-b16330d235fb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e741e0f0-ba32-4207-8c6a-d54cbf375a7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78680116-a0ca-4425-ac60-1210715c4c50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a83fad8c-b3ba-40fd-86b8-d73570101aa7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0eb6179d-2054-43b7-96e4-dbf610c97771"
                    }
                  }
                ]
              },
              {
                "id": "46050752-b951-4eff-a6a2-20d3f2b1d016",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f06e811c-2433-4d54-b8d8-0a97301dde11",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06d061c-bdc4-4f1b-800b-b7d5b4bb9f7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d8f7954d-fe02-4187-886c-77c2fe7abe08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedadf97-17a1-4943-81e9-abe77d7032d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84f9a8a0-4dd1-424f-bdf5-74768fabc436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6627718-4610-4137-b479-2eff9be87661",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd9d3d8-a3fe-4d71-a33f-3ea7f678e62b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d61d9170-1660-44f5-b8fa-8c76a2f93450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d743fae4-85e3-4d91-a3ee-c1e0080ac015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d966c83-43e4-497e-83e7-d7be74a67113"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0da9f157-0d06-4b5d-bc7b-e49d22479635",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19325d01-4c23-4c0a-9c8a-76a6485ef107"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed432fbe-a061-4a44-a3a0-c39e81304ff3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78d79e6f-1303-4338-aeeb-6c354280ecd6"
                    }
                  }
                ]
              },
              {
                "id": "ee037c09-124f-448d-9053-cfa8b10a3faa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b97a9d82-b304-49f2-a6ee-aef42e636999",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75838c1-72e7-4a1b-8792-2f726ade93ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a684bc4b-6540-4e1d-b0fd-eac573615247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4772e339-7177-4834-bf07-7cb383ceb2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6927a1-7fca-403d-8f74-4926c59e759e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a800abac-2903-4540-b28c-f3dbb2092f83",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0564f4ff-2799-49f5-82e2-a11dacc2b2dc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6df4a63b-b70c-4838-a0cc-ab86f24f66fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c4faabf5-adb0-4151-9d31-6dfbd6226861"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20a05422-2e87-43dd-8e5d-dec93482a548",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ff72ada-8e61-477b-b7b7-f5dc71af447d"
                    }
                  }
                ]
              },
              {
                "id": "dbf76ac3-7206-4387-91df-8d51145c7a0e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c661b36-ca89-47dc-8636-bf93a393bb1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "68962233-0ee7-476e-a085-abf44b003bb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed31cf1f-3f5c-4088-8ab6-5bf50e95b8c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1aff6510-17fe-4697-90d5-7311ba140da9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1efe9fbc-cc34-4db0-b165-d8c8dda1f605",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ec562322-d80d-457d-85f6-7c0270c9d24d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ee71652-9be2-4d62-98d9-3dc48d528be1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d94d7c14-8308-44e3-80cc-328f4d1fb5fe"
            }
          }
        ]
      },
      {
        "id": "d899455d-de9f-4c1f-97b8-09026858e0d7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2a5fff7e-aa93-42da-ab11-6b4050ef27a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28404b06-e835-4373-8063-2d5a3214a4c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84dee1d5-c91f-47cc-957c-8add2d52e0b6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16f95d0-eeae-44d1-a6a5-a9ed957ccbe4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "711d73f4-9897-40c7-8bdc-e76918c3335e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41304401-a7e0-468a-ba4a-2c1d4d5c9f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85cc7184-7067-47f1-8226-86768a6131f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7f523b-2548-4a27-a388-7c89e3c178c7",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cee9d8d-fa5f-49c8-a5a1-05a22a32eb48",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "df240835-5bc5-4ace-a791-f9d35e59b06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a052cbaa-dfb7-46ef-80cf-0763612fad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a3ae4dc-5738-4e3b-803c-d0db2962fb4b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba4c5909-b205-4f87-807e-d5906b9be277",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "273d5260-f288-4576-9222-edfd3e1d0eb4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36d6cb60-86ae-4534-b89a-b086434673cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1c892e8-32ad-4028-8a26-5e74cdb482f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08a35530-3a29-46a1-9a29-4954812985ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "263645c5-44ce-4fa2-aa74-94fb72f739df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "268f57f3-e979-4e05-90a5-418208057a4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b551dc70-b40e-47ab-a858-eb5e0e1ab3cb"
            }
          }
        ]
      },
      {
        "id": "1de0f9c1-4a4c-45cc-a996-98bf415d51b3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ea40584c-9884-4e0d-92a3-258e7a87ffb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "925570e4-b190-4e54-88eb-158f6ee5f977",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "773027bc-6295-4ad4-989d-9e5f797234ec",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca82a98-2a53-4202-bfc5-ce9397c56603",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a48ab421-0615-4705-81ae-3314c454f401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2db563-8ecd-4e50-b8be-e121471051a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfb6821f-1659-4d5e-8ce8-c6eb75925fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a14840-3cbf-4b65-b897-8c5be14d186d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e87ecda-457c-49ee-838d-caf162e78bd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "136d0133-ef7d-4bf6-8317-1bf915b44eeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05271e9d-5f44-4954-9bc8-fa146d617f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0003b3e3-0ef1-41d4-9cdf-3a6da5359e86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e80bf77-2af9-445e-82b5-11b3817066b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7e67da1-9c03-49ce-b010-aeb0e35a6fad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52e4655e-bfe0-4f91-912a-e3b37dd79426",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40db4264-d280-41f7-a1a7-114d20ebc61e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "409ca43c-fd6f-4b16-a2c5-ea5c97a4db56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40c12c58-c113-45a8-914d-47207dac92ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "572d913d-aea7-4696-8c27-a1e001723535",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b61fd995-da26-4c00-b2bb-a028fa066e15"
            }
          }
        ]
      },
      {
        "id": "887cb02d-bf86-43c4-94d6-f401f764a1e5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a6170124-9d6e-42c7-ac9f-9c80a785c62c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9850097-6cd3-47ce-9341-4dfb5a155cc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b359574-4564-4b53-8725-28e1f3589d6d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dd12f9-314a-4b4f-8265-96216f177f2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "628f5a5d-27d0-467b-aafa-38a2ce350026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39665895-4d5f-458a-b524-3810eb240e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a8ed3a0-6567-4608-bd98-079ba91be0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1110839-1ba8-4fc5-b9c7-0c97befc8c1c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc95e78-40b3-422a-b7a6-58659ad3f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fe15fcaa-5fe0-4460-a0cc-696f7e2790fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e727108-c828-409c-ad63-8b8383910154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e75fd24-e1a9-476b-8e05-003229f35bdd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8302c558-7e6c-4092-8d0a-c92df25b1c7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daf943d6-ee59-4c81-af42-20d307ea5949"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "614e639c-ba11-4165-8724-d16a800c4a84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29a3a464-2892-4630-864f-1181847c5dd1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abdc03ed-d773-4c79-9ecc-01a6f0e543e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "33c2e842-6b96-4f15-b871-81b0f607795e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d4d3030-cb7f-49e8-ab7d-a2c4d029f3c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d48fa948-92d8-4b9f-ac96-cba6eee195d0"
            }
          }
        ]
      },
      {
        "id": "91df0221-392a-408d-9550-4d614cd45d92",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f087662-9c70-484d-a63d-86575cd94d86",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf58f44f-0227-4d7f-80f2-f3dab17f8e85",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ef6f4c8e-53de-4651-99e7-dbf8307a8e38",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84be02f2-1ffc-4aac-a936-151df9851731",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1647f012-82c4-47fd-a6f4-2dc3b33f4eef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 897.9692307692314,
      "responseMin": 29,
      "responseMax": 9941,
      "responseSd": 1120.5325000501505,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684284032496,
      "completed": 1684284279720
    },
    "executions": [
      {
        "id": "8c1b1e5e-b355-4eda-8327-2189096bd403",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "29d4bc61-38a8-4e31-9e58-44d51c65e879",
          "httpRequestId": "e70f677a-cfbb-4065-807e-27729b8b44a6"
        },
        "item": {
          "id": "8c1b1e5e-b355-4eda-8327-2189096bd403",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b44ffcf9-eb38-4e9a-aa64-51b2bc5c3f11",
          "status": "OK",
          "code": 200,
          "responseTime": 132,
          "responseSize": 0
        }
      },
      {
        "id": "5651931c-0150-4d60-a061-138571e0359b",
        "cursor": {
          "ref": "bca95b0a-bf9e-4024-9c00-1ba60f639b50",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6a81741d-75d7-462e-8a62-22cb41817a9c"
        },
        "item": {
          "id": "5651931c-0150-4d60-a061-138571e0359b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f8b4e26b-a33f-4c77-8a72-a8cc0c7a3b3d",
          "status": "OK",
          "code": 200,
          "responseTime": 29,
          "responseSize": 0
        }
      },
      {
        "id": "884feca3-c888-4691-a7d7-2b089d84b1ca",
        "cursor": {
          "ref": "c6b8f5cd-2208-45e9-874e-60cad178151d",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9345e6b3-6d33-4b2a-aa38-e992a4d6599f"
        },
        "item": {
          "id": "884feca3-c888-4691-a7d7-2b089d84b1ca",
          "name": "did_json"
        },
        "response": {
          "id": "cc02f236-af24-4e11-85ca-df67887b49f0",
          "status": "OK",
          "code": 200,
          "responseTime": 1296,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4a8481-9d2d-486a-b525-f8d0fc94dbd1",
        "cursor": {
          "ref": "2fc52ab7-bda7-4d85-a4e2-fac11ea3aa54",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e87b82aa-cad7-496d-a653-ca091e0f089c"
        },
        "item": {
          "id": "be4a8481-9d2d-486a-b525-f8d0fc94dbd1",
          "name": "did:invalid"
        },
        "response": {
          "id": "a325858c-3716-469d-b573-936e11feb593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4a8481-9d2d-486a-b525-f8d0fc94dbd1",
        "cursor": {
          "ref": "2fc52ab7-bda7-4d85-a4e2-fac11ea3aa54",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e87b82aa-cad7-496d-a653-ca091e0f089c"
        },
        "item": {
          "id": "be4a8481-9d2d-486a-b525-f8d0fc94dbd1",
          "name": "did:invalid"
        },
        "response": {
          "id": "a325858c-3716-469d-b573-936e11feb593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63b6e95-4357-4332-9fab-9a067d231b79",
        "cursor": {
          "ref": "7e5c5c0c-423f-403d-ad21-522300b7629a",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "245c006e-cb38-40b1-8f62-1addae2dde9e"
        },
        "item": {
          "id": "f63b6e95-4357-4332-9fab-9a067d231b79",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "874a236b-cf09-4136-b231-506b0953435e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1025,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbcd033-f274-4dcb-8ce0-c3dd3e809dd5",
        "cursor": {
          "ref": "d2c0dcb6-2fb8-4c9d-a734-e574794b56e3",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "61f44667-9ca1-46b1-8696-df32756f5dcd"
        },
        "item": {
          "id": "7cbcd033-f274-4dcb-8ce0-c3dd3e809dd5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e1802f8b-dcf8-42e8-8c73-1b32c16991c7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 600,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb12d65-a8aa-4389-999c-1343c50eb18f",
        "cursor": {
          "ref": "05a7a5bd-bb04-4c6e-b0a6-56b3884ec243",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b20dde13-7c56-440b-8b9d-efe6392b396e"
        },
        "item": {
          "id": "abb12d65-a8aa-4389-999c-1343c50eb18f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "42dffd67-cae3-47a9-ab48-249554edbf7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71faaefc-2bb2-4c1b-aef1-440282dffb66",
        "cursor": {
          "ref": "cf9dca54-ce2f-46f7-9297-55f296a74d2e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c4054f7-5e22-4f9f-a644-21051e99caf2"
        },
        "item": {
          "id": "71faaefc-2bb2-4c1b-aef1-440282dffb66",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0fddb068-d392-4f1e-b782-e751c0d5f8c6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 633,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71faaefc-2bb2-4c1b-aef1-440282dffb66",
        "cursor": {
          "ref": "cf9dca54-ce2f-46f7-9297-55f296a74d2e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c4054f7-5e22-4f9f-a644-21051e99caf2"
        },
        "item": {
          "id": "71faaefc-2bb2-4c1b-aef1-440282dffb66",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0fddb068-d392-4f1e-b782-e751c0d5f8c6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 633,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c04e14-d880-4721-ae21-456b9e3037c9",
        "cursor": {
          "ref": "2a73b138-b375-4b91-8047-e07d05ee70e8",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b3e17c4c-af4f-4f89-8fc2-20aec4ffc148"
        },
        "item": {
          "id": "37c04e14-d880-4721-ae21-456b9e3037c9",
          "name": "identifiers"
        },
        "response": {
          "id": "1dd4c03d-6444-4d49-8d9f-f9ce1a7fd66f",
          "status": "OK",
          "code": 200,
          "responseTime": 1212,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e74eff2-efc0-4c94-a54d-52106c9a52e7",
        "cursor": {
          "ref": "6d4d8ce7-db91-4938-9fbc-610c2f7a2464",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a8efc203-71b0-4a4a-bf32-eb6d06f6f2ef"
        },
        "item": {
          "id": "6e74eff2-efc0-4c94-a54d-52106c9a52e7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "46451fe9-5169-4dbe-939e-f6a19f970acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e74eff2-efc0-4c94-a54d-52106c9a52e7",
        "cursor": {
          "ref": "6d4d8ce7-db91-4938-9fbc-610c2f7a2464",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a8efc203-71b0-4a4a-bf32-eb6d06f6f2ef"
        },
        "item": {
          "id": "6e74eff2-efc0-4c94-a54d-52106c9a52e7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "46451fe9-5169-4dbe-939e-f6a19f970acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a42021-d342-4a39-83b8-33476f25e3d3",
        "cursor": {
          "ref": "e56f5fc9-2d2e-4bc1-a914-96e56560f56a",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "919e756c-c94d-492e-b36e-97f1fedfe4e2"
        },
        "item": {
          "id": "51a42021-d342-4a39-83b8-33476f25e3d3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "fc448d92-7fb0-40a4-bc91-6246f60ea996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3225e96-543c-47c1-aa09-0604c58a3dc2",
        "cursor": {
          "ref": "bd9e3074-6de6-4afd-b720-a64a3b6bc66b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b0683d0e-61e1-4fb0-870b-7b73c9f95dad"
        },
        "item": {
          "id": "e3225e96-543c-47c1-aa09-0604c58a3dc2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9ce6a977-641f-4fe2-9c3b-620c3b7bc805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2739c49-195f-4b8e-8ef8-4040e5f62ce7",
        "cursor": {
          "ref": "6d31527d-1cae-4fb8-aec5-9eb7f0a9009e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "48482a8f-a160-403f-82e8-3dc29aeff782"
        },
        "item": {
          "id": "e2739c49-195f-4b8e-8ef8-4040e5f62ce7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a786d206-e856-4025-b68a-c5d65c201679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fff9e7c-d41d-4c2d-a92a-7ba8dc4972b5",
        "cursor": {
          "ref": "983b1cc5-6a4c-4b11-bdae-6282497eb11d",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ff16dfe7-a885-4094-a841-4b5a26fbc399"
        },
        "item": {
          "id": "4fff9e7c-d41d-4c2d-a92a-7ba8dc4972b5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cb0d77f2-abfb-4a16-877a-b2b6050c3a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6093fe-4c77-40dc-b424-3a731325378d",
        "cursor": {
          "ref": "76dded30-fd4d-423a-99d1-57de94a9189a",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "48cf6fcd-0477-498b-9210-cdd09e90bf7d"
        },
        "item": {
          "id": "db6093fe-4c77-40dc-b424-3a731325378d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4b5c7559-f8af-4304-8362-fce7765586ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacf0452-a243-46c5-b527-38bd9eb0fe66",
        "cursor": {
          "ref": "47a91af9-79e8-4861-89a3-f2684b2debb0",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b5d2e656-f1b3-479b-8601-77472a50716f"
        },
        "item": {
          "id": "dacf0452-a243-46c5-b527-38bd9eb0fe66",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1ed27c7b-2d15-407a-8166-606a19cbc2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829fccc9-0808-4846-bd77-0bc061a616ad",
        "cursor": {
          "ref": "fc82c3d7-a8a5-455c-8aa9-cf984d68e8a9",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "23e3abac-1035-44e6-bb15-ca6500b6b0a0"
        },
        "item": {
          "id": "829fccc9-0808-4846-bd77-0bc061a616ad",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5c02b4aa-9b5a-4fc6-a346-3a573cc4dd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1178b347-b5be-497d-a285-8bf5a9bc87bb",
        "cursor": {
          "ref": "85e9d70c-3e76-4b88-96f7-6544841e2e06",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bbb6280f-9592-4e2f-91c7-48420ed3eb56"
        },
        "item": {
          "id": "1178b347-b5be-497d-a285-8bf5a9bc87bb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "66178206-0e13-4371-8e4c-525a833e9050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328d1881-a98a-46d1-9b71-1e6ae8b7b404",
        "cursor": {
          "ref": "20f8754f-19c5-4f00-b1fa-76c1fe377a56",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8f0e2f28-31d8-49ec-9a7b-a026d7be3c18"
        },
        "item": {
          "id": "328d1881-a98a-46d1-9b71-1e6ae8b7b404",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "577a1ee3-8027-4a75-ab93-0a602498cb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56448288-5f5e-4d44-8167-ab9371115565",
        "cursor": {
          "ref": "3fe29b19-25ad-41dc-bb7d-3cad01e371c7",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ff8bab0f-1812-4a44-a27f-952f4bbad62f"
        },
        "item": {
          "id": "56448288-5f5e-4d44-8167-ab9371115565",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "765e9af6-8534-4db4-8db8-b5b40da32aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25fffc5-efa9-4529-a676-0b8ce6bb7260",
        "cursor": {
          "ref": "84d020d2-4f65-49f0-86a4-9f9d7872b33b",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4d2c5c7b-8da4-4a75-b2c8-4db0174aa496"
        },
        "item": {
          "id": "b25fffc5-efa9-4529-a676-0b8ce6bb7260",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4c117b9d-ef90-408d-9e2e-1c7f25051f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701c22f8-aac1-43f9-bfbb-d985eade5baa",
        "cursor": {
          "ref": "53a8b10c-6edf-49d8-9044-f74fe9b941c2",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "219f5eb8-c60a-4fec-8e20-7a47cb79914f"
        },
        "item": {
          "id": "701c22f8-aac1-43f9-bfbb-d985eade5baa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0cac2c63-202d-4b7b-942b-8f0da4ad1e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda79809-c5cb-4ca7-b8f4-601d8b671c18",
        "cursor": {
          "ref": "e7527db1-5811-40b9-b12f-d6be4617fbce",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "deb774a2-f896-46d4-b0c5-8205f48d2f42"
        },
        "item": {
          "id": "fda79809-c5cb-4ca7-b8f4-601d8b671c18",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "efbab719-828b-4483-bd67-9225ac506307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628a152c-54be-4618-919b-fcf4c1ad2413",
        "cursor": {
          "ref": "8891fd44-4daf-43c1-8a4c-a41b8f05d85f",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "266de344-63c7-48d6-b2ce-56c86f36ce79"
        },
        "item": {
          "id": "628a152c-54be-4618-919b-fcf4c1ad2413",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cf37c89b-6de5-485a-ae4d-ad1741ddb116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7304e58f-a06b-48b7-a832-51cb26089415",
        "cursor": {
          "ref": "eec75780-0dea-4bba-9069-307aa5a5e0f5",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "55dacb46-cd6e-41fc-a556-cf0dacf68f3e"
        },
        "item": {
          "id": "7304e58f-a06b-48b7-a832-51cb26089415",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "35c9a5c5-5a74-4dba-85a0-801c3315dc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40032d75-fe17-4116-9bf0-92cfa5c4633a",
        "cursor": {
          "ref": "a103a423-3907-470a-991f-fe73e8887eab",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "df34780e-b954-426f-b969-714b2d14cd2d"
        },
        "item": {
          "id": "40032d75-fe17-4116-9bf0-92cfa5c4633a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0e7b0783-409f-4d89-bbd5-8c198ed91b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1fd3aa-5696-4644-acc6-914c6aac8c8b",
        "cursor": {
          "ref": "96e0cea9-67be-4998-8739-608faf020429",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8816efab-d136-4369-bdd7-213b747c70c5"
        },
        "item": {
          "id": "6a1fd3aa-5696-4644-acc6-914c6aac8c8b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2331a2bb-aca1-4024-8da6-2ddb4bfce326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394f132a-1ba0-4a37-95c4-2aed649dce32",
        "cursor": {
          "ref": "e563d51c-33ab-430d-90ac-58121c00cd41",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b63e1605-3819-4bcd-a1bb-073241100470"
        },
        "item": {
          "id": "394f132a-1ba0-4a37-95c4-2aed649dce32",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8ece3687-5a72-4387-b985-063ebfbba4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed247cf-1cdc-4ef6-a4ea-3bb98a7c6de0",
        "cursor": {
          "ref": "96092277-8c4b-4e91-b982-7a7c878478b3",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "911fdcdd-f6d6-4bdf-aa7f-275b96b1279b"
        },
        "item": {
          "id": "0ed247cf-1cdc-4ef6-a4ea-3bb98a7c6de0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b0923d0a-a0d9-4ac9-a648-5cd5ee326b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8618d6db-63fe-4741-bd3d-bbb1d07e2d4b",
        "cursor": {
          "ref": "afd7359e-0041-4845-ad49-093f220d225d",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d6ebd7fd-7ca6-4559-b8c9-53deee057536"
        },
        "item": {
          "id": "8618d6db-63fe-4741-bd3d-bbb1d07e2d4b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "319a6e9b-7b36-49b7-9c15-0f62c640c152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d15b194-8c8e-4fe3-a31b-5feb1ecf7fb3",
        "cursor": {
          "ref": "dba7c2fa-18b5-4814-9df8-e682df3aed6e",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "64d014a0-d5f1-4b88-b99b-cabdb8306c16"
        },
        "item": {
          "id": "7d15b194-8c8e-4fe3-a31b-5feb1ecf7fb3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9d31d810-e210-42d3-8d78-f98eeaf4e91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5c67d4-3d7f-44b6-a6b9-7c18bb7e73fd",
        "cursor": {
          "ref": "8787723d-2885-42b9-8727-210af9256dbf",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b29ad05e-4d35-43e2-baa6-4477a0d785fd"
        },
        "item": {
          "id": "4b5c67d4-3d7f-44b6-a6b9-7c18bb7e73fd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2685b604-6838-4ed3-94a7-b3abf1442982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1107,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37faee89-69bc-40f2-b127-f0af5066a6ae",
        "cursor": {
          "ref": "c22f53de-2301-499f-9731-cf99bc2c44f7",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dca31e2f-8960-49b7-867c-7472ab7bee5b"
        },
        "item": {
          "id": "37faee89-69bc-40f2-b127-f0af5066a6ae",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "115c9b54-574d-47ea-89c0-12af632cfac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1057,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae4294a-db3a-417c-92aa-87fa469904f7",
        "cursor": {
          "ref": "7622c974-0977-47da-9971-92cab409941e",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4f53e210-a3ab-477d-80e7-57ad05d631b9"
        },
        "item": {
          "id": "0ae4294a-db3a-417c-92aa-87fa469904f7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "29445076-dfdc-4f8a-9779-a975bad2a39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1194,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc020b03-597b-4c24-b757-459a6de8fc79",
        "cursor": {
          "ref": "29e53f9f-760f-407d-b6a6-808a0603dd2b",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "36692bba-5c9f-4bce-b606-27df275c32a6"
        },
        "item": {
          "id": "dc020b03-597b-4c24-b757-459a6de8fc79",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7aa2cc25-cf66-40c5-8a30-2105b4cd08d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2006,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5aaa95-e5e1-4b40-8efd-99e5f34d4c1d",
        "cursor": {
          "ref": "21fb3264-28c8-4938-ac9c-736a61604ee4",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "47bc68d2-2adf-46a1-964a-94577f6da8eb"
        },
        "item": {
          "id": "4c5aaa95-e5e1-4b40-8efd-99e5f34d4c1d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "973802fb-a24f-4b62-80ae-71093068c400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1627,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ac3045-cb78-4aec-b6ff-e2d609bccb47",
        "cursor": {
          "ref": "163816cf-942b-4dad-9dcb-806c778f48fa",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "729aaf90-8253-4041-b683-b7c5e2772929"
        },
        "item": {
          "id": "a3ac3045-cb78-4aec-b6ff-e2d609bccb47",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dd6e79b3-00ed-4a40-91e7-1aa9852aa027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1706,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753169ef-8c6d-4d2c-b689-99963d46bfeb",
        "cursor": {
          "ref": "54a95152-50ea-42eb-8391-79f548cb8f09",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9576478a-abe2-4a46-af5d-1e7f3ac08db9"
        },
        "item": {
          "id": "753169ef-8c6d-4d2c-b689-99963d46bfeb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b1919bba-5a64-4beb-a2a1-4e139c74a1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2102,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37f8d8e-8491-4af9-852c-5d938e1a1660",
        "cursor": {
          "ref": "56b424f5-c2bd-40ad-ad97-0b8f291aef41",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c7dbc373-33b7-4a39-96a6-87b579f6113a"
        },
        "item": {
          "id": "c37f8d8e-8491-4af9-852c-5d938e1a1660",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d29afe45-8b4a-4c3f-bb23-0599de466188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1563,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20e6930-e7a9-44b1-b67d-b4302b12cfca",
        "cursor": {
          "ref": "318f93ea-d82e-4dd2-80e0-22bc29e5b8c6",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "336b1409-42c0-4faa-8e28-083a926c31e9"
        },
        "item": {
          "id": "b20e6930-e7a9-44b1-b67d-b4302b12cfca",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b60bcf6e-a4fe-4f1a-a8cc-63cc78405216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1103,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ffca3d-56a8-46b4-9343-75346e96343c",
        "cursor": {
          "ref": "220787e0-15e8-4d7e-89ba-bf3e661484b4",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d1777a88-3601-4255-9c47-ec9ad523c1ca"
        },
        "item": {
          "id": "99ffca3d-56a8-46b4-9343-75346e96343c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "01b27360-6cfe-4312-8845-afb8fde5b1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ca5f2b-29f8-4109-bdda-fbf7e00517c7",
        "cursor": {
          "ref": "c7bc509f-faab-4b2c-b69d-840ee3e94c0c",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d40b4c0b-4401-4084-8708-a65442668307"
        },
        "item": {
          "id": "73ca5f2b-29f8-4109-bdda-fbf7e00517c7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9a3aa6ff-70ab-41c5-86bc-b44e0adc472b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1ef02a-01c3-4dea-9537-be44755d6cfa",
        "cursor": {
          "ref": "d8b0e79d-7a3a-4cd0-87b7-ff98c98a5f51",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "29d39eb4-cad4-474a-846d-14fdf84a2058"
        },
        "item": {
          "id": "ff1ef02a-01c3-4dea-9537-be44755d6cfa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "584acb59-2923-4478-8ec3-246d654ec465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e024734-9783-4d9a-bae0-9385100ef2f3",
        "cursor": {
          "ref": "46fd9b67-652c-4c73-bcba-f3fc9f785020",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b842c0e1-9d8c-41b7-8982-7da3654685d1"
        },
        "item": {
          "id": "0e024734-9783-4d9a-bae0-9385100ef2f3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c7d49ee8-07e4-41fe-948b-f4703c542d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1736,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a094e68-6067-4d13-bf32-19285ad8549f",
        "cursor": {
          "ref": "ffc6aa7e-a16d-4997-8b8f-d069edb934a7",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d69720d2-029b-4a83-8ca4-56a7109ad4ba"
        },
        "item": {
          "id": "9a094e68-6067-4d13-bf32-19285ad8549f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8b6f1436-193c-45a1-992d-aead7bc97fb0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2793,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db717a3-cbfd-416e-ad01-b28f631599a2",
        "cursor": {
          "ref": "9abd8855-1d01-403f-aeef-0218f2af4d21",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cb2aa6e9-98b2-4f97-b998-13bde3e8036c"
        },
        "item": {
          "id": "0db717a3-cbfd-416e-ad01-b28f631599a2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1d3280bb-f986-4b72-a376-2bd97494361f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1921,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcd3f56-3aaa-4500-93d4-fd42083bc228",
        "cursor": {
          "ref": "ea0ed361-d335-400c-af4f-fd4e9e323c3f",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bb4a5ce0-66ee-4fc4-a9a8-b791847452aa"
        },
        "item": {
          "id": "abcd3f56-3aaa-4500-93d4-fd42083bc228",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "08b5b8fa-662d-4adb-8ca9-e0c5896b78ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1925,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4585691e-0383-4eeb-8d39-6aeb71010c94",
        "cursor": {
          "ref": "09a125bd-a7ec-4608-a6cc-f588f0dce304",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "be93cc1d-daeb-4640-b89b-4ee06083945d"
        },
        "item": {
          "id": "4585691e-0383-4eeb-8d39-6aeb71010c94",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ecf0da25-e9e2-4718-a224-06de13cd05b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47430aff-00cf-417e-812f-81c13755c614",
        "cursor": {
          "ref": "71a86629-3cf5-4cec-97e9-b22ceb672565",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7a173956-809e-4f30-84a9-10af54862e8e"
        },
        "item": {
          "id": "47430aff-00cf-417e-812f-81c13755c614",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d74a3e43-a23d-4670-9a2b-ff3539cf682e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df676a3f-6e34-45c5-9614-c31a6b129bca",
        "cursor": {
          "ref": "6a52e019-07b8-4fc2-aeb0-0dac69789fe7",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d362c94c-d468-4ecf-9440-f5ffebfda32e"
        },
        "item": {
          "id": "df676a3f-6e34-45c5-9614-c31a6b129bca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6436ee63-0f46-4fb5-a006-ba88425fcb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f55729-7b8f-487b-97af-7befdaa75fd6",
        "cursor": {
          "ref": "ff4a6ad0-7fcb-4568-80bc-f9953a17482e",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "839ecebd-b998-4cb3-81c7-f2cc6b13edcd"
        },
        "item": {
          "id": "b5f55729-7b8f-487b-97af-7befdaa75fd6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6b955270-213c-418d-850f-a60114da04fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22226646-93b1-47d3-8e18-ba13a7a4b5ef",
        "cursor": {
          "ref": "637b89cf-c8d2-48ac-bc98-f4280b63ffc3",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f03c38c0-eb95-42bb-9c87-9af851b5c8c9"
        },
        "item": {
          "id": "22226646-93b1-47d3-8e18-ba13a7a4b5ef",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5888ec53-ce88-4438-991a-fbe47bd5241c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1122,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849dbbd3-2f1c-4c04-bfed-adf613781902",
        "cursor": {
          "ref": "0f803fbc-e539-4e6f-983d-8f1c96b0b388",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5ac13c3e-f2aa-4b39-9ff7-3f2d37952ec7"
        },
        "item": {
          "id": "849dbbd3-2f1c-4c04-bfed-adf613781902",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7fbdedd2-a726-4012-aecc-f2f6284717af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03ef4a5-e665-4d82-b490-d01ac8d7bdaf",
        "cursor": {
          "ref": "0a91b6e1-82c4-41a5-a934-cfb3f678e993",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "62cf1f8e-d832-4581-a0dc-8e0155fb17fa"
        },
        "item": {
          "id": "b03ef4a5-e665-4d82-b490-d01ac8d7bdaf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "50e0e890-e432-474b-a674-1171d795051c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 924,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b376df-69f4-4fbb-b37c-c38cb70bb143",
        "cursor": {
          "ref": "cc1c344e-0dfc-43cb-b194-f6a74112d3d9",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6f3f52a8-274c-4165-b23e-d9547831a6d4"
        },
        "item": {
          "id": "74b376df-69f4-4fbb-b37c-c38cb70bb143",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "10aa0718-d337-4328-96e4-e2445e2a98c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd915ee-02f8-4aa2-8c63-fecbe4b6e7dd",
        "cursor": {
          "ref": "115e2d73-c8b3-459f-9150-2dbcff96f7c8",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a5f0d6f2-bc9c-4373-a5c3-e667e5e19ad7"
        },
        "item": {
          "id": "7cd915ee-02f8-4aa2-8c63-fecbe4b6e7dd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ab2505d1-21df-4416-a164-d0bc0f8232f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d12f596-a495-4a6e-8606-dd42fa6c2d70",
        "cursor": {
          "ref": "af0bff9c-16a8-4486-ab74-785bd5d104b1",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "55e19ab4-ce0b-4cc9-86e4-60c78bf19849"
        },
        "item": {
          "id": "8d12f596-a495-4a6e-8606-dd42fa6c2d70",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "880805af-96e6-48e9-844d-089498e35f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 949,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7c30b0-e276-4585-a4a6-eb532a9b4896",
        "cursor": {
          "ref": "f43fe8a2-b92f-46b1-a95d-493da98754f0",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "373b0f95-e914-4740-9bee-d4dbec17628a"
        },
        "item": {
          "id": "ac7c30b0-e276-4585-a4a6-eb532a9b4896",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9d7b2f62-6eb5-4708-94eb-d923adeb7ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ec3d40-1a6b-4bef-9371-351ca18a7462",
        "cursor": {
          "ref": "86b5ef51-5f1c-4f26-9250-d78b77e17de0",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4271ef7c-6bd0-4c89-8654-76b1256b74e7"
        },
        "item": {
          "id": "b8ec3d40-1a6b-4bef-9371-351ca18a7462",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cbc4ebbc-6665-4160-b691-ed14d997a624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493f187d-d811-4078-b3ce-a5bb63021afa",
        "cursor": {
          "ref": "6305c606-097b-4a98-a175-ce92601ad057",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f745c908-1c0f-4f94-9a14-5c3399b011ea"
        },
        "item": {
          "id": "493f187d-d811-4078-b3ce-a5bb63021afa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3fa2c85b-e260-42f1-940f-7f73f817dbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f3bb76-89d1-43db-b30e-23576cb0d0ed",
        "cursor": {
          "ref": "740f8a9f-4ed9-47c4-89c3-5e1bdb21a5c3",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e37d518e-a4e2-4c6c-acff-e16f966dae4c"
        },
        "item": {
          "id": "05f3bb76-89d1-43db-b30e-23576cb0d0ed",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8e7f3f7c-6606-4b92-8fae-ac5cabb14cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94935379-5a9a-4299-bc44-158c34c4c0b4",
        "cursor": {
          "ref": "1755f516-4baf-4905-b82d-4c77fe1ec684",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "386a42a6-3115-403c-92e1-96797ba4a083"
        },
        "item": {
          "id": "94935379-5a9a-4299-bc44-158c34c4c0b4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "43e9fcb0-339e-4d5f-8bc5-13cea8d0fca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0da961-ede0-4a07-97dc-bfdb49ab48fc",
        "cursor": {
          "ref": "291b3d83-2f5c-4cd6-a892-1fce35c2d462",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1ad6639a-195c-4c91-997f-937e0b739911"
        },
        "item": {
          "id": "4a0da961-ede0-4a07-97dc-bfdb49ab48fc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b18cbecc-c5a6-45e2-a848-4203a8f5aba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 917,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd29e3a-d4d2-4692-9872-649dce7fa758",
        "cursor": {
          "ref": "bd41a4f5-8492-4cfc-9c51-d1d99ed303b8",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5abe6d0a-da2a-45f8-8b9d-67174fc51bcb"
        },
        "item": {
          "id": "8fd29e3a-d4d2-4692-9872-649dce7fa758",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "88b02a5b-4254-4f76-87f1-52ae491ab9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfcc478-c6fe-42a1-8e2d-920b0b1738eb",
        "cursor": {
          "ref": "464161bf-9d55-444b-9102-84eecd6ee168",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "322dd74d-c862-4259-abea-89c12bbf2db9"
        },
        "item": {
          "id": "3cfcc478-c6fe-42a1-8e2d-920b0b1738eb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d84e0896-c053-4c62-8888-6e38ff30f665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d4b92b-75c4-43ac-862b-d4e518ae1867",
        "cursor": {
          "ref": "4746e4e3-dd7e-4331-b8de-7acc9ede5c14",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7287c297-fd0a-434a-8940-ec5e3818da4b"
        },
        "item": {
          "id": "e2d4b92b-75c4-43ac-862b-d4e518ae1867",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e964347d-a397-4d6d-aa5d-fb8347c2add5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa96db2b-e6dc-44a7-b70b-42128c67e19d",
        "cursor": {
          "ref": "317c5353-f331-4117-963f-395f397fdefe",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b43d01a7-a108-429a-8c5b-5c15e9bc6fae"
        },
        "item": {
          "id": "aa96db2b-e6dc-44a7-b70b-42128c67e19d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ecd2179a-e9c6-4ff3-a699-193267e22210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511527e5-392d-46bb-9b07-d8d996472cd6",
        "cursor": {
          "ref": "a3372169-f755-4d84-98ec-681dfacac925",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8f054c4a-7b27-42d0-abe7-f7d68a7329b1"
        },
        "item": {
          "id": "511527e5-392d-46bb-9b07-d8d996472cd6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "38018cb6-86ef-44cc-9ba5-3488d3febab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 950,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216f6d46-4889-4f90-999f-2ea66b3bf068",
        "cursor": {
          "ref": "abe2410f-2d59-4e82-b724-a57edfdf906a",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8acb3cf6-e41c-42df-8e6f-552df1178819"
        },
        "item": {
          "id": "216f6d46-4889-4f90-999f-2ea66b3bf068",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "32e9ced0-f3f8-4022-9cfa-f8a450073ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 965,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585422be-a5e9-4410-b2e2-01176529e6ea",
        "cursor": {
          "ref": "89c77c47-70ec-43b3-9e60-2efebfff2c77",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4fbb3f66-6460-4c3e-b67a-c48079610aac"
        },
        "item": {
          "id": "585422be-a5e9-4410-b2e2-01176529e6ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a70af0ca-a907-4d55-8e16-08876c9b3942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38af6e76-8e98-46d4-8f3a-18a2f30a2789",
        "cursor": {
          "ref": "714d1278-01ab-4287-8486-36bba8b1efe6",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2156985c-63b3-4032-a079-0421285d37bc"
        },
        "item": {
          "id": "38af6e76-8e98-46d4-8f3a-18a2f30a2789",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "07f8067b-3c17-4dae-9643-d730148b5192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf841c3-23fe-4485-8574-da96bf212591",
        "cursor": {
          "ref": "b0f39a99-47bd-427a-95ac-7ef74ae718a1",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fca8a983-0947-49eb-b70c-a1188aea0562"
        },
        "item": {
          "id": "8bf841c3-23fe-4485-8574-da96bf212591",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "49186107-4b0d-4775-90f2-c8ab4a42dfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0116b9-b83e-47a1-ae3c-d8769512e418",
        "cursor": {
          "ref": "1a924cd6-35f5-45d7-ac9e-b5ce588f88e3",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d7d5d58b-b388-4205-a611-00865f8306fc"
        },
        "item": {
          "id": "3a0116b9-b83e-47a1-ae3c-d8769512e418",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4260137f-8598-4a40-8e30-b213d3df0b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd9b543-f33b-4b67-bca3-f32e64c6bcb1",
        "cursor": {
          "ref": "7016e1fe-50f1-4212-88c9-0ab9c3ec34b4",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6dec5277-f8ad-4ac6-9486-52208bdf50e6"
        },
        "item": {
          "id": "3bd9b543-f33b-4b67-bca3-f32e64c6bcb1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "534c8c12-8450-4cf6-8d62-be6a2e35ef3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a31af2-95ff-4cd0-9ca8-08c47aad2855",
        "cursor": {
          "ref": "a1e34a29-0884-4d5f-a669-15c8625bbbdc",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2d5cdfda-53c6-4710-b635-559f11f69418"
        },
        "item": {
          "id": "b0a31af2-95ff-4cd0-9ca8-08c47aad2855",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b0880003-d81e-44da-82b9-675a1ba9f5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1023,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16d9227-ac35-435c-ae84-0095283c4ece",
        "cursor": {
          "ref": "63abb486-34c4-44f7-a696-e210b84fe3c8",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7a90ed9f-5a0a-4544-9472-b0524f47c71e"
        },
        "item": {
          "id": "d16d9227-ac35-435c-ae84-0095283c4ece",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d0de44ca-021a-4208-a4bf-495a43b6314b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76eb4827-8461-4e1b-b22b-65a0a120e6c2",
        "cursor": {
          "ref": "2383dd6d-c245-4a4c-88f7-227a78f858b7",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ac5231c8-3c45-4823-9cf4-92ca7b889c93"
        },
        "item": {
          "id": "76eb4827-8461-4e1b-b22b-65a0a120e6c2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7faa3df8-03f3-4b45-be89-7a6bcde99d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d10fac9-55bb-4a70-911e-7ff8768d52d6",
        "cursor": {
          "ref": "830a9aab-570b-4a37-811b-4e197ee4a419",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1d47cb72-9f31-4af2-ad0d-c1e330e6f10f"
        },
        "item": {
          "id": "0d10fac9-55bb-4a70-911e-7ff8768d52d6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "169a446e-8ffd-4a63-a098-c7843c193323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff6bd9b-d58f-4388-8d20-cdeae0972ca7",
        "cursor": {
          "ref": "2f931da6-7a98-4d45-857f-a52ceb29383b",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bfd8139d-d0a4-4ac1-ac64-12461b82b807"
        },
        "item": {
          "id": "dff6bd9b-d58f-4388-8d20-cdeae0972ca7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b03bb110-a3e4-4ced-bfe0-dd13e75f3fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0184323e-55ae-4bde-a16a-f006743c556a",
        "cursor": {
          "ref": "dc47af4a-34a1-4ea6-b6b2-a19b366ef942",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fff5d309-3033-4b42-a07c-73b9375f7b3b"
        },
        "item": {
          "id": "0184323e-55ae-4bde-a16a-f006743c556a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2c93f02d-b788-4852-b6e9-dc1bafb0cc1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060649c3-414d-4937-9e17-bccfc94447bb",
        "cursor": {
          "ref": "46efe5ca-8fed-4d4d-af6c-c73e7fbadbdc",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a44ecb46-ea7e-442c-9191-ba126ec59ec8"
        },
        "item": {
          "id": "060649c3-414d-4937-9e17-bccfc94447bb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "46f02501-9e61-45c6-82fb-1db946c81f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c345252-9962-4fae-9596-97cbdae7122c",
        "cursor": {
          "ref": "19ba9834-41a5-4cde-820f-e1b200aaa2bc",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e1b1152f-0509-49a5-9bac-b446d6437e11"
        },
        "item": {
          "id": "1c345252-9962-4fae-9596-97cbdae7122c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4c2ecd5e-2f81-4113-8ac5-68c2b45a85fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9191867-5acb-4558-b846-9f59c97e02d4",
        "cursor": {
          "ref": "b7944381-c182-4dd6-92ac-0b8622e3b8fe",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "944186b7-1616-4394-b9c9-45adf21ba14f"
        },
        "item": {
          "id": "a9191867-5acb-4558-b846-9f59c97e02d4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c44e5185-79b1-467f-84c6-7c9daa1bfeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b0c320-ca02-4a79-a852-095883b6ed6e",
        "cursor": {
          "ref": "1557fd89-9a56-44e3-8123-6deabe40c34f",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3e79c079-ecc7-4404-afc2-9b78745353ee"
        },
        "item": {
          "id": "d5b0c320-ca02-4a79-a852-095883b6ed6e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0c0b5c19-224c-4e4d-a531-880543237663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3fe629-2c0c-4bed-8004-c92d14476305",
        "cursor": {
          "ref": "b4baeea4-086e-4fb6-a781-2dcfeedde68e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "de02a1d0-4168-4486-a608-0ca73617a4e1"
        },
        "item": {
          "id": "0f3fe629-2c0c-4bed-8004-c92d14476305",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8893e1ca-29ef-4d75-ba00-251e8c1f4d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9cc247-6bc7-4534-90fb-37c12be188a6",
        "cursor": {
          "ref": "359ea1c2-bd5d-4462-99c3-45840cc0c78e",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "05d5a9f6-1fb7-4679-8ea4-7244fe91fa23"
        },
        "item": {
          "id": "cd9cc247-6bc7-4534-90fb-37c12be188a6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9cc3b721-a310-4db1-9c2f-6cd226d6478d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33924dd1-56e2-462b-9546-b262cdf6cf5a",
        "cursor": {
          "ref": "8535b1c6-071a-4fd2-973f-5c03f2b78f22",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "19c7f5a5-866a-42bb-ab55-ae31451b7099"
        },
        "item": {
          "id": "33924dd1-56e2-462b-9546-b262cdf6cf5a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a562cb4d-0b45-4179-bb9e-0727dc3c0f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9c95f5-99e8-4979-a0f6-b45218b1f178",
        "cursor": {
          "ref": "698e16f9-bed3-472c-af0a-dd22e9c5c4e4",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d889c5d7-82b5-4edd-955d-2ac226952aa7"
        },
        "item": {
          "id": "6d9c95f5-99e8-4979-a0f6-b45218b1f178",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ffe74dce-2b3a-44ae-8a9a-fbbe02a87743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f33d30b-9f73-471e-9030-bb494fafb21c",
        "cursor": {
          "ref": "d019f1ab-5983-44cf-83ae-8d588c6f5822",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ad614d91-53b2-4954-82d7-b5976d81db62"
        },
        "item": {
          "id": "4f33d30b-9f73-471e-9030-bb494fafb21c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "41cd3512-3647-4cd9-98d3-d46bd3c7420f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a0d9d4-2b22-4903-99fb-3078bf17d938",
        "cursor": {
          "ref": "0b9e6b46-93a6-4ae4-afc6-1a32dfc12c7f",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7bfbdc21-bf2a-406d-ba28-8804c06947e8"
        },
        "item": {
          "id": "b5a0d9d4-2b22-4903-99fb-3078bf17d938",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "638277c0-d7d9-47e8-9839-4acfc0a48925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a970449f-062c-43c3-90f7-3ce9b91edd7f",
        "cursor": {
          "ref": "a91f64da-560b-4921-a258-75133a6cbb97",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3a5e4403-e742-4227-a2c9-9098b3a5f49d"
        },
        "item": {
          "id": "a970449f-062c-43c3-90f7-3ce9b91edd7f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a3e827e0-3d69-4ec6-ae7f-b76efff2bf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce09316c-e0cb-4720-8620-4b1fd43ab45c",
        "cursor": {
          "ref": "6ecd7ba9-d536-451f-b7cd-1e030b4fb145",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1acc81cb-f3cd-48a5-9ff4-e14b0dd72e4c"
        },
        "item": {
          "id": "ce09316c-e0cb-4720-8620-4b1fd43ab45c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2b18a553-0bcf-4135-9f7e-b40e57bec8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f936ebb-f420-444b-9995-de0601a286e6",
        "cursor": {
          "ref": "02571a6d-a576-4bfe-9eff-e420c4b96a7d",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "34b5efcb-55bf-4b9c-91a2-0475eb9c11d6"
        },
        "item": {
          "id": "7f936ebb-f420-444b-9995-de0601a286e6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "91cac1bd-7a0e-4d51-814a-9ea2794d9609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0c5b3f-1f6b-4144-8683-baa3f5b42f01",
        "cursor": {
          "ref": "9ea7d1fb-6c59-4636-9462-c0d2b7b08166",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "79570f48-cd35-4e5c-9fb8-74e405403077"
        },
        "item": {
          "id": "fc0c5b3f-1f6b-4144-8683-baa3f5b42f01",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "391ef6de-a4da-4baf-a1a5-02ee7867db8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e2a097-b029-423c-9ace-2be25dc5f4d1",
        "cursor": {
          "ref": "953dc4ec-8e43-4f93-8d99-e6ce5d4a3e28",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b722f3d3-4ca6-44bc-bf98-a5ddc9a2d6b9"
        },
        "item": {
          "id": "a0e2a097-b029-423c-9ace-2be25dc5f4d1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e7728827-e6ad-47f7-99ad-6fc4a7aa78de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da010b6a-57d7-49d2-876b-b8d2c1944390",
        "cursor": {
          "ref": "326be701-117d-4077-9b14-4d4976e67647",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "385ec8b1-0a33-4205-9f81-15a31c06a0d5"
        },
        "item": {
          "id": "da010b6a-57d7-49d2-876b-b8d2c1944390",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a1dc3940-6129-4d4f-a2ca-595442f6af6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0796db66-267d-4c99-a3ee-3de42b8f1d08",
        "cursor": {
          "ref": "2b168ddb-2ede-4067-8efc-defca5e59d60",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "75ab7695-4ef5-4042-b365-957c6bbce18c"
        },
        "item": {
          "id": "0796db66-267d-4c99-a3ee-3de42b8f1d08",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3a3e7bd7-a2ce-494d-819e-1c76150d88eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dab78c7-034f-43ed-aecf-40a67394dd1a",
        "cursor": {
          "ref": "2c77c761-5742-4521-b9bd-f8187c108c8c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d5c35643-3e12-4f0c-8b6e-eb2576b98a9a"
        },
        "item": {
          "id": "6dab78c7-034f-43ed-aecf-40a67394dd1a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "55c55df6-03ca-4913-99b0-5d85bc352cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1268,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff97c55-c455-40bf-8cb2-e623ba49639b",
        "cursor": {
          "ref": "2dd6d9de-ff24-47d1-b71e-feea2bb9b67d",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3e83c59c-074a-4b48-8f1c-e3312cfaf782"
        },
        "item": {
          "id": "5ff97c55-c455-40bf-8cb2-e623ba49639b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0ea85c51-3670-4830-bf85-09cf13bde767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1328,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa9c2e4-0f9c-435c-ac95-8416b258cd7d",
        "cursor": {
          "ref": "fb07a769-a100-4cca-b2b4-4fdf5331b222",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d482e4c8-6f2f-42e0-b2b0-d592144507c9"
        },
        "item": {
          "id": "efa9c2e4-0f9c-435c-ac95-8416b258cd7d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7af73dbf-85aa-4227-ba18-bc474e13a3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1127,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0049a8-04e1-4ce0-8c21-cadc2e7bc0b8",
        "cursor": {
          "ref": "3fb82e91-5688-4afb-8164-54be7c3a2cd3",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c0c9c8b7-4787-4cde-a934-158bfe2fe9c8"
        },
        "item": {
          "id": "7c0049a8-04e1-4ce0-8c21-cadc2e7bc0b8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6b9478ba-9c71-402b-af3d-431f08b87f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1281,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57aac59-360f-42b5-8071-69b5b39eadba",
        "cursor": {
          "ref": "969da8ca-08bd-49f8-a435-3beafc5ac9a8",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8e304490-730c-4ec6-a4a3-1ede028993e9"
        },
        "item": {
          "id": "e57aac59-360f-42b5-8071-69b5b39eadba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bbe9a2d6-587d-401a-940d-2538fb685f67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0d3b06-ed48-4969-b57e-d5be98ecc2ca",
        "cursor": {
          "ref": "4c2e7402-8ed0-49bf-a503-09cda017ccfa",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "81e86e21-f489-4ed8-9712-6792295e0564"
        },
        "item": {
          "id": "9c0d3b06-ed48-4969-b57e-d5be98ecc2ca",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "10de685a-50b1-4f9c-8fdb-b501c600b50f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1243,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e58bafc-02bb-46c5-ad9b-aa323a7717d0",
        "cursor": {
          "ref": "131614a2-6bce-4c1d-993a-f1c70b4f56cd",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "db549013-ec23-43f2-b4d8-ae2ca5abcd62"
        },
        "item": {
          "id": "2e58bafc-02bb-46c5-ad9b-aa323a7717d0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "28bea112-ee55-4855-812d-0ca20e43b1d2",
          "status": "Created",
          "code": 201,
          "responseTime": 7590,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b926a7e5-06ed-42d9-9a5f-b4610cfd6506",
        "cursor": {
          "ref": "0abbc540-ab8b-44a2-aa53-909924095552",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "033695bd-a7a6-4126-a98b-8431fb340244"
        },
        "item": {
          "id": "b926a7e5-06ed-42d9-9a5f-b4610cfd6506",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3fe7d49b-4fe9-42a1-9abc-de16b6a64c73",
          "status": "Created",
          "code": 201,
          "responseTime": 7275,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b12ca5-8ca5-413f-abbb-c7eb6e1c0b95",
        "cursor": {
          "ref": "cb36cb15-2e0f-4414-b334-46e92d406f2b",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "01851cad-f389-4d8e-b37b-4db1c7d4ab58"
        },
        "item": {
          "id": "60b12ca5-8ca5-413f-abbb-c7eb6e1c0b95",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a7afc67e-d64b-433f-848c-f5542fb84152",
          "status": "Created",
          "code": 201,
          "responseTime": 8523,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a3e44d-f977-432b-ab43-03c89706c596",
        "cursor": {
          "ref": "99c9bfc7-0894-4bb9-bf76-91899baaff18",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9e85b63d-6a87-4322-89a5-288447159857"
        },
        "item": {
          "id": "d7a3e44d-f977-432b-ab43-03c89706c596",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7942033f-048b-4816-9281-19d3240dc559",
          "status": "Created",
          "code": 201,
          "responseTime": 6235,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3013ef31-46d4-4247-82f6-cc5dcc0160e3",
        "cursor": {
          "ref": "48e84c99-88b3-48e0-ac3c-730c01a012b4",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7cc1c259-eff5-432c-add0-2cd33c67afd2"
        },
        "item": {
          "id": "3013ef31-46d4-4247-82f6-cc5dcc0160e3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "aa76eff9-035a-4c34-9341-1a8edd86b550",
          "status": "Created",
          "code": 201,
          "responseTime": 6415,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "537400f6-8eff-4513-aca9-6b3061cea157",
        "cursor": {
          "ref": "3595c8b2-b799-4d26-b1fe-c56a9d19e2d8",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3cbd813f-473c-42ef-a2a7-56f1d36ea5da"
        },
        "item": {
          "id": "537400f6-8eff-4513-aca9-6b3061cea157",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "76292121-85d3-4397-8a24-ac65d45d8a32",
          "status": "Created",
          "code": 201,
          "responseTime": 9941,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9662409d-0a44-40cf-8c82-4b66fb3833a5",
        "cursor": {
          "ref": "858ddbf0-49bb-4c2e-8092-711c45c3a15a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "59b3c284-9470-494a-9b11-8d8d25d696bb"
        },
        "item": {
          "id": "9662409d-0a44-40cf-8c82-4b66fb3833a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b540221c-c32a-4f6c-a64e-c1ffa89bf030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9662409d-0a44-40cf-8c82-4b66fb3833a5",
        "cursor": {
          "ref": "858ddbf0-49bb-4c2e-8092-711c45c3a15a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "59b3c284-9470-494a-9b11-8d8d25d696bb"
        },
        "item": {
          "id": "9662409d-0a44-40cf-8c82-4b66fb3833a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b540221c-c32a-4f6c-a64e-c1ffa89bf030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0853ebe6-9fec-47ce-8f96-ea093b4e2084",
        "cursor": {
          "ref": "7d30b15e-72a3-4cb9-a916-7a1f69479bab",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6b48f0a5-c6d9-43cf-96d8-1d135e5cf117"
        },
        "item": {
          "id": "0853ebe6-9fec-47ce-8f96-ea093b4e2084",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cbdf9437-0c78-41f4-8f08-a4d5a6272c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de2bd26-c669-4a6e-a02c-726149b5a115",
        "cursor": {
          "ref": "761f1a2e-c43e-4d3e-b1b0-58b646116155",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "565f5bd7-c069-4e8f-b4b0-c832abfc43e7"
        },
        "item": {
          "id": "9de2bd26-c669-4a6e-a02c-726149b5a115",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a490c9d7-6ae4-474c-9fe1-6ccd683800d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78275e72-120e-4164-8900-36418acd763c",
        "cursor": {
          "ref": "14d34fd0-ecac-4ecc-990c-0e4fcb47a242",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a363e026-e9f1-43c9-badd-40ae6c91d64f"
        },
        "item": {
          "id": "78275e72-120e-4164-8900-36418acd763c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ad510403-1fce-443a-b606-8f2c88d97b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa01999-5fd2-4bb1-b46f-ec393ef27b44",
        "cursor": {
          "ref": "531fa05c-26e5-465a-9981-6d2603590015",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ab8029cb-ac16-4520-a13c-7b534b772a0a"
        },
        "item": {
          "id": "afa01999-5fd2-4bb1-b46f-ec393ef27b44",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "34bd4a8f-d085-4803-ad18-3d663fb5a062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb97ec4f-930b-4d76-9ca5-07d438f083c7",
        "cursor": {
          "ref": "e86f446a-654f-4a8a-9902-4b4625220236",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "57f1de8e-dbc0-44cd-ba11-dd61750dc0b2"
        },
        "item": {
          "id": "cb97ec4f-930b-4d76-9ca5-07d438f083c7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7ba1b8c6-8bb2-40d7-9355-d84f9463be03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7440b40b-bbad-4459-9d89-bd360273f9ed",
        "cursor": {
          "ref": "92f0c3bd-22d2-4ced-8d94-3cec00efa21b",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a3d4c1aa-4638-46b1-8d60-519255135685"
        },
        "item": {
          "id": "7440b40b-bbad-4459-9d89-bd360273f9ed",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eaba30f1-272f-45c3-96d1-29641af6e5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20e0e9d-1d0a-4a28-8e4c-0f5869469aa8",
        "cursor": {
          "ref": "04eaf2ed-5cb4-43a1-93ad-10e9a2894b20",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ea380cf4-3a9f-458e-8ba5-770c5ba5418b"
        },
        "item": {
          "id": "c20e0e9d-1d0a-4a28-8e4c-0f5869469aa8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f7797b36-bc3a-4d30-b06e-6f3e71eb3166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8910602-bef0-4495-8234-dc4043a1bf20",
        "cursor": {
          "ref": "e26ebbc0-831d-4b8b-aa83-78794766758a",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "838f07a8-b2e1-4dba-bd2d-6415b314ea78"
        },
        "item": {
          "id": "b8910602-bef0-4495-8234-dc4043a1bf20",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "20044fce-e43c-4865-8474-17c1a9dd5c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a654ddf5-124e-47cd-bb51-89041af8c8b1",
        "cursor": {
          "ref": "bb9cd8fa-164a-40f2-896e-156b45d6bed0",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "355b1484-5e19-4e37-9a0f-edcb52799850"
        },
        "item": {
          "id": "a654ddf5-124e-47cd-bb51-89041af8c8b1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5883b32c-870f-487d-9c4f-983f21e401c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c26a344-78b1-4ff5-8ded-9ad94d60941d",
        "cursor": {
          "ref": "b13eefc1-0d8d-4638-a52b-caacda2a3b2f",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "79a1392d-726c-4920-9b39-56a5bceb22da"
        },
        "item": {
          "id": "6c26a344-78b1-4ff5-8ded-9ad94d60941d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "507ad3f8-8918-41d4-b1c6-ecc13d9d7863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a484adf-45fc-45b8-aa03-207258f003e7",
        "cursor": {
          "ref": "bc3f3bf8-cf0e-4f00-96f6-1a29be917f4c",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3ec712f5-5be8-41e0-9fff-84d9f5ede1f6"
        },
        "item": {
          "id": "3a484adf-45fc-45b8-aa03-207258f003e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f85f8552-0092-45c9-9c86-1ddcd236ce7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f7f790-1eed-4753-9516-2bde8457585d",
        "cursor": {
          "ref": "6b0d3058-2f7d-4bdb-910a-5b6904e96b89",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f375a3bd-bea7-4bb6-aee3-bcd1adf2c0e2"
        },
        "item": {
          "id": "90f7f790-1eed-4753-9516-2bde8457585d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "da0a90e7-478a-4967-a095-ed3afa710153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8486581f-536f-4099-8aa5-08d5c53c492d",
        "cursor": {
          "ref": "70c2147f-66cf-45aa-889b-5426bece0ddf",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7d5222fd-6f06-4e41-8533-a6feacc9d3e4"
        },
        "item": {
          "id": "8486581f-536f-4099-8aa5-08d5c53c492d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1efb7e4f-a5e9-438b-87e3-891ff891eaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f14c3e-d743-42ae-a3c0-ad556ff3aa8d",
        "cursor": {
          "ref": "ad89014e-8267-4d7f-91be-da52b9f985a7",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e42217ff-88e7-40ba-8c9f-83cc346623f2"
        },
        "item": {
          "id": "21f14c3e-d743-42ae-a3c0-ad556ff3aa8d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1ac018bb-f267-4f37-a0d6-e86fa22078f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13555a9e-ac4f-43f2-8a94-75bee5f6a83d",
        "cursor": {
          "ref": "9a6f0106-45d3-45e1-8372-0b18f182acf8",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b4d4ffb7-5308-40fc-acf6-ee88f4724aff"
        },
        "item": {
          "id": "13555a9e-ac4f-43f2-8a94-75bee5f6a83d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "43977b55-8cea-4549-a395-8fe6035322cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6b1191-bf52-426f-8271-db341861d30d",
        "cursor": {
          "ref": "f0705fe9-77bf-433a-8f8d-c57b31d83650",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0dc72bd5-6bcc-4a15-aa15-d82fa7fd7b6f"
        },
        "item": {
          "id": "fb6b1191-bf52-426f-8271-db341861d30d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "332591a9-59b1-4d92-b3ba-f04a2e87a479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480af5f0-6a66-4708-aa87-ba92b0c1d814",
        "cursor": {
          "ref": "edd5bb12-aa3b-4d84-b553-ea51a2fc35d6",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cb3d31b2-215e-468b-b563-76d82a38cbce"
        },
        "item": {
          "id": "480af5f0-6a66-4708-aa87-ba92b0c1d814",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6fc7b60a-f33b-49f6-8ad1-6102245cf1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3603a59-f582-49aa-aaeb-c773f21d3b93",
        "cursor": {
          "ref": "4e03fe77-b75b-4cf9-8c1b-80e765747cdd",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "84e90bf2-267e-42a3-b4a1-f09e930d2f83"
        },
        "item": {
          "id": "d3603a59-f582-49aa-aaeb-c773f21d3b93",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fae58e32-261a-4d40-b070-ce94262bde19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd0e67b-0c07-47c1-a8b8-79db5ed3b75a",
        "cursor": {
          "ref": "19beeabc-2551-486f-af1f-b1dc7d31f0f0",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0026a263-b9e0-4134-875a-8fafce6e5074"
        },
        "item": {
          "id": "ebd0e67b-0c07-47c1-a8b8-79db5ed3b75a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "940bf697-a676-461c-817c-28bffb0f92dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e78514a-c77d-46e9-9f9e-89fb02e1f99c",
        "cursor": {
          "ref": "b61e6e19-6625-420d-ab7e-1320ca770c75",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3a8b2502-ffec-4781-bbad-d0846f3ea37d"
        },
        "item": {
          "id": "0e78514a-c77d-46e9-9f9e-89fb02e1f99c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "52661363-a551-47ad-8153-578c404b7173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba618a8-60a4-4653-814e-401af3bbf288",
        "cursor": {
          "ref": "73e40180-efab-40bc-bc9e-8f61b8a41815",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d62fbaaa-95a5-4801-ac31-035ad19905d9"
        },
        "item": {
          "id": "7ba618a8-60a4-4653-814e-401af3bbf288",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "23ccfe65-0e2e-443b-ab9a-82a7827cd71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d24176-3431-4783-8070-9690ba1a1c22",
        "cursor": {
          "ref": "12419847-6fc9-41bb-88aa-e5bf2238b4b0",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3461c0dc-ffa2-43c5-9cd6-22c079df7fa9"
        },
        "item": {
          "id": "97d24176-3431-4783-8070-9690ba1a1c22",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "da3b8db3-623d-40b7-aa3b-78bb5b15c2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b270273-edaf-4121-adbf-d73927f6cdf0",
        "cursor": {
          "ref": "e5ddab4e-b373-41ae-8228-d260ab88f494",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ecc247b9-cb99-4339-a50d-7f04f06e8933"
        },
        "item": {
          "id": "6b270273-edaf-4121-adbf-d73927f6cdf0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "66f3f93c-a6f0-48d9-b27e-8df9d410a2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67430bd-db83-4b26-9eec-29bdb72051c3",
        "cursor": {
          "ref": "e18a5a1b-d1e4-459e-b62a-21b81173380a",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cabc2aa0-7e82-4713-9d8c-e66512d8538d"
        },
        "item": {
          "id": "b67430bd-db83-4b26-9eec-29bdb72051c3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a28c945d-03b6-45f4-8a05-f9458c119548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7edac2-f125-4e92-8d00-07f1103a2f9b",
        "cursor": {
          "ref": "8a8a46f2-b137-4c26-9996-eca7110f23f7",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cc08f5aa-c94f-4e81-8637-f978f5de0ad1"
        },
        "item": {
          "id": "fb7edac2-f125-4e92-8d00-07f1103a2f9b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c0fcb7c7-b268-4dad-a6ac-73180c009cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e67259a-bf46-4b51-aeb6-4c55f2349f0c",
        "cursor": {
          "ref": "bc790df5-ff8d-4e5d-8211-fadd545fd7e8",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "88bd8eb8-935e-47d2-ae7d-5d56fdf42ddc"
        },
        "item": {
          "id": "1e67259a-bf46-4b51-aeb6-4c55f2349f0c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "74db62dc-8a47-49e9-b5b0-69b53eba4d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d455b010-492d-48f8-b771-b1a99abf5f08",
        "cursor": {
          "ref": "99202319-e118-4990-ac33-1abcd0bf6893",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3cb137d3-06fc-4381-823f-2e78dfed2b6b"
        },
        "item": {
          "id": "d455b010-492d-48f8-b771-b1a99abf5f08",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c489b2af-1023-45bd-9be3-6f2b5a192091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a37dd6a-df8b-4b12-b4cc-fd77bcdbdd6e",
        "cursor": {
          "ref": "309da27f-c1ca-4e5b-b122-f166965ea98a",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9e8c786e-d2e5-40aa-b091-2b81adff908d"
        },
        "item": {
          "id": "7a37dd6a-df8b-4b12-b4cc-fd77bcdbdd6e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f2f28545-03c3-451b-bc9b-8b4edf2d1b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db8054e-d43f-4e88-a84c-4c92b1d97a95",
        "cursor": {
          "ref": "bdb538eb-fa2e-4f87-ba45-19a8c2379ee6",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fd50283c-1ac3-4956-a4d4-b3278cdc6a3e"
        },
        "item": {
          "id": "6db8054e-d43f-4e88-a84c-4c92b1d97a95",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "82f37d02-57af-40ed-8f5b-5b99fee57b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d714ea-2d5a-4281-b883-47f77be1e974",
        "cursor": {
          "ref": "eeacc413-f4ac-44c0-bf3a-1d05f00dd32f",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "48467aff-dcef-414a-9b69-ba2579b413c9"
        },
        "item": {
          "id": "48d714ea-2d5a-4281-b883-47f77be1e974",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b8187ec1-3394-4a88-9569-2f8d7fd3eedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60a6b3a-a31f-46a2-96f2-eadc9a994066",
        "cursor": {
          "ref": "cd806878-91bb-4416-aed7-9c73a2b4b546",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0afdb848-e258-438f-9ce4-205a7a30c858"
        },
        "item": {
          "id": "d60a6b3a-a31f-46a2-96f2-eadc9a994066",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e04d7907-8821-430b-b452-6e5addf9b825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1747,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f157e1e-1ebb-48a5-96bf-5fbc4d4abc19",
        "cursor": {
          "ref": "7e3e9949-e18a-4f5e-b038-c88810c842e2",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4936ee7d-6fee-4c7a-a218-ac9bb1a8ffce"
        },
        "item": {
          "id": "1f157e1e-1ebb-48a5-96bf-5fbc4d4abc19",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "10959969-0bed-4e9b-a26e-e23e034dc547",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5deb45a0-7d47-4948-8467-9b39574c615a",
        "cursor": {
          "ref": "9a8ad5ee-fcf8-441b-9a04-558364f8d30b",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6f56200f-c662-4d09-bc2f-2cfd6b582d7b"
        },
        "item": {
          "id": "5deb45a0-7d47-4948-8467-9b39574c615a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "afa426a2-1273-47f3-b1e7-2c061da32ab4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 839,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfbe081-29fe-4432-9a06-3a53aa8ac530",
        "cursor": {
          "ref": "bc149a8b-52a6-48b9-bda3-2efa5cf69c5b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a9913833-96a7-4c7e-aaf3-5068aee70032"
        },
        "item": {
          "id": "4bfbe081-29fe-4432-9a06-3a53aa8ac530",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b4b0286b-01f0-46f4-a915-d6286f55cae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfbe081-29fe-4432-9a06-3a53aa8ac530",
        "cursor": {
          "ref": "bc149a8b-52a6-48b9-bda3-2efa5cf69c5b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a9913833-96a7-4c7e-aaf3-5068aee70032"
        },
        "item": {
          "id": "4bfbe081-29fe-4432-9a06-3a53aa8ac530",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b4b0286b-01f0-46f4-a915-d6286f55cae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5071b1c5-3a55-4c66-8732-1c7a2d4c6240",
        "cursor": {
          "ref": "2764f976-f858-406e-8dd1-1eecfa44d6a1",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fc32930c-10be-451e-8fca-6de5ad37d54b"
        },
        "item": {
          "id": "5071b1c5-3a55-4c66-8732-1c7a2d4c6240",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3a913c34-7fd7-4fc6-ae3d-8db4ef263fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46866836-e0e0-40d1-9ed2-79652574be22",
        "cursor": {
          "ref": "ee283871-54d0-4aa8-bac3-d0ddc0b09650",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "98f72752-b010-426c-99d3-c388070ab434"
        },
        "item": {
          "id": "46866836-e0e0-40d1-9ed2-79652574be22",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ef044708-dd7a-4427-9732-6e7391bd8348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd743ef-4a98-4bb0-a561-170f8ebd7548",
        "cursor": {
          "ref": "20ccc120-72b5-4674-a2fa-a0e11b27495d",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b52a8eec-93a3-4bb2-8618-059fb87e4940"
        },
        "item": {
          "id": "dbd743ef-4a98-4bb0-a561-170f8ebd7548",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe4ef1fc-15dc-4bb9-9264-8ff8b90ecb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb89f637-36f9-4677-bac0-59f9d94510f5",
        "cursor": {
          "ref": "d1014a65-1b2d-427a-8bf8-432e090b967d",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9d503487-42bb-4f98-91e6-d49ff90f0b19"
        },
        "item": {
          "id": "eb89f637-36f9-4677-bac0-59f9d94510f5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5b70bac1-6193-44c0-89d3-5296c4d0ac26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7affea25-4049-4722-9e4f-36741c3c04bb",
        "cursor": {
          "ref": "8712b655-38ad-459a-b74a-bf68f48b211b",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "618df5d0-e7ee-4184-8ba5-678cbd33ef34"
        },
        "item": {
          "id": "7affea25-4049-4722-9e4f-36741c3c04bb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3b252065-2b19-4d43-babb-cdb27f0b44ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2848ee-d971-42d4-b535-d26edf4d3c6f",
        "cursor": {
          "ref": "42bd1165-59cf-49bb-b8f6-ca80608286fc",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fdf5062c-91b4-437e-8be4-7be2bfc87743"
        },
        "item": {
          "id": "0c2848ee-d971-42d4-b535-d26edf4d3c6f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d560b08c-1862-4fb6-97b1-d39049b8d02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f653b83a-942e-467b-96a6-b20ca40d1422",
        "cursor": {
          "ref": "e0d05889-b250-47a1-8800-f689213775bd",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f49e144b-a91a-4290-b446-4c7788a57bd0"
        },
        "item": {
          "id": "f653b83a-942e-467b-96a6-b20ca40d1422",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "79963ee2-f1b1-45d8-a074-304f26831883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dee650-975a-4921-ad70-50bf11197c5e",
        "cursor": {
          "ref": "d5cd5009-ec28-4d73-8123-c480cfd3ca72",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c42ba0ed-9e63-4c78-9028-41c62581e4a4"
        },
        "item": {
          "id": "80dee650-975a-4921-ad70-50bf11197c5e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3d182725-dcbd-48a3-be85-f94d391306f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ee3c8b-3cef-4613-8f47-59f4c2b8010f",
        "cursor": {
          "ref": "215ec16c-67b6-4f03-beb3-b975988af961",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "79469f48-5c32-4a3f-b87d-c8ee3769680a"
        },
        "item": {
          "id": "e3ee3c8b-3cef-4613-8f47-59f4c2b8010f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "96bc60ea-61d9-4317-acd8-f6571f2722da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fc1d82-c814-4c9c-94f5-ef44f86d3e51",
        "cursor": {
          "ref": "3dbb4b40-6bc7-48ee-aed5-de5e774a0bc6",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5f212471-61a8-44e6-807b-4c4bc2562e13"
        },
        "item": {
          "id": "73fc1d82-c814-4c9c-94f5-ef44f86d3e51",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3dfbf169-7115-4ff9-9a30-b039e2679b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f195895d-fbb8-4dba-8d96-d35000c5cc34",
        "cursor": {
          "ref": "a946c055-1bbe-45ac-a54d-44fa0161bb21",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "94ec39e9-f126-4e4c-80af-1474c426cf23"
        },
        "item": {
          "id": "f195895d-fbb8-4dba-8d96-d35000c5cc34",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c6a05a28-b5cf-4788-a58d-a65c4746c139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18218bf-8ad5-4971-9190-017d0cc2e68d",
        "cursor": {
          "ref": "7de7b51c-9393-4f2f-a93b-87670f33ef03",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "16a6a52a-d0ec-477f-b476-4a6e0f3b7186"
        },
        "item": {
          "id": "a18218bf-8ad5-4971-9190-017d0cc2e68d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "df4c84cf-baf1-4600-bdf6-9356bb682163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf3f3f4-8bb4-4bbd-93a4-6b025db78660",
        "cursor": {
          "ref": "995f7081-e359-4d6a-b48a-05aba4ab4917",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9fe2f45c-088e-4a4e-bad6-971f44bde01f"
        },
        "item": {
          "id": "caf3f3f4-8bb4-4bbd-93a4-6b025db78660",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "024e57a3-a5d1-4b5a-a177-3f1f9520a5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3a7735-7246-40f6-93c6-22996a67ab4c",
        "cursor": {
          "ref": "a8b7e120-8df9-446b-83e0-7d66cd4eac27",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "56cab4cb-3d19-472f-8521-713cc94bc560"
        },
        "item": {
          "id": "3a3a7735-7246-40f6-93c6-22996a67ab4c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c0f388fe-c2e4-4033-9aee-a02a468cc525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e636e833-7f86-4d0e-aabf-17c1c43e0d2d",
        "cursor": {
          "ref": "1b9f39ed-c54a-4d18-b2e9-d8b902639130",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ad6656e6-9e6c-4a5f-a73e-6b441ecafbfa"
        },
        "item": {
          "id": "e636e833-7f86-4d0e-aabf-17c1c43e0d2d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2b9557d9-e423-488c-9d06-f745b9b712c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef27fe8f-c746-4d34-ad8b-f1ef79d20953",
        "cursor": {
          "ref": "171ae79e-77d7-4f3d-bd59-a7f68be0e63a",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "35291cfe-789f-4111-b280-75000eaf7170"
        },
        "item": {
          "id": "ef27fe8f-c746-4d34-ad8b-f1ef79d20953",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fdc9c9b1-ff09-417f-b2dc-0c8c762f2afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fb0fb5-076e-4da0-a4e2-e73916e3d58b",
        "cursor": {
          "ref": "449ce5eb-5f1d-42e0-8ddd-b96dcdd8126f",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "72b8bf9c-a68c-46e9-bc0f-d31aec830c74"
        },
        "item": {
          "id": "25fb0fb5-076e-4da0-a4e2-e73916e3d58b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9ab4bf86-bc34-4e11-ac80-739cb160504d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943a8112-5465-4f34-b115-d93825fdef2b",
        "cursor": {
          "ref": "c016331e-8aff-4540-8a82-368849eba1fb",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8fe76c65-c0bc-4787-8cb1-8efa449fe814"
        },
        "item": {
          "id": "943a8112-5465-4f34-b115-d93825fdef2b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "441c00e1-1638-40d9-8aaf-d9374769ab41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276f3155-9014-486e-ab85-b6a2cf017e23",
        "cursor": {
          "ref": "7f321c1b-359b-4ca8-9826-3bab7997acd9",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e34926ce-5fb6-4021-aaa4-1d8c87ecbdf2"
        },
        "item": {
          "id": "276f3155-9014-486e-ab85-b6a2cf017e23",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "24546f36-fe9c-4be8-85d6-c0ec6066966f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52369626-5781-43c7-87cc-770e815b545e",
        "cursor": {
          "ref": "432adb45-a8f0-4ab9-9d02-447618e6a6e6",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e2410965-a75e-4d31-a84a-890fec353655"
        },
        "item": {
          "id": "52369626-5781-43c7-87cc-770e815b545e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bba725a4-3815-43fb-9c48-b32c313d8a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ea9cc5-d32c-4d06-8fbe-db6d087fbe33",
        "cursor": {
          "ref": "a89f323c-f94b-4d64-99fe-bb62b0175199",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0639765f-8cfe-4a28-91f1-7d9a05fd1fe5"
        },
        "item": {
          "id": "64ea9cc5-d32c-4d06-8fbe-db6d087fbe33",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "622a929f-ecb1-4c78-a72e-f0b085046982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ce1acb-3096-4cbd-bcbd-66620211b688",
        "cursor": {
          "ref": "5dd44e2a-e8b9-4db2-b895-c9d22a1a79c5",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6134df8b-0934-4813-a3b7-7b2e81e25d0b"
        },
        "item": {
          "id": "d7ce1acb-3096-4cbd-bcbd-66620211b688",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ddfb3de1-abbc-4060-bde5-a52973a9ea20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5eeb2c3-fffc-4b0f-8660-643a4846e6d7",
        "cursor": {
          "ref": "1d62607f-fbb3-4d8f-bc65-436dd2a3a346",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9bf30f36-ab7d-420c-8ade-7fc28e01fede"
        },
        "item": {
          "id": "d5eeb2c3-fffc-4b0f-8660-643a4846e6d7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ba72dd79-63a5-46e0-8371-59036f903c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50308fd-63e2-40ed-972a-f5b06cf2f33b",
        "cursor": {
          "ref": "31ad6e59-c1ef-4830-88ab-55c3771ee73a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "83e313b7-3d9a-410a-b57c-741fbbb2e4b6"
        },
        "item": {
          "id": "a50308fd-63e2-40ed-972a-f5b06cf2f33b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "46d57dec-e3f6-4c3f-97a2-ff31903e48a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b111ff-f509-419d-bcec-759fa3012eb4",
        "cursor": {
          "ref": "b771a1a9-48ac-42ce-9be6-3623a39cff3b",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3c113194-e539-42e2-b7e6-55a21bc06978"
        },
        "item": {
          "id": "f5b111ff-f509-419d-bcec-759fa3012eb4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "146d0163-c7f1-425a-a04e-5066d7804e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43901962-ec0d-4712-ac82-80974305ab46",
        "cursor": {
          "ref": "c38e5d81-d75e-4b00-9a8f-b15f5c014f63",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "018749d5-ecee-4cad-8e55-3b4957b4ab1d"
        },
        "item": {
          "id": "43901962-ec0d-4712-ac82-80974305ab46",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5111fd6f-bc60-4cba-92af-a189de6bc62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16033e4e-bd75-4b0f-8bb6-75675e6b0338",
        "cursor": {
          "ref": "7d4be4b7-894a-40c4-965d-026d0a0b7b52",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "778a111d-d1df-402b-b28c-bb3d8fed5989"
        },
        "item": {
          "id": "16033e4e-bd75-4b0f-8bb6-75675e6b0338",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "26eebc9e-b876-46a9-9426-f3ad558a70f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578025be-022c-4ad7-b649-2efc54ab1c92",
        "cursor": {
          "ref": "29a55f81-ee12-457e-8101-e091aafe541c",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7e9d7530-20ab-4ddb-a330-bbbe91a24fbd"
        },
        "item": {
          "id": "578025be-022c-4ad7-b649-2efc54ab1c92",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7aacdf23-2a75-418b-8133-f2807c8db98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dd945e-daa9-48be-bb30-ef84e5a517b0",
        "cursor": {
          "ref": "fa170b47-4568-4253-94bc-3c785c9b0196",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ace75090-7b06-4eb9-8a26-69e14045f4ae"
        },
        "item": {
          "id": "f6dd945e-daa9-48be-bb30-ef84e5a517b0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "69b89525-01be-4378-b970-8a972825074c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f347d5f3-4973-44a9-937d-79690e5f48b4",
        "cursor": {
          "ref": "5b5ca7d7-035c-4561-ad55-a5ec35f68c82",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "23b85be2-61c3-401d-acfc-6f82501264be"
        },
        "item": {
          "id": "f347d5f3-4973-44a9-937d-79690e5f48b4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e5dc6709-0ec4-4ee2-86b5-29914fdb62ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51960ff-362d-44cf-b6c0-1d1636a9f801",
        "cursor": {
          "ref": "60bac490-30e8-4cf7-8a6c-15608e17f7d1",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d99de52e-cef5-450d-ba18-a13ddaa96d6b"
        },
        "item": {
          "id": "c51960ff-362d-44cf-b6c0-1d1636a9f801",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3fb00a1c-f6f5-47fe-b0a1-dfaa8da053f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc26abc8-6e9a-4ba7-98b6-7464f3af99ca",
        "cursor": {
          "ref": "4a5d1fde-505a-4722-842a-cf47378b1f1f",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c7f3baa2-be21-4478-b3d7-cd47724083ad"
        },
        "item": {
          "id": "dc26abc8-6e9a-4ba7-98b6-7464f3af99ca",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0c3e92e8-af97-4969-8ced-5f24f0d44758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46a19b9-1bd3-40fd-bd3d-fede9fe00ebc",
        "cursor": {
          "ref": "90c453ba-699f-468f-82d4-1cd0faf85f1e",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6342ed4b-2e4e-4cd2-9c4c-2540a60911e2"
        },
        "item": {
          "id": "b46a19b9-1bd3-40fd-bd3d-fede9fe00ebc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "66d290cc-78ff-4acd-b04f-992d559f540d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f36f46-4adb-4b11-a846-5a4aa0486889",
        "cursor": {
          "ref": "5b80d352-adcc-4313-b930-8776c8a7a244",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3b167ed9-7e40-4d84-bc15-eed7ca104ca9"
        },
        "item": {
          "id": "b9f36f46-4adb-4b11-a846-5a4aa0486889",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "43511f35-6dbd-48b6-a1bf-caaf101244c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c1b866-56c4-48e7-b06b-f02d0c19b639",
        "cursor": {
          "ref": "e61bccc1-320b-4ed0-bbe9-81b58e1fedd2",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0141e6a1-2208-4a63-baad-9b2535fec092"
        },
        "item": {
          "id": "a8c1b866-56c4-48e7-b06b-f02d0c19b639",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c651da9a-200e-457a-b750-46063d97bd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f1009a-45b9-4bfa-99cb-6b24797be6f7",
        "cursor": {
          "ref": "42e4b87c-a1f1-4a7a-a6e9-316e288cccb2",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6641813a-4834-4076-aaaf-a811b86d69d3"
        },
        "item": {
          "id": "32f1009a-45b9-4bfa-99cb-6b24797be6f7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "82e89bf2-7646-485c-9aa4-998670623ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0b8084-f765-45d1-a43d-e9fb4a469593",
        "cursor": {
          "ref": "aed266e1-e367-4e26-927a-7496db4d5450",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4d17ce51-d8d0-441b-ab19-4d5c076fe424"
        },
        "item": {
          "id": "9a0b8084-f765-45d1-a43d-e9fb4a469593",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0a57f583-fcc3-408a-a76d-62ff43a811ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0b71e8-80f0-4fe2-baa7-3f925c6e34e5",
        "cursor": {
          "ref": "ea5749f4-5f50-4de0-b39b-9164d9086e81",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6ec4acfe-3ce1-437b-b07b-1c779043dc53"
        },
        "item": {
          "id": "1b0b71e8-80f0-4fe2-baa7-3f925c6e34e5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "79bfaf42-45cf-4495-9828-7a8f815b7dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6522fd-8be3-4182-9d67-32bf6e11c275",
        "cursor": {
          "ref": "714d0a64-f889-4e73-8e4e-337ad742f643",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f17eb058-4bb2-4ca5-a362-a4aa383f0fa8"
        },
        "item": {
          "id": "df6522fd-8be3-4182-9d67-32bf6e11c275",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "512f7f67-ea5a-411c-be65-e530815aba4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e750a33-8a9d-434e-a8aa-7e161b45d18d",
        "cursor": {
          "ref": "839af263-ba47-4cb1-8794-fb7627158862",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "634313a6-d729-4259-8396-42c6ef2978cc"
        },
        "item": {
          "id": "4e750a33-8a9d-434e-a8aa-7e161b45d18d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f2689e43-f18d-4830-8d28-9585b843dd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9415d8-0a75-40d2-a0c9-b29aa7286abe",
        "cursor": {
          "ref": "d7be3249-1fb9-41b1-a558-75f54c8474d0",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0408954a-b7f1-4ab4-a975-1a2dd7a30de7"
        },
        "item": {
          "id": "2b9415d8-0a75-40d2-a0c9-b29aa7286abe",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d9dbe1b4-4d6d-4d81-ab69-8930d18c98c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316cf571-b60d-40e0-bc6e-4664b246a094",
        "cursor": {
          "ref": "50fa8060-4b54-48f0-aef4-f4f4adc380c2",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bbc2af1b-b7c0-4535-af72-9a323db2199a"
        },
        "item": {
          "id": "316cf571-b60d-40e0-bc6e-4664b246a094",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2e3efd24-b4f0-447a-87df-4fc51e676b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d6c083-25cb-41f8-a98d-fb4a86ee8e81",
        "cursor": {
          "ref": "7074305b-8aab-47fc-9bfe-b8edc4c3c860",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b70a8d11-7178-40de-b05c-1ef7a4dff7f6"
        },
        "item": {
          "id": "b3d6c083-25cb-41f8-a98d-fb4a86ee8e81",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f3608ff9-9057-458e-8302-8d0aba44568f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42951bd4-ff92-4a60-a2a5-f7ece64830d1",
        "cursor": {
          "ref": "ac89fd38-01e6-47e3-b8ae-fd1aee91ca3a",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "98af7007-e92a-47c8-b3a4-ab840f8412e5"
        },
        "item": {
          "id": "42951bd4-ff92-4a60-a2a5-f7ece64830d1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a0822cde-5c84-48f3-b46b-01fb2a1f4ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ec0cc4-4194-4990-bd04-c9f76a751243",
        "cursor": {
          "ref": "ef1cebc1-7ab2-40a2-aa90-75941e8de36e",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b6909dd3-80dc-4f1f-ac7d-e21f390e4bf9"
        },
        "item": {
          "id": "77ec0cc4-4194-4990-bd04-c9f76a751243",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "22bf3171-3c57-4f83-9625-4a9f0cda2671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fe5d47-b25f-4baf-960c-df57fc63e01a",
        "cursor": {
          "ref": "7940b2f0-4f5e-4a8d-8773-163af70ad4bb",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "649f2e4f-3000-43be-b230-7ea7bdd88c98"
        },
        "item": {
          "id": "b0fe5d47-b25f-4baf-960c-df57fc63e01a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d5b36030-033b-45a9-ab95-ffc154c7b1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919b0ba5-85f8-46ca-b78f-5597b22f75a1",
        "cursor": {
          "ref": "0f2da29c-dad3-4507-af57-8d9463452a64",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3a73ea1f-28b6-4085-b728-25aec4c13105"
        },
        "item": {
          "id": "919b0ba5-85f8-46ca-b78f-5597b22f75a1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "03ed4a7c-a3d2-4963-a347-053105604056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0a4c40-1fd0-46cf-bed7-8d7f0c7bdac4",
        "cursor": {
          "ref": "1e2a6988-a45e-4105-b27a-2f8065d91757",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "976bd3fa-5267-4d58-904e-1c18383fdc78"
        },
        "item": {
          "id": "ac0a4c40-1fd0-46cf-bed7-8d7f0c7bdac4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ffe468c8-760a-47cf-b785-cd312a32802a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4490289e-1545-402f-b77b-121e17e57ba7",
        "cursor": {
          "ref": "c6dac82a-9f70-4f73-bf2e-3265054c60d7",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1d24425c-c31a-4b23-ae82-2869e991517b"
        },
        "item": {
          "id": "4490289e-1545-402f-b77b-121e17e57ba7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0fea2121-054d-45dd-b738-1965048fd994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c87c4f-3488-4a66-8e3c-d0441f048d9c",
        "cursor": {
          "ref": "7902474d-d48c-403a-9104-c4744e2f9526",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "de7bc747-6d77-4da3-8d50-caf3148fc84d"
        },
        "item": {
          "id": "40c87c4f-3488-4a66-8e3c-d0441f048d9c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "77a31447-1671-4637-81d1-b957b807652b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a7512c-ac81-4f64-b603-c931bfdeed81",
        "cursor": {
          "ref": "694af9d8-b2b6-4f12-851f-881cc7d95278",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cf1c1a8c-c808-44bb-9a91-6a3bdf0db198"
        },
        "item": {
          "id": "02a7512c-ac81-4f64-b603-c931bfdeed81",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f30cb336-87b0-4370-b4c2-d1b2fa5ca072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2cee5c-5ceb-4df1-9f32-7e6279c4a6f4",
        "cursor": {
          "ref": "d9053000-2f70-4910-8b3d-88d3375d1021",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "500245dd-2a5a-4dff-b423-0842d5ee91f0"
        },
        "item": {
          "id": "7d2cee5c-5ceb-4df1-9f32-7e6279c4a6f4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "12848bd2-0397-4ab6-b66d-f49f4dbaf3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24dd474-3cb6-40a2-ad84-173a97a82fa4",
        "cursor": {
          "ref": "8128a93b-59d7-45d5-bd97-e27c84f3fa77",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0635a6b2-65e0-48ba-8fb1-525cf5ab5900"
        },
        "item": {
          "id": "f24dd474-3cb6-40a2-ad84-173a97a82fa4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4f39b64f-da96-4d0d-a00b-07df608bf3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7f7592-84b2-4198-a8ea-622fea0f1bbb",
        "cursor": {
          "ref": "787d8f1f-6b8f-416b-846f-0abb252124d4",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "31ecd512-e1e4-47cd-98f5-c9ce0aae7800"
        },
        "item": {
          "id": "dd7f7592-84b2-4198-a8ea-622fea0f1bbb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dcbfeb6a-2b65-453c-a809-4e07dc0b8f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7c6740-5136-474f-92b2-f99986ddf3df",
        "cursor": {
          "ref": "442c13d1-a4bc-4e67-8789-7b4b3a1b34ab",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8a93b9c2-2c26-4647-9594-2a5f863ffd01"
        },
        "item": {
          "id": "da7c6740-5136-474f-92b2-f99986ddf3df",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2c01f4d1-f2ee-451f-90f9-9c80d748d4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4b0ad3-ee91-4bd0-bc53-ca2fa038b041",
        "cursor": {
          "ref": "69072acf-b117-403e-bd2b-1bdbe145edfc",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ab07a5b8-0bce-408d-abbc-22aa3a21b0d5"
        },
        "item": {
          "id": "ac4b0ad3-ee91-4bd0-bc53-ca2fa038b041",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b2e19eef-9350-46a0-bbbc-194bd5ece359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774f072d-f5b1-4109-abfa-7ef505771d87",
        "cursor": {
          "ref": "bcd861a8-c677-495a-9303-be9714d1f851",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5cbbf931-2415-41f8-939a-5c7f5957a88e"
        },
        "item": {
          "id": "774f072d-f5b1-4109-abfa-7ef505771d87",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4a4ddf25-246c-4fbf-b1f3-44892b097939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568b80f1-a737-485a-a1f5-5b4249d7fd6c",
        "cursor": {
          "ref": "39a1dd5b-8cfb-4c90-8358-54e16c65a3c0",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "acab868c-a8e6-4f51-b910-24bfd385a4c0"
        },
        "item": {
          "id": "568b80f1-a737-485a-a1f5-5b4249d7fd6c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6f449679-bebc-4b88-9289-eea654b659f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb9f3ec-d5af-4aa6-b94f-9f67babb8004",
        "cursor": {
          "ref": "13c7305a-cadb-42ab-b35f-897d709cf857",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "20dc906e-6f48-4cd6-9d2c-c4130e7517af"
        },
        "item": {
          "id": "0cb9f3ec-d5af-4aa6-b94f-9f67babb8004",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7c531ced-ab98-404b-8028-1edefa5ef42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f385e708-6387-43e7-94e2-50e127c2c148",
        "cursor": {
          "ref": "1573f95d-e70f-412f-afb5-f3fa8e0305e9",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "db0028e9-78a6-4629-b9cf-9e710d47a9bc"
        },
        "item": {
          "id": "f385e708-6387-43e7-94e2-50e127c2c148",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d9d94a09-8ead-45e6-bdc7-534f02a594ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ca5f21-4f95-49e6-8c85-5a1bfa05329f",
        "cursor": {
          "ref": "16a0c591-03cc-4d76-9b99-84ce87ab17bc",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "665a68f9-ad6e-4576-a1d7-c6eeaaf5a2a4"
        },
        "item": {
          "id": "94ca5f21-4f95-49e6-8c85-5a1bfa05329f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b32c1f62-abf4-48e5-8dbf-8a715a34cfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9d9898-e25f-49e9-a774-d4d4610491cc",
        "cursor": {
          "ref": "2d2a4a49-3b42-4939-9268-fa7b2cc39491",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7cda01ab-0f28-4fe8-b2a7-6cc751ad285e"
        },
        "item": {
          "id": "fe9d9898-e25f-49e9-a774-d4d4610491cc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "324d2d12-0c1e-4c4b-80ed-5c34fef11bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c21f0da-87ca-4ab7-be0b-319f8de2b3c2",
        "cursor": {
          "ref": "40534005-46ab-4cdd-9d24-4b67ca3ceff2",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "027c9424-6334-4f72-9458-010116f1aded"
        },
        "item": {
          "id": "5c21f0da-87ca-4ab7-be0b-319f8de2b3c2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "53485718-f5a6-4fd0-a4f9-ea15157e2b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1005d1ae-eb52-4ece-b3c1-2fd80d33af22",
        "cursor": {
          "ref": "ed082c34-ace3-4dd4-9c1c-30bec1924f29",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8a5948dc-8467-405b-b3c8-401534fcd8d8"
        },
        "item": {
          "id": "1005d1ae-eb52-4ece-b3c1-2fd80d33af22",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0f41c4df-e051-4b70-a31b-9dff34acc50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1168,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e37f26-4c3f-4169-b406-01c12e5dde42",
        "cursor": {
          "ref": "6060b69d-3a13-4e84-9465-cbec2366b58a",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "31b8a641-abad-45bb-9f21-e3cec78006de"
        },
        "item": {
          "id": "51e37f26-4c3f-4169-b406-01c12e5dde42",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a9430dc5-cf4b-44bb-acc3-4843dbc801fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1007,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1611adb1-b7a9-4cb9-beab-6b7b3aa371c7",
        "cursor": {
          "ref": "02680c23-eccd-4b97-b3cd-72d442d2d8f1",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "de7da221-77aa-489e-a595-3730bc55469d"
        },
        "item": {
          "id": "1611adb1-b7a9-4cb9-beab-6b7b3aa371c7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "39a5c03e-9f4a-4108-9430-23f2504651fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1287,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23d857f-dfbb-4afa-9ca3-9ac957261ef3",
        "cursor": {
          "ref": "7c5b1351-de98-40dd-bdc3-733e40b991f3",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "40c8a458-9119-481c-9065-283b60dd716b"
        },
        "item": {
          "id": "e23d857f-dfbb-4afa-9ca3-9ac957261ef3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f09b6522-d50f-4c13-ad8c-8d66e2c4e30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1327,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194557f6-1eb6-4ee8-9364-45f3dabee1b4",
        "cursor": {
          "ref": "27f1b94a-a5fc-4c70-9329-b491d73d7341",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c2046907-3a17-4266-bfc8-3878926136b7"
        },
        "item": {
          "id": "194557f6-1eb6-4ee8-9364-45f3dabee1b4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bb68fe5a-245d-4a31-ba77-9a5daebbf6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1023,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9e7398-39d9-4ca0-b5b9-e8ce572bd476",
        "cursor": {
          "ref": "6aa0147c-538a-4775-8708-7cc860ddca18",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "16f77cef-31dc-444c-8fc0-13eb3156f8d2"
        },
        "item": {
          "id": "2c9e7398-39d9-4ca0-b5b9-e8ce572bd476",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "637e57ea-95d3-4c4f-8248-5d0b5b7bb7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1255,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c26902-baf7-425f-9d0a-7a9c2fbae60b",
        "cursor": {
          "ref": "417c6590-2073-442f-b0fe-b1c73b9f6f05",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "28f15039-e5ef-4ae8-bc9d-f57af4973945"
        },
        "item": {
          "id": "c4c26902-baf7-425f-9d0a-7a9c2fbae60b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "81fbb948-7e6c-4752-8a5d-ca637fc348e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bcd912-44a0-409a-bead-3f68f0803284",
        "cursor": {
          "ref": "2ae1eb10-02b0-4356-83d3-5465b2974e38",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e366bd12-25f3-4921-9686-80444b40af99"
        },
        "item": {
          "id": "d2bcd912-44a0-409a-bead-3f68f0803284",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "47074358-d223-48a4-a268-5dc61d24d360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585e538d-789d-4855-8552-bf3e8e69d29d",
        "cursor": {
          "ref": "57ae5cd8-0b53-4ce5-9b22-823bdf4bfab6",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dadab2dc-5cb9-426b-905d-761f142df501"
        },
        "item": {
          "id": "585e538d-789d-4855-8552-bf3e8e69d29d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "44259b3f-239a-4d11-b9b1-44626e843ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25091fec-0ae7-443d-b4a9-c792f5348f3c",
        "cursor": {
          "ref": "019a9a1d-220e-47a9-aa02-42c8fd8dfdd8",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "37a568e3-6391-4f73-b966-dfc256d57ec1"
        },
        "item": {
          "id": "25091fec-0ae7-443d-b4a9-c792f5348f3c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "74491df4-fd45-432d-af7a-44b0383bb050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea172c6-a1c7-4677-8690-1c82e0a0a012",
        "cursor": {
          "ref": "930f4743-1d33-4d27-909d-2b284bea9cec",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a0c64541-9e36-42b5-b714-f88f0c15d7c3"
        },
        "item": {
          "id": "5ea172c6-a1c7-4677-8690-1c82e0a0a012",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5dcd8197-c2e0-44eb-bfe8-a3483cc6125b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04641b2e-338d-43b3-8193-03b5de1aaf73",
        "cursor": {
          "ref": "a9fce15f-b5c1-4a39-9b0e-3d8049aaa217",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "314c72f9-8caf-4921-a97e-7fd91cacfb95"
        },
        "item": {
          "id": "04641b2e-338d-43b3-8193-03b5de1aaf73",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "17557c3b-1292-4936-a58e-38afebb908db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1118,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57968d78-2ca2-49ca-b073-95ab3ea030a0",
        "cursor": {
          "ref": "b8c0693d-a2a9-4575-abcb-04e925b7d592",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "edad08ba-8547-48e4-9c8a-24119d6017ea"
        },
        "item": {
          "id": "57968d78-2ca2-49ca-b073-95ab3ea030a0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0abd1daf-95ed-4fba-a693-43883eb03ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1208,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12876062-9f29-4d1f-af40-e14f50f4235c",
        "cursor": {
          "ref": "f62169a0-2eb1-420a-b753-8dc6000cbd4d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a828fbfb-7b1a-4dac-b141-69ba5f254e3b"
        },
        "item": {
          "id": "12876062-9f29-4d1f-af40-e14f50f4235c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "777b7e19-f7ec-404b-a341-a6dc04d8f257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1179,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3736ec-46f1-458b-8dd5-7fa089a7180e",
        "cursor": {
          "ref": "a9dccc7b-28a6-409a-9aa8-887b0528cbb2",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e131a017-40a5-49bd-9989-ffd73fe1cc2c"
        },
        "item": {
          "id": "3f3736ec-46f1-458b-8dd5-7fa089a7180e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c5fc2a80-68a8-4254-a4d7-1ce270b9afc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9703c35b-35e2-47be-a6ef-e18f3530ad3a",
        "cursor": {
          "ref": "e06efb40-98b1-40d3-aa1a-176cab8dcc4d",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "666a2390-c9bd-44fa-b52e-cf3162cce356"
        },
        "item": {
          "id": "9703c35b-35e2-47be-a6ef-e18f3530ad3a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0e04dbe4-5235-4887-b816-828a8c769c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfca7bd-79d9-4851-a007-b8d22a8faeb4",
        "cursor": {
          "ref": "097315ce-76d9-4b45-b738-30cff1bf1b56",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "10eb5dae-2646-4102-aa71-294cdb260da9"
        },
        "item": {
          "id": "ecfca7bd-79d9-4851-a007-b8d22a8faeb4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "494d825d-842a-4338-a523-7d4cf0452350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0018dd9-a5b4-4de6-83ee-f4021e58c7b4",
        "cursor": {
          "ref": "465ea72f-1178-4da2-823d-345f032eaae4",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "baadd78c-ee4a-432c-85fd-65159def5cd3"
        },
        "item": {
          "id": "c0018dd9-a5b4-4de6-83ee-f4021e58c7b4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "42da96da-80a5-42f2-8126-5b4cad70e5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85aea39-e668-4980-a869-92c67b92682e",
        "cursor": {
          "ref": "3bc127c5-84e5-45bd-8748-f46a976f8040",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "615477fe-18a1-471f-a31a-c672eeee2ebe"
        },
        "item": {
          "id": "d85aea39-e668-4980-a869-92c67b92682e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "749e8529-1181-4965-b606-4f568f7a727b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db995cc9-fac6-41b5-a25f-df52df71d06b",
        "cursor": {
          "ref": "7b96ffd7-a8f3-4674-92a3-e6f88fd94192",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3d8f965f-b9b4-484d-b040-0cc78b0d3dcc"
        },
        "item": {
          "id": "db995cc9-fac6-41b5-a25f-df52df71d06b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "71407902-cdab-45b6-8440-56d3c5708af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9c2d6c-b9f2-49e2-bbb5-3c33af0b92de",
        "cursor": {
          "ref": "e995f9ec-8e29-4bb6-9d4f-29e1941006a7",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "19bfeceb-7e1b-40d9-95be-464481eca9ac"
        },
        "item": {
          "id": "fa9c2d6c-b9f2-49e2-bbb5-3c33af0b92de",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2e1757b0-ba8e-4359-886f-41551b7fbc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf64c7e-2c1c-46fd-931f-e15f93120027",
        "cursor": {
          "ref": "5a87f95b-1ce8-4e91-9bac-30f251cf0a4e",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2cd71caf-c91f-4cee-b25e-ff6445efd759"
        },
        "item": {
          "id": "ebf64c7e-2c1c-46fd-931f-e15f93120027",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "40f9471a-eb02-485d-b6b9-37f2d725d1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5059588d-1de6-4a13-84d5-2becee95b49c",
        "cursor": {
          "ref": "9c7a2d10-c057-4af2-be7a-84e4226253e4",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3d77dade-bdff-455c-8f16-53a95f87979e"
        },
        "item": {
          "id": "5059588d-1de6-4a13-84d5-2becee95b49c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e168def2-58ae-4951-a8fd-9c2a12e1db13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f595656d-6816-420d-bceb-b8f368bea506",
        "cursor": {
          "ref": "5f5f1914-0430-4bc6-b0f5-b3b75c16b759",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0415ed4b-0460-49c2-acdb-2cfc28ab04fd"
        },
        "item": {
          "id": "f595656d-6816-420d-bceb-b8f368bea506",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "51270baa-6ea3-435c-9ed7-38b888101b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be69334-a5e6-4d97-85da-5ce33721bb82",
        "cursor": {
          "ref": "42cec796-a210-496b-8478-b9c0bb3fdc03",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7278d848-130a-44ed-afec-d5ecb8c84c89"
        },
        "item": {
          "id": "7be69334-a5e6-4d97-85da-5ce33721bb82",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "29496b92-a283-47d3-9f47-87be9f343258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d249e132-9dad-4b4e-9a6e-cb235ff0eac0",
        "cursor": {
          "ref": "8182292d-8732-4fb7-89fe-a052b9025c37",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5738a697-0266-4437-8ce0-683be4f7f952"
        },
        "item": {
          "id": "d249e132-9dad-4b4e-9a6e-cb235ff0eac0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7f1b0abd-2e31-410d-9769-f1ef0aa0a916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f186e667-3c83-4add-842e-c3dfe9c61271",
        "cursor": {
          "ref": "944401e1-e03a-45cb-a6dd-117bd9955add",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "513a9f5a-d9f8-47a9-a94f-8a2b64cd71d2"
        },
        "item": {
          "id": "f186e667-3c83-4add-842e-c3dfe9c61271",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c9bf4276-24be-4308-96f6-7babf74f0d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19be9d2c-12e5-426c-a371-65d316c403ce",
        "cursor": {
          "ref": "96dfb8cf-f7e5-425d-97e7-74dbe5491014",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "425965aa-9b1e-477a-868f-1d0738c615b7"
        },
        "item": {
          "id": "19be9d2c-12e5-426c-a371-65d316c403ce",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fc955a2e-118a-4feb-8888-fd1b2838beb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60fad7d-1209-420e-b474-39cb850a8b27",
        "cursor": {
          "ref": "cc5b7a19-f9ac-44e3-9c83-a8aa2a367c80",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d7200b8b-89cd-4d3c-bef1-db4220fa1901"
        },
        "item": {
          "id": "e60fad7d-1209-420e-b474-39cb850a8b27",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "17869e2c-ae2a-452c-af8c-478552f6f7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8946a951-2179-49fa-97a5-8f04f9b3d4e6",
        "cursor": {
          "ref": "9820e7db-b9e6-411e-ae29-2af476bc894c",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "44effd51-d6c5-48d0-9822-96914a646894"
        },
        "item": {
          "id": "8946a951-2179-49fa-97a5-8f04f9b3d4e6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3e26ad3c-4059-466f-9569-a15edf63ca7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e37ba6f-117b-4dda-9ce5-1cf2296ed910",
        "cursor": {
          "ref": "86cea695-d7aa-4f7d-a4cc-a6c3b95d91e7",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e435fd83-41c1-4b5b-8fe6-9d172fcd43d4"
        },
        "item": {
          "id": "3e37ba6f-117b-4dda-9ce5-1cf2296ed910",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8c5a8523-60a7-4d69-ac24-91dbea51766c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9523562d-bd65-4250-9cfa-ed74da80a712",
        "cursor": {
          "ref": "0300b888-cd85-43a6-901c-d8b5c21f11a7",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c35f970b-261b-420b-bd11-351ed572c3e4"
        },
        "item": {
          "id": "9523562d-bd65-4250-9cfa-ed74da80a712",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e92e7b07-2a4e-4afd-9d24-93107eeeb172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9117685-06a2-4d02-a5f3-02748f8160ba",
        "cursor": {
          "ref": "f0007856-7b0e-4ee5-9671-2782f85dbc5e",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ee340a1b-007e-4461-98fa-ea129f434a6f"
        },
        "item": {
          "id": "b9117685-06a2-4d02-a5f3-02748f8160ba",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c76c9b10-1b3c-4c22-a62e-296af668c22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06e811c-2433-4d54-b8d8-0a97301dde11",
        "cursor": {
          "ref": "f154007e-8d1e-4a9a-9539-78a2c2e8c2a5",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "71efa241-dfe1-42c7-bfb1-1373490afba6"
        },
        "item": {
          "id": "f06e811c-2433-4d54-b8d8-0a97301dde11",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "219d20cc-fda5-43e1-8c64-984f4a94258e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6627718-4610-4137-b479-2eff9be87661",
        "cursor": {
          "ref": "5856f082-ac6a-4b27-a18c-1d020eac5c1c",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "94a7425b-81a7-4531-be60-72a642c069d9"
        },
        "item": {
          "id": "b6627718-4610-4137-b479-2eff9be87661",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bb6204dd-f3a6-4249-a43f-a6be0a7f0b68",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97a9d82-b304-49f2-a6ee-aef42e636999",
        "cursor": {
          "ref": "bcb6a0d7-f722-424c-a1b8-113cdb6d19cb",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2d382047-c5f1-454b-9fdc-90613322dbfc"
        },
        "item": {
          "id": "b97a9d82-b304-49f2-a6ee-aef42e636999",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "397f4207-a3d0-45c3-87e5-626d655e6a82",
          "status": "OK",
          "code": 200,
          "responseTime": 659,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0564f4ff-2799-49f5-82e2-a11dacc2b2dc",
        "cursor": {
          "ref": "29cdf026-24f1-4ca1-848e-abf4836da1f6",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b2f9585d-bbff-483c-b98c-fe5c30975bf1"
        },
        "item": {
          "id": "0564f4ff-2799-49f5-82e2-a11dacc2b2dc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "62ca2942-9bab-4856-a52f-be88e46141d9",
          "status": "OK",
          "code": 200,
          "responseTime": 1836,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf76ac3-7206-4387-91df-8d51145c7a0e",
        "cursor": {
          "ref": "3d6c5150-7c77-4365-9a10-8fbdf8a04d75",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "08035c3a-0d67-4919-be6e-66597a02d345"
        },
        "item": {
          "id": "dbf76ac3-7206-4387-91df-8d51145c7a0e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8e62084c-ee23-479b-b5d4-473213f22edf",
          "status": "OK",
          "code": 200,
          "responseTime": 2260,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dee1d5-c91f-47cc-957c-8add2d52e0b6",
        "cursor": {
          "ref": "ba778652-72f0-471c-a941-d500d2e28027",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9c6aeaca-8730-4b4d-8d1e-f4cc47147e04"
        },
        "item": {
          "id": "84dee1d5-c91f-47cc-957c-8add2d52e0b6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75ca1873-bec2-409e-8b1f-6b297ef1b083",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dee1d5-c91f-47cc-957c-8add2d52e0b6",
        "cursor": {
          "ref": "ba778652-72f0-471c-a941-d500d2e28027",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9c6aeaca-8730-4b4d-8d1e-f4cc47147e04"
        },
        "item": {
          "id": "84dee1d5-c91f-47cc-957c-8add2d52e0b6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75ca1873-bec2-409e-8b1f-6b297ef1b083",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dee1d5-c91f-47cc-957c-8add2d52e0b6",
        "cursor": {
          "ref": "ba778652-72f0-471c-a941-d500d2e28027",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9c6aeaca-8730-4b4d-8d1e-f4cc47147e04"
        },
        "item": {
          "id": "84dee1d5-c91f-47cc-957c-8add2d52e0b6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75ca1873-bec2-409e-8b1f-6b297ef1b083",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7f523b-2548-4a27-a388-7c89e3c178c7",
        "cursor": {
          "ref": "5471bb74-0408-497e-a10a-607e5084b18d",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "34dc5e48-42a6-4d87-8329-0360f880bbe1"
        },
        "item": {
          "id": "fc7f523b-2548-4a27-a388-7c89e3c178c7",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "8aefa1c9-61af-4b23-844d-fd9fa50f5039",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 578,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773027bc-6295-4ad4-989d-9e5f797234ec",
        "cursor": {
          "ref": "7420d6ad-d92f-46f6-882e-1b998d0c0376",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fa1c4cb7-98d4-4dc4-84c9-0f476e82374e"
        },
        "item": {
          "id": "773027bc-6295-4ad4-989d-9e5f797234ec",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d68422a3-2e3a-4df7-9572-32d3d5cee60e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773027bc-6295-4ad4-989d-9e5f797234ec",
        "cursor": {
          "ref": "7420d6ad-d92f-46f6-882e-1b998d0c0376",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fa1c4cb7-98d4-4dc4-84c9-0f476e82374e"
        },
        "item": {
          "id": "773027bc-6295-4ad4-989d-9e5f797234ec",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d68422a3-2e3a-4df7-9572-32d3d5cee60e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a14840-3cbf-4b65-b897-8c5be14d186d",
        "cursor": {
          "ref": "99ff10f7-8618-4681-910d-847975bc797b",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9543106f-0cd8-4255-ad06-86e7946526cd"
        },
        "item": {
          "id": "85a14840-3cbf-4b65-b897-8c5be14d186d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "f41423b2-de4d-489c-869c-6bda8df58c8f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 794,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b359574-4564-4b53-8725-28e1f3589d6d",
        "cursor": {
          "ref": "c54e9ca9-da02-4063-abe8-bb09c9a4c21b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e89f6a58-3ec4-4be9-a2ce-06fe3abd5a1f"
        },
        "item": {
          "id": "1b359574-4564-4b53-8725-28e1f3589d6d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "59796564-b482-4842-afc9-a86e96d08ca5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b359574-4564-4b53-8725-28e1f3589d6d",
        "cursor": {
          "ref": "c54e9ca9-da02-4063-abe8-bb09c9a4c21b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e89f6a58-3ec4-4be9-a2ce-06fe3abd5a1f"
        },
        "item": {
          "id": "1b359574-4564-4b53-8725-28e1f3589d6d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "59796564-b482-4842-afc9-a86e96d08ca5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1110839-1ba8-4fc5-b9c7-0c97befc8c1c",
        "cursor": {
          "ref": "599d97a9-a70d-4e4b-a4a4-40ba519fb17a",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c0bab8e3-7434-4cfc-b516-996297802e38"
        },
        "item": {
          "id": "e1110839-1ba8-4fc5-b9c7-0c97befc8c1c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9d9b93c7-6622-48e2-b4c1-52508bddfb47",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 895,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}