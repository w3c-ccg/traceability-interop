{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dc67b03e-e3cd-4e06-902d-12419ec8410f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4fb5c6e0-0ab8-485d-903e-829dd3443408",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0b30a6b-c138-4cac-8680-78eee93e85e5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "564e106a-99f9-4186-9f5e-9cd34561431b"
                }
              }
            ]
          },
          {
            "id": "e669dc2b-8c64-4748-82c9-cd111e46b8af",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abb1aa4c-556d-4334-a922-67fb60fb647f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f9d99303-7649-4da7-8ccc-a237224765c6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "192e38a5-e7f7-472f-943f-c92caa4a445d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "20d0dde0-1e74-4efe-8e3e-3a6629c45463",
            "name": "Positive Testing",
            "item": [
              {
                "id": "168857b0-04f3-4e87-9e77-238f88376b15",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e163bf2e-1f18-49ec-8290-0838e06f673c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7590182-6267-4220-b5c3-81fd544a8a03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d653795d-9608-4067-a694-f13cc184e35d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "37e8a3a6-83b3-403b-a900-0bd0d1190c4e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0bde86f-e3dc-45a7-a866-d5aa63c308d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "699cdd48-62f0-425e-8d40-081296aeeb87"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55567bc3-f8ff-445b-81ad-a9cdefa25d8a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6495686c-5d80-4fad-8b72-3e67dd6922c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4161914f-801e-4c43-92df-265e04ebe260",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa7cddfa-d549-4b06-8bee-d4aca686261d"
            }
          }
        ]
      },
      {
        "id": "d401ed53-0b71-48bf-9750-d78f095c29dc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9585370c-5650-4c3d-a809-95d83c503492",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5dcdc36-e095-479f-951f-ba9e83ed441b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6341d6a-c042-4f78-9336-068e1d638f87",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc76472-8810-4ccf-b60c-5255824b6f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a582d97c-3152-42db-980c-25966bbfbdd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4bc567-47a5-4c9a-8dfd-aa79ab09560a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87ab946-dd7c-4f33-bd3a-984acf126e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a693b385-f335-4e55-8a6d-8ba6aaf21963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d26f53-e3d5-405d-afa1-0e1443bef840",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b9f489-603f-461a-8d12-7092b4d87ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32c44c32-002b-43a7-aea4-c5b577afd7e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d836593-8bbe-4d7f-961c-164a051dcb18",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e546e88a-0215-481b-8d73-93f64768af1e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e399e143-8b60-4d0b-936d-237e932bcfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d767b71-1ce5-4bc8-a95e-c4b41903b421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a8dea3-7b3b-4ce2-a877-9fd75972aca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01de8d0f-f98a-4e33-bd98-162c340eb04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e139c6a-d05b-43a8-8bbb-88341860283a",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cdcfe2-a9df-4217-85ef-f80ec6fbcc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d518aa9-a011-453c-9d37-ef16d98d89a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8ff5f5-2340-4209-9d4c-63d1b6b95b04",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "23545621-dae3-4009-b704-bcea141de3ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "39218586-a925-48a3-a64f-32378b9a9012",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c28fcd9-fbb8-4a97-8a20-20d106031252",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d6bb32d-c351-4e7d-9df8-c005a8c80985",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5bf56ae1-b24a-44c8-ab6d-1265dce8e5e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4f9dda3-9266-4b65-b411-fd46d03a9f15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "27bd0347-5174-4000-aa64-4ded1509dc27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a553cd8e-04c6-4c48-8d51-ce313e1e4137",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1059c6a0-e43d-4bf1-9cc1-9ea20b47eb94"
            }
          }
        ]
      },
      {
        "id": "c1ffc06f-27f1-4ca1-be5c-9e409b61dcde",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "47cd5933-1c46-4e09-9849-e10496eb6436",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d02ef02a-b679-43ca-97ac-e25d1edbfb67",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6ea4a4e0-991d-48c8-9d29-42512a328c35",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daf2262-9df3-4196-b47e-80ce99b96f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc1fb65-814f-46ab-a753-13145b9181da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b70d09-52d4-404a-9774-687537c1df70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b72680c6-f268-4637-b707-c5347c7b5e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0beb84-4c50-4c4f-aa6d-b9bfdf7f32ed",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b20024-14d9-43df-82d7-a71b05d7702c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04e83d5-7f7c-469e-9a22-388da73f1bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f568d150-a294-4c58-842c-947dbbc90f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02be6326-6e84-4693-9d82-4e9d3d8ef2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd055ae-ebeb-4127-a498-acaef0f99082",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe72a0b-dc96-466c-b846-3fb46c9fa8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c006e4-7ce1-4ae6-b585-1ba765597664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0802c488-59a8-40c1-a8dd-e9bee7361d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "785b3d6e-7317-436b-ab0c-d66ff7fc46b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d544a103-bc50-44cc-9591-c14da35e8495",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e688fa4-50ed-45bb-a55e-b79b130c50ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4a8f06-7742-4901-8398-0ded84a21886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06993e2-a8a8-49c7-96d3-10befd25ed46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cca58b82-3e75-4602-8dee-9ed60ed9fb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c811b1a7-2960-4ab6-9203-cff499aac169",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfce12b7-c1bc-47f2-a710-34bee55aa57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9c4984-878a-4bd8-a459-8111a39aca84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3379e32a-306a-4f00-a590-b16c757df3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "050046d5-2bcb-4bd2-a993-20c6ea1074a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac5e3c1-d6ea-4138-93d0-515fc4dfaa66",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957c27f8-9521-43b2-869f-adc11aa4f072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1539dd0a-7303-4a6d-b8e1-4483af8c8438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0e4674-7b3e-4d9d-a155-2370893d428f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e2c61a-2ffd-4807-bf8c-a434d9c8a0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ae859e-6e09-4e22-ac15-35395d61d634",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e400b77-b6b0-4fb8-883d-8f816a7fa173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5530bcc1-213e-40d8-9b45-7ef6f77659f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6738b99f-0c45-4410-a5b3-e3cbd8503d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "260c7beb-3672-4604-a3e6-2970e355720f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716b2d7a-0bf9-41e1-a5f1-b264f61bfc46",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2b1432-dfff-4318-b515-5711b65f12e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb46b2cd-1125-4bc7-ae60-85d5e12d0802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae5fede-ce6d-4608-beb6-8ca0b824b923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "add2e44e-3999-4f28-93e0-cd26505d0f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b639b63-ee29-4514-a80c-7f3dcd045dbf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc1671f-bd36-4ccb-bc58-ee5d625c1cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb387091-8bf2-4464-a8cb-d6e1763ae8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50af4eee-57ad-4aef-8a2d-b605d28b4d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13bf3a2f-22d5-49b7-8ff5-c67bb9ba763b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d627b5-2ae5-4f22-9089-039b7069eab1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf713d6-cffa-4023-8ce4-029362457a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5297b686-1e37-431a-abd0-ff5f67f552c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed784085-af45-4919-8166-7df2c530872c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5917c8c-6b32-4a0a-9b6b-2b67bc66632f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa26e375-1df1-4469-b7dd-a7fbc714cfd2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dbd9be-b858-494a-99c2-0e9fa753944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7236b565-2a4d-4266-a41d-563dba3cccfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f95d1c-774a-4d61-825e-8f33e967d945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51b33225-c60c-4b6c-9e82-715b1035dabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03716f5-35e6-4274-971d-602e1f90f890",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630c79a0-3461-4c67-9f97-a85d18c14e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f88633-c832-458e-b545-5da25cc88661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4ddb4a-925c-42a7-98f4-f369076167c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4979d849-d238-43de-abe2-956259c81786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8ec837-e677-45f8-ba97-03fd69428909",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b585add-259b-4c26-827b-09515a05e7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31af9bc5-8f6b-4563-b2ec-51ef225e90d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8e47b3-44d8-464b-8151-b7181c0498cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1a074fb-cdc3-4590-ab70-78560cd09bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cbd16f-bd93-422d-9b58-a54cf86dcede",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43901ccf-7a7e-47aa-bb54-23c600bbc03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a705a8-45ff-4bbe-86ae-b2c61ebf446d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7609d910-8790-4575-ad43-bf26e8c53ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06081069-d815-4334-a22b-533759abd488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8949f8-0427-42c3-98ac-de6c3cc4c9c7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92e5f07-ac44-44a8-bfff-bc3ffacd2eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0123a5-2a46-4bf6-94d3-d8d999aa1428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb4e665-728e-49e5-bf25-fed2efe58893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e36b818-7b29-4bfd-acfc-5f7bf01d3e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1daf59a-2ad0-4830-9d16-4f6e3360f7f7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f073a0f9-f4fb-4080-badd-f3bf174afac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e88349-a60c-4cea-a130-6058e33b56de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3762e3-7b06-4704-a3b4-f0e1ff31b994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbd49d69-ac8c-4149-9b48-93f2859be3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2fc57d-f719-44f9-8b29-c4088fda20d1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931cc9f5-a3f6-4cf2-974d-fed97910b7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328694ff-4773-4ff4-9400-9286205568e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050dc693-c7ad-423a-b450-8ee9e87930f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfe95571-c43a-4ba9-9f82-93035659713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2aa13e0-98d5-40fa-bcca-96de9296e321",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70e8838-3852-4bb0-8091-d4dc95321208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb93b6d-89d5-4f95-89b5-4d0214bcb549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ce8e57-c9c4-41bb-98d3-c232205b9fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f97e4b93-9b93-4f1e-ae18-43ba73faff6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b02217-d39e-487b-b3a2-246f7cc5f5b8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae2075e-b1ef-4cac-8892-20c1e389853c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda4930e-637c-4ba2-a287-06e5d6bb3a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aedea8-e140-4411-b716-5404addaf229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0393496c-0a30-4ea8-9b67-bdb31176d724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731196f2-7033-4339-9791-2c11dda4ec75",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02214cb4-0365-46f4-aab8-639655f2b1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0913378b-08b5-42e9-8a6f-62de6c2a7a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34800baa-8265-48d0-a4cd-bd9f1b9abe9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b1c009-6b44-4633-b118-93cc2465a764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630c1d41-d461-4630-a314-8515cce4a592",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6faa14-be73-4d7a-b9cb-9c7e67ecaf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f80cfd5-bc2c-4c90-8770-faa1cd38f86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732cd263-a477-4049-93c4-a1746d51e9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f464165-922e-475f-a47c-605bb85ee164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cb0751-336b-4d10-81c8-29129c356594",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ab8755-d1be-4d99-9f52-a044b96e67bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a41f557-e87d-4e61-820b-a6afc15f21a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2186f0d9-c744-4b6f-bfd5-c2d1d8c4c871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79c92f75-7608-4dad-92a9-b949fcf6398b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21eb1027-6b82-466b-8c7b-74e109931802",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df819f3-bfb6-4119-90d5-052a1e63123d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2d3cb6-1633-42e2-a337-a34e2ac6c170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0cae70-e39d-486f-a3b2-73499a209563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdba33a-8d6a-47cf-84d2-a623291a4ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65953b6c-6921-4408-bf8d-38b6f5daa682",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5702f4-db4a-42cc-9ab0-01fee597cbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3fa7a24-0206-47c5-8981-6cc7fff139d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93d1d64-15bc-4403-9e6a-06dac916d83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3ef5c6-4ebb-4d3c-8fdc-6b474c62ccca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6885741d-f9fc-4473-9179-b6f67198ef70",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066afd74-0954-414e-a314-f18db222262e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cf93cf-2e76-48e5-a877-c14b921391a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb28ef0-5c97-4fbc-a215-92f6425cd59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0045b95-34b0-4292-9874-5b2ca4fbb39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d75b07c-5ee6-4bca-812f-f1974e08b6ca",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bafd17-eb2d-434a-a88c-62f0df4b67ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29f0ef1-136d-466d-a39b-f039b525500e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ff5f2b-12be-4087-ae27-653d30949f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b781726-cfb1-41ab-a28a-1cb85a01bafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28335d6-1021-4efb-b6a8-3679043702dd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588d11c8-9a3f-45fe-a2db-45f1d714d31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2a5761-aa3a-4f38-beda-62d2bf46ce54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a291eca-38b8-43ad-8dbc-ed33fc3c947b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd1fbf6-32f5-4ab6-85ce-89f229a1b7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c832e1fe-ccbe-4c56-9de1-ae1ae8c6ee75",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e5503d-0279-457b-8c72-dccff011dd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c0e58c-1572-4564-a9e2-03fedfaf25f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c7f69e-4666-44df-8003-f414d179eecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "538a6fa3-120e-4f78-a96d-b34a71918b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503c32ad-5dbe-4462-a1f9-a3d3e65d3ca6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291f85c0-9f1c-4730-9e5b-7fadb1d0407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d88dd5-78b5-465a-aa28-df143139692b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8191e5-4af3-4478-b504-1194f0234cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8062bd54-931e-45c4-8b16-1ed2d7961bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7533c3a-c012-47fe-9209-87e9ab4ac2f4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd41d6b-b2d5-4c4b-b45e-b532c3b9767d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5aa05b5-e636-411b-96ca-47692a465cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2c2b52-bd7d-4c64-bfb3-7f4affd35f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e49c96c6-1994-49c9-b2df-2c93b6bd029a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7874abd4-81e8-42c3-9d8a-8b08c1858fe1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b46f3ee-025f-4314-9690-8ae68defac70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e95592a-550f-445d-9154-3a1ab5986e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308ff730-4b72-48ee-a709-31fa3076df12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "983aa850-de13-4272-ac36-a5498ea35d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e8ecc7-c5e2-47ae-aea0-8591a80b0dff",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1179983-62cd-469e-bbc7-2c8aed96e39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a210ab54-c61d-404c-8626-1e9ced12cd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ae973f-1d00-4c50-a14f-ebe9241a72b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e2a40e-07d6-48c6-8252-9a613765ad93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b78df9-32ae-47bb-b760-2995da1caf6b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e506a1-877f-43ce-91e7-a692d7082b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629d9f56-1ad2-4b7d-bd8f-49879bf03d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf3cdec-1d58-4ce0-b407-d234cad170d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18cb2a2a-69ea-44a5-9f3c-94967db31c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6498fff4-82c2-4f89-b8d8-42ad3f8b8692",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34198149-3d12-4831-911f-c2da9b3dbf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edce6023-02e2-4513-874e-b1b78ee5e937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7093996c-5da7-4357-8ac8-950c22a71ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3a1adc-7494-49e2-ac62-92e7377f9350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde4003f-4988-409c-b964-ad2d789efd9b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e9d8ac-ca03-4d18-ae9b-52bae1d275b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44d3311-67f1-4d67-a31b-274a0f8cec6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926ce256-b8d5-4908-b0de-db86014685e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "009cd0e7-1ea9-4ef3-8ed1-3af260e7a752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a703dd7f-0046-4b02-942a-19832ec3cc87",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931d2749-447c-4f34-9080-9f7ecca5fe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "859b07ec-013d-4083-ac57-66b9a4957cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13349ee7-5d16-44e2-ad50-62652f4922ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10b35432-0024-49bf-98de-57078ba05d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518a0ece-82ad-4ab3-a0c4-4891daeff84c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d336ac-d94c-4939-b33a-bca91bf06687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61603de3-0a96-411c-8c7a-d19f6bdf25a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61132eaa-3544-43f9-88aa-587840209ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3dfcfac-1d60-43a8-9e9f-4c9af698ad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c085f97-d031-4092-b615-2a167ac2bdab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25b665a-d982-48b8-9e78-c6c41dcb7d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b2a2bc-574a-4ece-b5fd-e8dc9ef43fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1251a96-7708-43a4-b9a6-03f256cdb745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "959ffcfa-298f-4015-8cbc-df725aa49e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cb46c0-ac05-444a-a198-6afbf9f50866",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43915bd7-4c21-4acb-af60-684f7aa34c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee2f341-17c8-4eaa-ae53-71026d700a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c684b94c-4227-488e-a54f-409ede947859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7d889c-1477-462f-a897-058e4e3b1c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9364c6f-2edb-4eef-afe2-d8606a8f7d22",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa892f6-b34f-44f5-bf9b-623ec2193d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50cd0fa3-9062-4c1b-ab20-203a8ed2fa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4d22d0-e76b-4a90-b56c-4a4d100c2c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3885271-116a-44ea-81f2-458b304eee9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2a1407-0f18-4ebe-a0e5-c5ac3d77e081",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5507414c-4d4c-40c3-8ddf-331a6a54e35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e96e50-4e06-42bf-9f9e-313ed964af79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0b888a-9539-486b-bd3c-f4f4928b337f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee99c7b-6d64-41d0-ba44-167957d978dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7942e406-86ea-4d43-8fca-f0ee5c8525e6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505af8d4-a135-4f5f-94ae-9c7a859c7443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecc7866-5e28-4115-81d0-49302c6f4147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e546eb2-3f41-4ca6-866f-cbea7470e5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c4cf34be-29bc-4c86-9ecc-a5b82abf723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84197b98-b9eb-4c14-bfd4-7b2c13ec0028",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c9dab0-e0ce-4460-bc86-7d716c42d997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d86519-40de-49a7-b612-792151a7cd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e8cd00-8369-4c0f-90ee-2644d927a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff5e759-38ad-48d2-b605-85f8336d8292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2092034-5117-48c2-bacc-b238107efa47",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538ac34a-33c3-4141-9073-538e6b88f1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba44aa4f-ef0d-4fdc-a5ee-0c9a63bdb9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03abc1f-b1c2-4c81-9ef3-f545a51fb904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "27536b93-9d37-4ba8-9c2e-e51e8f0fb619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdf0fbf-abdc-4096-8a5a-0dbc8bd8a45d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7fa5e1-466e-4f33-be5a-f6b14cfa58ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e325bc8-06fb-4bcf-9302-3afc7b171acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18d1cc5-abad-4cd1-a624-19e80bc237a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2a1630-43ee-4914-8f35-3575df24ac1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f4d2a1-06da-4d2e-864e-3f6204ff0639",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77856fce-4264-4e99-8de3-c624b81da2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c35c13a-6d75-4d9e-821f-b5db2f14828b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da41a5b-373b-4edf-b9a1-f0e40a6b929c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "518edd25-3af7-41c8-81a2-86286a6c8b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2825121b-9b4e-4647-8c0e-0e6fb0e54dbb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33d34c4-21d8-45ad-84af-eb1546a8f1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6adc885-26a3-432a-a0b4-e9d985629fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc896e4-abdf-4349-b8ed-ea6b8ca1b79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb45ef9-1901-46ba-9062-3774875cc245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f696c8a-af36-4cb2-b86a-ae4193e44be1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14087ac0-c962-402a-8db3-4abb3463c4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5c9dd4-def0-405d-94f1-f7fd4c9dd49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940b69b7-9ea9-4f0e-af55-fcba774a5fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "558e20cb-5ea3-4e28-bce1-946f3d033d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8883135-a5bf-4972-9ec0-d609cf7d38c2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fad8ad-5d31-4c36-83e6-352a118fcbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd103af7-fb11-4ec0-bbce-5e527b2b731c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e2b5dd-29ca-46d3-8c56-f899c50c655a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "671cb5a0-758d-4d57-8043-bd698a42b2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eedbd82-b3d4-4c5f-8625-d9f8c0f1a273",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f51348-41bd-416b-81c9-9f10a390f6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e6a051-e0e0-4fbc-b447-d738e4e217df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c35781-af6d-4148-b9cc-98687c28ed92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba86c858-cae8-4a3d-8042-488f46d87bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91db56d-debb-47f6-a878-56e0e05accf0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370b6da3-09b5-491c-9c93-3dc025397e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76742a96-33bc-437c-a58d-3c756f464362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc8993a-faf0-4c88-a701-33425ddd5546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cbc276-8c9f-4562-88b5-533cc050c889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d69e13-2f41-4953-859d-8c8ddb7343fe",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7aab2b8-23b6-4272-a8fa-82e186afbbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc0fae8-9c81-4d11-a73b-d2735399087f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cf1ac7-b918-45b8-ac7e-e5c2f1eb2a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3640e5c-a494-49cd-9527-eebc2436bb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dcca52-0aec-4c26-80b9-a3778774a1f3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bbad88-9861-42f6-af36-a27051ea17d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea63053-2027-4f1e-8612-73aa14036b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5634164-9219-401f-8090-6a0cbb2f9da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9359c40-fed0-4f26-a597-97f2c02eee71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac1ab3a-497b-4593-8e55-49169046cd2b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65db537-799a-4189-a2c8-abfe3ed7d779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0587b70-9583-43aa-aa33-720fea612c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4fb285-0428-44a1-9be1-4e580d63b1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65dc8969-6188-4818-afc8-d00eaa26761e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349ed353-5850-45a3-98d2-0de4c2807cb2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8201e1-d2be-4146-8030-d6b27180dbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8d2def-bc63-483a-b03c-0faaa19f4ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4d96cb-9a18-4b71-93f0-596da5bdcae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23dea0d4-23c8-47a2-975b-59e62222afb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc001879-2add-4084-813f-fb60fec072a7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e6a3f5-da36-4f4c-9322-678129083ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04282cf6-d62a-4f3b-b3b7-d53a690532ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0024b02-5b09-4bdc-9c43-41109dceaaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "43b53695-3e13-4c92-9141-40328654f2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8098630e-5b4e-4840-9c40-65e3e54d784e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d76ada-4e91-48a8-b4f5-ca98cfd7a898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5fda48-5ba8-4700-9d9f-fdddb177f136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0b2440-e893-436a-ac5e-dce3253cc829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "29c8167e-2fee-4a96-b848-f559f89e18ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f85c2ce-0e85-4edc-8fdd-45c0a6980488",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cf7297-eb8a-45c7-a058-b8d0e8054a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4565dd-3e54-4a35-ab2b-87bee64d2630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd1fdde-3a06-41b1-a6de-5baa361c2714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f6bb59-537c-46b7-af54-3316a6609665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510b4b97-9cb8-4a68-ae83-90958b4443ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1309754-de5a-41c5-bc1f-d73fed6692c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771efd1d-c1cd-4bc0-96a8-39ae2219eb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7610c5c6-7e43-47be-ac03-20fe7dea4b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c1b9b6-0813-43a9-8b6e-4b85ed2a9f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed1dca8-505d-46a1-af52-f7547d91c4d7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b936dc3-51f7-4cbc-90b8-7025ec35ddec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4365fbfa-c078-426f-baa8-8c011bbf7f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c87bcb-8ae1-4601-8e4c-c7a70c5342a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2b322c-d920-467a-86f7-0182d9710a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d2f392-69a9-4cff-84a8-5f59bcc3d36c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a01831-33b8-4a6c-8542-7e3cd218becc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34cc27b-c943-40c8-8156-28cd0b10b068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0fec1b-339a-40b8-bab4-22538c1c9932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b0f5b1-4459-452f-8a6b-59993121092c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6332e7-a1c1-407c-86c8-3c69614cd2fb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b08bcea-9712-4d72-a4bf-d6d72e2c4010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1250a8-13b1-4d82-85a6-58af5d32ae3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52909f05-6e9a-48b8-83b3-b3ee5fe6d615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b90769a-4766-4eb8-9c93-f18c90a57dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f10f21-3cfd-4e96-b09d-db473d27ff15",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29d923d-52fa-4658-a7ab-c1b2f1da2c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d368c119-17ad-43e3-9077-c86474c2016c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92e1109-a063-4779-aac7-3f6b36d239b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f45e6b-4f38-4a0e-808d-3bec64c87603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ec7e6-165c-4e5b-acad-75f91376ba58",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c45658-6aa3-46f0-9dcb-ce745d3af7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52661fc5-9a6a-49d6-a286-0f047b0b5dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a117175c-ff2e-44ac-aa42-864cc734672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "241d2916-dcf0-4cbf-a1ee-cb47265dbee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad9a2b4-31c9-47f2-8ea5-db9e6b3313bb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6243bb-5360-4ae5-a547-d498125109c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a268e08-122e-4726-a0d1-c4659b759730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfbf0c6-943a-4695-93c6-08b2689ad2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "804af0e9-c665-4b41-8bb6-cf6b30d480dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1608b3d-e158-4236-9d86-bd084d3f3c1a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497de44e-8569-40d7-8048-c511114157bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b152885-1cd2-4705-a027-04bab0571513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9505e37c-a67c-4455-8cb8-3756a0bd3639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "181656aa-8d48-45a2-9657-695adfe3c4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179dbc09-08fd-450d-a7cd-746d5386dd93",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194b7d99-198a-44f3-8117-e621eaf841c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2b1250-74d5-4eec-a5e8-7b0c1506835e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b14e3e-dde2-4393-9558-c456d72f67e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b709fb81-e289-4a4c-82b9-cc76aa5e84a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec06ff9f-dff1-4a52-8602-ce75a06106df",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd67fb9e-5688-43b0-bc47-40b39eacdcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d137df5a-28f3-436d-a7bc-b7f79cacd410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead9e47e-a45d-4a3b-bb2f-283fd6308efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6674bcc5-7955-47fa-8989-acaf57e05690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035791a1-4b1b-43e1-a621-9adad883b51f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4b69e0-7761-4c3a-8230-9bd0d5f67769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c9156b-9d1e-4912-8273-71bf61e6f451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b68185e-ef28-40b8-93d7-2f63c0de6fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "60328db2-33ab-4ff9-aa1b-d3b324854ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15839ae-48ed-4d5e-8d97-442344ee3bbf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d029876-c32e-4c18-8415-08320ecdfedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d550ab01-d6b6-4de4-b347-0dd880ede00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a8bd20-b930-48ed-84d8-ccbe8b9b13f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d56e0d2a-dc4d-4bad-a5c8-11dc4b6e7459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71455ed-f13b-49ce-a6e4-5dcd8c888cd9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdcf92a-0272-40c4-95bf-6a508f0ff394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e654833a-0db5-4511-bf4b-6e95fd42ac8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce74112-fbce-4cb1-ad65-73693a2ff0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca0ad78-771f-4057-8a71-d7d026d30b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919e1630-84df-4793-9962-c32bd3ec84ae",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1d4e24-5f54-439c-bbca-47a24c040ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e180e858-fe7f-45c0-94e2-3747660fc313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74cfb49-b211-4478-8e95-63293df31065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d511ae1-d813-4ebf-bcfa-b8a50bf2784d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e469e8c-56ba-4f09-82b2-93ed0db80e5a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f40bfa-8cd1-43ff-9bd7-5c2eee71cff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17393a7-dbf0-4001-8858-d613823a76f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6e6b0a-d009-4823-9e97-edd466a1ed85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53f12007-48b6-4759-b78d-a2530ca71fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5b76e1-ea75-4666-9816-22db89160276",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5343dd4c-c462-47da-b14c-9d571db5e946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bb2953-c6fa-4f87-8c32-3d982810061e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2eaaac7-a825-4d30-8247-0c47a5d4630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42b76627-43a0-447b-8b20-89b12b4b28f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ef8a64-6aa8-4995-841b-9914c3fd63a2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2c96c2-2d07-4da1-aace-ab647017ffe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65255039-92bd-476d-95a0-f620b77ea08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49334ae1-c60c-4188-865b-a0672803fbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78684e9d-305c-456f-b331-c9b5d381590d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c86fc9-d679-4a47-9a71-6cf482a0cc34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25ac73e-8351-418c-84d2-d6ebd9e4a7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7caf95-80a5-4480-a832-874cffdbf716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d922a3c6-2d9b-488f-9bb4-a7823ed978db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1260f6ce-2e8d-4aa9-9eda-544faff743d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c609654-3279-4c1a-aa33-a4036c03d905",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ee8273-96a3-4e6e-ad8f-db5284ab1a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d0f134-50dd-4da6-84ab-7a86f3d44f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f430ff8d-a234-4863-a73c-3a9b63cb5f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9568c0c8-b569-4886-84e5-fd7d1c467ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d038e4b-218a-463e-9cd2-cd8e282e9408",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a5b333-3c8a-4e87-892f-3fb00dd8335c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac21019-0a58-4bc9-a0b4-64f6e11a76dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef5a110-2559-4dfb-8f04-c6bcf6735040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ed27fc-21ea-4e97-b197-10b53eac7359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ac3154-0dc6-4bff-a79d-ffc73698ff61",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed20d16c-0069-4b34-9264-d8b1675e1ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0cfa77-61b7-429a-a1b7-d927d4cbf1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35571aba-c969-4c63-bfb0-5e46d85a7773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58f81d92-af63-4043-84f2-9a7e75ae5e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc56e47-3b9d-4b03-9652-74b234828dd6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03f838a-773d-42cb-8947-ed5ffab789a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c001cd-f990-4570-a1dc-f46fc906547a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7f3d62-a8f5-4e46-a3c5-75d3d8476209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "707e7495-99bb-4c59-b38e-db53dd8509f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6436cc9-84ad-4862-8034-ba0dea386e28",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25b6bd3-c6d5-4e43-a0b6-24f7cd9a82c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226ef82b-6754-4c82-9d23-f3e0cd8beb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae2331c-6b83-467b-b278-047b07653948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "722bd0e3-f5d4-490b-9652-fabb18cba62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a7ddac-4749-414c-80e3-a46eccce4f97",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f8b965-f197-4a17-b265-67e683802250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f03183-02b5-4b74-8403-b8ad08c963f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5858ebf-bd8a-49ca-8f77-d1b07cd7863b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed96ffe-b7fe-4410-9fb9-324f159f0b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f672c245-0234-4b70-972c-048c1e86b1f7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c4f5ab-eff7-4339-aa11-bb0d0c38a7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7005fc9-2990-41fa-b22d-36cf0957261f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e6de0a-8dc2-424a-bf67-8ac1a7f78521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49a4e01e-e496-469f-9992-b8bbbb45a957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a28604-6f8d-4722-8733-fbb0de72f561",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf637fc-3995-49e3-bf7e-a6c529a44036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a3e6a4-40f7-489d-acda-d420183fd82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d128dd09-9613-41c8-bea0-043bbb03d238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3096a19f-4c06-4c13-8c8c-b34cf3d37d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75283ffd-f194-4e52-b07c-0822f454cf52",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43f3e95-672c-4be0-9ecf-236acc938dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0558bfa0-eeb6-4f71-835d-362da132f15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392c976e-3fa7-4b95-be15-ef19fbd99668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42000ab5-763f-4ef1-af71-3e00fcb80158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c48f9c0-8b92-4fce-b941-f1addd51b49f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111bde8f-5649-4a9b-8284-49f04392b15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6726fa67-a81a-489f-b364-89d15c877caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73d44b0-1f30-4420-9de7-d7a601ea6838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e21357a0-8165-4442-8ecb-08518f3eebe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da89ce3b-f26a-4da7-924d-0c4c2dfbe70a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4403ee58-0174-4ce6-96d4-8992956d910f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab6fa39-af86-41c6-9df0-bab5e058970d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654dbd7a-6926-444d-b041-a0642f4676e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2800b3-8123-4c85-a7be-03f73bcaed1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6bd8dc-0c43-4088-9d9c-14117871563c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40a9116-9517-4ef3-8be4-ce389c65bd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c7036e-b5e4-42a0-9388-1115778c02d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c78ae8f-45fc-4e24-a63f-a687f19754df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7968c663-2aa8-4f35-805d-bc2672bb7b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c447a63-be5a-448b-b071-9854cc6eaa3a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96c2461-3e1b-4faa-b2c6-32f38f7c4565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8afedb4-878a-41a7-92de-03bdace6c70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8760e186-d13a-4f63-a16c-ca4e48ef47af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf84f055-89cd-4bc2-b889-a0e6cfb9191b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b661a43-8f28-443f-b125-951cd30ebb16",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72ceda2-c1cb-4e8f-a166-f16dc6dff5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e46af2-17af-458f-898c-7008cfd9a571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acccc1b-f203-43df-b9bc-04a8b075c63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d134e05-96fc-43f3-aedb-adee9cd08fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318460ad-6b19-48f7-920a-1606dbb6a526",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e007258-acf6-4023-90c3-4caf59334f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7192ae-473e-40f5-a214-6d1011348d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b1cfbe-2bdb-42d3-bbf9-3b10127d69d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b860273-91ea-470f-8c24-ac3f37fd21b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b74f0a-9143-4cfe-85c3-af241491ad0c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167aa2ac-d8bc-4d8f-9cc1-514bcafe4ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "076a347a-84ad-4b1a-b9c0-8724ce7bf6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255fac61-e761-49a4-b391-8a71b107fe53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f59d836c-8a5e-48f8-9eba-2e1faffb2901"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35894750-59f2-4eb8-9ffb-975f0d326a19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3564382c-d9dc-45d7-8fb7-411567891dcf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f908dd9c-603a-423c-b335-4d92fd10be3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7363c0b-9dcc-439f-b1b0-02a87f9721a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a496ff-baf0-46aa-9cc7-230f23708231",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bda82078-1af4-4b70-94cf-a83563b31baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0c4924-024d-441c-a811-40a6a61649c4",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781d5f74-2362-4b24-9e9c-1d441bb30953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2251554f-af7f-4231-aacf-6f57bdbca398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d928859d-602d-480d-b23d-73c32a5e1dba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8150ab66-d833-49ed-beec-791c12d7a829"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2889934-0b9e-4220-a7c4-d93103de2e2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b07ed611-0164-43db-9021-19a2d9b5baf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62e5ed41-7b1d-4516-be51-fa4e4fbb2942",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ea4b8a0-9a77-4094-a67c-039caefbe7f7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1df8389-7eb2-4fc1-baf1-f64572faeb14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f960182-aeec-4b24-94d4-8871569cbd94"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ae4df1c7-db27-4a6b-8273-b5f89d80c898",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "174b23e8-694a-46c6-b7dd-f0e58533fb8b"
                }
              }
            ]
          },
          {
            "id": "3e2021cd-f60c-4437-8d5d-5782ece2b689",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34f9694b-14e2-4d1a-9008-d166eb9be79e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d603e23f-bac8-4a52-8802-7c1d74022d40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffa190ee-a140-4032-8e3e-59bd1c71c6fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "031ad5bf-2378-40da-8e2a-a54a11cb2226",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d3a9c56-f99b-49cc-b054-c55830252480"
                    }
                  }
                ]
              },
              {
                "id": "cc4c508a-8d27-4695-a684-adca941b2c52",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05d39c14-6077-4b89-90d0-cf5d386a7be5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "392bb235-ca37-4d59-8241-29a1390c621c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b04bba3e-7cde-4ca1-84cc-1e394ab2d337",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "baa6e862-433a-420f-8a60-e90088d58b70"
                    }
                  }
                ]
              },
              {
                "id": "ca277b16-b922-4622-9ae9-0d3ed3519aaa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa679f02-bfe7-4481-8608-43cd15793dc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5fff43b-d584-4dff-8ab2-ecfa5972ccbd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf157519-b9d0-40a1-afe0-5fd927cea070",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "570f6804-41cd-450b-8599-c97a99f0a9cf"
                    }
                  }
                ]
              },
              {
                "id": "6e92535f-4996-4eba-afb0-c1537be86da6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9d03939-e3c9-47ab-98af-c7f92e78efb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e1ef288-6063-4db9-ae35-ea65b22dd270"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1282c05-cb37-48d6-8af3-145a172258f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8cf2ec93-f91f-4632-a472-8ea812cd2d16"
                    }
                  }
                ]
              },
              {
                "id": "b80e9997-cae5-4e43-8f09-e55aa426d754",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72fc79f3-694f-4c36-8081-862e587a8033",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99d6c359-9abc-4131-bb5c-8dd298416b97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5244ac2c-57cd-4f54-8cfb-2d32c0fc36f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b4233fff-5cca-4476-b4f8-7407156bb71c"
                    }
                  }
                ]
              },
              {
                "id": "06ed1130-faf4-4eda-af4e-b0eb00457997",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1cdead8-351b-4e14-8778-d86163096814",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ce18013-1aab-4ca8-924d-afd73794caf1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62ece7e0-dcb0-4c24-9f40-738d48870713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "861ac32f-7590-4eda-9d1c-c3f6a88da259"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8bc83e2a-c27b-4d60-b04e-9e2f4d87c077",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1ec69e0-d8ae-415a-b37e-cb2b6277e40e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c84f76a-f279-4707-8ddb-928d086eccbc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a621be2e-44c2-4efc-94f4-62a9e6273117"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40d10e14-d824-46d3-8e3a-5e587cc7991c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "86f67127-ecdb-452a-9700-3c7db0fd843b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4004b4f-1fde-4ba5-81a0-5352a9fb9c3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fe4a429-a5c1-44f9-b87b-8158339fb003"
            }
          }
        ]
      },
      {
        "id": "126f9db3-abcb-4a00-94d3-1d812f04f230",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2d53b4d2-5b0b-4918-8917-b01a22384f63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0901e9b9-e861-480c-8e4b-514724fec5eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "308d06a6-df0a-4821-80c9-6a2d183d3f53",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8871d087-6dc4-4e5a-978d-0b10ced927c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54958db-e924-4510-b7f9-103aadb10ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0667d3e-f4dd-49cc-ae3d-f15a39d1d072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c567ac39-77a4-4aff-ba39-0fde73784347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac3d1a5-94d8-4f08-8e11-35a9dfe4e740",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65538ce8-afd9-49f6-b7ec-d54281af0874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ea8b9e-a8df-46aa-a11d-645393bb7b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910573fd-fa5d-48d7-bfc8-476d63ac0f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a44d22e-78eb-4a12-83a0-b136b8f1072f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93305dd0-fa04-420b-8984-59044a874065",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86ce5ff-40d3-472e-a609-99aa764bcb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c046d4ab-41bb-4fb2-af59-7edcdcf78d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa881c11-98e1-46a0-ace5-074c155df45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbb3590-ac31-4a75-a9c4-480030ea453a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e1d54f-6eba-40af-8a99-85b5bb95a91a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbf6277-f43b-4284-ba46-7e36bc25952d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8b8483-80c4-4223-82eb-a696224b4248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dc5afd-76ff-40e5-b61e-a4f2cdc4096e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "704397ff-a2cc-4f2d-b1ce-61ec303e85ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46c29d1-8084-4034-af37-6301434b1087",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd9be96-e060-4560-9f3b-68db3a5c5587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e208544a-e6d4-4683-b581-36b7583935bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2ac189-4f73-4719-bf50-39dc97dde438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d12e1bac-d7d0-415c-9b3f-b86b132820fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4110c4d-bfed-4504-aad8-e15e5980ef06",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee166f53-8311-4765-ade3-1e4f7fb58652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82653ba3-764d-4886-9faa-3d3a19763635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a1bd2b-9265-4f42-b063-f7bb497959c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc1a55d-b29b-4119-8608-6c6dd405df49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a24674-40b4-459e-b577-73ed8c6b03d2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1d6772-dff8-4f98-96e5-24082409318a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83c605a-f3dd-4cdd-98ce-2859d41483d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3886a5e-1b42-4241-9a65-39c5dc82564d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d513499-9d81-42b9-81d3-5c3c3f53f07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56b8f2a-a5ed-4e9d-a588-de2f840ccfcd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2560123c-6f1d-4102-ba06-7f296ccc44a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a091792f-b127-47e0-bcb9-ab79555c2e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8ee159-ca6f-4285-8ae9-12c86ddf8c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c57b16c-caf8-405d-93d2-83537a868e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350794cf-c197-4b99-95b6-b2ea7e126ee8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0ab902-f0bc-40aa-aefb-c2f43c1bba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57977b0-9381-4bc3-ba70-8ee26edd55c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5400161-05cb-4497-9779-81d8329141dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8380f59a-c6e5-42dc-8e24-2189ccfb581e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f08a0f7-282a-413d-a72a-ed024d4936ba",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4d011c-c8a6-4375-bbac-8e4609b44adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197f1c5f-8980-4912-88d3-df1e8f0a2d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5270527e-fab9-41b8-b4f7-5c057b05de42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46206e0c-594b-4a34-9599-20038c1e31b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686d7dd0-1c4b-4521-91a2-1c895a28fc3d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc6cf87-4511-48eb-be8e-a146e8cb8305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cb6148-1e66-4fc0-b18c-a2d422bbdf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b9c8ec-fb8e-45c2-93a6-e60eb48df246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8daf37-d5b9-4a71-af4e-a062181169ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bd0ba8-45bd-475a-9748-36e521e466eb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0bef7b-c78f-495e-a1c2-b83c1d32357d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19fda25-cfed-4626-ae0f-a9b56b4e2e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7af740-ec2f-48fa-b864-d6d76fc0ed5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6acaac-7c1d-49be-a214-8c4fd69fa99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9b2665-c981-4165-8900-eba621222114",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136ba19b-ce6b-46e6-b50f-183feffbad8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cdf133-5a7c-41a2-af19-2b1323a86324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c595ed-9a40-40e2-8100-f8d1172a211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dc05b2-d5ed-4181-8adf-fc9e93a1709a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fe4b02-9f0a-4627-aa48-09cdc5408a17",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8658f4b-cb06-4122-afeb-70413214f8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50671d8d-7cbb-4b6d-bc37-2bf3af2a88b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d45a62-2cfb-458b-9881-7ed0e96577dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "41131877-0c99-4cd4-8ffc-3ab21d899a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d54c09-693e-40ab-8e4a-125f38172c0d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e8e4f2-57b5-45dd-ad53-a01e13046c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37d7d24-038a-4b35-bd05-f57ed612dc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b5d16d-2552-4c8e-afd8-0a731afb2cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc96fd8c-ab71-4486-aeb6-ef44d5dcc19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706376ae-6647-4744-8298-9cea80b1cbda",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94ec21d-312e-4d5f-b8a0-d4d9c762f3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf73d28-2907-440e-a8ad-55b22011e1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b0cc25-68a3-4786-a846-089ef31c5cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b55446-317e-4cfc-bb6d-cb43ac3171f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ae1386-3dc2-4626-bc2c-a7ecc4dd0be4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efec093-87e6-4bcc-a910-3b8926eeeb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1989f74-f9af-43e0-83b7-b3a15ff9184d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f34a73-270d-493b-bb84-5ab70e97e7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a455588-afa5-4109-ac80-e000eb9c2b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4394bb6-34c0-4452-889c-9bd13c81a98b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dfc68f-bb5f-4aab-90f5-15d44d5a77d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1e83e3-a6d1-41cb-bf87-e47ddc297362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d2c8cf-abf8-4e2f-9ff5-fb6a601db8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e5c7dc-7cfd-4388-a0e3-615c1f30bf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2d5349-0431-452e-8ec1-943cdbce9c2c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398587af-b14e-4710-8352-d3f58cdd37ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2591ac1d-06f7-4418-85a3-27ae8e7730db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1b9a9f-4a26-4f76-a89c-d3976121e05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15360d2b-7a33-4f37-be94-6c77f5f77193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1772329e-55a0-47ac-89ed-ec444f7ae40f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdc84c4-1c71-4905-82fd-e7a1ebc285a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46ad9f0-e2ec-49e4-b031-a6a73a22751f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6e27bf-4be4-4162-a82d-bd59e66c9be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "386ce02b-fe76-4c38-9696-34586ab5ab2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56726c5-336f-4cdf-8ade-e15d803a8464",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6cee8c-6c0a-4bbb-893f-4a4d3e6a87ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09456c3-cfb7-47a5-a094-9f5e0cf21c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ac58b7-d443-4759-8465-0e21a1d909c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0984b5f-9c99-42b7-b55e-4f673a1f4463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d05b410-ae50-44f2-86a9-16c25772ddf2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74073211-c002-4799-ae78-27be90a38a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618d012e-c9b4-40f1-8e27-f7795ed5d71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ef8f18-57c3-4c62-b651-4092828c42a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f6710e-43c0-41ca-af44-57a3f332c52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795531a8-6f6f-4c5a-81a7-a435124aad58",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebb4323-2f6f-4cd2-87ed-8f4d15888dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9fe3f6-8659-430f-ac59-b1605da169c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e4ab82-e5e1-4da8-95f8-d3b73dac6fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4dab896-cd9f-4969-99c6-a64256400a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fda307-0f37-4242-991b-1d1cba981fef",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24dd080-c0b6-453e-b2c7-93889592705b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17615b3b-4211-418b-82a3-b86fd272de66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fbf5cc-6875-442f-ac29-fb71765629b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee974f6b-8c1d-4079-a0b3-8f0e733f1e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625bf594-29bf-4342-bc50-68bcc4b70cc3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0880cae1-46ad-4d53-b85f-df8679f270a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b1192d-b38f-402b-883d-caa6cf443668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c5ac72-e434-406c-abe8-54f0d0b1f8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76bd21d0-eae3-4642-838f-ecc467d2540c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2021a8c5-83c6-4195-ae31-f6c2be4287d7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fef004-4c2f-48c0-b9d3-df4eded4ff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aba0239-3f07-479d-bbc9-e5d9b4f90c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fb40c6-5835-4fad-abc3-7fb8a9472435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd435e1-a45e-47f4-b1b8-d1fb431803f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51316f2-619b-422d-bd8e-23ef15557687",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c198694a-97ad-4354-95ef-ff50303a2e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a24e6c1-dc99-4b3e-be40-6af2f8ac8a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17748d8a-d1b4-4589-a7ce-7e1fcd911554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4acdad6c-005e-4f1c-b7f2-38096a7184da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430034c6-08b0-4f90-83fe-e01ff0184d23",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f42e26-f444-4640-96ce-2ac181271777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdc5481-6f2a-4b0f-b34a-b05266708600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff056851-7fdf-4def-89f6-0a97a298d010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aabe799-93de-429f-b7d9-dc6d5b751f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13783b30-f084-46e1-a0aa-9f61cacb5a3b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c7878b-2871-4fb1-8e2e-106c1644ba91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8741c75b-ff5f-4769-b690-bc253c68c952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a498f6d9-723e-406e-82d1-90610fe90e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d40dc3aa-867c-419a-b2db-91e3f0cf42f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fecda9a-2182-41f3-b39d-6e54312268f5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73328cf-9114-42bf-84f1-e80ceaf7c01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfaa66f0-e11a-4a1d-8bfa-44eeeae0b6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d9fecb-f3fa-4c35-9af1-99b48328fafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b32b53-098b-460b-bfef-7430bebaeead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbd076f-a054-4b73-a128-6faffeb260e5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bb8ceb-cdf8-4476-847a-26909a3f1d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79ed9b2-1155-4e6b-b37c-820f6f310785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00da8c0a-61ad-4baa-bcb2-9c41dec0c919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64982ca4-0765-413b-bbcb-e2744c45c9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a7fe9a-90f3-4bc2-97c2-31e68d9dd986",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8eee17f-e15e-46b8-ae26-18cc97ec2bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d24139f-4081-4057-8b57-8fc0b526675d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddf826b-9b6c-4530-8b19-179953b1055b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "634dd28d-2d4b-4f61-a978-5b9752ecf610"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d8bf976-834a-48a4-a5ad-fdf8d7f577d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6459edd3-a930-4cde-bb79-80087d895a29",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02600530-8ddf-4425-904d-46d9503e9c4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "11c89d63-a907-4462-a80e-b96bcd97a5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8999df9-1493-4dc1-ba00-c1a304492d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53098128-5f8e-465f-b6e8-4aeae1e3e26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7baa24d-7c13-4938-913b-36d9cf94b491",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9d9584-1bd1-495a-983e-70743a7da32f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "88f4f78b-c61d-4957-8227-b107ee8d2a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ef5625-40ce-4a62-9f17-a11b05cafbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33292e48-9253-464c-bfb1-693d7432755c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47c13a78-645f-4a5a-815d-ca2869b20548",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d351f547-6602-4a7b-9744-a3f9fcd7cc1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9923263d-7563-44f5-87f1-fee3912ebbee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb76bf97-7efc-4f44-8186-e117a8301ef6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48c64909-7edb-42d4-9fd1-2bdde8cf7d43",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ccaef9aa-501b-4227-ae61-6f2950135628"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8b887e7-2023-4ede-8be6-a1354733f29e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b5f5c2e-aaa0-46e5-b37a-06cfd88ed50b"
            }
          }
        ]
      },
      {
        "id": "7ae7486f-c9d0-44fa-80e6-f6f5860cc149",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "880332a7-1064-4c83-b63b-146ac4f57a17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bbe4dbe-5ff7-423b-b686-43225aa49caa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a41c9c2-fde2-4e7a-9287-58139d67978a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6195d2a-bafb-43b5-a59f-d98e1254372c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3822a1-ff75-47df-a3d9-34a01ad97b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d182ad3-f76b-444f-939f-92c2625388f5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be80a649-1930-404d-90d7-f3ee59f36026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48214051-7b14-4c61-a81a-c6d60d5afef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64434cfd-3e9b-4245-ab12-82c3f15e9717",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1a299a-4123-43c2-b794-44005f47cb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9edb13c-7842-44ee-9902-bd87568c379c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb1e007-5eb5-44bc-8ab6-e6dd6cedd5fc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef77a5b3-4a07-426d-b57f-556ccd137205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440a10e1-b2fc-4285-ad6f-7d1529fa41e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592e061d-f2d6-41e9-861f-96008153ceb7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603131ed-6f1b-49ab-a4b2-68751ceb99ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22b4725-0ec8-4132-9bb5-3880256380fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9ae068-d6a0-4798-a0f2-7d4c8840bfe0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd036c2-19ed-48d7-ab51-125f1c0b0b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7daa4be8-6f3d-401b-8b86-de893ecfe0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181f3dff-3f42-43a4-8d18-0a211668743d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94e1866-81b3-4cba-8cf5-8f2aea2d2ef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238a5d67-c02a-4f45-b8df-5692d937c1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88297b90-94f1-4b22-85cb-abbd3b667fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21f3f02-ed1f-4190-9e81-c4e0c1622ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac06d3a-5254-42c4-adaf-08af12fcce36",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e786b36b-28d2-4e30-9253-017ed3326dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8137ad87-419f-4f31-8563-783e832a2826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d8d0e3-94dc-4d93-a4c0-a2f61a238f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77b3dcc-7221-4797-8fa0-024a36f6f2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991e810d-e3ce-470e-8487-2b2d446b7ff7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c86ed1e-2f80-45d7-9a59-6cad93378ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18e7ae2f-4181-457e-b210-40fa93942566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9935a6e5-79f9-4d00-8424-5f67da78b45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ce73e3-fd37-46fa-b25b-7d8645005c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0d92f2-1023-4a39-b4ec-1f28f4d75d74",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a2df50-9117-44b2-9a90-317e6d7acee5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a5b234-63f3-498d-81d9-7a8a9e039270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cafc4b-13c9-49e0-a4b1-156121967bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceae8fac-5577-4a99-b788-8f6a960cedb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c16e617-e621-4709-8baa-1c1ed01f851d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fec388-eeba-4a63-8f8f-046bbaf06e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9a11ea-b95b-4e0d-bb68-643dafee71ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591498cc-41f0-4b40-8280-e355c8a58ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0a2e00-5861-41d0-a028-b1290a30dba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd7fb6e-256f-4e25-9261-06334e0b1e7a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a475a0ea-62cb-4945-8e04-2cbe435d4ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05052e9-96af-4582-a642-86fc265f3183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf84dcca-69ee-4676-913f-99ec4352e05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a417047-5f73-45ad-9a71-1f4de6be0e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d11e4c-d775-4a02-a540-3abe45be55a7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3311d5e8-25a1-41d1-be20-8e6771cb7124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37124cd-151d-4efb-bcc8-283ffd8c41b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc108a52-f334-4a3a-bab0-388c0c866229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f34bdf4-72d1-46eb-bd2f-e3713dbea5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd301326-94a4-4b62-a956-c8fa83ef62e9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785cd8e1-5100-4df4-81f7-501e69696cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca98f05f-916c-4206-bf53-15d7c94893fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae559e6-77cb-4c3d-8a7d-b118920b51dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8b21e0-6156-4fcf-8f44-f68cf23712df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb3eab9-e311-419a-ae15-9b8dbba0821a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88788f56-f70c-4118-9789-ee71514100a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cacdd5e-39f3-4c32-9366-a5237f25ba05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc10beaf-17da-43ed-8221-2935a0dff10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d66b8ad-18c4-4bb7-bb1b-98840833ef43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a5e4fc-247c-443e-81ed-2078a6339918",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ef7e07-7e33-4c6b-a001-75a632e0ec2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcdf3236-6e17-44ed-9d7e-cd266411464b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f456f361-aceb-4ca3-81ce-32e0c565d208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b2ac57-2da6-4bfc-8534-26c4e629a852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868181bf-b1b7-41ad-b809-8262231e5144",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47d8ff3-eecc-4cc1-9eac-75f182a9413d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179baa0a-60a2-4e65-95d1-4aa1999d184f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf18f224-c761-41c7-a32d-391babf34034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd1d09c-10fe-44e1-9641-fc35b6d000b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14269f6d-1986-4137-8488-02733aa77a1d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd885ffb-0cb2-49b5-9a4b-151b2a945b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd191af-63e1-4fdf-a868-698853ae3833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb16fa58-ed81-4751-946a-d01bb91d1430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b988a9d3-4c65-404f-bab6-313d8e7d16d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44027ea-6a7a-40e0-8c94-a841f251a7c3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dc4088-5c8e-49ae-a7e6-b1b8f00eb9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ccaede-9b9a-4e46-a57a-f9483ddad6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1680171d-8327-4229-b168-f1ff2457d75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982e1712-184f-4130-aab2-b1bef389e057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a8fede-0b63-4c80-bd9e-b3abbb1871d6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214dfaa7-0ffb-474a-953a-e7f1df1cc8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212bfa6f-360f-4da6-9ed7-8ba92c06a22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61722bb-d060-4135-aea3-ef6def1d9967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866e245e-2208-4974-9d77-80061d40f512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9298c92-683a-42ca-a3b0-342490fcb878",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71519c5a-233a-4e9d-a239-08616b99a7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94129228-4d4e-4fa5-ac9d-49bf617661b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3b5034-f622-463e-b380-9617617dd3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198d96a4-390c-419e-997b-4d27ad6c0f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a69af4-b17e-4754-b402-2276346892f9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e3707b-50a6-46c7-8588-40a4fe86c8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62eef6ec-4cf9-4705-a3d6-e6132228c13d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8465041e-96cd-4bc9-92d6-7118304fea97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45f323d-cfd3-4abf-899d-71a19087addf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7debb74-9988-4f32-8582-4807f6f68f62",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8efd5ad-adab-4e1d-a1a2-5a34df3132a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006eaabc-a000-4e3c-ae75-2dcf8d35c864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0f06d5-b844-4989-a250-977a7c2481cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038a4fb9-9bf7-4681-8f3e-e84f53fa3efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05fd679-991a-4a88-a1e6-ebdf062d9775",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcecab2-9550-4950-8f48-646adb1c8b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07aa83ad-f233-498a-bb20-d4e3068bf9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9888eaaf-728c-485c-822e-b66a417e9fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40de2a91-4f33-4c47-ad6d-a61d6b9e4c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42df1c36-fafb-4e00-ab8b-c92c04622552",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d492cba-a17f-4d75-b694-47cd774570f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa9a7c2-5034-4eb8-955b-ee330e863ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1432ae76-7c73-478f-9f27-3f0b67a22c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b637ff9e-d88c-4cb0-905d-012ea8f0d38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b5f1b9-9181-48ed-bab6-40852fdcd46e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85257c3d-63c9-4e95-a168-cfdcf60635af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bd59dfb-4fb7-4fd1-bae3-8c5ea90d6c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bb0b6f-10f8-4cd7-add0-f066f45cfd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf0f710-481d-40e0-8f64-6451c42c7eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5956d311-0cc7-4bd9-85d5-1bcda25bc1ed",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7987d421-b80f-48c4-8551-4fc8ae51e4f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67039dec-2fa6-4317-ac16-20d17adea511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718c2e18-3201-4139-a925-019c3a319041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d78802-97a3-4639-85ea-9f5f714ac548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eee930-484d-4d4f-b396-c9d2ce3d1892",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4071a1f5-cadd-4958-9ee3-c00eafb63d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7380bec8-64dc-4b81-ab57-69f0bf88bc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222b1ca2-c1ee-4dd1-86cd-ef0f63267ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2bf3a3-7a39-440d-ae33-120402ade254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92275ae0-3144-4a5d-9bce-348719429dd4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaabfad9-818c-46e4-ae80-86f5ae823fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff0722ee-6a7f-4b17-b8c9-7c0163b11c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b22012-f29f-46e1-8430-de92052a69c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181099d8-e252-41d5-97c0-146fc6cb0dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba115c1-71ab-406a-a540-d1c51bde7be5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236ef051-5547-4b4e-abde-e4ae06706c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86fccd6e-5fe9-43d8-ac18-956ae419f876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c40f77c-cd97-41eb-a78a-c5288ad5a12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11717873-ce11-4ca9-99e0-6eaae7cebeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f798e55-6ca9-4d03-9798-19a93cb48fa7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a6cb40-cad9-45a4-a901-887bfe34c192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944ac70e-850b-4513-995a-351a16981d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea26cbd-5d23-453d-93f1-6a9bd3a0364d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6622959d-bfeb-401f-bf84-c2cf3d7e3dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420e44e0-ef22-473c-88de-1e65fcfaa85d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bf019e-ff96-4c87-ba63-c1fdeb24144a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332fac12-3d5f-4e5c-815c-9a3050f560c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e65e59-20d0-4575-aaf1-7ee88a0a04b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35597cde-d127-4b1c-a5fb-65e5c01e066a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed0ce01-ad84-4c6a-bcd6-fc9a063612fd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcbc01d-b10d-4f88-b5b7-de8e055409e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddc4a77d-5f4e-4887-a278-b13b5449695a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c4209b-d807-4eff-9ef9-810294e3f0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e88a6b1-164a-4ba1-a664-0ed7a9864e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72270e64-2c7e-444f-9552-eac6f7609e94",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a72cde-c206-4084-b0bd-70dd942593d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "390a5d0a-737f-4f86-b7ad-b976ef7e246c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dbd386-feca-4bbe-909c-fdfcfdae41c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f5fa9e-4b93-4251-9fc8-7995f8ecdad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181df07f-21ba-4812-ad31-80a9fe097927",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176e20dc-e811-4615-afa8-6f3b8535212f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5644d60a-2a25-4623-9e12-70cb69b8a480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a201f42-3cbd-49b4-a629-69c8e8ff8ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9fcab0-9eea-4c31-a41d-9fd6abf1d8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9527d7bc-c93d-48ef-aa60-2839c70f4ffd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acaee03-23a9-4d2e-b8cd-c06ecde68061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084fc0ec-faaa-4b5c-a648-d9857e6a3860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db1223e-5aab-4f64-8f19-aa28cb3bbd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c837c4-15c3-4dbc-a5bf-acf97e9e31dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f93553-3bf2-487b-b3e0-5bb54bc15b94",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48663c5-e8ee-4b98-bfa0-72545de72252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751f1a4e-ce67-45d7-a41d-3f9dd6c96983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e09f774-6341-4a63-8bf2-fef88c2e4f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bf1865-9d5e-4a5f-ba33-df5ddc1f04ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780853d9-2122-4f4d-bfdd-a429516f89cf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bc926d-5376-42d8-8c68-a4d93eb38021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6266e53-af33-4b4b-ad4f-2b1755f7a125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e70dfa-8a90-4f92-98a4-df23e1f07d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6267c5bf-9ab3-47ad-b4ed-38fb5ece4553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4501ea6a-fcbe-41d6-9a94-7f1174e90a16",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce72f3ac-c834-4394-b539-32b1f95b9c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d9fb87-c856-40f9-a19f-5505fa6d2200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7119864e-1e34-4725-a5e2-5f8ec60e2fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6d438e-41f3-40e6-b3f7-e156b930fa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10df23a-23fe-4020-96f6-885d0edba563",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fe0095-730f-4fa5-b0e5-d69918510815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49eba5d3-c814-4f38-9ac7-1f7827ecb306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9d0112-434f-40a4-b7ef-54854f18c6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17062aab-649e-4d3b-8e4d-0f303209c4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4baa8dc-4a2e-4823-a76a-e93a6fe40b88",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462d25eb-ac2a-498e-9e0f-63791e83a829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5de4cf-2525-42b7-b65d-6bfdd7da03c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e6bf36-dd34-4771-b3e9-7fce71b6bb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695d0789-4a6f-4e63-b139-9500eea0301d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c23ead6-399d-48e8-bde3-620c3a581d45",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b2ea72-8ab6-4784-8fe2-3c33d2563b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e280972-df7d-4dc3-9b11-6d92a52ed7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2d7690-9cb2-4120-a6fc-d6d033248db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6f5fe3-5b19-4f58-82ae-597bae53cef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c196bcb-3f99-4cc4-b71d-e63c249f7456",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ffb3e9-4df5-4465-9b2f-d9e78b1cda33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740dbcf2-c6bd-4989-b761-77fe1f3335ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73a83ed-09ce-4ffe-8173-0d77f4200b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d129387-981e-42ba-a7be-ab7cecc24e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05dd6208-8326-48f3-8874-c51193ba5bf0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca657c3-5aaa-49a2-99bf-4b8b52ceb9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60687a5-d53d-4c9b-8da7-475d18273ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2b3a4c-8e30-4cc0-a7ee-320b33954bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c10775-482c-432d-b7f7-b502a24ff29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de561804-07ef-4958-ae45-bdbf843f0e66",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab769b2-6731-4860-a31b-cf102f2f84ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7645d84d-25e2-4b1b-8aec-0e0d2abead5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b43b41a-da4f-43c2-9510-72ddab53203c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac6c734d-8116-471f-9173-37fada44e34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1354b817-f2dc-43f0-870e-02aaa6965d68",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6701409e-8784-439a-afa9-f5b650ce28cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c16216b-6f98-4c2f-b74c-a7ce4eeaf8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181462e9-4db3-42b0-be9d-5fe15b06a9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d5d4d5-189a-455f-896f-2073b976af48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d853a5c-8994-458c-ab24-058c7852b267",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d55499e-4fb4-4f24-be45-d464a811984c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5b4eb7-df17-4226-b683-54a60d61366d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8070e2-bcf2-4106-906d-b24bf60caf78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9adf59a-04aa-4dcf-ab15-0d11a63ea72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3a2bbb-218b-4adb-b0af-1b77094bf52e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db3adec-ba2f-4fc9-9361-91c03a632cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819c0bbc-1032-4d5e-84b0-f99f395fecf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e8864e-042c-4074-b446-40ab7f5648ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a7335b-3541-42dd-aaa4-5ca48609fc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b9623c-921c-411c-8f10-ce0ab83be529",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c55fed-1802-463c-af8d-673fffc43e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795c4b05-a9ad-43df-bfab-1e856eab37fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9ebc2a-944a-4c9f-bb9f-8602f18cdcd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62645111-0489-4a2a-9950-96e8d38e64b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42940e2-190b-4c07-b3b7-afb20f5bb544",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a2fed0-cd02-4781-a18e-387286f7c79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f516b6e8-7867-48c7-9817-d1ec29382ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb11722-0b63-412f-a0cb-6a46f0e352f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106a67fa-e991-4f42-9d3a-c62fc5e17f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e173d298-b1d0-4d86-a266-ecafbef332cb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523e8013-aa78-4a4c-ba62-50eb5c228a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7956e800-37d9-406a-bbfb-9ac6e352fbe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed034b7-58fe-492d-9c70-ca561ee95e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb25c347-a6c5-45db-85da-168136938e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f76365-6be9-46a1-ad36-53a4a125aee0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc6cfe8-e866-4e91-940a-55ca6960b038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bfc0c6-fbd4-45f4-bc98-289500a32559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85408efd-8c1c-4c5d-a726-2ead5cf6c6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f59934-9857-45d9-89ec-b196a4717b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aced7df4-49fe-454d-b44f-ae0dc48bc2a8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9515a0f-cfca-47b5-bc8f-4ab4c140b058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76a73f0-17c0-45d1-8e95-de35dec5499d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9911f4-5ec0-4ec4-bc4c-b93631975c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84da07c8-1d28-4106-9279-d833fbdc8b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12763ff-7aa1-44d1-877d-841065ff5bc6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d2b760-2719-4109-89b8-db36e146843b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5859199-4bf7-42ed-9955-276f957da937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf86ea4-7109-4eda-aa72-59807b8f0d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92303e9-2f2f-4ff3-b7aa-c3f9f41168e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e5d588-3ecb-433d-839c-61b554f84183",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fc20d4-7db6-4063-8717-07183147debc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9496490-a27e-407a-a285-e6784b38109f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acef949-c77f-4d91-9341-ba111772bc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed566f8-5cd3-4b2a-8107-f32bb3e70632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c845caf-35b2-4924-8ef2-01d359b83f8a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405c3868-edac-4701-800b-9243558ad086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556f5cc7-2118-4bcc-bbff-bc42a46087a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7e57fe-6fb9-4543-b4f8-6cb467f7918f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d651cb3-375a-4db9-bd31-602c8cfa7252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21c2c73-2553-4708-87ad-352eb7af7eb9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ff244d-2b11-4681-9529-56827fe50e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318123c7-facb-41b0-b924-dde61b843309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15bc3a8-a6b3-48ed-9c40-2f6d33133a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4a1a68-af23-4984-be8f-308fa38dcdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c91620c-3637-438a-9fa4-8f67608d2cb1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02e877a-4d9a-47d5-b8b8-e61e79506cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f20a63-e477-4490-b494-f6019940ad01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84782808-aa4b-4917-b7ff-8e35d246686c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e2bbd6-9621-4528-b0ea-f5aac8d75222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e718f671-fa2b-4074-9a24-0a2e5335b376",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07655821-304d-4bdf-9cd6-fca848245e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e416160-ab27-487d-94fa-d61f9e8c98c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcceb76-8c50-424d-9167-69a5a92cfbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587e0f58-367e-494d-ae7f-d11bc9d25d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba3c402-9c2c-4c34-9713-97d48a50383f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b7095c-9f96-4617-b30d-fb8185116d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0275940-edbe-41da-b4b5-328ab4bcace1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbd241c-f614-42ad-a558-8898c80fbaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9a4cef-a934-4a6a-8f3d-07de0214dd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd68680-5152-48a7-bb47-6c306aba383b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29856da-3cac-4f4f-8873-253a4e5cc176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cf8c74-53b7-4c34-86cb-443344c7f890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e021dcd-dfbb-4d98-a498-11ad9a6d4643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2471e995-82fe-47c3-b85e-9951fc920a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ef2de8-6239-42e0-affa-6ed9f38f92d4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f3d719-c575-4265-b2c0-d441a3269e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc2463f-8c1b-419c-814a-4fc7e28bb388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb79fed6-5646-4fa2-8c77-c0c6b72bca2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74521a0-a6a0-42a1-a8a9-0ada0e412640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81fb738-51a5-4ddd-ab6b-6f3da8b84897",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312e9952-bc31-4ffb-b01d-057da1c5038b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65598323-1280-49f2-9049-0739d2b82dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1992a0bb-aacc-4819-a9ab-9e2aa69cd578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98926fbb-8cba-474c-88b7-1b213b696fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0212fa15-f63c-44eb-aec6-300157c074e9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dd31f3-5804-4148-a7cf-f41dacb71802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98119fb4-34c9-4cd2-9161-332701a6dba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6c439e-87a1-4a30-93b3-8f0d7107885d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1811a4-2572-4242-a7d2-3e66346d1c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc33e4e-ce56-4aa3-aabc-78ac6e81e5dc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca78c9a-2207-4732-a0a8-d4f49128cc8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68615240-5e59-4f82-9173-ce3096d8648f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbd79e2-f217-49d4-9702-364efc0e9b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21072a2-4170-42e5-af55-616df22c0ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be378fa3-836b-4395-b206-f33054925a40",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7758eb20-177b-4739-b6b0-105569025922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c70a9d01-013c-46b1-b4b1-499826577488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74e426f-ecf6-4b15-8c08-efb15e30a7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fcc793-40d4-4c4a-8193-cedc249a9947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dd8037-d04e-4696-8338-edde105751c3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4769f6-1a4d-4c92-a9ae-9944c94bebaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8029ef-2de1-464d-bffe-198df8e16499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a55d055-8687-4c17-9d66-e80781b18cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307fc647-c0e5-4a60-980d-ea41cc7136bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6515b322-b186-4c4f-89ff-ded415f84198",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edea247-5d2d-4ce3-ac7f-33b5f2cc4fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305c9713-c1d0-4fe8-9937-f09dbbe174bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d2dc26-294f-4732-9d8c-25ab8ef312c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab5590f-8147-43ca-a056-dd3158b2b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb937b44-69ad-4522-bed3-5628d51fe2a5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d48204-bf3a-4b26-bdd0-466b1d9ff120",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c15187e5-7c99-46f1-8e73-728b77cda434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104120ec-583e-4a6c-ae04-4fa14253ccdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88db38f2-59dd-4a49-831a-4615360bb9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81499298-ed3d-43c3-a2ee-39debfb07cd4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07a2850-a79f-439f-867c-6f2eb8f9cd39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "335d657e-bb7c-4769-afd8-642c4692b60c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90529c81-86ba-4b30-b488-56e7866904a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0219ef9b-54b4-48ce-82ec-26f4a05e5797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84dcda5-031c-4252-8b3f-04f9a322ecba",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dd5d17-8890-4894-b95f-a19bd188aa33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f253666c-26da-4765-8c0f-9f35cdf54eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00e16ef-b928-4685-80a1-207c082e371f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04256833-1daa-4734-9529-2c5d6701e0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3c583f-c06d-4ff7-9aaf-2690bffd0da1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8cd7a8-e4af-4ac9-a393-4d86ddd1cbe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abbd7e1-1d7a-41c8-9f1a-34487cf13cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7667d016-e824-444c-8ba8-bae67e2b3cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10ec64c-3977-4ecb-8f96-6eff29067926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743a1ef9-6604-4b67-8902-075bbb1e5264",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7779d5ce-c873-4a80-b415-1c50363fb1a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658a8f32-38d5-4d06-903f-de06f68d4118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58e04d7-eb92-473f-9ddb-e838c00039d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3710cef6-a7cd-4bf4-9bac-4e01862f9cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2ad411-8e25-4c8e-aaf8-7d1a44ce92a7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9485cb6-e108-4704-a454-450e0714fa84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a8102e7-9836-42b1-95c1-5ca6ed5aa125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623801c7-4c17-4bf7-b161-5bbf05a05739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab24a30e-f61c-4556-9116-ce9c9e2e608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0297b8e6-1401-408e-86c8-b122ecaab476",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7e753d-b368-46e5-971d-79745f14505f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1f222d-c550-4572-8f88-25fc7d8bd354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c19f75-d960-4226-a4e1-71f53e103bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1667726-2822-4f39-933d-7b34a73d37a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833e5ec5-ecd2-4407-8e3d-4dfd273328ba",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8147ae62-a161-4c70-a4be-2b3ac0f31c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8468d9ff-f295-418b-bfa0-8272efdfa888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da049062-3086-4499-ab97-38ea53fc312b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bec66d-4b7f-4b5a-a017-73ab96d70994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebc035c-09f5-4695-a20e-95f66deaa446",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bfd5a8-fb0b-406a-b81d-1ce0b4240193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc9ed9f3-7312-4d99-a4e8-b0965208a157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd605199-7135-4414-836c-be0782b41e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16adf3fa-baa1-4ffc-a006-89e5e5d7fb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6b314d-824a-420d-8616-d27e27767280",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6ce37d-807c-4ca4-bc6b-51dfcc9b3c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01bdebf8-f6a1-4c3b-9be6-e543c443df9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f69efa5-4fea-48e2-957f-d5c66d9e81ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7585bd18-a57f-433f-a1c9-e06d9572e2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6add20-753d-4b2a-9054-8c792a7c3cd7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf8e9ea-21ad-4bb6-bcef-83b20f6616c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0e717a-d476-4e43-bb4e-988be1c01a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6dec78-6f37-44eb-a341-e5482cb1e4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7977281e-9976-4544-8f74-88be4eb22843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4065936f-45c1-4c79-8677-532d181c4e38",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee186034-4c4a-4ccf-af37-71fb01495ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7571777-1b48-4f96-85dd-e4ba1ad6244c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac28f4a4-b389-4f9f-925d-4161c64a0a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6601f52b-93e8-4b5a-bd06-c535ac9f40a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f149f0a7-4f4b-4da1-a694-e6230377c7e4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcac880-2175-4000-9aab-83c6867e6274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8befd0-0b7a-477b-bf03-c22080061b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28441bff-d14e-4785-a7ee-578d1813d7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf74b72-e75a-4632-97bc-739b77770b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7836ff2-3739-4441-b3f4-ce6c0cbd2887",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b07da2-d3a4-4d1b-95ce-ccc5bb5e7c46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab12e3b-40ad-4e10-8434-b6712be78604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4c8ca0-8e4c-4eb9-a61f-1205c13a5800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63443668-1907-46b7-9a01-f52b67c928a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85684ef-871f-4cac-aa45-71b9d601d71c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621004bb-1b9e-48e7-b878-1892f690b6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f134381-f024-4d4d-99eb-7d9df009d80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2330bd3-02c0-4c4f-a97e-d00535a46407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65601c5d-2b11-40df-ac76-208dba9819b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0474e93e-052e-475f-8ac0-e4d3641a0b23",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9829b13f-3fea-4405-93a1-06469eb919a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06991c24-6fab-4342-91c2-aec3bd53f866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae028e6-dcc6-420c-9db0-344e97555f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821c4b41-c967-4b33-9195-0139e8e0feea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60111fe6-32c7-46f2-86fe-311f208ad18e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810c8e83-5a45-4445-a137-0759302d8fda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c984f7c-0126-4d80-8d8e-c78df8bf450e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d3b20f-eda0-4ca4-966a-ad9a3b93320d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c468d17-3f6d-4109-9983-de30e6b4dce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb895837-ae22-4e3a-9b36-2b5eb716c000",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29686b07-909e-488e-8ead-5a676bc38fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e4ca783-ff51-4c68-bfa3-e356f7a66f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b5ca13-c9f6-4219-a274-61f0987657da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37340c74-2ce1-4168-b497-5ce98283a1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c03875-4bc0-454b-be27-a123c47c99b0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6176b516-7ddb-4935-9968-36b42bce8f9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b596da1f-7716-4690-99fc-de9e22ee5d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb5b1b6-af56-43c9-b29e-d70de64bb617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be6068f-52a7-4834-9188-9d02984860be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac2310a-c3e7-4f6e-859b-f0bb0b02d0c4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b250ec0b-cd42-42d4-9c9a-26bdc24d88cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f4152fb-eb1a-45f2-8b00-c11e076d3229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb03ef0-6dea-4330-b70e-47501fd482f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf3fbfd-0b46-4b67-bc02-df60aa08075a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98969c7b-481a-443e-bf60-1c766a32e5a4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecf65c2-b275-43ba-af4c-66f3f6a96aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d425e65-2ce5-4969-b290-3c24a272e387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d421bae-89b0-413d-b82c-e2d32c259115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b74fb6-e67e-4df8-9b1e-1181fe39cd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb587eed-4828-4feb-a85b-ad1270089d56",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d0afbd-e833-48c3-872c-3e4cbe1b5c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dbcdc91-8c42-4e9c-89f8-56db8dad5481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab376731-19d9-48c4-844f-5ffa6a9fbfc5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e53185a-187a-45df-9290-9ba7439ebe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a5c88-ae4b-4b64-a368-0e2dba2af21d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e64959-7641-4ba6-a754-76dd2227e87a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3500507-e83b-4d41-a913-3e4c8dab8d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0680a0-1755-47a1-8d08-b920cfe5e244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c2c8fb-b8eb-404b-a5b4-75bce1f478b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d67018-c7c3-486e-91a6-9efcdb5fdc58",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aadf04-3072-4640-9174-f0ff9d22c83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db2de9f5-37af-4a7f-aecd-de7abf716ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3226f18e-fa5f-44f4-b81f-f1eea4556ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b9d163-dce0-4d52-aff8-52a3711c6048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946f007b-e9df-4be0-9710-0e5bb114b09f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6c1cd1-ddf9-4d18-bed7-fe7b97dd0311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfeb21cc-1c27-4bcc-a956-7428c6e2d69c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6739ae20-03a0-4045-ad12-09ac2c7fd7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c7e5f5-6682-427d-87d7-774a505d8c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b176da-6552-4c16-b2f9-f6a7c8291537",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07675d6-af32-4b1b-b172-7fdedf3a5daa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a337f2e2-d697-4e8f-837d-a33beac368d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394aed13-1673-4386-865a-3166b47b6a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cda1c73-67d2-4525-8ddb-b66d4ec25c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31ffa53-c70d-450d-b278-fb01c6437b47",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedf5d18-3fb6-4ff7-88d7-4feb5654b1c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9124fbd-b030-4bdb-a4bf-90960c0bf8e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c08ebd-e5e2-4a63-ab5d-a5b2a5301696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c87b71-e009-4420-89d4-76df3abbabaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccec7b18-4fcf-4dad-afe1-150ae014f35b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27658766-85ed-43c0-bbac-db9b502c0fc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08edd2f4-310b-4c7f-bf1e-22ebc00a7041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40142112-b311-40d5-a731-022a1987e9c5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5feee18c-c977-40e2-893b-c2817db03e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed82d72c-d5e0-441f-8fdf-ec67f79b3ad9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ed6b3b-e81c-4650-a077-f51fbe4750ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "165166bb-e150-430c-973a-c89cae5af933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4deaa30a-c3e3-410d-9663-a90b1d6009c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d33d37d-ba1e-48ef-b2cf-f60ac25d07f5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3a47054-7687-43cf-ac71-975407487d1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fdf55fc-dd7d-4296-9fef-baed167ee2ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52b8d364-5c11-4e91-af84-0d7cb0e0917c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bad9b11b-ed36-4578-a545-2135126137a8"
                    }
                  }
                ]
              },
              {
                "id": "063c33b2-c517-4e1a-97a2-3856f859aedc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d96efe34-ff1c-452f-9c3d-c1e73ca992e2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e299ee70-687b-44e2-8977-924a73126be2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fb145d9b-2390-4f54-bb18-b4c3164330fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f707fe8-5dd2-4afb-8b81-34b637170d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50550d5a-3fe8-4264-a8f4-f47ebe9ce80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c30b8f9-31d8-42cd-9c13-8489e71e4909",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b1e570-dcd3-4b13-a5f1-344e416e8fc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5524be5d-45c6-469b-8c5d-247a0c7d7e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28957706-5882-4acd-b279-586c8cd7abba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9b30b31-c121-4ffb-9cda-6dd4997eff27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3724269f-1165-48f6-9d2c-a52648d25198",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23f5f6b9-a2c9-43ae-af1a-198bce64cb89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b60e034-5de4-4c8f-a458-462c24e7c03c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e17debc0-c5d4-4ee5-a567-ed3f93ad69d4"
                    }
                  }
                ]
              },
              {
                "id": "3908a767-5ef9-4443-bb4d-798374d9fc5a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c63130b1-d447-4bf2-a782-3e4289b28617",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce29d9c4-6fc1-4230-9413-c7c160fe16bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a7770fea-78ed-4106-8943-c9ad90027b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc76756-0802-446b-94e2-2051dbd4c497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f116a1-60ed-43df-bb6d-6c6c3ebf16a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "045dc564-a048-4740-a577-63e6bbbc856b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "405e50b9-826b-4ca5-9f7d-750668387652",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dde060b3-87fd-472a-aa85-9155dead077d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "05c1d7c3-05b8-42d5-adae-8a39b60bf14b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34049d9b-a230-439c-a3ad-10e429621111",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5aa5d0c9-9fcf-48c7-93b4-e03c21cf4dc4"
                    }
                  }
                ]
              },
              {
                "id": "ae98d8cc-c89d-4cda-a815-e946e93f58bb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa4793b0-576c-408d-bcf0-4cf6608e5a9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "35eb819f-295f-4aca-bb47-fd1cd86c8c9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e065e8c8-c239-423f-b8d9-f2e8f0e5faa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42b676fb-751b-46eb-b836-bb1f13eaa507"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccf359df-cf0a-4312-aa7a-697c3e787cf1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8b77ab1f-7a28-4c35-b79b-a914cb1a5e5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "712c5207-1a9c-4cda-ac94-2dfbac875b9d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e6cf117-a3a3-4d7a-b767-e812215ead37"
            }
          }
        ]
      },
      {
        "id": "78015f8a-f159-4d85-b228-86e3856e469d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e60a7110-3061-4139-a9f6-35652f44c818",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7678c0a-5c14-42be-9d55-a23ca435665b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfa3533d-b1bc-4048-9e2e-948453128de8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea11d485-fd1a-4cc9-b695-e774ab58935d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "17e7c59c-fa1b-43bc-996a-82bb35c3ece5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c70208-74bc-4918-84ef-da2528820391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6899004-81f9-4ad2-9011-e81e2709c17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5caaee5c-e9a4-4fdf-a966-19053174e6aa",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1addc7fa-4cb3-4613-9f5c-fd517d7c5f9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8ff8dd5e-690f-4cef-9734-9311bd9d9a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea3c45a-8234-4121-a034-cfd59e51d59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8b8a8ee-9f71-4dee-b1c7-67452b289373"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d138211-9456-4634-aa5e-83aebe23f47d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d6ffa35-6119-457d-bf2c-db2da7174dd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dcbbc91-2b16-4413-a284-dc8cc7110a85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58be3486-e1e7-4202-ab1e-52298bbf3600"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86fd96c6-2764-4702-a5ca-dd29e42f60f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "afb99722-4d16-4bc9-8b72-c0060c7e5960"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ae081f8-a4e6-471b-af84-62aa0a3b1de7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff7fc19c-2be6-47ea-9877-f450f8923f34"
            }
          }
        ]
      },
      {
        "id": "8e049611-791d-4c34-95d5-ada6d8a1cdac",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ebddcdb1-24e7-4ee1-9210-048c4b8fba31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e0d27ec-2b15-4c39-8ac1-618e5a30108b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36bf9969-735e-4426-8b1e-44e3d7ff47ff",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e433b4d-e69f-48c4-9b5d-9bbbe4d39da0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f18ff20a-a2ed-47b2-8c8a-a69321e6a20a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6027833c-8025-4595-88b9-82319f50a7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd99c88e-5caa-4972-8df4-2a97b705a9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b46418c-c532-4830-8e67-456fab96425e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d39630f-7270-4255-9652-6b124dbd8fd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f7279748-1f08-4ee2-9c08-b49b0f4d3cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2424d1-e634-40cd-801e-16f3dd336d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3600f5fd-8439-4ad0-9a03-3eb0359cda37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce1f04b0-4823-4b6d-a1b8-53fdd2055d69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afe88f82-f82d-431b-87b1-0bfcd7cccffd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91ef842c-9e19-405a-a6a8-2609cdf9de55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79cafe72-9a1e-4d2f-bb54-c934910b05ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16a625dd-31c3-464e-b1ed-2c485902ed69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4b0aba20-06b0-4787-8d2f-aa9a3da4edd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5089661-14e4-4224-a046-0d618c4d005f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "add12286-cd01-481f-926d-7ea2009edda0"
            }
          }
        ]
      },
      {
        "id": "8a90f298-2b9d-4525-b111-8b8bd17f5941",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ffa751e3-f944-4b88-90aa-c5b33123f381",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb2431b4-b48a-4387-a26e-f8f74b272357",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df4c22e0-b8a2-4fda-a8e3-57dc2473f103",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b970a247-6e8d-4197-a3e1-e83b91e009c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "432c1e41-e95c-4edd-a99e-2e09d89baa64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc9ac2b-3142-4851-a720-b8dae0523c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "839e1167-9511-42c8-9868-2c7afeb09d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5ff0bf-a94e-4c2b-9b61-a41db96389ab",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75826d37-9e84-4f35-9d0c-ecdf6ff791dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fea94bd0-6bd0-483e-9263-2aaa97eb37e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7339d77a-4f88-4a62-bf30-1207f7877f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7231bcc-32d9-424f-ae87-3b58a5086a9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a17600e0-d357-4d80-b482-5066147ebab5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b417eca8-e8f1-491b-8579-8d8457475678"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4a56880-f96b-440f-8a71-535b6aeb94f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bd10e01-aa9a-4df5-8d9d-770dd31d4d29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bfde87a-57a0-4499-882b-85764cbed00c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "32ebf6b0-dd70-4882-8b82-5488a55d3309"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b23ebfe-32ac-437c-b565-8826156d3ace",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0460251-8b0a-4a4f-8bd8-b4996cd2dd77"
            }
          }
        ]
      },
      {
        "id": "5c0acd42-646b-4ef1-a9d1-4960ce27dc56",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4a5814d-b1c0-454d-9593-ce528c063996",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd089f71-34ff-43bd-92a7-861a1f8a5f8f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "65cbcee2-9429-4692-a392-23258b2a2d32",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a19a780e-21d6-4e34-8933-651310e9fc9e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fa7164f-277e-4a8e-bca8-db1b9200fa15",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 637.3384615384614,
      "responseMin": 18,
      "responseMax": 6359,
      "responseSd": 783.6369111525498,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679013577587,
      "completed": 1679013753818
    },
    "executions": [
      {
        "id": "4fb5c6e0-0ab8-485d-903e-829dd3443408",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9fa7cc61-94b6-4799-ae5e-d013fe8e60bf",
          "httpRequestId": "2ba19b02-79d2-40a6-a2d2-70dc3d8ee331"
        },
        "item": {
          "id": "4fb5c6e0-0ab8-485d-903e-829dd3443408",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3ed819dc-1cea-4b96-baf4-a0802e6e891b",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "e669dc2b-8c64-4748-82c9-cd111e46b8af",
        "cursor": {
          "ref": "9584c41e-cbf0-4087-b254-6cbeb63e7898",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "96989b6c-f4fe-4e87-a09f-18f488aa05b6"
        },
        "item": {
          "id": "e669dc2b-8c64-4748-82c9-cd111e46b8af",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4ba19af9-df42-488c-9428-726dac26565d",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "168857b0-04f3-4e87-9e77-238f88376b15",
        "cursor": {
          "ref": "42a0bc42-090e-4fff-aca4-f3ca83d76f54",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "898eb6b2-9146-4155-82d2-716f11a16846"
        },
        "item": {
          "id": "168857b0-04f3-4e87-9e77-238f88376b15",
          "name": "did_json"
        },
        "response": {
          "id": "7b39b321-3975-430a-9c4c-e6ec5c36fc11",
          "status": "OK",
          "code": 200,
          "responseTime": 1243,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6341d6a-c042-4f78-9336-068e1d638f87",
        "cursor": {
          "ref": "b11dd90d-1118-402e-a280-59b4edc14bb4",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "301b61da-0abf-452e-89aa-69fac52baf9d"
        },
        "item": {
          "id": "e6341d6a-c042-4f78-9336-068e1d638f87",
          "name": "did:invalid"
        },
        "response": {
          "id": "bbc41d87-397d-4bd2-b3b9-5c5df416c4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6341d6a-c042-4f78-9336-068e1d638f87",
        "cursor": {
          "ref": "b11dd90d-1118-402e-a280-59b4edc14bb4",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "301b61da-0abf-452e-89aa-69fac52baf9d"
        },
        "item": {
          "id": "e6341d6a-c042-4f78-9336-068e1d638f87",
          "name": "did:invalid"
        },
        "response": {
          "id": "bbc41d87-397d-4bd2-b3b9-5c5df416c4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4bc567-47a5-4c9a-8dfd-aa79ab09560a",
        "cursor": {
          "ref": "8c54ad4e-2de6-4f71-be76-8cce1dd3af56",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "175e0bcb-5907-4c4c-a0e4-490a33ad1549"
        },
        "item": {
          "id": "5d4bc567-47a5-4c9a-8dfd-aa79ab09560a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "67818843-bad1-467a-bad7-050048b13186",
          "status": "Not Found",
          "code": 404,
          "responseTime": 725,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d26f53-e3d5-405d-afa1-0e1443bef840",
        "cursor": {
          "ref": "6bbf5a34-b31d-497b-8142-afe03b459be1",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "aa21ca92-bb4f-4c00-a760-1ddd29fc1fd7"
        },
        "item": {
          "id": "c0d26f53-e3d5-405d-afa1-0e1443bef840",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bdee87a1-3033-4d21-bc36-1c25897d226f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 619,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e546e88a-0215-481b-8d73-93f64768af1e",
        "cursor": {
          "ref": "64a56d92-3161-493d-ad17-6ef8ff669e80",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "107eb230-a245-4c26-acbe-63d9f33cbd6c"
        },
        "item": {
          "id": "e546e88a-0215-481b-8d73-93f64768af1e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b4d31f3e-420b-4fc3-bbb9-63d756df3123",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e139c6a-d05b-43a8-8bbb-88341860283a",
        "cursor": {
          "ref": "f924643b-4f64-4da1-b15c-65eb6cbfddae",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e86b7424-4239-4756-9b5b-1c31226f1d50"
        },
        "item": {
          "id": "0e139c6a-d05b-43a8-8bbb-88341860283a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "41c26ca6-f8f8-4a8e-ab5c-4abe9ea9a47a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1167,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e139c6a-d05b-43a8-8bbb-88341860283a",
        "cursor": {
          "ref": "f924643b-4f64-4da1-b15c-65eb6cbfddae",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e86b7424-4239-4756-9b5b-1c31226f1d50"
        },
        "item": {
          "id": "0e139c6a-d05b-43a8-8bbb-88341860283a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "41c26ca6-f8f8-4a8e-ab5c-4abe9ea9a47a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1167,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c28fcd9-fbb8-4a97-8a20-20d106031252",
        "cursor": {
          "ref": "be622716-8055-42d4-9341-bc78498c0ef9",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "002cf9af-af77-4abc-bd45-630275d8962c"
        },
        "item": {
          "id": "9c28fcd9-fbb8-4a97-8a20-20d106031252",
          "name": "identifiers"
        },
        "response": {
          "id": "4e92bf1d-2923-4844-97ba-9b07e3a594e9",
          "status": "OK",
          "code": 200,
          "responseTime": 1123,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea4a4e0-991d-48c8-9d29-42512a328c35",
        "cursor": {
          "ref": "5bb8dd61-bc7b-48ee-b46a-ee671586de14",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "17ac5c5f-d1d0-4c7c-916e-058c9091526b"
        },
        "item": {
          "id": "6ea4a4e0-991d-48c8-9d29-42512a328c35",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7f5ffdfd-72db-4053-a5fe-2d2e2608c9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea4a4e0-991d-48c8-9d29-42512a328c35",
        "cursor": {
          "ref": "5bb8dd61-bc7b-48ee-b46a-ee671586de14",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "17ac5c5f-d1d0-4c7c-916e-058c9091526b"
        },
        "item": {
          "id": "6ea4a4e0-991d-48c8-9d29-42512a328c35",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7f5ffdfd-72db-4053-a5fe-2d2e2608c9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0beb84-4c50-4c4f-aa6d-b9bfdf7f32ed",
        "cursor": {
          "ref": "a309a983-04e9-4c87-b009-4d7cdf88f770",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "83dd7ae4-7991-46d8-8d9d-be4e9cf975b9"
        },
        "item": {
          "id": "1e0beb84-4c50-4c4f-aa6d-b9bfdf7f32ed",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c4b76e3c-1478-4a37-9169-c20d6ddf5e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd055ae-ebeb-4127-a498-acaef0f99082",
        "cursor": {
          "ref": "baaa2e16-0f9e-496b-9707-75b3bdc20801",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "90f6f31e-1da1-4f2c-ae26-413b2cf5a669"
        },
        "item": {
          "id": "bfd055ae-ebeb-4127-a498-acaef0f99082",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8fa17e90-44b8-45b2-bf6e-09f67e18747c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d544a103-bc50-44cc-9591-c14da35e8495",
        "cursor": {
          "ref": "f41231ad-d1d6-4d27-bb4b-57925f5d028d",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9a8c3494-b92a-4785-88aa-7c6fad6603ff"
        },
        "item": {
          "id": "d544a103-bc50-44cc-9591-c14da35e8495",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6d597c59-88f4-4fe1-8e9b-ec74459ef749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c811b1a7-2960-4ab6-9203-cff499aac169",
        "cursor": {
          "ref": "fb582c48-1b6a-4611-affa-e0bbf4a453b4",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "168207d7-7a4c-47de-b21b-7512b351f6b1"
        },
        "item": {
          "id": "c811b1a7-2960-4ab6-9203-cff499aac169",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e248d31d-dab4-418c-a4a3-85b04aafb4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac5e3c1-d6ea-4138-93d0-515fc4dfaa66",
        "cursor": {
          "ref": "cc1ce2de-d37c-4a27-8aad-5e09a7f0c290",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c0942d3e-9958-43e7-a24f-878e9e3d4ed8"
        },
        "item": {
          "id": "3ac5e3c1-d6ea-4138-93d0-515fc4dfaa66",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f10a423b-84cc-495d-94e0-c16cff11a9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ae859e-6e09-4e22-ac15-35395d61d634",
        "cursor": {
          "ref": "9b74c32c-84a9-4e5e-bcd7-e6a24eafb3da",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e78b7a2f-8e8f-4124-be5f-ac342d44677d"
        },
        "item": {
          "id": "d2ae859e-6e09-4e22-ac15-35395d61d634",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d143c137-5111-4b51-a96e-19cf42e62830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716b2d7a-0bf9-41e1-a5f1-b264f61bfc46",
        "cursor": {
          "ref": "78313176-2f42-469c-9c1e-eb8c09aed11d",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "90f6cd7a-b6b8-446f-9128-3f4c5e290c73"
        },
        "item": {
          "id": "716b2d7a-0bf9-41e1-a5f1-b264f61bfc46",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dbc30ab5-d66e-4846-be13-f7e5b59b94f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b639b63-ee29-4514-a80c-7f3dcd045dbf",
        "cursor": {
          "ref": "880fc488-eb90-4d81-809c-865e32ed97ea",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9ad3978a-a342-4447-8ae7-cda580040878"
        },
        "item": {
          "id": "4b639b63-ee29-4514-a80c-7f3dcd045dbf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d950b0ce-f082-4e20-9f71-1937df1da2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d627b5-2ae5-4f22-9089-039b7069eab1",
        "cursor": {
          "ref": "39669fa2-657b-4c18-a81b-dafc084ccbb4",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8eaf0ec2-09ae-4f44-866e-85a882ab7a92"
        },
        "item": {
          "id": "68d627b5-2ae5-4f22-9089-039b7069eab1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ce74c59a-c9f3-4824-a5de-0609c7bf430d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa26e375-1df1-4469-b7dd-a7fbc714cfd2",
        "cursor": {
          "ref": "ef967cbd-2fc3-44c2-8981-8f198e4aa1f6",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "88895bfb-4b7f-435d-8e56-9a01179e3c84"
        },
        "item": {
          "id": "fa26e375-1df1-4469-b7dd-a7fbc714cfd2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cd67503b-e357-48e1-acfa-3fe128a17bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03716f5-35e6-4274-971d-602e1f90f890",
        "cursor": {
          "ref": "9a6f7f7d-486f-4920-a279-3499853fd5ea",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2d5bf22e-7ba9-45e6-ad7d-39b509884254"
        },
        "item": {
          "id": "d03716f5-35e6-4274-971d-602e1f90f890",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8ab20725-c1cc-4fef-abc4-4e983e369d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8ec837-e677-45f8-ba97-03fd69428909",
        "cursor": {
          "ref": "cda7462d-a835-4553-b55e-905d3abd454c",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0cdd0f39-9b1c-41c7-9053-07938834ae74"
        },
        "item": {
          "id": "9b8ec837-e677-45f8-ba97-03fd69428909",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "afdc2e65-cfcc-4126-ae46-eab087c7713d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cbd16f-bd93-422d-9b58-a54cf86dcede",
        "cursor": {
          "ref": "f26c032b-0a45-482e-aeb8-316ffee46ba0",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6b4c404f-c9ac-4488-ab5f-6a30e5a04696"
        },
        "item": {
          "id": "e2cbd16f-bd93-422d-9b58-a54cf86dcede",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a7c6987e-6227-4be4-9997-4c6ac9e4a8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8949f8-0427-42c3-98ac-de6c3cc4c9c7",
        "cursor": {
          "ref": "a32a3e6a-c387-4fd5-8aac-e469747c1201",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "698c2ecf-da7c-4cc0-904a-68762b18b82e"
        },
        "item": {
          "id": "fd8949f8-0427-42c3-98ac-de6c3cc4c9c7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b780bf69-8133-491f-9208-be82ba6225bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1daf59a-2ad0-4830-9d16-4f6e3360f7f7",
        "cursor": {
          "ref": "1367b7a1-d7a6-44ec-a875-17e6e9295e40",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9c7b44e3-f73c-46ab-9507-394c8c0c17da"
        },
        "item": {
          "id": "f1daf59a-2ad0-4830-9d16-4f6e3360f7f7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e5617023-4cd4-4d61-8a26-0aad634a6e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2fc57d-f719-44f9-8b29-c4088fda20d1",
        "cursor": {
          "ref": "78adb71e-f30f-4e5a-b1b8-0efe1a898571",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d9ac4300-2b51-4a6f-b77c-d78a95f3c42a"
        },
        "item": {
          "id": "9c2fc57d-f719-44f9-8b29-c4088fda20d1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a78deab5-5ce0-48c4-bea3-611c2bed90a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2aa13e0-98d5-40fa-bcca-96de9296e321",
        "cursor": {
          "ref": "c5253571-bfa6-425d-8027-d3621dc48b35",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4a4d9732-7c56-4650-9228-03c3b05e1c1b"
        },
        "item": {
          "id": "a2aa13e0-98d5-40fa-bcca-96de9296e321",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cb30a2f2-6697-4c74-8817-2ca33b0fb595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b02217-d39e-487b-b3a2-246f7cc5f5b8",
        "cursor": {
          "ref": "11a7203d-d770-4c93-9275-57e14d4029ad",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "829ed4ad-1595-41a7-b8df-fcf7a7ffdc63"
        },
        "item": {
          "id": "96b02217-d39e-487b-b3a2-246f7cc5f5b8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4ab548de-31b4-4720-bd33-c0c521d5d4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731196f2-7033-4339-9791-2c11dda4ec75",
        "cursor": {
          "ref": "c22d025f-c211-4ca7-b984-69171675449d",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1325d9f8-bb51-4495-9528-16bb095c7b4d"
        },
        "item": {
          "id": "731196f2-7033-4339-9791-2c11dda4ec75",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "05c5ac9e-2ae8-43da-a9d5-27c374e464d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630c1d41-d461-4630-a314-8515cce4a592",
        "cursor": {
          "ref": "c5ccfe29-311b-418d-b95b-0f384f7d2c6b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "436b070b-61b9-4d36-a230-7f109100aa52"
        },
        "item": {
          "id": "630c1d41-d461-4630-a314-8515cce4a592",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0a754dfb-05af-46a7-a4f7-495352c0cb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cb0751-336b-4d10-81c8-29129c356594",
        "cursor": {
          "ref": "7054f1e3-8a21-4964-a5e5-a4073d55f9d5",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "393c6d24-652e-4d47-b63a-e39c03b0f190"
        },
        "item": {
          "id": "12cb0751-336b-4d10-81c8-29129c356594",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c90c8bb0-668a-411d-90ee-c8b4c738bb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21eb1027-6b82-466b-8c7b-74e109931802",
        "cursor": {
          "ref": "2967f445-b4df-4325-9e67-da6f0b62da49",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d8e53472-e465-41e6-8c34-a775e5377296"
        },
        "item": {
          "id": "21eb1027-6b82-466b-8c7b-74e109931802",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "33a2d3ef-2fec-475d-845c-650e488af882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65953b6c-6921-4408-bf8d-38b6f5daa682",
        "cursor": {
          "ref": "1a991c5a-3c14-45d5-a506-fef6fcff7c6b",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ff9cbe70-62ce-426e-8b06-6ba93872aa64"
        },
        "item": {
          "id": "65953b6c-6921-4408-bf8d-38b6f5daa682",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "57b6f086-74e8-4216-b041-78607ce972b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6885741d-f9fc-4473-9179-b6f67198ef70",
        "cursor": {
          "ref": "618a093c-9385-4c19-bf19-33d1c59fe078",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "13431edd-7dd0-4569-b0bd-dedc914c073b"
        },
        "item": {
          "id": "6885741d-f9fc-4473-9179-b6f67198ef70",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d3bd447a-2085-4cff-9552-56a8d5638f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d75b07c-5ee6-4bca-812f-f1974e08b6ca",
        "cursor": {
          "ref": "f1ad98e2-ac65-4068-a1f1-78f17ace3143",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b0863662-5968-4c88-8305-ce28f0b8a1d7"
        },
        "item": {
          "id": "9d75b07c-5ee6-4bca-812f-f1974e08b6ca",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "59b36705-b088-4763-bb0a-f6a5b1714f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28335d6-1021-4efb-b6a8-3679043702dd",
        "cursor": {
          "ref": "2687fc00-e00c-4c92-9f92-8a2769916f89",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8b1b2cce-37d2-4678-b160-5dc3093733a4"
        },
        "item": {
          "id": "b28335d6-1021-4efb-b6a8-3679043702dd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "629394d1-d990-4f84-a14f-b2a6f1c54b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c832e1fe-ccbe-4c56-9de1-ae1ae8c6ee75",
        "cursor": {
          "ref": "573f289f-59a2-4fc8-bda8-91f095966da0",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9c8f17d6-74af-4ea2-bd13-1818d7ccf9fd"
        },
        "item": {
          "id": "c832e1fe-ccbe-4c56-9de1-ae1ae8c6ee75",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8f243702-26de-42a8-9c9b-649bb8772402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503c32ad-5dbe-4462-a1f9-a3d3e65d3ca6",
        "cursor": {
          "ref": "32cba61d-b47a-4771-9ea4-738412bb79ca",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "318b0a2a-bde1-425f-9b4a-349c26138bc3"
        },
        "item": {
          "id": "503c32ad-5dbe-4462-a1f9-a3d3e65d3ca6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "15379c8e-8bca-4d46-8367-a0f995588a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7533c3a-c012-47fe-9209-87e9ab4ac2f4",
        "cursor": {
          "ref": "531b4680-a8ed-4350-a573-0548f405b04b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "101d496f-872b-4a69-8815-9b2e7207647e"
        },
        "item": {
          "id": "b7533c3a-c012-47fe-9209-87e9ab4ac2f4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5f8e9d0d-12a4-4870-a9cb-eac0a3288209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7874abd4-81e8-42c3-9d8a-8b08c1858fe1",
        "cursor": {
          "ref": "c9506e2a-a3c1-487a-be99-2f30d5e2e3c4",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8158f4f2-6ea4-42a4-8757-ac84879c80a3"
        },
        "item": {
          "id": "7874abd4-81e8-42c3-9d8a-8b08c1858fe1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "00e54cfc-2d3c-41a4-b8a5-fb15d1d2d0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e8ecc7-c5e2-47ae-aea0-8591a80b0dff",
        "cursor": {
          "ref": "82b79306-9cb8-42d7-b638-946e3a422419",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2dbe0c47-828c-4b0e-916e-3e0a09631a2f"
        },
        "item": {
          "id": "03e8ecc7-c5e2-47ae-aea0-8591a80b0dff",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7a881355-930c-44b9-bea3-372e9d0bbed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b78df9-32ae-47bb-b760-2995da1caf6b",
        "cursor": {
          "ref": "0f9a4724-5901-437e-b34a-2e17a90d4119",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "87d6cb8d-d72f-4728-885f-811bb20b38a9"
        },
        "item": {
          "id": "68b78df9-32ae-47bb-b760-2995da1caf6b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "96ee499f-e5df-4ba9-81c1-a70bfb3ce65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6498fff4-82c2-4f89-b8d8-42ad3f8b8692",
        "cursor": {
          "ref": "b25cc861-88e8-4182-9443-953aae56b87f",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6e2a44de-2e02-4414-a6cb-eb1934403ee7"
        },
        "item": {
          "id": "6498fff4-82c2-4f89-b8d8-42ad3f8b8692",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "944bdc47-2373-444f-a42a-8fa9d7954b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde4003f-4988-409c-b964-ad2d789efd9b",
        "cursor": {
          "ref": "821f6986-40d9-42d3-8705-aa6ce9f0ee63",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2d11dbb3-1991-4397-88aa-5dd17be6db0a"
        },
        "item": {
          "id": "cde4003f-4988-409c-b964-ad2d789efd9b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "06dc81ff-e6fa-4434-a5b3-88b617c8069d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a703dd7f-0046-4b02-942a-19832ec3cc87",
        "cursor": {
          "ref": "f2b00e8c-1211-475e-9a18-7bffab3888d2",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d060a307-9031-484f-8fa6-2ee584ac4be3"
        },
        "item": {
          "id": "a703dd7f-0046-4b02-942a-19832ec3cc87",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "26ceb02a-c31f-4636-8fed-62ed04df3925",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 993,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518a0ece-82ad-4ab3-a0c4-4891daeff84c",
        "cursor": {
          "ref": "690d61a2-3d75-45af-9e52-ff5f047da4c8",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "417b6683-3da2-470c-bfff-a402a71491ce"
        },
        "item": {
          "id": "518a0ece-82ad-4ab3-a0c4-4891daeff84c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4d82ed3f-b844-48e1-a0fc-d4097a69e5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c085f97-d031-4092-b615-2a167ac2bdab",
        "cursor": {
          "ref": "41f32d7a-8076-4ad7-94cb-81b0a5db800f",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "936a89dd-83d5-441a-8ac5-d34aadd5f7eb"
        },
        "item": {
          "id": "9c085f97-d031-4092-b615-2a167ac2bdab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bdebc413-7ddd-49e6-b15a-4775dc47a485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cb46c0-ac05-444a-a198-6afbf9f50866",
        "cursor": {
          "ref": "4931f2ce-3057-46fa-a0c1-bc47771065a0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d9f8adf5-4661-47ac-9b68-4729ec48e796"
        },
        "item": {
          "id": "c4cb46c0-ac05-444a-a198-6afbf9f50866",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "73528bb6-9cbe-4619-95c8-6f4113631635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9364c6f-2edb-4eef-afe2-d8606a8f7d22",
        "cursor": {
          "ref": "156c68bd-e98d-4624-bedd-c8e758730b21",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3ea03280-e2af-4f81-8f1c-bf8937cce45f"
        },
        "item": {
          "id": "c9364c6f-2edb-4eef-afe2-d8606a8f7d22",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e0c375fc-b1a5-41ab-8496-965b400dd73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2a1407-0f18-4ebe-a0e5-c5ac3d77e081",
        "cursor": {
          "ref": "fc5ba6b2-fff9-4f89-9e5f-7a14bade562f",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8e7dae06-105c-40e3-8648-944d75c74b67"
        },
        "item": {
          "id": "0a2a1407-0f18-4ebe-a0e5-c5ac3d77e081",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "25be9969-df09-495d-a5da-d872896f0e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7942e406-86ea-4d43-8fca-f0ee5c8525e6",
        "cursor": {
          "ref": "c7e16112-a23c-4d92-a141-f91d8fb52db3",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9d8a05d6-23e9-4c32-9278-de85a551deab"
        },
        "item": {
          "id": "7942e406-86ea-4d43-8fca-f0ee5c8525e6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6a01f915-7f95-4133-bf8b-db3122acfa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84197b98-b9eb-4c14-bfd4-7b2c13ec0028",
        "cursor": {
          "ref": "6a1fda3b-5b83-4f0b-97d3-0fc4ec2abd40",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2e23f7c0-dc3d-4df1-9d76-96d01c69003f"
        },
        "item": {
          "id": "84197b98-b9eb-4c14-bfd4-7b2c13ec0028",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1a046e12-65a5-4b4a-988b-f143aa5ebc05",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 639,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2092034-5117-48c2-bacc-b238107efa47",
        "cursor": {
          "ref": "26b1c986-ea9b-4d47-a120-3bd34654b715",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "041f38b3-292d-49a5-b85f-32763148b6ce"
        },
        "item": {
          "id": "b2092034-5117-48c2-bacc-b238107efa47",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "711f4ead-b339-4ef2-a194-a13bfa3841ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdf0fbf-abdc-4096-8a5a-0dbc8bd8a45d",
        "cursor": {
          "ref": "b57a63bc-1303-4009-bc90-626400d78016",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8dda0ae2-de0b-4d60-82e4-935c239cc483"
        },
        "item": {
          "id": "6cdf0fbf-abdc-4096-8a5a-0dbc8bd8a45d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b1fc4c56-2c74-4390-ade1-39c677712006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f4d2a1-06da-4d2e-864e-3f6204ff0639",
        "cursor": {
          "ref": "5b83ec7a-66cf-4f7f-bb72-d8de28875ea2",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0487bd12-bd7b-4cd0-b22e-e4d0167ef4a7"
        },
        "item": {
          "id": "e2f4d2a1-06da-4d2e-864e-3f6204ff0639",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "299bc9f7-49af-457e-b400-795d896dcd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2825121b-9b4e-4647-8c0e-0e6fb0e54dbb",
        "cursor": {
          "ref": "9d34fde1-c077-4d17-94fa-5745266ad941",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b81da8db-265f-483a-bbd4-812c4e49eae0"
        },
        "item": {
          "id": "2825121b-9b4e-4647-8c0e-0e6fb0e54dbb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "478ba0ee-3347-4d3b-bfac-6abc5386a4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f696c8a-af36-4cb2-b86a-ae4193e44be1",
        "cursor": {
          "ref": "7c405c63-c007-4379-b3b1-2af66e09a393",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7642525b-bdb7-4eea-929f-8dfbf646aac6"
        },
        "item": {
          "id": "6f696c8a-af36-4cb2-b86a-ae4193e44be1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6c008f4a-51d6-4dae-b0b2-3dcda30970b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8883135-a5bf-4972-9ec0-d609cf7d38c2",
        "cursor": {
          "ref": "ecf27cf3-4685-4687-aa2d-2af34b48ac9d",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e4045d2e-d674-466b-9d76-b92763a1c00a"
        },
        "item": {
          "id": "d8883135-a5bf-4972-9ec0-d609cf7d38c2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "452a937f-ffb1-404c-8a5f-a74fa0ec1e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eedbd82-b3d4-4c5f-8625-d9f8c0f1a273",
        "cursor": {
          "ref": "fd023555-ea6b-4c45-b7ad-f39dc3ba49c7",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "067a59fd-7a09-44ea-9e9f-b56197157705"
        },
        "item": {
          "id": "0eedbd82-b3d4-4c5f-8625-d9f8c0f1a273",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f34eb8cb-2f58-4c2c-a2af-bfd3b244a7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91db56d-debb-47f6-a878-56e0e05accf0",
        "cursor": {
          "ref": "aad368a8-34fa-4da6-b8f0-244d61024c79",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6c09d82a-0f9d-43a6-b010-6017b1a21dcd"
        },
        "item": {
          "id": "b91db56d-debb-47f6-a878-56e0e05accf0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d9ed2d57-93c7-4bfb-be68-2ef14b8f72bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d69e13-2f41-4953-859d-8c8ddb7343fe",
        "cursor": {
          "ref": "8429c403-100b-4149-8f2f-a3988be0a6c8",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ba447307-c6ad-4ac2-9586-2bb31c0409eb"
        },
        "item": {
          "id": "c9d69e13-2f41-4953-859d-8c8ddb7343fe",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "39d7448a-fa16-4a2b-860a-a7e5cf07d1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1113,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dcca52-0aec-4c26-80b9-a3778774a1f3",
        "cursor": {
          "ref": "d6643f18-00a5-4f83-8a76-0613a19822ef",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "30af930a-f6ff-4376-9890-1610072709db"
        },
        "item": {
          "id": "54dcca52-0aec-4c26-80b9-a3778774a1f3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ae6353e1-12c3-44ac-a7e9-42c6ffa8d868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac1ab3a-497b-4593-8e55-49169046cd2b",
        "cursor": {
          "ref": "cb127d8d-1324-4400-b036-c040ae919d93",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d110f2e8-51d9-4d34-80e1-9cfa8fe94a77"
        },
        "item": {
          "id": "cac1ab3a-497b-4593-8e55-49169046cd2b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "961adcc8-b953-47b9-8f9b-475e86c4ec60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349ed353-5850-45a3-98d2-0de4c2807cb2",
        "cursor": {
          "ref": "63bdc2e2-da52-43a7-b740-da8aa98fa613",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "11297ac9-c6d4-48ce-88c1-2a60e6ca0969"
        },
        "item": {
          "id": "349ed353-5850-45a3-98d2-0de4c2807cb2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "28591c48-90dc-4532-be1d-2cd3c7dcb168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc001879-2add-4084-813f-fb60fec072a7",
        "cursor": {
          "ref": "a65003dd-8c74-4269-9b36-f116736e99eb",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ea0d1ffc-4a5d-46dc-860f-dd53e034fad0"
        },
        "item": {
          "id": "fc001879-2add-4084-813f-fb60fec072a7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3b3355b0-2231-48a3-b887-26bde79ba2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8098630e-5b4e-4840-9c40-65e3e54d784e",
        "cursor": {
          "ref": "c23e4819-31c0-4eea-95f5-858fec7c2e86",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "732c8c69-a438-4a6e-ad4a-1fb6eb47d028"
        },
        "item": {
          "id": "8098630e-5b4e-4840-9c40-65e3e54d784e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "59e3a2cd-007a-436c-8a3d-8009c1c96811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f85c2ce-0e85-4edc-8fdd-45c0a6980488",
        "cursor": {
          "ref": "1cca288e-0064-41fb-83ee-a36d70083303",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cf2ce70b-108e-41bf-8302-83ba26cd8861"
        },
        "item": {
          "id": "3f85c2ce-0e85-4edc-8fdd-45c0a6980488",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "97c269f8-5697-4263-bb55-8a5355b6857f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510b4b97-9cb8-4a68-ae83-90958b4443ef",
        "cursor": {
          "ref": "e18479ba-fd6e-4d9e-91f3-fb8152511811",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "902d29c9-d30e-4264-aab5-8f5d7d108595"
        },
        "item": {
          "id": "510b4b97-9cb8-4a68-ae83-90958b4443ef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "93d23b33-8c79-42a9-9040-4999c1ee95c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed1dca8-505d-46a1-af52-f7547d91c4d7",
        "cursor": {
          "ref": "72d3554a-6eb1-4450-ac01-ac91b78fe640",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7fab2233-a14f-4d5b-99c4-fe30caccb4de"
        },
        "item": {
          "id": "bed1dca8-505d-46a1-af52-f7547d91c4d7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4212b55f-b57d-47d6-9595-0cba424c507f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d2f392-69a9-4cff-84a8-5f59bcc3d36c",
        "cursor": {
          "ref": "ac979f79-919e-4592-8208-651669e6d17d",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e8906438-f662-4bad-81f2-3eadfdd45047"
        },
        "item": {
          "id": "44d2f392-69a9-4cff-84a8-5f59bcc3d36c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7f8c79d1-fe0b-4311-b53f-0797b4ae2bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6332e7-a1c1-407c-86c8-3c69614cd2fb",
        "cursor": {
          "ref": "283ba626-a98e-40d2-822e-821ec5f05f78",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "08369eb6-ce4b-4c6e-b512-fc1c6f77837d"
        },
        "item": {
          "id": "4f6332e7-a1c1-407c-86c8-3c69614cd2fb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d8ae7149-83a9-405e-b00e-bb88c1f0722e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f10f21-3cfd-4e96-b09d-db473d27ff15",
        "cursor": {
          "ref": "8ee60653-465c-4f16-9618-5903bbf4c87d",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2cf578e8-21c8-44e9-849f-ac1355946976"
        },
        "item": {
          "id": "f8f10f21-3cfd-4e96-b09d-db473d27ff15",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "32025874-b13e-4de5-be2e-7855b0ba8188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ec7e6-165c-4e5b-acad-75f91376ba58",
        "cursor": {
          "ref": "748c5e73-fa87-433c-ba69-0bd55eab79d0",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "70e3043b-6106-4fc8-9212-e512726e710e"
        },
        "item": {
          "id": "b33ec7e6-165c-4e5b-acad-75f91376ba58",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c0ab3bb0-edde-45d0-b5eb-0fa34140e462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad9a2b4-31c9-47f2-8ea5-db9e6b3313bb",
        "cursor": {
          "ref": "d695a2d4-fb9e-4155-b9ed-954501c27527",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "182ce066-0c19-496a-a229-9188029ef4c2"
        },
        "item": {
          "id": "3ad9a2b4-31c9-47f2-8ea5-db9e6b3313bb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c5aa12ee-e883-4fa0-ba6c-95f3d98ddc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1608b3d-e158-4236-9d86-bd084d3f3c1a",
        "cursor": {
          "ref": "f94627e5-ef3f-4e5e-b851-4c475991221e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a73cd7eb-dcd2-42d2-92c9-631549d68688"
        },
        "item": {
          "id": "a1608b3d-e158-4236-9d86-bd084d3f3c1a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d14256d9-b931-4f3c-ada8-624ced046cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179dbc09-08fd-450d-a7cd-746d5386dd93",
        "cursor": {
          "ref": "426a8c01-9cad-439b-8de7-159805845188",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "85b588f4-3409-4bed-b45b-a834f9ad5c37"
        },
        "item": {
          "id": "179dbc09-08fd-450d-a7cd-746d5386dd93",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d2e40bae-f4f1-40fb-b9da-c381bc159e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec06ff9f-dff1-4a52-8602-ce75a06106df",
        "cursor": {
          "ref": "363cf73d-d071-490f-a9cb-1dc413603d79",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ebb4f713-c719-4023-b8ec-94f3b936a74d"
        },
        "item": {
          "id": "ec06ff9f-dff1-4a52-8602-ce75a06106df",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "50431a24-6f57-4ad2-8194-964878043ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035791a1-4b1b-43e1-a621-9adad883b51f",
        "cursor": {
          "ref": "e34d3047-9cee-4990-b937-93a136b9eb0a",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b1f8ccc4-fb02-455d-b23f-965d6f0de7a9"
        },
        "item": {
          "id": "035791a1-4b1b-43e1-a621-9adad883b51f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "be8f9ead-afae-4bf9-ad89-e835d755e036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15839ae-48ed-4d5e-8d97-442344ee3bbf",
        "cursor": {
          "ref": "7d8ae107-be9c-44e8-baab-cfa8826bffd9",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "edaa1aa6-a5c0-47b2-b98b-f150cf626e8f"
        },
        "item": {
          "id": "d15839ae-48ed-4d5e-8d97-442344ee3bbf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5f6f71d7-99de-43b3-9805-85ecf32bb075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71455ed-f13b-49ce-a6e4-5dcd8c888cd9",
        "cursor": {
          "ref": "10b6a113-137d-4970-9e68-76318da54864",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a512a389-f7ce-4e16-a143-85207a9f30b6"
        },
        "item": {
          "id": "c71455ed-f13b-49ce-a6e4-5dcd8c888cd9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b70ddd59-5f4a-4306-9046-d2a336c724ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919e1630-84df-4793-9962-c32bd3ec84ae",
        "cursor": {
          "ref": "19b5eb48-cc41-4d65-ba91-3023e940b0c8",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "901503cc-2f95-4f4a-adb1-92ca69b26fa1"
        },
        "item": {
          "id": "919e1630-84df-4793-9962-c32bd3ec84ae",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eb88879d-156b-4465-9524-9add18f04006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e469e8c-56ba-4f09-82b2-93ed0db80e5a",
        "cursor": {
          "ref": "1ab64ecd-7518-4d45-81e4-0b80874706d4",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cad9092f-cb6c-49dd-bc49-aad03639498d"
        },
        "item": {
          "id": "6e469e8c-56ba-4f09-82b2-93ed0db80e5a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4e406ac1-b5a0-4da4-b897-2ed19c20754b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5b76e1-ea75-4666-9816-22db89160276",
        "cursor": {
          "ref": "98cff17f-6526-4415-a757-78e11870f730",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6e91f150-e37b-4ba9-a409-682ac1a349be"
        },
        "item": {
          "id": "ef5b76e1-ea75-4666-9816-22db89160276",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "669798e7-647c-453d-929b-0f95c32afd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ef8a64-6aa8-4995-841b-9914c3fd63a2",
        "cursor": {
          "ref": "c45f4ef3-45f1-4a73-a69d-cf7465ea53cb",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4d1bc1b8-1c7b-46c7-ae34-2a4443cab7e6"
        },
        "item": {
          "id": "26ef8a64-6aa8-4995-841b-9914c3fd63a2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a23cbfe9-209f-46b3-92a6-f66e0615c099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c86fc9-d679-4a47-9a71-6cf482a0cc34",
        "cursor": {
          "ref": "709cfcc5-809a-474c-86a0-010b813a5049",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "37e2b3fe-d12d-4ad0-b0bd-e6871a82daf1"
        },
        "item": {
          "id": "c1c86fc9-d679-4a47-9a71-6cf482a0cc34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4123fc10-c93c-45b8-ac7b-b755899e2c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c609654-3279-4c1a-aa33-a4036c03d905",
        "cursor": {
          "ref": "4c20cec2-df75-4d2c-ad17-e3d55e7af099",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fd687404-05fa-4ff8-992a-1e61b177e7e0"
        },
        "item": {
          "id": "5c609654-3279-4c1a-aa33-a4036c03d905",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c602b0e3-39db-49f1-848a-1b5fad461a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d038e4b-218a-463e-9cd2-cd8e282e9408",
        "cursor": {
          "ref": "e0c6d36c-f6c3-45eb-92c6-308dd00fdb77",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "db32f821-d287-44ed-87d0-8c5f78930e4e"
        },
        "item": {
          "id": "4d038e4b-218a-463e-9cd2-cd8e282e9408",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "22867acd-1463-49d6-b4b4-10d537fd481e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ac3154-0dc6-4bff-a79d-ffc73698ff61",
        "cursor": {
          "ref": "ffec5573-cbb5-4bdb-8e9b-3ce2783dc3e4",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6b1106b0-cde2-41e2-9b49-0514e67f7a20"
        },
        "item": {
          "id": "a9ac3154-0dc6-4bff-a79d-ffc73698ff61",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8732bf4a-9c96-475f-a51a-4ee7e32339ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc56e47-3b9d-4b03-9652-74b234828dd6",
        "cursor": {
          "ref": "38ccb48b-7024-4c42-8ede-631339bf9284",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "614948e0-2395-467b-b9dc-53355d50c2c6"
        },
        "item": {
          "id": "ddc56e47-3b9d-4b03-9652-74b234828dd6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0ffa2f73-0dd3-4003-8183-1c0da276b78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6436cc9-84ad-4862-8034-ba0dea386e28",
        "cursor": {
          "ref": "b63de77f-ef9a-4107-b3d3-aba1e0ad7a1d",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6c9e492b-8a38-49c8-b3d5-a07e674ff51e"
        },
        "item": {
          "id": "c6436cc9-84ad-4862-8034-ba0dea386e28",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6fc007c0-e9c4-40c4-93a1-71abfe67e7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a7ddac-4749-414c-80e3-a46eccce4f97",
        "cursor": {
          "ref": "1b780ed9-77ec-4794-8032-45155259cc5c",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "88fc4ab2-abd1-4a64-99ef-4b11dc9a4203"
        },
        "item": {
          "id": "49a7ddac-4749-414c-80e3-a46eccce4f97",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "21c0f271-309b-46fe-b7d2-8d031d68dc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f672c245-0234-4b70-972c-048c1e86b1f7",
        "cursor": {
          "ref": "9db1ad22-4d58-4ba1-95cc-09107b3d308d",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cca562cb-0198-4bce-a4a6-c53abf5e3cec"
        },
        "item": {
          "id": "f672c245-0234-4b70-972c-048c1e86b1f7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4727902c-1038-4dd2-b3f0-452cd12a8b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a28604-6f8d-4722-8733-fbb0de72f561",
        "cursor": {
          "ref": "5e50401a-ff16-45ca-8e77-d7bfbaa516a5",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "49198092-8e7e-4a2a-8163-136e8a172965"
        },
        "item": {
          "id": "00a28604-6f8d-4722-8733-fbb0de72f561",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "72a580ba-d8e2-4518-aa9f-7073aeafa2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75283ffd-f194-4e52-b07c-0822f454cf52",
        "cursor": {
          "ref": "6b3309d1-8c37-4769-abd8-dfb94e24160f",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e7334712-f5da-4e4a-b735-5ba5713fea60"
        },
        "item": {
          "id": "75283ffd-f194-4e52-b07c-0822f454cf52",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "94664c31-252e-4be4-8504-2cd779788296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c48f9c0-8b92-4fce-b941-f1addd51b49f",
        "cursor": {
          "ref": "1fe401ba-f07c-4a47-ba3c-a9ac90d7e570",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "18cff64d-ac38-4cd7-9bc4-e8bce0271208"
        },
        "item": {
          "id": "6c48f9c0-8b92-4fce-b941-f1addd51b49f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6b5c6afb-6785-4f46-91c6-81ad839f0907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da89ce3b-f26a-4da7-924d-0c4c2dfbe70a",
        "cursor": {
          "ref": "f1408c30-77f5-4804-86c3-ae975899f463",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a53e8653-cd82-49bb-be9f-87ba48b9d204"
        },
        "item": {
          "id": "da89ce3b-f26a-4da7-924d-0c4c2dfbe70a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4b7e4fbc-9421-4e9d-950d-9bdcd73fbf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6bd8dc-0c43-4088-9d9c-14117871563c",
        "cursor": {
          "ref": "2f942e55-81af-41bd-940f-a40a8051d9f7",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c1e27e9d-87d4-491c-a21d-7cf6e907576f"
        },
        "item": {
          "id": "3e6bd8dc-0c43-4088-9d9c-14117871563c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e6c66dad-a1d2-4f40-898d-e11e101643e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c447a63-be5a-448b-b071-9854cc6eaa3a",
        "cursor": {
          "ref": "ead3fa0f-bf77-4160-8e7a-bbb00ce8b7f6",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ebdd15f0-73dd-4101-bb41-1dbfed83b2ad"
        },
        "item": {
          "id": "6c447a63-be5a-448b-b071-9854cc6eaa3a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f3e0b338-7f5e-49fc-939c-e7ed86f7b526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b661a43-8f28-443f-b125-951cd30ebb16",
        "cursor": {
          "ref": "9791bd17-ead9-4260-be5f-b880a553e889",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "84397793-f1e4-4db0-a0fd-c75da5935ea1"
        },
        "item": {
          "id": "1b661a43-8f28-443f-b125-951cd30ebb16",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1fd427dd-8662-46dc-811d-e57dd05a66b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318460ad-6b19-48f7-920a-1606dbb6a526",
        "cursor": {
          "ref": "60929187-5262-43ef-9d73-b5cb9e2b2e75",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "660d9f22-87f7-4beb-8781-a2c8f018da49"
        },
        "item": {
          "id": "318460ad-6b19-48f7-920a-1606dbb6a526",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8378f748-932c-4a82-8c31-19e30a7503a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b74f0a-9143-4cfe-85c3-af241491ad0c",
        "cursor": {
          "ref": "20ef8f0b-4449-4d5a-a7b2-8d7fefc9b666",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "acc038b6-5dc2-4f7c-b548-c4ab2a0dcb4c"
        },
        "item": {
          "id": "96b74f0a-9143-4cfe-85c3-af241491ad0c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "505fb455-24ab-4d0e-b3c2-f6c0f2772f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3564382c-d9dc-45d7-8fb7-411567891dcf",
        "cursor": {
          "ref": "e1cb5a85-6828-4de0-b397-3a53b44a4682",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "22e2e844-ebe7-40c4-b7fe-ba82450096c3"
        },
        "item": {
          "id": "3564382c-d9dc-45d7-8fb7-411567891dcf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0a5152ca-47d0-4b2f-9c50-d54da18be97b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0c4924-024d-441c-a811-40a6a61649c4",
        "cursor": {
          "ref": "0b2d155f-c55b-4cff-a28c-39ede524969e",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d4c17d0e-2570-43ec-a91d-8d330120297a"
        },
        "item": {
          "id": "fa0c4924-024d-441c-a811-40a6a61649c4",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "96d9cdac-f140-4a5f-bad6-0a2d874d9455",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 513,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f9694b-14e2-4d1a-9008-d166eb9be79e",
        "cursor": {
          "ref": "c0130c10-3441-4a9d-89b2-845664833fca",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a11a8328-718f-4945-8171-8d5625fffe69"
        },
        "item": {
          "id": "34f9694b-14e2-4d1a-9008-d166eb9be79e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "425bd2e6-f032-4517-8ef5-fc2c52465c3e",
          "status": "Created",
          "code": 201,
          "responseTime": 4762,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4c508a-8d27-4695-a684-adca941b2c52",
        "cursor": {
          "ref": "66710181-746f-48a0-840e-cacb70ccd168",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c79436ec-fa30-4e31-961c-79cc02914602"
        },
        "item": {
          "id": "cc4c508a-8d27-4695-a684-adca941b2c52",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bab58e98-9a95-431c-89fb-11179ae1a402",
          "status": "Created",
          "code": 201,
          "responseTime": 6359,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca277b16-b922-4622-9ae9-0d3ed3519aaa",
        "cursor": {
          "ref": "1023722b-9701-4b8d-9b4f-f89deabf8da5",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fcfa89fa-0f8a-4eb1-97cc-e7450496495a"
        },
        "item": {
          "id": "ca277b16-b922-4622-9ae9-0d3ed3519aaa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "65f65c41-b420-4bff-b63e-8b6da40cfc3a",
          "status": "Created",
          "code": 201,
          "responseTime": 5418,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e92535f-4996-4eba-afb0-c1537be86da6",
        "cursor": {
          "ref": "31f5545e-18ef-4ec3-8b00-48d1ac64816e",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bcec3fc2-c546-4b55-8a0c-793aad992cd1"
        },
        "item": {
          "id": "6e92535f-4996-4eba-afb0-c1537be86da6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4dbfc95a-e92c-4dfb-8b4f-18c8c421e99f",
          "status": "Created",
          "code": 201,
          "responseTime": 5099,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80e9997-cae5-4e43-8f09-e55aa426d754",
        "cursor": {
          "ref": "cf2e2296-966f-44d5-8d77-f49daa8844f5",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f4d42850-a581-497f-a69a-1afbe5e80f2d"
        },
        "item": {
          "id": "b80e9997-cae5-4e43-8f09-e55aa426d754",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4b9c3a61-0c15-4022-8fc9-a2a2429dce28",
          "status": "Created",
          "code": 201,
          "responseTime": 6173,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ed1130-faf4-4eda-af4e-b0eb00457997",
        "cursor": {
          "ref": "54ae3aaf-6fb3-43cb-a9c8-b04aa329b5c9",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "769fff78-149b-4eca-9cf4-24cf84b02892"
        },
        "item": {
          "id": "06ed1130-faf4-4eda-af4e-b0eb00457997",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5d842831-7395-4548-a394-dd3aed9d5aa6",
          "status": "Created",
          "code": 201,
          "responseTime": 5286,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308d06a6-df0a-4821-80c9-6a2d183d3f53",
        "cursor": {
          "ref": "5ae37542-c576-44cc-b3a9-453d0502f9be",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9af77ea3-424c-4fcc-8633-1f84f90a5ad6"
        },
        "item": {
          "id": "308d06a6-df0a-4821-80c9-6a2d183d3f53",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cbc6a822-e00f-4ea1-b4b3-b0218e5f0f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308d06a6-df0a-4821-80c9-6a2d183d3f53",
        "cursor": {
          "ref": "5ae37542-c576-44cc-b3a9-453d0502f9be",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9af77ea3-424c-4fcc-8633-1f84f90a5ad6"
        },
        "item": {
          "id": "308d06a6-df0a-4821-80c9-6a2d183d3f53",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cbc6a822-e00f-4ea1-b4b3-b0218e5f0f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac3d1a5-94d8-4f08-8e11-35a9dfe4e740",
        "cursor": {
          "ref": "272e8b76-a7c1-4ac0-b64d-ad7ffb4d1bcb",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "41395796-5579-4641-954f-f5483adf4c79"
        },
        "item": {
          "id": "9ac3d1a5-94d8-4f08-8e11-35a9dfe4e740",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "67216a93-abae-4d20-9483-474268371296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93305dd0-fa04-420b-8984-59044a874065",
        "cursor": {
          "ref": "e97aae06-3651-4681-af62-315d3140b637",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "88fcf421-5066-40b0-9dba-723a85ee19d7"
        },
        "item": {
          "id": "93305dd0-fa04-420b-8984-59044a874065",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bb60a85c-6a86-4bcb-9336-c47d7113b7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e1d54f-6eba-40af-8a99-85b5bb95a91a",
        "cursor": {
          "ref": "d1026a1d-49fe-4600-819e-1e7a2f059df4",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4ad63175-6d94-4b10-b923-b9043ac45727"
        },
        "item": {
          "id": "c2e1d54f-6eba-40af-8a99-85b5bb95a91a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a4ed7eb1-f877-4986-8eed-94114368fb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46c29d1-8084-4034-af37-6301434b1087",
        "cursor": {
          "ref": "bcbcfd4e-336b-4bcc-bcd0-71d73884a07f",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "57d72abf-6606-4c7f-8326-67b87ac78ea1"
        },
        "item": {
          "id": "e46c29d1-8084-4034-af37-6301434b1087",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ddeb687c-7d85-4f15-8b9a-20af6fdf9200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4110c4d-bfed-4504-aad8-e15e5980ef06",
        "cursor": {
          "ref": "1086e97c-068b-460b-a684-6fd00180b5ec",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2c8a9764-438e-498f-9c64-63fd765a6f7f"
        },
        "item": {
          "id": "d4110c4d-bfed-4504-aad8-e15e5980ef06",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "864e7c48-8c03-44ab-ac29-636a5ed87024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a24674-40b4-459e-b577-73ed8c6b03d2",
        "cursor": {
          "ref": "bea37c8d-cf52-4897-a8c2-21900f3f7b8f",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6b356fd9-ba66-4a40-a4d6-8e30ba619219"
        },
        "item": {
          "id": "39a24674-40b4-459e-b577-73ed8c6b03d2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c0abc07c-56b1-4d72-b025-e0c6c823ae88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56b8f2a-a5ed-4e9d-a588-de2f840ccfcd",
        "cursor": {
          "ref": "56ba8e67-669b-4042-b8f3-7db44d774ab1",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "31b262c4-f396-4ac7-ac0b-8ce2a3bfaeb6"
        },
        "item": {
          "id": "f56b8f2a-a5ed-4e9d-a588-de2f840ccfcd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b415266e-6d89-46e6-b7ae-e7e1bece015d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350794cf-c197-4b99-95b6-b2ea7e126ee8",
        "cursor": {
          "ref": "dec1aed5-3777-4799-8ca1-4ba2f7555387",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3fa74fc2-670b-4e1e-8405-b136eecf427a"
        },
        "item": {
          "id": "350794cf-c197-4b99-95b6-b2ea7e126ee8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "16b8b8d2-acb0-44d8-9e52-200dc736c343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f08a0f7-282a-413d-a72a-ed024d4936ba",
        "cursor": {
          "ref": "42e4d161-b8d3-4365-87bc-19d73ad6557a",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3f04db87-4fd1-4bfb-87b8-938b5c56adbe"
        },
        "item": {
          "id": "6f08a0f7-282a-413d-a72a-ed024d4936ba",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9495fef9-12af-4fbf-8d76-9ee84f7946b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686d7dd0-1c4b-4521-91a2-1c895a28fc3d",
        "cursor": {
          "ref": "74d89a41-343e-4d05-817f-b7935ea36c2a",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2611dcff-0fc8-4995-8926-15a58386f7a3"
        },
        "item": {
          "id": "686d7dd0-1c4b-4521-91a2-1c895a28fc3d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "01d32bdf-4266-4cc5-b876-ec9ec3db2c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bd0ba8-45bd-475a-9748-36e521e466eb",
        "cursor": {
          "ref": "650385a1-ac68-4e9f-998f-56edffc09e0e",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0a70085d-45c3-4cb8-acf6-17925154be1c"
        },
        "item": {
          "id": "d0bd0ba8-45bd-475a-9748-36e521e466eb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e676d808-6666-40dc-a895-1bf69b17614b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9b2665-c981-4165-8900-eba621222114",
        "cursor": {
          "ref": "a83fa879-9b3e-4a40-b209-2c98ad6e522f",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cad3b8a0-3b19-442f-bd4a-1ff2f407dc1a"
        },
        "item": {
          "id": "fa9b2665-c981-4165-8900-eba621222114",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "af0a43ff-16de-4887-8bc1-6f19b099ff16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fe4b02-9f0a-4627-aa48-09cdc5408a17",
        "cursor": {
          "ref": "da008eb2-3234-4866-8331-c9638d9e7a93",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a0b2dfc9-b50a-4f28-be1f-5af4830e428e"
        },
        "item": {
          "id": "e8fe4b02-9f0a-4627-aa48-09cdc5408a17",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "54a7747d-e026-4ee9-a27b-30ca240fb497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d54c09-693e-40ab-8e4a-125f38172c0d",
        "cursor": {
          "ref": "9c3c7db5-8e67-4ffa-916a-4542e74a0cf3",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "aa68b74d-b356-4a96-bf58-aa89b00258f7"
        },
        "item": {
          "id": "d4d54c09-693e-40ab-8e4a-125f38172c0d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "765d6f3a-ecd4-416a-9700-4914f3eeeb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706376ae-6647-4744-8298-9cea80b1cbda",
        "cursor": {
          "ref": "2b57df99-f188-4d87-bb44-5241cb1d9a41",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7cff1ad1-418f-46b9-9f1e-b96ec8dee2ee"
        },
        "item": {
          "id": "706376ae-6647-4744-8298-9cea80b1cbda",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a3853c54-1e3b-4ad7-aca4-1f31e6578a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ae1386-3dc2-4626-bc2c-a7ecc4dd0be4",
        "cursor": {
          "ref": "1599bedf-88a9-411f-86dd-2d3f8068a77a",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d4bcefff-9298-42bf-a086-a0de183e1814"
        },
        "item": {
          "id": "e5ae1386-3dc2-4626-bc2c-a7ecc4dd0be4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "df4a3b24-e450-4451-98ba-3f3d8002dc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4394bb6-34c0-4452-889c-9bd13c81a98b",
        "cursor": {
          "ref": "8f38a487-40bb-4627-abd3-f4e7dd27db7a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "402b898d-28bd-432f-81ea-c4c20eb7e71e"
        },
        "item": {
          "id": "a4394bb6-34c0-4452-889c-9bd13c81a98b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5aaba37b-585b-4a33-9d38-a5f5aa57d6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2d5349-0431-452e-8ec1-943cdbce9c2c",
        "cursor": {
          "ref": "0393e4d7-4e29-4b52-afdd-c50bc4317cf4",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cdc2794c-6695-4e37-8283-1d5671d5b2e5"
        },
        "item": {
          "id": "3d2d5349-0431-452e-8ec1-943cdbce9c2c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1949f2e6-2440-4e5e-a6b0-85abb5f5ce41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1772329e-55a0-47ac-89ed-ec444f7ae40f",
        "cursor": {
          "ref": "4fb0a20c-93fa-412d-9bc5-0a1e889e8c23",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5dfe4af5-c898-430c-9321-8f2d08fc02c9"
        },
        "item": {
          "id": "1772329e-55a0-47ac-89ed-ec444f7ae40f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8e62b182-b128-4095-85e7-88f376314ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56726c5-336f-4cdf-8ade-e15d803a8464",
        "cursor": {
          "ref": "b00dab35-6e8b-482b-9545-f1840bddb284",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e0f3ed7d-370d-49e7-9f18-b421a99985de"
        },
        "item": {
          "id": "a56726c5-336f-4cdf-8ade-e15d803a8464",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2ff8c1cd-d225-4a7a-bd60-406b309dfe84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d05b410-ae50-44f2-86a9-16c25772ddf2",
        "cursor": {
          "ref": "6f878351-443f-4491-aa20-8acda4c5a9a3",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5ed8b509-0cd7-4cd5-993b-ab8814ad6e4f"
        },
        "item": {
          "id": "2d05b410-ae50-44f2-86a9-16c25772ddf2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8c664916-f5ca-4bd6-b4b8-6cfbaf434153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795531a8-6f6f-4c5a-81a7-a435124aad58",
        "cursor": {
          "ref": "1d05de9f-0c6a-4540-a2ae-6b0a67cb0a14",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ae02f7a2-7992-4e2f-8b0d-f8b24e74fd9c"
        },
        "item": {
          "id": "795531a8-6f6f-4c5a-81a7-a435124aad58",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5b83e88c-13a0-44f2-a094-3ebdc6266cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fda307-0f37-4242-991b-1d1cba981fef",
        "cursor": {
          "ref": "1a1a5383-b05f-43ca-80a5-b3882a2167fa",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4334577c-d3b9-42f3-ab18-71d57ab132e4"
        },
        "item": {
          "id": "42fda307-0f37-4242-991b-1d1cba981fef",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7d96d81d-d82f-42e1-9236-5b20736cacf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625bf594-29bf-4342-bc50-68bcc4b70cc3",
        "cursor": {
          "ref": "110343ea-fc54-4a98-805d-aba77e9bdeba",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "af8cd4b6-51db-47bf-9271-7c63620f7dfb"
        },
        "item": {
          "id": "625bf594-29bf-4342-bc50-68bcc4b70cc3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5511b5d6-b734-476b-922d-3280e0861c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2021a8c5-83c6-4195-ae31-f6c2be4287d7",
        "cursor": {
          "ref": "3a950293-577f-4010-abf8-c8fe201cfeba",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5811bf7f-5828-46f9-9c37-b3711c8cdde1"
        },
        "item": {
          "id": "2021a8c5-83c6-4195-ae31-f6c2be4287d7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "477546b7-b2f7-476c-8730-cc7760d89c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51316f2-619b-422d-bd8e-23ef15557687",
        "cursor": {
          "ref": "e933b604-6c63-48a4-baad-27dfe9caa00c",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "55f79651-a6ad-4fab-99da-27e3a4d641c4"
        },
        "item": {
          "id": "b51316f2-619b-422d-bd8e-23ef15557687",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e74f0009-a023-4aba-981b-503faeeb4d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430034c6-08b0-4f90-83fe-e01ff0184d23",
        "cursor": {
          "ref": "bbb6a586-d026-420f-812e-7cbc7a3d0e70",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2e09ee1b-6ec7-4781-bfa1-14d92a59d78b"
        },
        "item": {
          "id": "430034c6-08b0-4f90-83fe-e01ff0184d23",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c73a7b75-87b6-44d7-bad6-e3bfa0a55f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13783b30-f084-46e1-a0aa-9f61cacb5a3b",
        "cursor": {
          "ref": "2fd5d2b2-f9be-4eb3-8966-20c7da37aef1",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a16d3b6e-c0ac-4b41-ac05-c18cf0790c05"
        },
        "item": {
          "id": "13783b30-f084-46e1-a0aa-9f61cacb5a3b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0153a464-87bc-482c-bb8c-562e4f49cd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fecda9a-2182-41f3-b39d-6e54312268f5",
        "cursor": {
          "ref": "f9fb8a0b-4edd-449f-a74d-b720d3ec741c",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "169f6593-c21c-45af-809c-266a4554fa64"
        },
        "item": {
          "id": "5fecda9a-2182-41f3-b39d-6e54312268f5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a0c9a8f7-0496-4eaa-8036-99d2a5bd365a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbd076f-a054-4b73-a128-6faffeb260e5",
        "cursor": {
          "ref": "2c1d8382-7c65-40dc-8b5a-07fa5343f3a9",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "33f9e3d2-0297-4bd4-ba38-b066342cda1e"
        },
        "item": {
          "id": "1fbd076f-a054-4b73-a128-6faffeb260e5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4deed527-fb20-434e-acfa-a9415269040a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a7fe9a-90f3-4bc2-97c2-31e68d9dd986",
        "cursor": {
          "ref": "dbf73b98-6eec-4df1-87df-6bc7bbaa3e29",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "90d85241-08fc-4e3e-8dfc-94cb4d63d8bb"
        },
        "item": {
          "id": "34a7fe9a-90f3-4bc2-97c2-31e68d9dd986",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "14f13593-c328-4433-8051-33de6f658c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6459edd3-a930-4cde-bb79-80087d895a29",
        "cursor": {
          "ref": "a20956c6-ed08-4c1e-904a-f20608668cb2",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9b1c59e6-d217-4161-995d-b0be0b130563"
        },
        "item": {
          "id": "6459edd3-a930-4cde-bb79-80087d895a29",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "af6fd77b-46cb-4220-8eba-48fb7881b09f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7baa24d-7c13-4938-913b-36d9cf94b491",
        "cursor": {
          "ref": "b1123ca7-8c95-4311-bcfa-17d0c7feba5e",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c2206a90-83b5-4053-a9fd-9ee42b861cd6"
        },
        "item": {
          "id": "a7baa24d-7c13-4938-913b-36d9cf94b491",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "f426c0ff-648c-4ed7-a1b3-e0082d694a3c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 540,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a41c9c2-fde2-4e7a-9287-58139d67978a",
        "cursor": {
          "ref": "c91a4b8b-2566-4fad-ad92-d9de6080d143",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9fa455da-2a07-4869-b000-35cb96503650"
        },
        "item": {
          "id": "7a41c9c2-fde2-4e7a-9287-58139d67978a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9cc3f246-9b08-4b72-a45e-e0fc04b5fde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a41c9c2-fde2-4e7a-9287-58139d67978a",
        "cursor": {
          "ref": "c91a4b8b-2566-4fad-ad92-d9de6080d143",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9fa455da-2a07-4869-b000-35cb96503650"
        },
        "item": {
          "id": "7a41c9c2-fde2-4e7a-9287-58139d67978a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9cc3f246-9b08-4b72-a45e-e0fc04b5fde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d182ad3-f76b-444f-939f-92c2625388f5",
        "cursor": {
          "ref": "76273570-32e9-4aac-8862-d698c2df1787",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "324caf9d-a093-4d10-aa1f-ebc18d319445"
        },
        "item": {
          "id": "8d182ad3-f76b-444f-939f-92c2625388f5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2bf3d10a-3f29-44bd-bbc6-653b7b00bca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64434cfd-3e9b-4245-ab12-82c3f15e9717",
        "cursor": {
          "ref": "52846275-6155-4596-92b3-992f5781e876",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "06854778-3a70-4202-8d52-c60968d5257f"
        },
        "item": {
          "id": "64434cfd-3e9b-4245-ab12-82c3f15e9717",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b0c4b655-e5b5-4521-913c-0b537cd78f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb1e007-5eb5-44bc-8ab6-e6dd6cedd5fc",
        "cursor": {
          "ref": "c2c9895a-d7ac-4de1-bb11-9e1035c95f65",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1aa7327e-f638-4976-8ac6-d0cc0c48343a"
        },
        "item": {
          "id": "9fb1e007-5eb5-44bc-8ab6-e6dd6cedd5fc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "709873f2-00c7-48bf-b1d0-36c0dc6a75bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592e061d-f2d6-41e9-861f-96008153ceb7",
        "cursor": {
          "ref": "4a2f7b51-7957-4be8-a304-806e4b0d53f6",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ed7202e3-8c9b-47bc-ac96-629a8c6e04b8"
        },
        "item": {
          "id": "592e061d-f2d6-41e9-861f-96008153ceb7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d11b9c6d-288e-4bc4-9937-8a713e6085a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9ae068-d6a0-4798-a0f2-7d4c8840bfe0",
        "cursor": {
          "ref": "13cf18d0-3e71-42fa-92e3-b78c0a1840f4",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d63c39d4-1382-4f72-a73c-89ebe5fc091e"
        },
        "item": {
          "id": "3a9ae068-d6a0-4798-a0f2-7d4c8840bfe0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "33f44050-3975-472d-b2d7-60093e3b2788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181f3dff-3f42-43a4-8d18-0a211668743d",
        "cursor": {
          "ref": "12e29a22-2bff-44d3-a724-fb0b390e8dab",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8a11d744-c158-4154-92db-3e463b918b26"
        },
        "item": {
          "id": "181f3dff-3f42-43a4-8d18-0a211668743d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "aef1f832-76ba-47a0-a575-e5c7484f6d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac06d3a-5254-42c4-adaf-08af12fcce36",
        "cursor": {
          "ref": "1763ab43-e1ff-49c0-8b0f-cd0f185f2766",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b45e6f50-192d-4ca2-ad26-99a08629850d"
        },
        "item": {
          "id": "9ac06d3a-5254-42c4-adaf-08af12fcce36",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e813334c-81ee-4455-870e-32ccd4650b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991e810d-e3ce-470e-8487-2b2d446b7ff7",
        "cursor": {
          "ref": "5b1859d4-83d1-48ed-924a-df592e66222c",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0a6a7cf2-8036-4839-8607-7c8fb5a347a2"
        },
        "item": {
          "id": "991e810d-e3ce-470e-8487-2b2d446b7ff7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "be2aa5ab-7d1a-4111-8dfa-fd77880c77ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0d92f2-1023-4a39-b4ec-1f28f4d75d74",
        "cursor": {
          "ref": "fa964da4-a27b-4a14-b6d1-15e9fc46187d",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c5002e78-cb79-4ea9-94f6-d5a2d37c0fd5"
        },
        "item": {
          "id": "2c0d92f2-1023-4a39-b4ec-1f28f4d75d74",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0fa926c2-7b0b-45ca-8cfb-668bd4b98f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c16e617-e621-4709-8baa-1c1ed01f851d",
        "cursor": {
          "ref": "6777761c-8cca-43da-936b-cfa6db10c9d8",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "03094b57-da7d-4262-9884-233cfc2416c5"
        },
        "item": {
          "id": "8c16e617-e621-4709-8baa-1c1ed01f851d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5ea03c9d-2f64-4ec1-8914-8a63558730c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd7fb6e-256f-4e25-9261-06334e0b1e7a",
        "cursor": {
          "ref": "a9488a25-e5f1-4b09-9ce8-98605bbab1f7",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "228e1232-c594-47f9-8f49-701e767ea6c2"
        },
        "item": {
          "id": "efd7fb6e-256f-4e25-9261-06334e0b1e7a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "481477be-ce2b-4f15-83ca-6b3cb46b1702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d11e4c-d775-4a02-a540-3abe45be55a7",
        "cursor": {
          "ref": "663f429f-17c4-42a6-a1dc-eb61cfb7db2d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f8ca8467-672f-479f-9b1b-72b9cf8c8442"
        },
        "item": {
          "id": "67d11e4c-d775-4a02-a540-3abe45be55a7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8f6efedb-aca5-4716-af1f-df5324dbb1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd301326-94a4-4b62-a956-c8fa83ef62e9",
        "cursor": {
          "ref": "98fe2930-2277-4f90-9d89-45c61700f6ff",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4521f71f-3f57-4c04-af01-cf2d5c28053a"
        },
        "item": {
          "id": "bd301326-94a4-4b62-a956-c8fa83ef62e9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6000ba10-0cca-4dd8-aabd-5c9f2bea66de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb3eab9-e311-419a-ae15-9b8dbba0821a",
        "cursor": {
          "ref": "6924581f-2b85-4678-94cd-98fb570f6744",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1e0003d5-110e-4e47-bc6c-7a771cd6f22c"
        },
        "item": {
          "id": "4eb3eab9-e311-419a-ae15-9b8dbba0821a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "64036ddb-6aa7-4683-80c9-7be53210f96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a5e4fc-247c-443e-81ed-2078a6339918",
        "cursor": {
          "ref": "3b857137-926c-4aed-814f-908bd6b3afce",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "758d3a8b-547e-42f4-a50b-96faf8f36c3a"
        },
        "item": {
          "id": "02a5e4fc-247c-443e-81ed-2078a6339918",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cfe7df52-464f-4635-9870-4ac5e9182c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868181bf-b1b7-41ad-b809-8262231e5144",
        "cursor": {
          "ref": "58ad883c-0daf-4212-90b5-499fd49b23ff",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6ce162af-c850-46b8-866a-318e04c71505"
        },
        "item": {
          "id": "868181bf-b1b7-41ad-b809-8262231e5144",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "df27a98c-8c57-42f9-9c0c-cc1921b39ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14269f6d-1986-4137-8488-02733aa77a1d",
        "cursor": {
          "ref": "9e82ab75-6891-49d9-9c18-2dd4bed6398e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2f386ebf-1b8b-449f-bfc9-33556086f037"
        },
        "item": {
          "id": "14269f6d-1986-4137-8488-02733aa77a1d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "26a6533b-29ff-4d58-84bb-ea528544d130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44027ea-6a7a-40e0-8c94-a841f251a7c3",
        "cursor": {
          "ref": "51bd16e3-127f-4cff-bab4-92fe83c31732",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "66aa6096-7771-417f-8248-0fa74658635e"
        },
        "item": {
          "id": "a44027ea-6a7a-40e0-8c94-a841f251a7c3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "189a124d-ebe0-433d-b4a3-51c36910845a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a8fede-0b63-4c80-bd9e-b3abbb1871d6",
        "cursor": {
          "ref": "16a535dc-6004-4798-9915-e61036d33201",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bba14622-5431-4569-a1ed-aa2ffe419339"
        },
        "item": {
          "id": "d7a8fede-0b63-4c80-bd9e-b3abbb1871d6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "adef08ab-d6fb-4ef1-ac8b-daa0ab82ed0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9298c92-683a-42ca-a3b0-342490fcb878",
        "cursor": {
          "ref": "e93de781-53d4-4557-a3dd-0931f1e9a9fd",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "224e4fd8-785b-4e52-b624-c52d4980be86"
        },
        "item": {
          "id": "d9298c92-683a-42ca-a3b0-342490fcb878",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1e9c6565-21b7-49f2-87a9-cbb6faff6a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a69af4-b17e-4754-b402-2276346892f9",
        "cursor": {
          "ref": "bba27c3a-6a68-41b7-97c4-74452d380775",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "412ea02b-ea4c-460d-bef9-e37418ab9e10"
        },
        "item": {
          "id": "e5a69af4-b17e-4754-b402-2276346892f9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4617a79c-a5f0-44ec-a722-7e1699d63ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7debb74-9988-4f32-8582-4807f6f68f62",
        "cursor": {
          "ref": "88c0c70e-3f7a-4555-bdc6-3284292347d7",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "23dceffe-0a4e-4a1e-b991-640aac44a7ff"
        },
        "item": {
          "id": "c7debb74-9988-4f32-8582-4807f6f68f62",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a8d92d47-8756-42bf-af6c-ad737963964f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05fd679-991a-4a88-a1e6-ebdf062d9775",
        "cursor": {
          "ref": "454012e3-a5dd-4849-b2b8-c196882765a5",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7356f1fa-a8b2-4478-8bb6-bc48c8fc2238"
        },
        "item": {
          "id": "a05fd679-991a-4a88-a1e6-ebdf062d9775",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "39f98ab2-8cd7-4893-ba3c-2d463daa354a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42df1c36-fafb-4e00-ab8b-c92c04622552",
        "cursor": {
          "ref": "a8c758a8-3f1b-479e-a7d4-2a7e2889f3a0",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e50d7dc9-d0ba-4cbd-95d7-6621e2274990"
        },
        "item": {
          "id": "42df1c36-fafb-4e00-ab8b-c92c04622552",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9133fe99-c3eb-4bef-9689-6f77489e5b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b5f1b9-9181-48ed-bab6-40852fdcd46e",
        "cursor": {
          "ref": "a6df5eaa-ab50-4146-ba67-63df60bfbba3",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "29a96d90-ddbc-48c7-b4ef-009632a64a4c"
        },
        "item": {
          "id": "56b5f1b9-9181-48ed-bab6-40852fdcd46e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "95acf0ba-4f52-42d5-a6f4-dea2b5c40ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5956d311-0cc7-4bd9-85d5-1bcda25bc1ed",
        "cursor": {
          "ref": "d5c51b40-1001-45ff-b69f-4861fc823570",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "73c417e8-efb9-484a-9c30-45bbefb7b6e1"
        },
        "item": {
          "id": "5956d311-0cc7-4bd9-85d5-1bcda25bc1ed",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "db7507d5-b289-4308-86f6-8ff1d28dcce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eee930-484d-4d4f-b396-c9d2ce3d1892",
        "cursor": {
          "ref": "d93a634a-d185-40a9-9bd0-e2e1c337ce77",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6d44223d-2dee-4ae4-9ebd-f31f88f2207a"
        },
        "item": {
          "id": "25eee930-484d-4d4f-b396-c9d2ce3d1892",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e6f31eeb-ce0f-45f5-a911-dea2a8f2618b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92275ae0-3144-4a5d-9bce-348719429dd4",
        "cursor": {
          "ref": "dadbf4c8-13b0-4a37-8d0d-ae89683e6990",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "99a721f0-41f2-4369-8a9a-63ee4850aedc"
        },
        "item": {
          "id": "92275ae0-3144-4a5d-9bce-348719429dd4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "13ad9fab-3e6e-46c2-97c7-4c6b23c3fe57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba115c1-71ab-406a-a540-d1c51bde7be5",
        "cursor": {
          "ref": "8a52fcaa-1263-4050-b69c-087738ae78c7",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1ad7ff40-c36d-493f-b309-411328d16a5a"
        },
        "item": {
          "id": "eba115c1-71ab-406a-a540-d1c51bde7be5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dc57a31c-8e24-4c0c-89ef-b595c1694c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f798e55-6ca9-4d03-9798-19a93cb48fa7",
        "cursor": {
          "ref": "7939d6ef-2a0f-45d0-bf39-35dcea6b6eef",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7ecfd288-b8cb-4ed1-a789-3267256733e6"
        },
        "item": {
          "id": "0f798e55-6ca9-4d03-9798-19a93cb48fa7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e2011e9a-9873-4a9b-bf94-4ca4db2d428f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420e44e0-ef22-473c-88de-1e65fcfaa85d",
        "cursor": {
          "ref": "3dde5417-bea0-4a51-95d1-53b2f0956573",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f5326737-cc5e-4499-931e-17144380b746"
        },
        "item": {
          "id": "420e44e0-ef22-473c-88de-1e65fcfaa85d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b17ccb26-e443-4424-8c52-28498083d2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed0ce01-ad84-4c6a-bcd6-fc9a063612fd",
        "cursor": {
          "ref": "7c926cf3-0288-4f85-9b04-c424b4591ebc",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "66f05286-347c-43d5-b6a2-55ff9b660ee4"
        },
        "item": {
          "id": "8ed0ce01-ad84-4c6a-bcd6-fc9a063612fd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "851b8d34-a035-4803-aff9-599d1d3034d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72270e64-2c7e-444f-9552-eac6f7609e94",
        "cursor": {
          "ref": "d52bd5de-5cc9-4686-8a8d-ed78815942c0",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "034d5b0b-25c1-4b37-95fe-05b237626247"
        },
        "item": {
          "id": "72270e64-2c7e-444f-9552-eac6f7609e94",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a64f6609-bbc2-452e-83f8-a3cc46bbff28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181df07f-21ba-4812-ad31-80a9fe097927",
        "cursor": {
          "ref": "40751004-c91d-4345-8343-750d59b17a3d",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a3b8f502-f744-4ad3-8cbe-f71c3c918194"
        },
        "item": {
          "id": "181df07f-21ba-4812-ad31-80a9fe097927",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ee2c4603-841a-4b3f-8510-ea17163915c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9527d7bc-c93d-48ef-aa60-2839c70f4ffd",
        "cursor": {
          "ref": "04f4f209-6814-48fa-b8ef-00ad3338b294",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "59cf2106-883b-404b-a93a-70da195e7275"
        },
        "item": {
          "id": "9527d7bc-c93d-48ef-aa60-2839c70f4ffd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "25fc5327-0127-4c51-a7a7-f9640ffd3689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f93553-3bf2-487b-b3e0-5bb54bc15b94",
        "cursor": {
          "ref": "61a473dd-b3a5-4adb-b095-17fed5d6c6e9",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2b96a889-fc23-4d34-aa62-c54950585409"
        },
        "item": {
          "id": "e8f93553-3bf2-487b-b3e0-5bb54bc15b94",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "279186c5-e628-4177-be3f-a03cd292cdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780853d9-2122-4f4d-bfdd-a429516f89cf",
        "cursor": {
          "ref": "8e6a36b6-5def-4100-87e8-fb2f3b660b62",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "76b096e5-591a-4234-afa6-6c386359db66"
        },
        "item": {
          "id": "780853d9-2122-4f4d-bfdd-a429516f89cf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c56455b6-6323-48c9-a29a-ffe65d6ddc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4501ea6a-fcbe-41d6-9a94-7f1174e90a16",
        "cursor": {
          "ref": "1a3003fe-38d3-4f69-b634-64c73cc93ab8",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8f621c0e-d919-424e-a1f7-ef002578d00c"
        },
        "item": {
          "id": "4501ea6a-fcbe-41d6-9a94-7f1174e90a16",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2731e7ae-4fe0-4b96-a8fd-6582bf430a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10df23a-23fe-4020-96f6-885d0edba563",
        "cursor": {
          "ref": "4be394f3-b780-44bb-968b-faa77f5a7dd8",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "77454b0e-a0cf-456e-8638-52983d3e4c50"
        },
        "item": {
          "id": "b10df23a-23fe-4020-96f6-885d0edba563",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f2de3bac-cbdf-4d78-9546-5d748fb091a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4baa8dc-4a2e-4823-a76a-e93a6fe40b88",
        "cursor": {
          "ref": "cdbfc55a-62dc-486a-8b79-e87ccddbfb76",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cfbd7e23-6704-43b1-abae-47e12f3af5ee"
        },
        "item": {
          "id": "a4baa8dc-4a2e-4823-a76a-e93a6fe40b88",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ed0b6c6c-0b88-4ece-a61c-5109e4b67c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c23ead6-399d-48e8-bde3-620c3a581d45",
        "cursor": {
          "ref": "0c34b72f-6674-4097-9404-c1173b34cd18",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e070ff49-307f-4077-b469-a19d3f998720"
        },
        "item": {
          "id": "3c23ead6-399d-48e8-bde3-620c3a581d45",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ef6793f9-36b6-41ed-8aca-d3eef7f03b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c196bcb-3f99-4cc4-b71d-e63c249f7456",
        "cursor": {
          "ref": "07441ec9-484c-4377-8362-f7801284aa96",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "13da277b-8b37-4323-9dd0-bccbb3558087"
        },
        "item": {
          "id": "6c196bcb-3f99-4cc4-b71d-e63c249f7456",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b6298f12-e099-41f0-8f12-dcc02fb99b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dd6208-8326-48f3-8874-c51193ba5bf0",
        "cursor": {
          "ref": "17795e7f-efc5-4f18-88f9-6318dc767526",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "00431356-b85b-4fc9-b048-38b1fa02346b"
        },
        "item": {
          "id": "05dd6208-8326-48f3-8874-c51193ba5bf0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9253616f-cc9d-4609-ad6a-9d4779db5613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de561804-07ef-4958-ae45-bdbf843f0e66",
        "cursor": {
          "ref": "529765fe-164a-4c57-93ed-31b16127dcc6",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b2589fc0-3386-49b2-b03e-ae9ffe3f0a4a"
        },
        "item": {
          "id": "de561804-07ef-4958-ae45-bdbf843f0e66",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9c0bea08-81eb-4503-9a1b-99dacaa3d691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1354b817-f2dc-43f0-870e-02aaa6965d68",
        "cursor": {
          "ref": "5f81948e-d17b-44eb-a0e8-1b4b7c3bad05",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e26873c2-a9a4-4e58-8531-de856fd6cf12"
        },
        "item": {
          "id": "1354b817-f2dc-43f0-870e-02aaa6965d68",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "643f512f-eed4-43c8-a0aa-35f6f873ff87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d853a5c-8994-458c-ab24-058c7852b267",
        "cursor": {
          "ref": "66a606ee-12ff-46fb-818f-49ceb50c29f5",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "11fecb2a-5102-426d-a48e-b4b465eb4954"
        },
        "item": {
          "id": "9d853a5c-8994-458c-ab24-058c7852b267",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "63e22f17-2515-43ea-9faf-34f1847669c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3a2bbb-218b-4adb-b0af-1b77094bf52e",
        "cursor": {
          "ref": "018383c7-dc28-495b-a4bd-307d913fddef",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cc1824c0-3a42-4f85-9ae5-989de93e7136"
        },
        "item": {
          "id": "ed3a2bbb-218b-4adb-b0af-1b77094bf52e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "143b337e-2d34-4a23-886e-17dcb71eb6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b9623c-921c-411c-8f10-ce0ab83be529",
        "cursor": {
          "ref": "3d0a8590-8fc6-481e-aff3-3d21a232f330",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "72528e04-662b-4c1f-a127-e4812edcbaf2"
        },
        "item": {
          "id": "82b9623c-921c-411c-8f10-ce0ab83be529",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e28a40dc-42d9-4870-9dd3-f0d0b0abbfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42940e2-190b-4c07-b3b7-afb20f5bb544",
        "cursor": {
          "ref": "9f862046-2f10-4bbe-9361-3306a91815f4",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ed65eb52-7e63-441e-ae3e-189733a51f6b"
        },
        "item": {
          "id": "b42940e2-190b-4c07-b3b7-afb20f5bb544",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "84e769d0-de69-4568-8643-bba17e241569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e173d298-b1d0-4d86-a266-ecafbef332cb",
        "cursor": {
          "ref": "044a9eeb-f55e-46eb-90f0-c9a09fb3b3a3",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "09cc71b4-1262-47a7-9978-b53c6fc196a2"
        },
        "item": {
          "id": "e173d298-b1d0-4d86-a266-ecafbef332cb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bacd39c8-7846-4bbe-89d2-8b83da107e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f76365-6be9-46a1-ad36-53a4a125aee0",
        "cursor": {
          "ref": "850dd931-62b2-4d89-96ac-e58f827ac4b8",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e25ca9ef-3112-4ee4-97d4-768306cf6d5d"
        },
        "item": {
          "id": "83f76365-6be9-46a1-ad36-53a4a125aee0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "56df6ebc-3a41-4a28-8c65-70454defcdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aced7df4-49fe-454d-b44f-ae0dc48bc2a8",
        "cursor": {
          "ref": "72050430-36e5-442f-86b3-0d4eb37a0aa1",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bd7abbf2-3a2b-45d6-b63c-cf924b07a505"
        },
        "item": {
          "id": "aced7df4-49fe-454d-b44f-ae0dc48bc2a8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "76f58adc-c127-4f02-a3e1-33556ef00bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12763ff-7aa1-44d1-877d-841065ff5bc6",
        "cursor": {
          "ref": "9fbd7245-2c70-439e-8c61-def1e6dac0a9",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6e4712f8-d317-4c22-beff-37dec9b4092e"
        },
        "item": {
          "id": "e12763ff-7aa1-44d1-877d-841065ff5bc6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "28dc460b-f3ee-48e3-acb6-8dddadc4071c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e5d588-3ecb-433d-839c-61b554f84183",
        "cursor": {
          "ref": "aba2c28b-7407-40c0-b4a9-92efcb73a02f",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2841d7aa-4194-4340-9252-fed5ff0f5b45"
        },
        "item": {
          "id": "39e5d588-3ecb-433d-839c-61b554f84183",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7dd6b0ba-8134-4e0d-9fe1-e6eab09425bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c845caf-35b2-4924-8ef2-01d359b83f8a",
        "cursor": {
          "ref": "09327295-6538-4032-b545-2aca0a3bade7",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c56887ae-5ade-4d87-ad26-04b593d2944a"
        },
        "item": {
          "id": "3c845caf-35b2-4924-8ef2-01d359b83f8a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "256a1273-b757-44d7-a1a5-b73151500372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21c2c73-2553-4708-87ad-352eb7af7eb9",
        "cursor": {
          "ref": "34210348-349e-4b37-9742-d64df448a838",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0a6aa4a7-ae47-4985-91c0-320db4e97280"
        },
        "item": {
          "id": "c21c2c73-2553-4708-87ad-352eb7af7eb9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a524e349-4611-49c2-b5a9-30a9e160f006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c91620c-3637-438a-9fa4-8f67608d2cb1",
        "cursor": {
          "ref": "ae926dcf-2563-489c-86bd-7b0953bb5e06",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b745d50f-4ce2-496a-bd6f-5d080d9f4416"
        },
        "item": {
          "id": "8c91620c-3637-438a-9fa4-8f67608d2cb1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ed08497d-4f41-419e-b3ea-6453f47f43a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e718f671-fa2b-4074-9a24-0a2e5335b376",
        "cursor": {
          "ref": "740ab94d-ce62-4dd8-b031-d618937d814d",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0098a49e-40dc-4e92-97d4-961318da42a7"
        },
        "item": {
          "id": "e718f671-fa2b-4074-9a24-0a2e5335b376",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bc4dd523-9130-40e8-a8e7-d0106391ebce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba3c402-9c2c-4c34-9713-97d48a50383f",
        "cursor": {
          "ref": "b12a72f0-6146-404b-8336-dfe20803262c",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "195d5aa8-2af0-4386-8746-bf2ed4faf916"
        },
        "item": {
          "id": "2ba3c402-9c2c-4c34-9713-97d48a50383f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e294ee53-dcf7-4d91-97c7-eaea341c8090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd68680-5152-48a7-bb47-6c306aba383b",
        "cursor": {
          "ref": "2e13cd4c-3ee0-4408-b359-c8d363304412",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "706b9bd6-db56-470f-a0a2-beb2a99f6e49"
        },
        "item": {
          "id": "fcd68680-5152-48a7-bb47-6c306aba383b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "06547bf8-b200-4449-99b6-4075447f3314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ef2de8-6239-42e0-affa-6ed9f38f92d4",
        "cursor": {
          "ref": "4730fa48-8f76-4945-a40e-b82a3bf51ec8",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7433a192-dd34-4588-ae2e-e624dcca0901"
        },
        "item": {
          "id": "82ef2de8-6239-42e0-affa-6ed9f38f92d4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "be853f97-f6db-4532-a537-1309676ffbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81fb738-51a5-4ddd-ab6b-6f3da8b84897",
        "cursor": {
          "ref": "e4128834-e90c-46b3-a783-19aaefdda698",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5c6f07d1-a568-40e1-acf7-0f4ac16a5a60"
        },
        "item": {
          "id": "d81fb738-51a5-4ddd-ab6b-6f3da8b84897",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3edf0bee-43c9-4a74-87cd-a1bd990b4b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0212fa15-f63c-44eb-aec6-300157c074e9",
        "cursor": {
          "ref": "aa9e9b34-5c85-41b9-be8d-eee8daead013",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ff9a70c9-0d62-4132-91fd-73cbf01dc0d5"
        },
        "item": {
          "id": "0212fa15-f63c-44eb-aec6-300157c074e9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b14fba21-c110-4259-bbe4-91a78bf4890b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc33e4e-ce56-4aa3-aabc-78ac6e81e5dc",
        "cursor": {
          "ref": "f9068275-270a-44fb-9f79-10ff9b6f9cfa",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "de98d3fa-630d-40b9-96ba-b5bd2f5c5a7a"
        },
        "item": {
          "id": "0bc33e4e-ce56-4aa3-aabc-78ac6e81e5dc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "02745dc2-103a-45f6-b4ab-02c557092290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be378fa3-836b-4395-b206-f33054925a40",
        "cursor": {
          "ref": "c38e48ee-2a3b-402a-b612-8d541aab082d",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d0cc370c-f40d-49d9-a2d9-db99764ba649"
        },
        "item": {
          "id": "be378fa3-836b-4395-b206-f33054925a40",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3ea43f92-5239-4d45-9a3c-c9311a6fce69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dd8037-d04e-4696-8338-edde105751c3",
        "cursor": {
          "ref": "87c205a6-718c-473d-b544-af7cf1feaada",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4e4b4360-8df0-4c42-b76a-c68f50b8731c"
        },
        "item": {
          "id": "d8dd8037-d04e-4696-8338-edde105751c3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b225b704-9216-44a3-a8ea-24345c9003a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6515b322-b186-4c4f-89ff-ded415f84198",
        "cursor": {
          "ref": "78656729-630b-4a43-b0f7-8139a6cf2b74",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8b7bf87d-409d-43c3-a19f-5af159326907"
        },
        "item": {
          "id": "6515b322-b186-4c4f-89ff-ded415f84198",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "39516282-6d62-4f3e-82ba-e54697077156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb937b44-69ad-4522-bed3-5628d51fe2a5",
        "cursor": {
          "ref": "5aa654ab-86d4-4e59-b771-30544d4e1cdf",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "da477e1d-edb0-459d-b2f1-d5455b28db5a"
        },
        "item": {
          "id": "cb937b44-69ad-4522-bed3-5628d51fe2a5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ac4469d0-6df5-4cc3-a1b4-1c2d72ff51fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81499298-ed3d-43c3-a2ee-39debfb07cd4",
        "cursor": {
          "ref": "bcd22382-6963-42fc-b66a-c5b94dd2d4fc",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d7e80e25-2504-4516-84ab-2630ace3c69e"
        },
        "item": {
          "id": "81499298-ed3d-43c3-a2ee-39debfb07cd4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "474d46e6-d87c-4a41-b76f-904673ef267d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84dcda5-031c-4252-8b3f-04f9a322ecba",
        "cursor": {
          "ref": "9af56b00-70f6-4a59-a3aa-a72ed7b43afa",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f9fbd7d2-a6e8-472c-8b4a-60a3a1eeb6e4"
        },
        "item": {
          "id": "e84dcda5-031c-4252-8b3f-04f9a322ecba",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4a05875c-56ab-47a0-a7a9-176134962cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3c583f-c06d-4ff7-9aaf-2690bffd0da1",
        "cursor": {
          "ref": "cb6a48ac-1e12-489c-b33d-4b58dc2684c2",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4394117f-9b91-4986-b381-0a4bb849da0c"
        },
        "item": {
          "id": "7c3c583f-c06d-4ff7-9aaf-2690bffd0da1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "016080dd-b3f7-41b5-a89f-50e65ddcbe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743a1ef9-6604-4b67-8902-075bbb1e5264",
        "cursor": {
          "ref": "b22cf2cf-5fdd-4dc0-8e4c-5e4b78b34de4",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aebb89d8-017d-4d5a-b332-9572e4adf5dc"
        },
        "item": {
          "id": "743a1ef9-6604-4b67-8902-075bbb1e5264",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dc5969f2-298c-4790-ad23-e4fe3e0be5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2ad411-8e25-4c8e-aaf8-7d1a44ce92a7",
        "cursor": {
          "ref": "7f2b64c3-9ebb-4b85-8943-765a5693ed95",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9c5d34e3-413c-4678-8943-d0f211792c0d"
        },
        "item": {
          "id": "2f2ad411-8e25-4c8e-aaf8-7d1a44ce92a7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6cc7b475-0481-4919-bda9-4849e6f34fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0297b8e6-1401-408e-86c8-b122ecaab476",
        "cursor": {
          "ref": "f7858602-61f3-4b3d-af37-ab368371439e",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ec9f70f5-d8f7-4785-b1c6-8eb8ad52b06f"
        },
        "item": {
          "id": "0297b8e6-1401-408e-86c8-b122ecaab476",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d39b1f37-e69b-4e80-9ce0-09879f8956ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833e5ec5-ecd2-4407-8e3d-4dfd273328ba",
        "cursor": {
          "ref": "372a863d-cdc7-47f5-8d63-83cbb050207a",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "80714579-bfa9-4d00-8ba6-334afd81684f"
        },
        "item": {
          "id": "833e5ec5-ecd2-4407-8e3d-4dfd273328ba",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8b2ffcc9-4fe0-4895-b389-8b112e73da1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebc035c-09f5-4695-a20e-95f66deaa446",
        "cursor": {
          "ref": "981b431e-54e2-479c-8dd0-0576fae9e75f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e62e4028-bb1b-496f-8ec9-26046ca9b8ae"
        },
        "item": {
          "id": "0ebc035c-09f5-4695-a20e-95f66deaa446",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "158376c8-6411-412a-b869-629f21f4e12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6b314d-824a-420d-8616-d27e27767280",
        "cursor": {
          "ref": "dc2142a1-3619-4f17-ad91-8bcf9cbb92d6",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f227dc66-e04c-479b-bb20-8d354a56948a"
        },
        "item": {
          "id": "0d6b314d-824a-420d-8616-d27e27767280",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "13cb207f-602f-4414-a4e3-287ae8323bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6add20-753d-4b2a-9054-8c792a7c3cd7",
        "cursor": {
          "ref": "c1ec3bdf-da60-43f4-87f0-3dfcbc5723c7",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8be2454a-c6fb-4e4b-b9d4-0254fa4372ec"
        },
        "item": {
          "id": "ed6add20-753d-4b2a-9054-8c792a7c3cd7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b238d607-c4eb-4427-9055-9132cc7921f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4065936f-45c1-4c79-8677-532d181c4e38",
        "cursor": {
          "ref": "713980f0-447c-47c6-a01b-1a4ba7700d69",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "18891b8b-3f48-4d65-8e0f-531817b5a6c3"
        },
        "item": {
          "id": "4065936f-45c1-4c79-8677-532d181c4e38",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "50d2ef15-0c1c-49ff-8feb-2541308e25cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f149f0a7-4f4b-4da1-a694-e6230377c7e4",
        "cursor": {
          "ref": "1e8b8ec7-d02a-4034-9569-5fe69323e398",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "69b57aa2-f3f9-4fd2-9965-690ec64de969"
        },
        "item": {
          "id": "f149f0a7-4f4b-4da1-a694-e6230377c7e4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "54532de2-dff3-443f-998b-a28f1aec4730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7836ff2-3739-4441-b3f4-ce6c0cbd2887",
        "cursor": {
          "ref": "53ad0da8-bbf4-414f-b1f6-e0594c50c3db",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "04c8cdfd-7d86-4c89-b157-6d7bd1a16335"
        },
        "item": {
          "id": "c7836ff2-3739-4441-b3f4-ce6c0cbd2887",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f807f997-e0f8-4c3c-a28e-68c7e87bca1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85684ef-871f-4cac-aa45-71b9d601d71c",
        "cursor": {
          "ref": "1e08d7df-2cf5-4a18-a513-062f4895f5d5",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f578097d-8ade-477f-9fea-b85b74d6176a"
        },
        "item": {
          "id": "d85684ef-871f-4cac-aa45-71b9d601d71c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0e92c95d-424c-4909-a1ee-8a05172c6671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0474e93e-052e-475f-8ac0-e4d3641a0b23",
        "cursor": {
          "ref": "c023bb90-0871-4777-96fb-dffc39f73ebf",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "96c95677-6d43-41b5-bcd1-003b89a04f96"
        },
        "item": {
          "id": "0474e93e-052e-475f-8ac0-e4d3641a0b23",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5afd1a6e-4469-4d41-97a1-e6cfa617f281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60111fe6-32c7-46f2-86fe-311f208ad18e",
        "cursor": {
          "ref": "9790d549-99c7-49e1-bf82-c9fb5dae6fc4",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fcd60ad8-0f2d-4cea-b0c9-ba1aceba08f3"
        },
        "item": {
          "id": "60111fe6-32c7-46f2-86fe-311f208ad18e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1d706a38-eab1-4485-95ba-f4c15a8fb285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb895837-ae22-4e3a-9b36-2b5eb716c000",
        "cursor": {
          "ref": "23f02e6b-0205-4c09-ab88-8e5530518ad8",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "de1c8a36-f35f-490a-bfcb-a786860201ad"
        },
        "item": {
          "id": "fb895837-ae22-4e3a-9b36-2b5eb716c000",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ac65e545-575a-43a9-aca0-7fd127216143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c03875-4bc0-454b-be27-a123c47c99b0",
        "cursor": {
          "ref": "073c362f-6646-4795-9c79-0bcfb70fb2e8",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1c217bd7-6df0-4aa7-9fbb-a01e4d2c437b"
        },
        "item": {
          "id": "13c03875-4bc0-454b-be27-a123c47c99b0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ad238c40-a609-4831-8b0a-4f56e56e7d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac2310a-c3e7-4f6e-859b-f0bb0b02d0c4",
        "cursor": {
          "ref": "48af9a61-f1df-4e6e-ba6a-73f8578ba5bf",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c63ed84d-a85c-46a5-b6fe-07ec136deac4"
        },
        "item": {
          "id": "4ac2310a-c3e7-4f6e-859b-f0bb0b02d0c4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c7bc0340-72e8-47e1-822e-220470f58cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98969c7b-481a-443e-bf60-1c766a32e5a4",
        "cursor": {
          "ref": "2b786053-c7a5-4068-b419-9d1c9dd41d5a",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4707324a-6387-4fc8-833d-77567e34663c"
        },
        "item": {
          "id": "98969c7b-481a-443e-bf60-1c766a32e5a4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "27d4c81c-3f86-4ed1-b4b5-8afed4ca4051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb587eed-4828-4feb-a85b-ad1270089d56",
        "cursor": {
          "ref": "69e7297a-2d79-4176-b5d8-294ffac499a2",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "39e01c69-422e-4aa9-a13d-4eddd94c146c"
        },
        "item": {
          "id": "bb587eed-4828-4feb-a85b-ad1270089d56",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d17c4c97-8dc3-43b2-9ee5-29287474b330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a5c88-ae4b-4b64-a368-0e2dba2af21d",
        "cursor": {
          "ref": "f707dc26-f23f-4530-a810-ad7e4d013d38",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e43a50ef-cf9f-42a5-b9d5-95fc79b32d4f"
        },
        "item": {
          "id": "237a5c88-ae4b-4b64-a368-0e2dba2af21d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0b8d9719-cfba-499d-b674-60fb86759ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d67018-c7c3-486e-91a6-9efcdb5fdc58",
        "cursor": {
          "ref": "e2fe852b-441f-40e5-bf26-23e0e7e2ec99",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "02fb6eed-dc26-4fd4-a248-5a30066ead18"
        },
        "item": {
          "id": "a8d67018-c7c3-486e-91a6-9efcdb5fdc58",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5b6c33ff-dbd7-4aed-95d5-d9928a791e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946f007b-e9df-4be0-9710-0e5bb114b09f",
        "cursor": {
          "ref": "07a0807f-d536-4a98-9447-c3a294a3f456",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4b7c1261-9429-4756-9993-ec9e2528870c"
        },
        "item": {
          "id": "946f007b-e9df-4be0-9710-0e5bb114b09f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0629f1f6-67e0-435a-bc19-53ac20ee5776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b176da-6552-4c16-b2f9-f6a7c8291537",
        "cursor": {
          "ref": "930bf69e-3c30-4133-93c0-9964cefe779b",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6f699f54-85d0-409d-91fb-aa2a0d0214f6"
        },
        "item": {
          "id": "54b176da-6552-4c16-b2f9-f6a7c8291537",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9c643beb-efa8-4420-9194-8f1903896d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31ffa53-c70d-450d-b278-fb01c6437b47",
        "cursor": {
          "ref": "4670490e-2c02-4887-8616-5d9d78d26a7e",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5951085d-f107-4142-be53-1a47d769b975"
        },
        "item": {
          "id": "e31ffa53-c70d-450d-b278-fb01c6437b47",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cc4106e8-f617-4894-9767-b514ad1ac149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccec7b18-4fcf-4dad-afe1-150ae014f35b",
        "cursor": {
          "ref": "292bb0fa-434b-4e32-9955-9754a36b3f4a",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d2989c6d-de2b-4024-8f79-07c927dcc9a4"
        },
        "item": {
          "id": "ccec7b18-4fcf-4dad-afe1-150ae014f35b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "582acb18-b2af-4283-83db-52925c528f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed82d72c-d5e0-441f-8fdf-ec67f79b3ad9",
        "cursor": {
          "ref": "04e42ec6-0297-4fbb-9393-f3bf1f1be01e",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e3a285e3-3afc-44db-bde0-c41d4e94e3f2"
        },
        "item": {
          "id": "ed82d72c-d5e0-441f-8fdf-ec67f79b3ad9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8fe029f4-6876-4dec-a0bd-abe0ebe6c9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96efe34-ff1c-452f-9c3d-c1e73ca992e2",
        "cursor": {
          "ref": "a1f2affc-2ca9-47e1-b31e-ed5316487621",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3e7e102c-3cfe-475d-aed4-f2407606a23b"
        },
        "item": {
          "id": "d96efe34-ff1c-452f-9c3d-c1e73ca992e2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c877ee7b-811d-442f-b92a-a5e29aa9585c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c30b8f9-31d8-42cd-9c13-8489e71e4909",
        "cursor": {
          "ref": "15c26bfd-b4a2-4c35-b4a6-26d7cc739206",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "79184d78-4cdd-4d5f-ab94-0bcaf5284d34"
        },
        "item": {
          "id": "4c30b8f9-31d8-42cd-9c13-8489e71e4909",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "cd94dcf2-e5ce-4cb6-9740-022809065db8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 435,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63130b1-d447-4bf2-a782-3e4289b28617",
        "cursor": {
          "ref": "a1e4e77b-3873-4cd4-8607-87a7c5096976",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2bf3296b-8e07-4ffd-97dd-549ac1856f81"
        },
        "item": {
          "id": "c63130b1-d447-4bf2-a782-3e4289b28617",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "207194f4-b82a-48cf-8a7d-99306054d3f0",
          "status": "OK",
          "code": 200,
          "responseTime": 446,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "405e50b9-826b-4ca5-9f7d-750668387652",
        "cursor": {
          "ref": "aa412255-177e-4fc4-a5f2-ba382a684309",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "59da04ee-8968-4d36-ab6c-d3a81ff2bfbe"
        },
        "item": {
          "id": "405e50b9-826b-4ca5-9f7d-750668387652",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f7e180ab-38c7-4c49-b122-f84c5ca8d927",
          "status": "OK",
          "code": 200,
          "responseTime": 1822,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae98d8cc-c89d-4cda-a815-e946e93f58bb",
        "cursor": {
          "ref": "8890ee91-71ec-4fa5-a9bd-7f114f670641",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9d280159-ebc0-4b28-b2f4-8f524be4e731"
        },
        "item": {
          "id": "ae98d8cc-c89d-4cda-a815-e946e93f58bb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "71ed6cc5-120e-4c66-9de2-96ab1fa33dd3",
          "status": "OK",
          "code": 200,
          "responseTime": 1590,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa3533d-b1bc-4048-9e2e-948453128de8",
        "cursor": {
          "ref": "c10f0e4c-3fa6-4863-9b73-1b5734fc8995",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4b77ff3a-f5c9-4bae-9ff7-8dfda7ea01dc"
        },
        "item": {
          "id": "cfa3533d-b1bc-4048-9e2e-948453128de8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d7fcd1f-7901-4d57-b5e4-2b24569d4b0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa3533d-b1bc-4048-9e2e-948453128de8",
        "cursor": {
          "ref": "c10f0e4c-3fa6-4863-9b73-1b5734fc8995",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4b77ff3a-f5c9-4bae-9ff7-8dfda7ea01dc"
        },
        "item": {
          "id": "cfa3533d-b1bc-4048-9e2e-948453128de8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d7fcd1f-7901-4d57-b5e4-2b24569d4b0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa3533d-b1bc-4048-9e2e-948453128de8",
        "cursor": {
          "ref": "c10f0e4c-3fa6-4863-9b73-1b5734fc8995",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4b77ff3a-f5c9-4bae-9ff7-8dfda7ea01dc"
        },
        "item": {
          "id": "cfa3533d-b1bc-4048-9e2e-948453128de8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d7fcd1f-7901-4d57-b5e4-2b24569d4b0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5caaee5c-e9a4-4fdf-a966-19053174e6aa",
        "cursor": {
          "ref": "4a3f9ac1-89eb-4263-a0b0-743f2b64e314",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "be7a2300-0402-4187-9e4f-cc3a32805da3"
        },
        "item": {
          "id": "5caaee5c-e9a4-4fdf-a966-19053174e6aa",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "885b4236-a1f5-408f-b7e4-4291fc704465",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 353,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bf9969-735e-4426-8b1e-44e3d7ff47ff",
        "cursor": {
          "ref": "3d539916-3861-4ed4-9fad-824111251f8b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a5ee6f7d-9f13-4c4d-893e-6d40f81cdc50"
        },
        "item": {
          "id": "36bf9969-735e-4426-8b1e-44e3d7ff47ff",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6718a1de-50df-45b0-b8af-1d41f480699b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bf9969-735e-4426-8b1e-44e3d7ff47ff",
        "cursor": {
          "ref": "3d539916-3861-4ed4-9fad-824111251f8b",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a5ee6f7d-9f13-4c4d-893e-6d40f81cdc50"
        },
        "item": {
          "id": "36bf9969-735e-4426-8b1e-44e3d7ff47ff",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6718a1de-50df-45b0-b8af-1d41f480699b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b46418c-c532-4830-8e67-456fab96425e",
        "cursor": {
          "ref": "833e1c12-9533-4c94-af89-a2aa6abb14ba",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fe8bcb88-1d31-453d-a7ab-cea94e207877"
        },
        "item": {
          "id": "8b46418c-c532-4830-8e67-456fab96425e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0021a05f-8915-4134-a6a4-7ddc81b8c6d8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 527,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4c22e0-b8a2-4fda-a8e3-57dc2473f103",
        "cursor": {
          "ref": "d6abc1b6-074d-4188-a20d-6574384378e1",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "df6ffba8-819a-49ff-8190-f97e15ea81c7"
        },
        "item": {
          "id": "df4c22e0-b8a2-4fda-a8e3-57dc2473f103",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b4b65b64-dedf-4203-9f54-d789dad00e63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4c22e0-b8a2-4fda-a8e3-57dc2473f103",
        "cursor": {
          "ref": "d6abc1b6-074d-4188-a20d-6574384378e1",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "df6ffba8-819a-49ff-8190-f97e15ea81c7"
        },
        "item": {
          "id": "df4c22e0-b8a2-4fda-a8e3-57dc2473f103",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b4b65b64-dedf-4203-9f54-d789dad00e63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5ff0bf-a94e-4c2b-9b61-a41db96389ab",
        "cursor": {
          "ref": "b03c805a-181e-48e8-9e90-6751cff3e368",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "af6c8f4d-7f25-4d1c-9b44-6391a44b544e"
        },
        "item": {
          "id": "5a5ff0bf-a94e-4c2b-9b61-a41db96389ab",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "5efa555c-e3b8-4236-b12d-37eac230e024",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 538,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}