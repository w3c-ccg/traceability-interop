{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bb24270e-a3a8-4c34-a281-4a9faab6a2ea",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eecd4e3f-2d53-40b6-bf06-12542d475adf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc5a7bcb-ca1a-45e6-94ce-a76d66f0a15a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5f3366af-da80-4ade-a180-6d876ab44b59"
                }
              }
            ]
          },
          {
            "id": "9c9b5b27-e748-429f-8c37-281067d5c0f6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea94b596-51ef-4aa1-af6e-e0882186c955",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3ffab2ea-68a3-4b5f-b3a4-1c4ed43a3679"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b683aa10-1b72-4e0d-b046-9fe0787b8039",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "36e16c44-bd0d-439d-9b4a-6552324fa601",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f7e6d5c-eee2-411e-9558-77d74d824888",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99e678f1-61a7-4073-a613-3834db00871d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63e51b33-27b7-4e0c-b8dd-603ecfa0ceb1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab15109a-4ad9-4d84-b868-9344abdde045",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e558206-1768-481c-970c-6db0b4444852"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a534fca5-051b-4d3c-bbf6-7429a46651b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4f1bf9e-c64d-45bc-bbcd-4e7cf3a4e3b2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1f73d92-54eb-4542-b619-a9762aae005e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "391e618c-f3d0-4f52-94e8-449a1047fbd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae2a8919-7dae-42fd-a56b-7a810ea180e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ccddab7-d8ab-4d74-9830-c758d064d0fb"
            }
          }
        ]
      },
      {
        "id": "ee8b7d70-2101-461f-9d43-ad3cfbf73407",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8212e27d-3019-464b-82d9-65494c18f6b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f70cbef3-6778-4808-a81f-91532852dc57",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1251f2e9-db3c-4246-8fb8-c608cd4c22a0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4963fb0e-6313-4099-9eae-b88d7e63b215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7500deeb-e7fb-4421-a2b7-f71939605b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75994d96-f4fc-42b2-85ef-8b3fb85de94d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d150739f-ac39-49f4-8bc5-b65ea948f0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bb2ce8a-a617-43dc-9843-4235090a74eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab9e5b6-ccae-4a37-a24f-8f287fc92681",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146aa760-cf5a-434a-9597-614a79f6617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a6bf7c5-50f3-4c0d-a641-a3ecf10df85c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e09f803-6bea-4637-a3f9-e04fcea7d603",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a03151ad-b799-47de-8c33-c625342c060c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d4c7a9-11f9-4471-ac3e-2b71624149d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70a4d8b6-0c03-4a15-bfc6-b12ca7b6dd3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed42718b-2b12-4733-a5fb-486f8edcc28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc753fe-ef44-4518-b30b-33a4aec8a084"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cfe03831-9a5c-4d90-b0eb-54791e632e9c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8c86bf4-0db7-4333-8867-f73bf283654a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f396d894-c094-40f0-acfe-579d4037f3c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "061e1b92-9037-4168-a8e8-13b6eb6cabd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6a9f35a-19dc-4922-8ae5-64a3472e21d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d616275e-7bef-4603-8630-bf8867c82362"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e2763a8-30d4-471f-8113-e0efba7a6e84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81f31923-cd30-4b15-a022-7273a112e0c9"
            }
          }
        ]
      },
      {
        "id": "045c724e-7a87-47cb-a94e-c5530d466924",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4dcf306b-fc78-4c97-ba30-59516b945479",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51e7cffb-51af-4c59-a475-14b0dd65baf0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0aa1a813-218d-49ec-8a51-0f5721fa5499",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cad48b-265f-4824-bc21-bdd277a9a260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0ea27c-a47a-4121-9d3d-d3559d2125ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f57094-371c-4e5e-b6cb-6cc8e0158117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8490809f-be1d-4ce1-a652-7595d9591465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af036af-120c-47c4-9bf5-0affa2f2ea95",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2040a06b-8719-455a-931f-6f84c2d3e701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf599773-ad46-4feb-ac8b-3c33daf81dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b49939-5f70-4c13-9d2e-1ea55f5a5113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78b1820c-e696-42df-b842-cb46b4ae16f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74e2834-5071-4cd5-871c-f30e9e044d05",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaeb32c4-4504-4a30-bdac-892e765ab5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757f16b1-07bf-428c-9569-b431dd861c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b5033c-6c7d-4ee3-bb15-7e69162bc591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "666f2b67-fd73-42ad-bac6-491a712e5c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dccd4ac-5408-493a-a728-90eb33f5ae71",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0586f4-47e5-4886-873a-6d674c0ce012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4994e710-9833-41da-8f59-cbf657c00c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a390811-a395-4ee7-8684-a437474c73b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d0e4971-4d98-4be5-9511-b53d25ee4afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8546582d-1bb6-4223-ab54-2a9618658c49",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f33bf3-62d6-4c79-98cb-a428503a797c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f776ffb-e780-4931-a52e-395cbf4b9f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717ff51a-d3fd-40a5-99b6-89d9d8157a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b9af039-91ec-4dd2-ba14-be3450d174fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2bb8c9-8375-4aba-83f8-02595d11eed7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdcc3d9-4f52-4039-a1cd-d238cc0464cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f855d04-a05d-43a4-b0d5-c79165e50f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fdca76-fa7c-4b18-92ed-1df37bcb819f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b0479f5-776b-4cb2-b7e4-a0dac005ffe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff727a5-51a5-4b89-8078-37b702fa9efd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7687ff54-9732-423c-a777-90fb614c5395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd89a19e-a017-4676-82f1-36041cf53afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55c5ecf-c84d-4971-ad79-35d33f6a27dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60cf0b70-eb72-46fc-a118-c12a4273373c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1399dd4e-a524-466e-8ec9-4636b608ba3a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a868053a-b341-4cc2-85f4-f3a50fa8b88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813e3f75-5a5f-473d-9a6b-4265040356f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f156e7-884c-4720-bfeb-6689d3acfe46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a6a761d-f788-4648-8da0-b906ce96f242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901719df-f7b4-41a2-a4a2-c5529a11b7d5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0377763-a112-42bb-af62-893ac1d9cf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324037a4-33f8-416f-9c16-f9d7db592bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879675d6-f9d5-472f-a481-8d5569f01101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0365e648-09a3-4718-b410-25ee31c02dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c997f2db-2f27-4abb-98eb-a19f4f20ff5f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94791c1-fddb-4860-9446-82bc31f814da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb5cf80-fb12-4294-a410-4d908206bb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dcfaf9-7db1-440e-8fa4-29e1dad329bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb186977-ddce-46ba-a336-79ec26ef93f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa38cbfa-200d-4f20-b7f0-722894bdf299",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2ec556-d000-4dd3-8b76-7b5903df1513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8773eea9-3072-4705-b894-9df1bed3ef39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48da38f6-8a74-4791-8f12-bc632cd5a973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12fe9ba3-00ce-4bdc-a7e2-7e24ebd58a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a814b1c-a2eb-4cb9-bc39-14facb03f5ac",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84286732-94d5-45f2-8514-0ecae8d5ec2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a722ad23-07c0-47cb-9936-a1086742bb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c520fc-d4b7-4583-a36b-3c15f2a49b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58767d44-e70d-4d71-9da4-eca65a4e278a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef34c80-6197-48a6-bb99-2217f7baa367",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111b3d2b-610d-4160-ae57-76bade5eb2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cc06b8-0a56-49f4-8c0c-b87abeaa6ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fefb9a9-a077-4b9a-bffc-3a75b71e50ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ee046ac-90d4-4582-ac23-fe44157d98e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b673c1-0e35-47fb-9a09-9c57d6872d04",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c495b32-14aa-4a79-ab1d-8662c825c63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd46abe1-4d56-41ce-8016-c782dfcef3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff97979-ecc4-45cf-8bc6-7e2b3bca8735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16bed739-343b-41fe-a407-62daad11f8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcfa9d2-16ca-479e-93d5-c0e7626d77bf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01d138c-86f2-4b8f-9bdd-be9661761774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3887abf-a922-44f7-b6c3-548215657279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0568fe9-f7a7-4358-a0fc-d52dc7a355a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d337bdc-96ce-4e0d-b95d-3b27aeb37aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0384f3-797e-45d8-814a-55007a34fb71",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83629541-589c-46d7-9c6d-8985369d1aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b05c809-7918-48fa-bc99-5e8028cba217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8adfa9-fff2-436a-8cff-b1fe1ca95620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e582d7cc-291a-4430-9705-9f45abe6cb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17764c6-d629-4417-8f19-bb46d54e3367",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c40f8c-ea98-4bde-990e-326ce9209b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cc2ebd-044e-4a07-a4d0-521e1e718a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b5328b-5628-4cdc-8f9f-9325a781132c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "999e4160-0a23-424d-8616-45d94ae317de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d474591d-8331-4e88-8663-7badc110aea3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d135143-f3fa-41ca-a3f5-335a1fd7dded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd8bd77-2340-4fa7-bd0f-7b23a7762f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7cff50-8207-4ba9-b28d-3b7efde29963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e2d587-8e3f-4e42-93b1-2e1cfb9bb049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7908f7d-017a-4351-b4f3-0d918dffdfdd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13294ae-99b3-4ffc-b581-d32cb39e25cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c2f806-8048-4ccb-acca-f42013cca736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9a8f57-eeb2-4b97-bc29-95f272ebec02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd5641b-9fd2-404c-a2ee-45300c3e3454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fc7a3e-e005-4d6f-a78c-3b36c11145a4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56034c41-8636-41a2-b895-d4a7551f52f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85eb559-8f6f-4fbf-b1e2-bce98b16c976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33b0c69-dc7b-4361-927a-6cd0a68bfce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "367747d8-ef9c-47c2-941f-8e0b1272c28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceda445c-bdfd-4782-8092-e4e3593232cd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5745aa39-6d6d-42ce-bae0-e2c70f129222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebcafef-c385-4217-b1ba-42487f1b6afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5b6df0-5775-495c-ad44-4d1387571cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3405d5-6e0d-4b90-9ef3-95c0d7b5c11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3af7e07-3c6d-4ba9-9e66-95d71f14016e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dc07fe-f9f5-479a-82f7-6b1f6b900968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6f7a1e-e798-47d0-89d1-5b4f5516cbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b42217e-ec74-4e01-a139-e96242f8cc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9ae91a-cdc1-49bf-a311-6e3eb3bb46f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458a0654-819e-4197-8725-96f072e5b3c7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683dffdd-7e4c-4314-af39-6ae79d3e39e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c963be-191e-476f-b265-086e37a96004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93854d98-414b-4f68-b1cb-45069cb351ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1df3600-357a-491c-92c1-e8b579ee545b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15309ca-284d-4b75-8935-5f5b5c92bbb0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32aa1a96-e6a4-4afd-8d1f-265a438fafaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d8d9ad-3086-42b4-8613-fb5d0b8b9b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3919eb7d-059b-46e7-8f2e-a588de5398ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a76318ee-7920-4873-8189-c785d3af8810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa53afa8-3d1e-4e7c-8d83-78ca274bad1e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7149487e-1620-4aa5-9aa1-9a6c7ad58319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dee2b5b-a385-420d-af93-4c45902ac58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453f894b-fdf2-4b9f-8508-b3dca1983caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f7913a-e466-49d5-b6d1-213991f6006c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5422d7-b851-47f8-88e5-02a515d3afff",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0853b58e-5057-4e87-9541-abc1e5d845b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033ade75-821f-4429-8589-5b2ff5cff35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62deef0-eed0-4655-963c-6b40c977995f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbece3f5-a745-425e-b3ab-4698d141e973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450092e1-543c-4687-a7e2-1e903008ddd9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e85d565-0188-4b29-83ef-2deef99f8c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129506fb-236d-4851-b00a-c275f034d9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b33376-fe27-4646-8cc6-1f9796f8aecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e8e52e-54c9-41f3-a72c-8e16e40ba54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db8d294-c04a-4ae0-b5a0-ad101dfce997",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f271a1-5251-497e-b85a-b84c99e16456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07fd963-4938-43ba-b642-5cb599efe680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa31fed-1bc0-4a18-a109-3b1aa86991e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c79ff9-1504-4b99-8831-3e911e9cc2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc71ade6-0961-416c-844a-03c6d5558964",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f25827-54ae-4b9a-9924-47baf5f57393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f928c5-66cb-48c7-a86a-928434897474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51173f40-70a2-4242-81a0-a8640c43e5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "832f8ebd-7d36-4cb0-9d22-7eee6da7063d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8165c3d-afb9-4641-a381-1614a8d4aa79",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb8141b-af3a-4611-8278-4f786abd93f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1654a14-9fb2-4f5f-aacf-26d1951b505c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a792de8-8cab-48c9-96cd-3734afa0b780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8612c015-e713-4fad-804c-7b465f22d49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da62c236-b8c0-407b-a672-9d613e488961",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b4e1ce-456b-444a-999b-e6f6dcef0240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7973714-1367-47c5-9e6e-b8610a610548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1e6666-c81c-4202-883b-d8753b8227b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c086f152-1559-446f-8387-6eff1c0db64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e346b2-4b59-4a9f-9ac9-f7ac1efd8fbb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac09233-6263-497b-8edb-037a8c0b510c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b80982-09d2-49f6-b741-4ef64da0cecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1ada67-8bb8-499e-b564-8672ec8c1e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbb0102-51aa-4872-b405-940a777eb104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b930980-2adf-4015-a53c-7b0c440f3254",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6560f43a-ea23-4efe-99a2-05db607d2aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa7efe0-9187-4ceb-a4d7-6db2879c6ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6577b89a-66b2-44cf-b441-5db7f6cee3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f7f92b-7649-46b5-aa4a-65336a54908d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab77a6d-eb7c-4cff-8b86-1be4658f0eee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2ef9a3-7783-46d1-976f-d0bd4c779ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e3a1be-3d2f-4477-a471-2c9594cb83ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deecd10d-ebec-440d-8604-e76f3e0d7758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d357e30c-4d5a-49d2-8baf-79732aeae350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e65f237-3289-4ef6-8b27-be67ba1b0dba",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de7384b-89ab-4199-a725-cf12c1a28459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5effa51-b6af-4bb3-a03d-a3f71906806b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b7cd7a-dc50-41f3-87d1-61a6b91e3b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0aa35e-7551-468c-be5f-345695d66b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56889a7c-6c3f-4802-ad77-d3acd99bf0e6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b76b1e-1150-434b-be89-a6af25235c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc03f88c-7159-4c64-bfce-5f7816ac561c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ff2f12-d9dc-4c43-af11-19848de46453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bedf5b5-2ba5-4484-89df-b6c9163888cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c829ad2e-2898-4697-b329-d257ea023316",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3858a046-03e9-4225-9768-4e642cc686be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c779152-a5d5-4476-b854-bd94755bdc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf7cd5b-c4b5-4a27-8eca-659e4bc0f3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0653a7-3c74-455b-968d-b76ced2f92aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d05349c-677c-41ea-a2b1-dc605031b7d9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4681e6cb-3d21-423a-ade6-b3f4ac48e013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5e1b24-af0e-43e7-b650-abe088874d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6835a5-ff18-4af3-9c36-d735a7cef7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "948c1770-7448-401b-b51e-5060ba113ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c8c5e1-a7a7-4087-a519-5df5598d652f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa10566f-c170-48df-94d5-7defe090bf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783503d9-bc5f-41b7-8e2e-f7b62828ca7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10abb494-85d4-4c31-986a-8dfec19aab5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8598409b-df90-4ef8-9ca1-c3614cfb9328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7241e61-22d1-4e50-b9bb-37ad7505a6df",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efef479-4848-4f4a-a318-ca8e768f5302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f277be-24d5-4d8a-a302-65058288c0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d887668-3b9a-4462-bbfc-a2e8a7c6e7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37b6003d-6735-41fa-80fa-8f2d053f7445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c52f8d8-0351-4e8f-ac91-dbdc9cbb9c87",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dedd195-1bf5-456c-a124-bb6cd31f0f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77ed0d2-720d-4bf0-b55b-21c2343611a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde6d8c8-4162-4caf-84a2-195997b8d732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7b186f-7c03-4fca-a73a-6a65d5aa644f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3831b8-b179-4c61-a179-66690f290da9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e261dd15-8098-4457-838d-900a1d247fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bb5e38-502b-467a-a87b-281e91cb04e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266235fd-4a26-4462-99a2-372dd330b161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a96a4355-d038-4b26-bd46-94d5183a46eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4484ba55-7dcf-4add-8c1d-a7ee999f438a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855dc2cf-a1de-42b7-9af0-58b7f404d4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c1bd52-b81a-45b6-aa68-8fd312cfb4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cd8128-61ca-47d6-bc82-5abdac338c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "96b087f3-923f-41d6-8ba2-39c8a8434609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d6e50b-0e2b-4aaf-a670-a2dd13caa124",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4362245-8af0-4301-8522-3f15bbb615bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bedc8f-5260-41e3-af37-585528cdf688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04707a36-42d1-419c-8fdd-8464be966129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8092d561-11f7-4293-b2d2-cd580ae8a347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453ad32c-048a-4614-baed-a8f7e73ff81a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37730533-68ea-4418-ad71-6cef115fd308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9abd39-2f07-46e2-9445-a2da41b8a279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b129750-345e-4db6-a3e0-eaea4765c4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78ad2624-930a-48a6-a01f-0616350adfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3775c1c3-e13a-43a7-acb1-dca22ec49036",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2aea58-ed7e-46cf-b173-20b82900ac44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd03a4ed-ac36-47f8-8692-42a3cfe381d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319751a7-d9cd-4292-a804-41b39d9e32a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc58d99b-f8e1-4f65-9eff-4f6ff99c4ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ba7c6b-69b1-4dde-a199-fad61c50c032",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607969d1-2563-45db-9153-3d2419a0c2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53af9829-1f00-4b5c-92ae-6c4c03b8f78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd8c7e2-0883-423e-9963-97c2fae61715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6b8c99-94ac-490b-9e9d-8ccc639cd4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fba220d-dd00-4291-83fb-76bca9148055",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c34023-98ed-4f0a-b9ba-d02a4b3b6a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b288e2d7-eaf0-45e8-90af-109f16a22c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f64ed9-fd7f-40f1-9568-ed3b6a3b63c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b54641-565b-40c7-9457-93f77e02c4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7317f41f-dd9c-458f-998a-58bfb2b5f3ef",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b753c5-81b1-4a69-b521-123ab6208fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01fa811-80d0-437c-9541-631d1f996a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45c843d-c1ce-40f7-bdb9-0c1f0cb45a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b66d137-9ad2-4403-948f-e66769c0da8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabc7dba-8c8e-49e7-8a0c-62b2d0eb063e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104de3f7-6cb2-455b-adae-6910174deaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad14900-68de-4df3-bb8f-af02e73f44f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cd3329-7862-4d70-9472-4ee46a4b8c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39d23239-e421-4891-a807-3ac80ff5d22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08213ff2-bc70-4f8b-9638-42e9fd2af694",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa29b61b-27f1-45fa-8728-3eb184ab0ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70863990-f763-4325-af0a-f18a7b3274cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c4437a-573f-42ed-b1bc-c85842854048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "126c3658-e9de-4728-a077-156248e80237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d087ad57-b9c3-4ab3-b01f-7e794eea5de1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c8086b-3714-4963-be86-e0cc6e524d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7f5c3b-8f02-4436-ba4e-7c761819f1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d2a731-ec49-4b17-82ba-7729a006bb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b2f1ee-d164-4c7a-9f5c-3ab1d4dbbf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835be0ac-1b8a-4639-83ef-44adf4187566",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed9d600-9428-40cb-9f16-6ccf341bc59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691ac70b-f73b-47ea-b4a4-3d6112cd5041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae5fd6b-def9-4cc9-813e-83e3c806b71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeee5557-2412-4658-8ded-a99be7334749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178be59e-c08e-4dfa-bb9e-18d049849b9b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3effd3-e9aa-46f1-922e-a69e25738658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8931532b-73e5-4d6b-8c78-65791aa4a696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e30338-bba7-4ba6-ba4e-65386352b2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68cd5f87-f068-4691-8807-7db4e1e1186b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930ba6b5-e4ab-4f8d-bb78-c0953de4510f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb2907f-b5c9-439d-a17e-919e7c6fd12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294a3ac0-a3a5-4a31-82d7-cd3c8c65a478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53abb003-e86a-49d5-82dc-fd49679648b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7033a875-bdb1-4da7-af9b-f66a8a516360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64ff22d-ee7c-4e01-8333-c559a7f05da2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5b00c3-0160-433d-bd70-2e77327c49f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce3e9b5-e859-4c74-87cd-46ff11500b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90223465-8872-4cda-8827-0b64bbf6895f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "02bef1d2-3646-47b1-a587-dbe30066cd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0457b2a1-d9e3-453e-8432-ac3095b7bd98",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2bea19-e81b-447e-aa30-3b96f74d9c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b431e1e-e0f0-4cf5-863b-dd212bf5c12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085a723a-09e9-43ab-97eb-1bc7785e9163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "53cea48e-cec6-4040-bebf-ce7d36037ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb7f5d9-58b6-492e-8de0-f94c3c9b19e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211fc41a-c0e7-413f-9bd4-5055741f7250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05636de-14e5-4ef8-8758-8c15ac9a92c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66776303-4a79-473d-b1a1-dc0077f0306c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9845aa2c-323a-450d-b680-e558821b3cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c0d6f6-89d7-48f6-8945-3f5a0e37135e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fa30e9-d8d6-4892-b4eb-f002be1a8822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da9d8e3-86e4-4601-a617-0401bfe40ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a837bbae-a19f-4c46-99fe-22df6d274bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0080f4-51c5-4c93-ac96-9e193c00058b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683d9c4e-b18e-484a-af92-4ed228acb104",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70eafd7-e890-4bf0-bc13-c27a42cda7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980f4275-c512-4f1a-90e1-60f2607ca4f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6fe189-3752-4563-9942-33a567d90c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9faad6a8-c102-4625-8d71-6b1c76f3c2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c459dd4-6354-4194-bba0-656db49daf3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6226e8e-2b1e-41d1-96b0-652baf91f8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b017bc33-c7e4-4bc6-87f5-b408620de37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430a55c7-47e4-48a9-88a2-d1120b8b3ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f991539-8068-4655-85a8-cbfeafe44fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9086bdea-3fdc-4994-86eb-ce7bc7849aae",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e83996-9370-4cab-a656-3cb341b0c55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f855ff93-0ef6-41a7-ab1b-6fffde4d5461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff9fc34-761f-465b-9ee9-1efd761a6df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7ff1bc-f6d9-4c6b-9f71-c6e45ce8732c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d11525-3f6e-4932-afcd-8c8ed608600d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d69cdb-59b7-4f73-adc7-3583416d7cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e352994-97bb-41e4-868f-1985aa0405a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5886a96-0118-4d52-9109-ad100b217325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a3e57e-dd38-4270-b9b1-16d778928ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2029a575-5c30-4b9a-ba4e-8f960c90276a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032cd776-70f0-4fd7-b8ae-0ef946eec3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4154ea-bc5c-436a-8775-6750f04db893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da5bec5-8e30-4b7d-9181-8fe1fdbaa410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f97c30-9e65-4a6b-9e6d-4c5bf04a029e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58adbb31-8ad1-484d-96b6-c2df3374057e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63de7dea-76ff-4ef0-8053-d75f211bb601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e3f182-2de5-45ea-972a-f91242311153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab22d628-c8e6-49ac-93f5-fa8f0dd97a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "638a55b5-7ae3-496d-ab2b-9911f0040a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067f2181-6b2b-4a94-8c0a-a40a99d4e7b2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711ccca7-bdba-42c1-a5fc-f63ff7c525f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99ae3f1-8826-4f2d-afe2-009d38fb3c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924180b7-493e-424a-87d9-d86f2925d46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed5fe82-c1bc-40c9-b908-c16dfd0e1c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792516b7-e86a-46f7-8615-3c0e9082f628",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101c96e8-b3d3-4644-afb0-6e43567f0aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a7a0d4-e219-4856-a8cc-9290b1aad1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12d2a05-6003-4f09-ab28-3aebb04180c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "611c5a18-08c8-4ed7-9162-a013d05177e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76622a3-e2e1-4384-a9cc-4965087f1329",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e77e2c-d67a-4587-8432-ead89b632e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4761278b-5665-429e-b70d-d84d7857820b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfac8052-f663-422b-8358-123a8a6e5ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "008c22ad-fc2f-4c39-bcd2-5a62228bbee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4f3216-a2b9-40c3-ab01-f27b5dc5b42e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ba74aa-c3d1-4847-93c0-5cd159bd927a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f23e19d-5cfb-4a7d-8bac-a713de1b3d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800d76b9-40e4-4a54-8e3b-2295426e87ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24570823-53fc-4d7c-9e7a-44a377db6376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ebd42b-fcfc-427f-8fc8-130be5e92aa4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a6529c-79af-437e-a09b-0c62c8b0e03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6444a80e-478b-4126-8258-8e5c0a45028d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7671ed2b-c701-439c-be2d-07fe20f241a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fd4fdc-5ba5-447f-af34-5c4b751ee34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be552ee-8a0a-42d3-9638-fedde74d21cc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e620ef12-1f1b-4dd8-b632-e270b9d4c855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4c6930-cf17-4cad-a6a0-75e7b40ff5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ede3ce3-a68d-44f3-93e4-3f838cb3cdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbfbc3a-b73b-43f7-a312-594e1abfa9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cee8a6-5c3d-46b9-87a1-1066e4b96102",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e495ee14-5da2-4cdf-b3cb-bcb685f6bbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0144af1c-e57c-442d-8f69-3c60942ee899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a8acbc-7bc1-4c29-af3e-eb5779fff3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c12e05-573c-4087-b9e7-2005c5e66a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e28af74-cec5-4f61-aeda-caba5d030738",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627ded55-71e5-49b9-a2f9-a873330b77e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06682f6-027a-4675-9cb5-de710d87a998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7095520c-deb8-48f0-b315-c7c4b9ee41b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46bc19a3-a010-43ae-86c5-a4b06bed9623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a2a422-dfc9-404e-9254-a397647a3f6d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f390fa0-2cfd-4759-988d-630d0725f722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71349c3-6446-4e65-93d7-f40f19806d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a120b621-1bd8-4470-8a9d-269403fefaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5746907-4845-4b94-adc5-90d89d6fa31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccddc70-4feb-4625-9b0f-5026b3d11608",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3f9396-fd53-460a-aa4f-6862900e1992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722d038d-7674-492f-bfde-2cbd886e990b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443c78e6-29b3-4eb5-8ac7-291bb27ae6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30bdf32c-9a98-4345-b912-a275ba4ed20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4964d48-ff17-4216-8617-0c7938f474e9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa028db-fae6-41b5-bd2b-0fa20bdd8ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee8ec63-3699-44f8-a641-8ccc94884d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6da4b1-e518-4104-a30e-bb7285c40d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68848d9a-6afb-47f0-b0a3-b9c5c3efd193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b2c87c-0048-4ae1-9496-93c4b60d1bbd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97142d4d-b99a-42b1-b2e0-a649b3453c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6185850-2071-4dab-822f-450534f5e2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a6f83b-5148-4721-857a-11015713004a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ca6e44-a77b-4f29-9a22-3381e6723d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c795ffc9-b1a2-4a68-9bc2-a1580115b68b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f573e70-4ed8-4c8b-8599-fc8bccf7ec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6c5d7e-2c71-4e5f-874f-6becae5456f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e95eea-fdcc-4775-b83a-8d9d1421d3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5969c9c2-685e-4d17-8ad9-6ab41ed2fc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f5d941-f364-4aa7-9e9c-156595d18b8f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242fda81-f738-4f68-8716-b797d3c06afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00656a6c-9ff5-4f73-a91b-a46de51adecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d8caee-607a-4dac-9fe6-b1a0dbc40c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47e9b871-c3aa-41ff-b7a8-94a89627345f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0315ca-114a-43d1-9cd0-129cd6490782",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0313e74e-0bfc-49e0-a0eb-959d37ebeedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219c5359-d003-4d9b-8d32-c06d257e9350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c32ed7-6e40-47df-962c-9814717c0a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2356cd-675b-4493-afb3-d83abe2549a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01bb64a-b430-4425-b188-674e8ae6c951",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc7da00-b67c-4114-9f94-f295216c5140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d6cabf-0d3a-40b4-91e3-07234db070c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8884a897-c559-4954-ae77-595adb5c32c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29713232-a4f1-4e52-aad5-2bcb5fbefaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f141bf97-bd54-4792-8c35-0b4bcbe89239",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b3c0fe-56a1-428a-8731-b7b97709fded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35004b93-2d50-47c2-b082-0cad8126469b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b009d9-ad07-49fd-b9cc-19b9b93e9075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee1ff90-890b-4b90-bdfe-5aaef82a721f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592b2412-3294-482c-b7eb-15977cef5382",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47a98e3-9bf5-479b-8ada-3a343664704e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08de0df7-7152-4d1d-b957-1b43b35b1821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4cc2ba-4938-43bd-be8c-e913ad3ed000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe3a277-4f23-426f-aa19-0298b16537d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d319894-49d1-4c36-8741-316e7ded3649",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0518da8-b6a3-4e70-83d8-73726acb116b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b45743f-b5c0-4652-8c6f-b6cd4b6607df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7debbb12-1961-45f5-bdf1-14fd2ea1420b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "575fe0d1-1cd5-4139-a449-474fce282748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa0ab08-f108-416c-94ae-581c8445abfd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915d996d-801d-47f8-ab60-c3b53a9a15da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3343fbcc-5d2a-4e85-9665-5bbe7d672b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868efde3-e758-4dcf-9979-d53a4a0f1c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b331ffb-aa4f-49e3-adc7-89d89d8d05b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cf9c9e-61bd-4ffd-9c47-b4a3778bf8d9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607fae19-6362-44dd-925a-5b29db2a20be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae080c82-2e91-4149-98f6-fa09d7b8339e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312f9fe6-49a7-4614-b4c2-6e58747cc638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce51fd3e-3794-44e2-956f-f3d9d3d0f861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21c3540-52a7-44d0-ac32-ae28ed5d3278",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0850dcf-d20b-4c51-acfc-767caa5488e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39663ed-e548-425d-a493-0f76486e679e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e329c4-0ec8-4c69-af3f-92e47f0d2133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "44d3140b-18bc-4050-90c6-a80023c030b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3be1fb1-189f-4954-9d6f-a14712a4bede",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddd3162-a386-4034-9786-2640bb91d439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958f06ef-4e1c-4d65-b69a-89c756dae23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ba0941-5a30-4f63-b9f5-4b3ebce5bbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fde9704-5262-4501-b027-c10c2941cbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673fab09-cc76-4340-908f-b0d9ea193e97",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a46908-73a7-4930-8c0e-864e6cfec12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544d15de-b9e9-4d3d-a70b-f58ee73881ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af6fdd3-4649-44ad-bc7a-3e1475ba81ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70a9abbf-c4bf-492c-a945-24453c22973d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a74fc5-8f02-42ef-82e8-21b0cb911712",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5741a052-a78e-410b-9c34-0cf6bf02ab76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8f35f9-1c20-400e-8488-18e23323d69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a681ed33-b96d-47a6-a443-7410b2accc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0328cbee-b60b-432c-931a-50a6dde3bda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0a1a4f-6d82-47ee-ae50-42cfcb882e6e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df666f9d-f919-44bc-b713-d11c72d575a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7c1baa-371b-470f-b0c1-2ec73502a7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630ac7b5-0c10-4693-8e8d-f518406169ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e554562-8a9b-4c7f-9340-df9431c24edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d659db7-3e89-4e21-90f5-212b857681fd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f10ce1-10b2-4db6-96e7-d452f6a35b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a58fc35-b65e-445b-a9c2-87557e3c51a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd9d2e4-1b19-4dcc-a59a-beb124e6b4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "98ce1e5b-b230-4fb4-b8fc-8bfb8213e5e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b0e4022-e3ac-437c-bcbf-170684f4f0f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e6940de-9a25-427f-acc8-2ad741e3ea54",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc7fb3e-5c64-4022-a91b-ee4358c84aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dddeb0c-4cf1-49d5-9435-fb2afa7c39b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959fe9cd-844a-4942-bca5-5d75c032d290",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99634388-5a30-4cbd-b3a6-0a94a86a3dda"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db2aa6ea-6903-4953-aa91-787877bc37e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dfb3297-0725-4a34-83e8-14d1e23eb7e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a944f465-265c-49b6-bd08-1a8eaa002cd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb859eba-f1a4-4cad-8aae-409ca9a92eac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a74c6b1d-05f0-4949-b750-8230e535229c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b5f5480-5ff4-469e-93f5-75d87710e00a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a03f531e-4381-48c6-aaac-6226d8b869fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34301012-6188-40ef-b498-6c23d3fde871"
                }
              }
            ]
          },
          {
            "id": "7d71bff4-6160-4703-8f72-241658efd762",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7890cda6-4ca1-437e-a142-a24645599b93",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "10ab059f-9a16-412e-b52a-57ebec147e18",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33281329-d24b-4875-a037-ddf733ca0a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e40afa94-7122-4e8d-b9c0-5cc9683f7251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c75dbde-12e5-4575-8f24-287a14e69384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38421a8-d387-4110-8dd5-d12e63c3e5c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3fe82ab0-7a67-44eb-9534-ec2159ed7c8c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d02b7ac-a8c4-4114-b475-55fb62a48c92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aecbc599-262a-4e90-83ad-3c90152c3bf0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7220b3f-be76-44bf-bad7-b0d771805a26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51a17931-b79e-4a53-904e-0c310a9cde03"
                    }
                  }
                ]
              },
              {
                "id": "70102672-7486-473f-964b-f6fe043263b4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e27ed049-790d-4f76-adb8-553399d914bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be828634-5216-4911-a442-60a9bff450ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6690b44-7924-4f3a-980c-ab5a91defbe2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16c04f2e-866d-4624-853f-2b6906326e40"
                    }
                  }
                ]
              },
              {
                "id": "414b4321-cf98-453a-9259-5b9351a7c273",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c897dfc-f09d-4575-8509-14b76ed5675b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f8b18b2-ba03-474b-94e4-d3698128a822"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "242c9d71-6110-4b50-92c9-e6eb3834677b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46a96700-17e5-4474-9976-72766680e052"
                    }
                  }
                ]
              },
              {
                "id": "0d43804a-8b57-4c3a-ba4c-58ebddd6818a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cb6f6ad-925e-46b1-a2a9-671ce9c2c229",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7f4fad7-f31c-47a2-9855-8e1737335478"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f87361a4-f188-43ee-9ed6-6f477256273a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e6457f95-de41-440f-8ba2-c66082a49f28"
                    }
                  }
                ]
              },
              {
                "id": "5090d785-10dc-4f61-ac87-2e2fd9c750f4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "510df9cf-e7a3-484b-a59a-02c886f0d497",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "396468eb-5d8e-4870-96ec-b34a273f8b82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f121a083-5082-40d8-a674-f7fad89ebe6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8ea9d84c-c58a-456d-b038-b736e1e8e935"
                    }
                  }
                ]
              },
              {
                "id": "0df547c8-1e7c-403a-83dc-ec00e5de1869",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "854f4b6d-ae95-433f-b393-2924f2b01916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce5800ea-f08c-4a1b-95ce-3318c05ed5b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d565d85e-0d6a-41cf-a526-cf9287dc0ac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b26f0f1-cf25-40b6-a719-0fd12d36e509"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e70b2edc-889a-4b90-b2f1-53ecd9beabbf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "665ee154-6f7f-454c-a424-bfe4ed95f3be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a5c3821-332e-4854-8ed5-0e26ceb7df83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64a55619-4741-4511-961d-5bbf4d889c99"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad5779c2-6755-447a-834f-747bccfe2cb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cbbca6d5-9092-461e-99fc-ac486a0f63c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e3a1b24-94ea-4378-918a-6f4355df5104",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6477d9b3-9b36-4327-b61a-dda9cfbaa6fa"
            }
          }
        ]
      },
      {
        "id": "e8c11294-80f5-4bdd-a34c-2e8338a4b766",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "74abe310-2674-45d3-bd15-1559dee783fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7555aae4-d11d-4121-9f72-92c49fdb1146",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7627c430-9eff-40a0-90df-9815c853ed1f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdbdf0a-b733-42f1-99e3-a15896e6fa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c582bd-b190-49fd-ad49-3155af81f58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bf63f0-6ec3-4030-8203-1bee2420f640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dabc326-bb1f-4ceb-bca6-1c144069216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30164c3a-70d3-44e6-bc15-ea7109375a8e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4925e3-e802-4bfa-9767-79b5ab53c6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3b59b1-4558-4810-8e21-e0f8b5a60875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fe3ba8-8a5e-4484-94fc-31907ca26913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a056ef-c04d-46b7-92e0-25e2deda1290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa8e4f8-343d-4252-8013-215a9dabfd5a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018d4b05-5883-4ce9-bfef-92c9629f7b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa248a86-621f-47f0-b8f5-1c8c94948e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50967308-8458-433c-af28-e6d124a051bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c66dd69c-5418-4e97-babe-c62c3cbbf814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff458168-05da-49c9-a364-741f0c230c43",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5bc85c-c03f-4e24-ac2d-5b2c2c85295b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d336017a-6788-48cf-b6ca-7033d4d5e680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9a27c1-c0b1-4325-91f7-2bc77ee3e74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6140eb60-b0ba-4354-ae4f-0ebc5eab82b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e17a6d4-5632-4385-a80e-6f24382fa3c6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a03538e-c2f2-4eae-9298-8f34a9fc5720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc114cb-2c30-48b1-8a3d-ecdaf2f08dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c39bd29-e129-4a4b-af5a-6d02ab165277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34207e21-fb14-4cae-94ee-be2e1fbac4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b968c3-3048-48f1-ad87-83e249cbd47a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd06d23-fdeb-46e0-9bc0-1be844fbaf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5badbc0-96df-4746-8850-1a498bdc0ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7f2d8a-3ddd-4527-8907-56b40a6f42a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee39749-a5f2-4828-999c-b93a9c7bc686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a99b3cd-c9cc-4d7a-91b5-5f1d503512a4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a0a3e5-75e6-4ad6-9965-010f2c19853a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3394129-2b16-427d-8751-4da58426e217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552162d2-f22d-4f71-9a5d-a0d4048e8449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb3bb01-df6a-48dc-a124-0ae5af4f5730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbd5929-5ffb-4ae6-a968-d279b0d5b459",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d984671-334e-4763-8cf4-221f9c75ef0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03158091-42f6-4e68-86bd-0bd0df49088a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64c6064-b7ec-4dc4-bec2-272326b0c1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "352830b2-b2ee-4f4e-bed5-b2744a167c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbfd9b9-f175-44fd-a36e-033b56ec4e85",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383ca310-c657-47d2-bb71-3cfe1485a5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c714c6e-0071-4e8c-b9e3-e6648e701a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0b1d96-eb8a-44af-97a9-e1e76ae3e4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69cc0c10-8422-489b-b354-1663221316ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5933075e-4eaf-4573-b35a-a108bd9cef55",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15748b0-afbf-4295-9dfc-dc9bc867ed6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fb4796-c87b-4b1f-a72b-bc7f9d948295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57eeb834-e302-4675-99d9-8874025d78d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7e9ab5-3a4c-4df1-b2ee-ad1ab9f01772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15524f72-552d-4c1d-8ecd-800a7f60505c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f712a6-cd8f-42db-a779-26cbdfb379e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a19a2e-8860-4f50-a6cf-74640600c993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d28a5bf-97d4-4fb5-b074-8a2460e0a7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef881e8-28ec-466f-90f3-37b1e85731d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89ae884-4126-4672-943d-8902e71b8f6c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75697bc-8aaf-4a4c-8e59-b5e6ae0e32d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3ed397-9b72-4792-b5de-3ffcecd4491c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7effc141-f54b-4a43-b95e-a11521652c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a290b8c0-eb02-4655-9202-13494811eb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09734939-9f7d-4039-a8c2-b5123312e179",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbf8824-a907-4319-821e-9e9b01122e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223889ee-5a8e-4ff2-9b60-1eecbe52dc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4890bfb5-5fa1-44ce-9b3b-0959c920ae20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d88e211-be0a-413d-b410-98368b2e27b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424c13cc-ec7b-4c11-ab4c-17a6abdceda1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39acf9f-3cfd-4f38-a762-c5d4aa37d6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5ff1cd-5cfd-41bb-9c3c-be147b942448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1989d9e-9050-4b41-8a37-8c40ccdbbd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "214eea7f-dcde-4d2f-a1bf-7e92998cb8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a78d77-e534-4f41-98c3-e25a277c47ec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47808341-675a-4809-b46e-47d2cdacbbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4137a404-1924-4b67-be09-c28932e4432f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de5df37-cf18-4507-85a4-f1b2c05783fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e317ac67-f23f-44dd-91a7-226e3ead7510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba45436-ab36-4664-b494-cf34d4ac60cb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8aa6cc-7e0b-4714-8586-274ea62f4807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac8d801-1978-42d3-aadb-655258867ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee2e19b-28e3-49f9-a45c-62c1ce345e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a54c1fc8-8ed3-4213-958c-81916aba2be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0e434d-324b-4cd3-b6cd-f8adfe68c015",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2777fd7-ca82-4d34-bf4d-d9e913d6d60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4358ba41-e87a-44e5-8ac9-f3a4141045ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a906751-e321-4d17-8782-49c1442f6944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd2acf2-57fa-425a-a563-cf396a57b213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f5a90c-f3c6-442b-b3ac-ac05e39ea5d5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b254ea-b616-4e14-a12b-5e3489c75931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32825761-349d-4f9e-9236-34cb6009bfa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db0ed0d-176b-4a55-a9ce-d669230f9fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "075f2981-cb6b-423c-a637-5cb9d063c387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17a3964-8689-458f-bff9-4d91b197c9d9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53538b73-0a78-4732-b3d3-8d0eae2dce38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5dd32dd-40fd-41fd-aa8b-63547796b2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0a0169-7923-4383-80af-5db6e659eb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a071339-1859-4e50-8de1-1b72227e3461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e88924-7300-4f6b-8f76-01f2ac7a865f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f308078-d558-4f01-bcaa-924804aafcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f211f9d2-8109-468d-8fc6-c3a6e36e488e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5817a78-3eb0-4f6e-be99-e1915091150b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd31b9f4-8e2d-454a-b07b-47a406f79940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a95348b-10f2-41e0-be53-b321605147a0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77156d96-1e7b-42c8-a54e-6d43355d01aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa15d5fd-c5f1-4c40-8b67-e6263690f407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e5b2ad-dadc-4b70-8851-c0110289b0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcd7bcc-159d-4db6-8a3b-82360f2422b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6813d6d5-a772-4286-ad65-96338b9b2663",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c279d957-f18e-4e53-9868-96d99d06bba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d0fa27-cfed-4fb6-9482-98102ffb4630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd1149d-1852-41e3-baf9-68f6eccaf432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8067b27-2c90-4caf-b239-b8a75272bd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfa540f-7a89-43ee-92b0-26779f90bb36",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22725fa-a1da-4349-b59e-6cb3c9d8939b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0220158c-3a4c-4c2e-896f-5ad279c6d8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c370662-080d-4a7a-9990-81bc7c971fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ad9417-db20-41f6-aeb2-d5307a22784b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d3ce77-0fb5-4b48-bfb0-b96f423d347a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf77b5a-e9b3-4456-a1c3-243911d32f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ea9f98-55cb-4843-be66-7aea3d2916ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c67443-7e26-4739-bd92-d0c34b90d6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dabed814-3145-433d-ab4d-7ed8b2e33825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bcb1e9-bc44-4827-b95a-11f98950a7e2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb75ade-d0b4-48f7-a168-d8d81976bf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d6359c-9254-4684-a081-b6d1085a3caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372bb12e-174e-497d-b2e2-2584ff063b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "854151b3-605f-4fd4-86e1-b64458d4e4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf852f94-f819-4f5c-a1e2-30cc5252f1b9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d8ece6-d545-46a5-a345-e3c2c6fe7891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59142b6c-b207-4dd5-8936-9dd13ae04c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4e04dd-31da-44f6-8601-9651dc980ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e902875-9cf8-41cf-8c84-cc2c8f42afa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfe8aaa-0e61-4c24-8b4a-ff22907743d9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622e75bd-d62d-4c83-9725-383cab682f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e50e372-952b-497b-9d7d-63088243ddb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13253705-9f13-43f5-bb67-31dde1e96717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36093178-3ad3-4aeb-a38b-1273a39e570a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3a7b20-20a8-4e70-a8c0-b391b040c4aa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e602c0-a0cc-410d-bc46-9f718820814c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d3acb7-5360-4a78-934a-5e3df2df6db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c5fb9d-cb49-4b61-a988-7ca3a64254da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f234ac31-e52f-4cc6-8e28-69ea775dfbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a796e90-2ebc-4598-8140-d1ecc264bb16",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd01878-2b5d-4c4a-94dd-2c95ec55651a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e549e57-a854-46f2-8ea7-6c6b67789ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcf2154-164a-46ae-8ecf-e3ea7ad60e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b60348e8-c7d5-4724-b9d2-375144a7d626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d624fe9-193a-47ba-849e-2ee275cb0e8b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8b480a-3af5-4fd4-8b00-6e673ded1a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a99c8d0-a1a6-418d-8343-b8753e74f26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b503a011-6f00-455d-b1ca-bc87a5c93929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6c7677-b2d9-4546-82ca-60bf21eaae50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5615980a-d32e-4f0a-8c08-5999fdb905a0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08401176-1a73-4c6f-ab05-52d3572448be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc558325-6c60-4480-a9ab-4ca122ebb34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443a7bc7-122e-4f6a-80a7-7fc1ffecfb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f37f57cf-9333-4aa7-b1b5-ab14ddc9aab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ea2457-0a6e-4b4e-841a-61bba59bf970",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5d97c9-b31a-44c2-8841-c6d1e3d6ef0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6778a76b-20af-4970-88ab-6553503e66a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c746cb1a-dcfa-414c-a374-edf0ca9dc2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8655fcd-8870-442c-96ab-581f989765fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2ea443a-271d-4890-a123-9bb222869690",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bcd1c1d0-88e8-404c-b17e-dabfd0392cd0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb74737f-2f2b-40bf-85e8-e74600cd562b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc7636d-a79a-4661-bc4a-75822f5e863a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e206be5-910a-4184-b5ed-e6902925a338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfcd7303-01a7-441d-af88-62500fba7898"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23916f6c-61c1-4b8e-8c28-93d277e684ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f10faa93-7388-4ece-88dd-742c48acf69a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7de5268e-60e3-427b-934d-db4e8ca9d35e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f184f68-72a9-4ea7-9fe6-79756d2ea0e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35837413-e2dd-42cc-bbee-9d1b7aa9ac3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1656af31-5285-4cf4-b182-00a7920d55d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bc3fada-50ff-4819-9ec4-714a0bff61d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6649cf5-5c99-4c60-b604-7c95dbd8b2e7"
            }
          }
        ]
      },
      {
        "id": "6856c61b-ff52-491f-b2b1-f4ee1eb901b8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ce34f2d3-7409-4322-ac9e-2870e8759366",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eda341ae-5a64-4258-8a74-1c657a6d3643",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebff07ca-7ec9-470f-a0df-fa2abfd5ff82",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1c6ff4-bf6f-42de-993e-cf39d1813990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f859680-744e-47f4-b0c7-3c1e86a2e3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c2eb7e-f419-4147-98db-f3f63c9fc01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c322076a-4e05-447d-8323-61ac6a9f03ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7020e3-e0a2-404d-be91-1f3cae355df3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7938d61a-e8e0-4bf0-802d-26f2ddce6126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129d8524-d83c-4ed2-b482-43da5261a9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500e5c49-55e2-4a37-8943-9634b75fc541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d0e4c2-3426-4232-ad17-cdc9caa6d367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a800009-b142-460a-8b5e-234d14cc06cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33112ae1-daee-4444-8482-9c3aee9e9c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f81b547-7847-4fd5-81f3-1b65c6acf903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a77715-90e6-4156-9028-a246d892fa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c0aa20-a8fc-4dd4-87e0-b6aed832726d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c5aae8-91c1-42bf-9a9d-9569f22e3fbc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da269f1-69cb-45e8-9b12-61dc5185e362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79affe5c-1097-428e-ac5f-1e57ea6690ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea3c2d7-d65d-47ac-9bda-c2c459fdfdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a10cba-0ea4-4174-8633-4e0a0627879f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f0b060-efdf-4800-85ff-4fccf46461a9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32aaa5f1-2196-4de3-a098-d634557c3ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1afefa-afcc-4ef0-9504-5f74321ad84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7852700e-bcef-4565-9382-6b65c84a4625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f5ff53-4aa4-4f66-89bd-f50e13abb131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8df6f49-487b-400c-b891-54fc0718b628",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b4f8bd-7cc6-4b4a-bcff-0c7e8e81ea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5bf781a-6273-4cbc-bf0d-f26afa35dbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f9234e-c218-4f20-828a-dad339cd4768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2000ef43-71d2-4034-841d-b031fa2d1905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e1cf92-cd43-478d-81e4-b21bb36cd762",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfa216a-1605-4528-85c5-34348604ff6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73e46b9-d66f-4054-8359-12c745bac720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dbbe0d-a534-4716-8f4b-23cfd0807608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "79fd8a8a-a293-4bb6-82bd-3ccec83f5b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc206850-b9d6-475a-9ea5-a1a9c47dfb10",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4957e657-6440-41a3-b791-ef9d6b6154ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970a02ef-e78a-4a7b-8a53-624a885b5027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f179074d-2b49-41dc-bd40-14ba9f1988fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2911d5cc-7d14-406c-afe6-495e7647a0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730be3d3-9511-428f-89db-9bc068b920be",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66536ec4-9b4d-4bf9-b095-0d3f76fff68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0594f0c-5639-4a86-af41-6d5d68653b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbf258a-79d4-4de2-ab89-7933590740c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83cab322-8d2b-475b-a26a-ddce9235e35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee21a097-b7ee-4920-96c1-44370c986078",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54596645-e2b4-474b-bd9a-56fa47c5a078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5d0748-4a87-4afe-b50d-2a925d1e0102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2658ecee-fb2b-4882-b85a-c1774a109edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bbb9eb-37b3-49c7-93ca-5c65f3f03e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aec9ef3-53dd-4d87-81fd-a6e3f75e772d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861835fe-98f7-4bb0-aecc-b508eae00863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83982eca-ec0d-4627-8dfa-5198099c89ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfb612e-ffd5-48de-9292-0a031b5474a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "acd37a8b-aa2b-40bc-b7f0-5783212dc971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e8e088-c434-43e3-9746-18d9776b2c6c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d3f604-222d-47bd-989d-54827442a5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c568ba0c-2d04-4f48-bb03-d0b37b97f30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898f14b2-7e8a-4fa0-8074-30630fbf1c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e6e075-b090-450d-9314-27f6fd845c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bea862a-6d98-49ef-bd39-312efbf2d292",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e59338-71c7-4a22-9529-1073767a98f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33bb5d8-52ee-4994-87fa-31bca87c64d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b333f2cc-5e16-407a-9eff-2b43ef75a575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d7ffcb-f03a-4342-ae73-cb36519c943e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420feaac-bd3a-4b41-8216-30006da81b1c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3375b6dc-b4a0-4ddf-a277-7a9537a78fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d466741-0cc9-421e-9948-3beb7e5bc6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba847ea4-51b9-46ca-9a2d-12ea33a3f60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1a2a4b-212b-44ea-8466-66c2aa6d3675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086d1b04-92cd-4072-afcb-6d3c78684c61",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90e9646-5f8d-4eda-8c62-1f8afd08e0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0e82ba-740e-47de-82b7-192c0c77204b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878a4139-e4bb-4291-8371-1d0807fae99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0688bca4-b47a-4b34-8577-d7bd5cb46f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feca2062-8d21-4921-b03a-baaf9afbed60",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a39f153-3ed3-4fe7-b8a5-c28f477674a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece8d47b-7538-4c06-9d6d-4edea1e2bc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f145a35f-01e3-4800-b56c-2cddeac4507e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "511e251a-e461-4402-9890-f23956938a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d2a25a-09bf-4615-9c3c-bfde67bc95a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfae389f-da66-431a-be17-11ac18449d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46001a79-5f60-4622-8ea8-74d346ce3099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aea4439-7b96-440e-ba02-538623240d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d497c1a-3e8e-45bf-b41c-97c31b5acd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a731d2b6-09dc-4c30-93d7-f11a06b2dc51",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cf6d77-9733-4639-a645-3a00e60f194d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bd674f-0ae2-4f48-8127-8f5038c94832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f8661a-8dae-4397-9f36-926ce3208cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bfa8fd-c2f4-4a0c-9ad4-9556a7799374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6eb5ea-7d4e-4d1a-848d-c5a2e8f4d70f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a1b675-b3e6-4c22-8f63-d626dd8ea750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1911932-e510-4a3e-b825-de96aeb97842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117a09e3-7c36-48c7-b930-baa5e144a311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f731fbe-fc7e-4922-8711-f872e0827971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dafe3edb-a1e5-4b98-bf6b-fb2da64caea2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4120577-bfcd-4ae2-a183-b3aaeec85ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92fe76c-1cab-41d2-88a9-a5a0443f10df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9398fd38-4cac-447b-8645-24c1ad66830a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a3f2da-8723-4aad-944a-16bb476c5441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3475609-92ef-4ad2-9a56-239132a0ba5a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c865b46f-3854-4c3d-99fd-b7bbf967a18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8405486c-11f7-4ccd-bbcc-20c7af21b2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2b3e79-fecf-4d78-b4f9-6a974a06dd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53567bf5-ce20-427e-8996-4abab4c7b839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03981e7e-9983-4c42-9369-9eb24d148dec",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735e02f7-6bc2-4e54-bf31-fd75c5afb160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5380047f-0654-4eaa-9979-f73ca0f14477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20de7a04-dd99-4f47-926c-ba593dbae881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90bea925-32dc-46f2-b409-fd7bc286af68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bcabb9-5ce0-4d27-b74c-e5d9014b6495",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94cbb67-c1e8-4b07-ab14-dd40f0fc1769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd15923-5ea2-42ae-911a-5383d39f0b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c105f9-2033-4d66-972d-6bdfecbae433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef08259-5ff8-4489-8f75-677ed6ada501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4af14a2-eef0-447b-8bb5-295de525e92c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a4eab9-ebfc-4e4c-8206-ca4c17277f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c92cd64-abac-45cc-923f-0da345c197dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96d4328-e1e2-4674-a673-eb9c8cd6d521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02049aff-6f33-4123-8ab0-dbae602a0013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3c19fc-4110-4a00-a3a9-97b6598e8cfd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315fc3b2-1b37-4ed3-9a41-eb78d12fd0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d95556a-c3d1-4ca1-8bbf-ca0a0cf6948c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6627951b-20ba-434a-ae5e-7e62cfbc6706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56062e01-0281-47d1-9961-5242ed096d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d46d65-2bd3-45ed-80d5-97b17ca3f354",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d5d0a8-96d7-473b-b3b0-09d110bfd37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316c1b7b-65ba-4d16-aafc-53fa877f22c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc80d70-17ae-4fea-9283-ea4433afa93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce4fe44-cb2f-428c-afeb-01912a24cc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610c5c66-a892-4ee7-93f7-5ec3654bd0a9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb19fe73-fc58-4af8-9254-ddd9b5e88b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51ebe91-2aa9-46f9-891d-3b43687cefab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d685ada-372e-4f84-9dcb-e225aea5159d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b51cebf-0237-41e9-a133-c1f484ebe22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3808aa-b975-4c39-a8ad-c053024ea596",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0277c3-b437-4470-97d1-04026ef2fec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da84f9f6-9b72-4eb5-9550-58b1eb248d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b658dc-3ea0-46f5-99bc-fa6e42855b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5ddef5-75ce-4af3-b588-d26fcf819cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43551b0-5bb8-48bb-acd3-45db953a5688",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba083925-b9b8-4759-8dd9-c9717896f022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a549e6dd-f6c9-460a-b5e4-5380c521e647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9276f85-7647-4714-b001-2be8dab56eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b2e140-880d-4438-b1f4-2dda902a5d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86345a36-6c03-42a9-bafb-1091634fdd9c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbef2e9-6347-43c3-8ec5-7a02518db915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a35f5b-9fd2-457a-9527-ea493a379714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178fc3c7-58ec-45e0-b0e3-6de97e2d982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ce8b76-a0de-4386-826a-fa4915eef6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc41c543-0048-4577-aaaa-397b80e2e022",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27052882-5952-4dec-bb76-f5945e8b583c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e82f0d9-84df-446e-8787-166433901088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ba93f7-a902-4fb6-8a35-5d466a3270df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "242f699a-f48f-4c4a-93f3-21537c2850ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc2843f-c0f0-4aa1-8b4d-2cc47437762f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc5706a-5648-4224-9d72-b4ecd27c30eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1195f3ae-4bd5-422b-a61a-dd0720b46ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0054f8-82ad-4725-8371-4ecdb7291376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffa738f-f1ae-4871-bcd5-d728eac88cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766371d1-1023-4977-ae03-65ed4d741ede",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33176abb-59ef-4ae8-800d-2e2d8cf4911a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26049b02-5563-462f-93fb-512e9de626e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb81db1-05ef-43a3-ac83-ee505a6281f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a1ebac-a380-4da2-9d65-bcfc9e2ec2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d14f413-ce27-4d7e-a4a6-328e4aec8f67",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf106d5-d424-4b52-bec8-4c4140a24484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f8e32c-618d-4ed9-8aff-8ce34f87f0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb5ed12-254d-4fe3-b0ec-5f40f04ddbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22f9de3-7e42-47bd-b0fa-f02458bd1340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f61e2e7-5938-4ff6-8e5a-3dc70601c59e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0056f8a2-8320-4aa6-a944-e4fd66e52eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c150b5-d087-4876-9b99-ffb75fa09886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050e9089-6675-427c-b5e7-0aaae141f727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c8d7f8-f9ce-4fff-8387-247dbdfe7850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a89948b-fb39-4cc7-a59e-a9aaa696d553",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf96899-05ff-42c8-8196-89861f1087b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f80d2da-b15f-434d-938e-34f35221362c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced67a84-5ca8-4991-b328-1d0a3fa941bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43941d41-7c42-4863-b8a0-3bd7d8c7b67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31592e94-4fc6-4859-ad58-4809825f9792",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b39cca-c471-4069-abb9-44b9534a30bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6925285-3c3b-4ae3-98ec-498bd30d4120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e261475-b3ea-4537-8830-8a4034b01d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9779fdb2-f880-47f5-8633-62f034b48cc9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29c28352-08e8-451f-a84c-cbee683e721f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93f0fbc5-a170-489d-90d1-71851a125368",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d65aaeb-a5b5-4773-9b0b-b9a6c9120691",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9198344-c4ac-450a-96e4-f700e0741a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b569952c-a387-43f7-870e-7244f9c84db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66e3822a-c035-4f50-996c-61112af023a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "442ac931-99d8-44a4-9b08-9faecd767793",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a11e131f-ac36-44fe-b8b8-5f5d772744ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b4d57a3-1528-4516-9974-37ce9ad666be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4c62561-1838-4e16-a548-5cc639847924"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5619d75d-fea3-4792-90c0-0b049919e8cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "223659fb-8516-4081-be3e-debe38e51859"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4608ac89-487e-47c1-9a55-d69dda0fbd27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5375a45-32ce-4449-b0a1-c53ca2d24aeb"
            }
          }
        ]
      },
      {
        "id": "c819b3c9-72da-4eb1-a9a9-a8a5f28cbb9d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "32c21d8b-c93e-4025-81eb-43096b78c26a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7e4ec3f-1f7d-40ca-820b-b19cecbc2f21",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "33a41bc7-9944-4365-b6c5-b2ce4659d634",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6000ec-4323-48d4-a22c-9981a3dabc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c3e960-7807-40fe-bb7c-7b0353bd7c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d001dc3-a22e-45f4-9fad-677ff5be84d9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2c603b-5d2d-429c-8e89-b823837396f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa88247-9f93-4c24-943b-7dce650eb32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404cfa77-5149-484f-a217-0a039945b84e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aa002f-69c1-4ec4-9c4e-024a4d944e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cea190c-f3a2-4846-aa1e-2423606a5a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783fd969-1711-4ef7-aab0-ee8bdc2ce745",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aca708c-be07-477c-9cd9-4e043babb2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d90b368-16d3-4f53-be70-0b6c5eff34bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23e34e5-15ad-47eb-9ef8-3088a025fd7e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8256c94-5c6a-4ca7-b1a1-784155df268a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11c11aa-a6cd-4a39-bde9-f5d659e81fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f98bfa8-5eee-4cb3-ba80-3620e612d1a4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573afa02-60b0-4a9a-97c7-90c4d0ace12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7af0ab8-1c73-4c5a-8454-805318370c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d948f1-2b56-4f1b-b1a4-3738c411a817",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ae5cc5-956a-47b8-97ba-193648afe577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84662dc4-c610-4900-b967-c6aa4eeeb6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc159c2-6c9f-4d8f-926b-96f5a1aab139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91221d36-e3d7-4d1a-996c-bb7d0ce4dbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144c859a-1cc9-43f5-8e97-b71f0a7d8476",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc7d673-6b77-4f68-b040-39889e4d22f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39dfe0f4-d4db-417a-af97-76d8ca9914e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea90508-dad8-4a4e-b5e4-44588ff1986f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b06144-ec29-46a2-99c4-2cf567b9df2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d00ca20-b201-4b9a-90bb-5c0d3a4ccda5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f7f846-e6b9-410a-a3b2-b94c1efd6509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d6fe705-9272-4d57-bdab-ac750d6ccbb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcac36bc-bea9-44b3-8648-1cde25d77866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5faa210-c4f5-435e-84ff-3e153f35b5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6fe4ee-3eda-4b93-9ca6-102ac8ba0c40",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e995a4a7-6c31-4162-acbd-df06dd8122f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c777e41-ddde-4820-bfe8-f088dc2a0623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ee2489-19ea-4fdd-8171-3f018ad18b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff604d3e-decc-4857-bbcb-355e7ce0d45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22731aae-1b3a-45d2-8205-4b0dd443ddcd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bdd8f7-f021-40f1-8306-3f1d5a3d9bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a39f10-dba0-4a9c-944e-447012000be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5a0d76-a89e-4baa-ab8c-604072a8b5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66029ab8-bdbf-4a0f-86f0-69217c59692e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048ebec2-5069-4825-88a0-86b4f244ff30",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1324dd-7d6f-4da9-963c-8de3dcd0884a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc6c11d-5ad2-4ab8-8898-0c01d8bdf585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d02014-b954-41b8-9f15-985447439e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2599f06-cb5b-4a97-a971-114220728e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dded59-8a13-4ac2-8764-85fc3ebba0f9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767495d8-77a3-4e95-b3d0-ff2d71bae91f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0d1215d-a92d-4263-8dfa-3894b4b1d83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed941a2a-7884-4047-b483-8445a4c28963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08083a39-436b-4735-bf1c-5fc33da886b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd65fdb0-e72a-4e6b-a72f-ea039d27f007",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7744912-cc31-4466-8425-490a522f9d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27071a3b-caac-48eb-a9ae-bbb153a24394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a165519a-bbbc-46f3-81b5-718a6df2c69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc4dcee-31ee-4c40-b1f4-86b7d82f4073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd01596b-0605-431c-9f2f-fe21e0c0dade",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f94a64-e8a6-4810-83de-8a219a9b24cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f66f54-b925-499b-8b49-e6171591ebea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2877365-de53-479a-ad48-a65a4d25d259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ec77dc-a955-48e3-87f2-3b551146c83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9a0641-d43d-4548-a052-f05caedeb2be",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bce88e7-c489-4534-8473-98febf77a3d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e167fd6-f21e-49a1-8cbf-2503283c4340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088d604f-3a04-422c-b5d2-85a77e669820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfd4198-c988-4fc3-946b-c88dd54d1782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fce454-f4cb-4a15-a3f5-07ee3edd9c90",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eeb0aa-349b-45ac-8e06-1791280b8278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae1ccd6-f92d-44bd-b26f-3d75cc0af0b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90205e7-9426-4b97-ae17-c34593116d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806afbdf-7efd-4e81-ad3e-3db054ac13d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767445b5-785c-41f0-a35f-eb887020fb43",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9232f469-f6ed-4fc1-8bed-898096377571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3608865-5dda-4211-bdf0-b0d49ddf429a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce35df7a-528a-4af7-9fd2-d1cd7b0cfc7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3cf504-9457-468f-b73f-a12720c6a4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036dbebe-cb5a-4e7b-8411-820e93de77e3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64073e32-df3c-4c85-adc8-58d777493fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27df618-4b36-4278-8edd-cc9a4ea6e12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d5b407-f6b9-4609-a8f9-66549726f5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34b6c19-ade4-44a2-920b-9161c31a89c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170fe118-33ce-4e51-a92c-0122b3f3d8fc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abc6c53-5258-42d0-8bb4-2e0f98009e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3b24de-fdf7-4ee7-98fc-687454657595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64045af0-edab-4e3e-8aba-ce618f5c8ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9653a03-e132-49bb-a21e-57eaace0f0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1a113f-16c3-483b-ba4a-2d0c7b4aaf8e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478faadc-6b7c-48f3-80e0-06d0c1e3b1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec528dde-f558-4086-9ae7-f7613076646e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b931af-4b7b-4718-9e33-7e86696ea891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa2fb77-689a-447b-bf01-90227d597461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814aa88d-cf3d-4be4-9d1b-443829387590",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f542591-12d3-4d8b-8ca9-5eaee1aaf21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b090fb55-6452-4c3d-b835-f7af85b18686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ba760f-29ac-4629-8e21-0662d268997c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bd5018-ff37-4587-ba1d-c0fa13d1c280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb74b1bf-0863-458a-8f33-108a9efec4a6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c6a8c9-7099-4768-a584-336b9bbe4d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ed7cea-3a87-45a2-8837-fc1ebc49cd65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077b80f9-27fd-4ad6-b29e-b7b04677fba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1439705-14d5-4a40-940f-3f3e9f37a649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad5ce57-92db-42b6-bce0-e2e6837f9ab9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bf284f-540b-47d5-be5b-db6a5c78f470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5bbb3d2-0aa6-4537-b5bb-179fe5769ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3a2d78-7b55-4363-8963-7a8f07a993d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf9da2f-ea06-487a-9036-287a563ecc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f59d63-0b21-4339-9d27-efb181945a60",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7a25f9-0c9f-4239-a880-0cd54fdec56d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f11e31-b599-4c01-ad20-e7757045ee9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e96287-1320-4b8e-8f57-aa1ec71f9400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49faa59e-7305-44a4-b56e-6754f92612b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9efb2a-c5ab-4f5b-8bfb-7a135d7ab222",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d27bfd-81a5-4514-8071-708f3a3a3cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "013e818c-1ae1-4679-8d96-50dab403f315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68377f9-ea57-46b5-9d3f-e7fc237a3330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2920289f-1335-4a94-8936-296c6b9f5e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d2b365-0c42-477b-8701-0a07501e3cb8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9cd25c-7fa6-47bf-b1a3-9d6d4f356579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9895290b-aad1-41a7-9bfd-0854a7633861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e1c87f-f95c-4987-a3bd-13e5d9724748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c042f3d7-9e24-4cc8-921f-ce2ddd278fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d292ce5-bfc6-4193-ad34-3981d4198a92",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b28c65-3449-4fcd-8cd0-f0ae9268a0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7540bcbb-e060-4b67-bb80-b018ab755b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5f6e3a-a24d-41f8-99d0-5987fd8f07dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ef0da9-3678-41b4-9722-7ae63cc45642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a56338d-cbfb-4a50-9e9f-52c7518f370a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbadc256-a2f7-4acc-bf6e-631f542bb4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24d68ee-19c4-46e7-88ca-77d4a2907e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "132785a1-93e2-4696-a331-637565ead48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5529d2a-cc7b-4ebc-8859-820e6362dbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f343ef8-9f3c-4906-815b-fa56d0176158",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46cf3bc-c8ee-46cc-9507-fa7a8bb67e22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2fe609-cf39-4695-8e71-d7f923e5aa74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6fd4b0-2d21-4180-bb9d-61db9b224b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2ffcba-898e-452f-86a9-6984b8cf5507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a93a2a1-0015-4f81-9f81-92b01c1b01bc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefc6ece-8c78-4ccd-896d-ec1e4c4758b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd92008-f626-4b7d-9682-53ea2206a786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5bfd3c-60ed-4cb3-bcda-092703ab6b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7328613-82c2-4540-bb13-a08591fc92e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf74ec98-0102-4fec-a67c-1e910d3d58a0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f27858-3b4c-42ee-86e8-49977c651857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83652c05-2358-4cb7-9421-b75301bb9ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c9d847-5c68-4b76-abaf-04952832c379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822599e4-cea0-42af-adf4-3d47618f30db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4d0233-514f-441b-8c0a-4d74453c86cc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e950785e-3ee5-48ed-a547-f28fa37db414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa511d3-2e18-4167-a469-8568ac324842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53362db6-4cc9-4989-8954-601be510428f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32efa05-3011-43e8-ad5b-3b872f0b9c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5f6693-03e0-4deb-85dd-b4f36373f72f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39e77b3-43ae-4fa3-89bc-51201530342a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5720700f-1b8f-4679-91f7-8331d189ec36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cdf565-ebc9-4991-8bfe-01b72d25ad90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f191c4e-7fee-4ba7-8a65-ceb84fd2dc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d238e9-e891-4b19-b4af-f219465cb5de",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8805469-5585-45fe-a44f-8421baa4fd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0da3583-a484-4312-9dbb-5dac7878f9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d1ff11-42ca-4a86-9385-8d0724a00751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6447eb-286e-463b-91e3-503733512521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3201ade-63e6-4535-a607-deadff610391",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9b216b-8f36-4b2f-8f28-be560044c765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a5e1bd-71ad-4b0d-a199-7ac32f2209c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6251a4d0-421a-402d-a168-737c55b34c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc07dd47-4c0a-4da8-99f9-16bf1f16bd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffeda38b-940f-4224-9d6b-77f02a88a3af",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67689e5-6db5-4530-a504-b0dc2225d380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49730fa2-3d6d-4849-a100-6da19a0dedbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223edcc7-d61b-489d-b967-9475cd882cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085411c7-4b2c-44dd-9cf4-d6dca8dbb7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bc1a75-a909-4fa7-9763-01d966ae8b95",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df43bd75-cb51-4f72-95d5-30b591661583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc42d65-d9fc-42e6-bf85-3578a1081ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5652f8d-e661-4743-86f2-39089b905ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cdbec2-2707-487c-a822-f344b0e44a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a8b20a-6a1a-4068-a32b-fb1123a61d16",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dc500d-9a38-44c1-a704-132723c432a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2975131d-7bb9-4b0b-9962-1405895473d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9d8acf-8ab8-465b-96d1-7b74dfcca519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6c7cdb-0a1a-4ab1-bc78-b75123f3247e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42995615-fafb-43b9-bc9b-1ae0a8445bc0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b72f4f-230d-4abe-a85c-d2472a7a9471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289efae0-ea5c-4deb-b15c-3675ba5a1815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637804ae-5e82-41d6-9e24-c67199ff4f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336e570d-f78d-4297-8810-7a894cf9dfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c24514-6474-4580-9569-57f73859fa9f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc57075-7791-422c-ad1c-0093ee64a2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd7e126-4f5b-42b5-b954-c0b87374fa19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cbdc8b-d36b-4d0a-9ec9-a4e1bf744e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f660201-600b-4018-89c6-371e264711cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd6d671-5eaf-4dec-a4b2-74ccce885258",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db66e2ce-63a9-4c14-9307-e90dbcea7bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269355f5-c1ff-4526-b7e2-ae1719a6e668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5884a23f-7653-463f-a45e-7350d3ae82d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d653c32-1dec-4c52-83e7-2bbfa1964b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762c5996-a5e6-47e1-a44f-bdce45c078b0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2ec779-f48e-43c9-838a-ef3e7a4be480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a688443-a1fb-46f9-a716-b0614791752d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7f827a-3495-4c39-837b-c9aa020df85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c020247c-2432-442e-bced-de3aafc9b4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cb70a0-c8c6-467e-be3c-de6abc1ad8e8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0132e2-cc61-49cb-85aa-ef2528e29c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4f3230-1ae1-4b7f-bd76-7d645d3512ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1f9b5d-be3b-47d8-8221-da1ccbd6d844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc425edf-359d-4822-973e-495aad134460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67389d6-c353-4e73-be5c-090f342456ab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1a1c2a-2a1e-4ed8-9160-b2775cb5bbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7386b266-52cf-45f3-87c2-da3fba9d5975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d0060b-be9e-4292-a8ff-ce263b9e1f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f285aa7-6034-4220-a037-78875e124094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cfc745-c051-4e61-ab7a-f07acfcc1e8d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee35836f-b7b4-46ec-8609-8c186211fab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab95df9a-2f21-453e-9ab0-f7299079b0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b802c24-bf36-4824-9359-c312c39eedfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb5e368-4e61-4744-bd43-179469952ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4ae81e-ab02-4f01-8777-bd78508af269",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf22c0e-4098-4354-8675-d86eb9fd942e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fcd8da-defa-421b-b9f1-4cc2d28ba73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b802ffc1-caba-4fdb-94d7-c4867e90fd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8723f6e8-6583-4905-9306-38805ffcc4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d9c11c-e23f-4424-967f-e5d73e99e625",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2a8b50-3f8f-4af7-b039-7badd415537b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e5b10e-25f7-4823-be93-44381256914a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32f1c12-5d71-4169-98c3-f8db1e662f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8ac369-4cab-4e6f-a5e6-8dc1119e318d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d97efe3-47a7-4c64-8f4e-fd12aff0ea22",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9730e5-ec91-45fd-8649-b37d9d56515d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89a219a-47cd-42bd-b8af-10482a0f9ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ca62ae-c0e8-47dc-bc92-d9321cc92521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5718aed-2652-4ab1-90d0-c20d31ce53b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61661ab9-09a2-4140-b6e5-929260a653ef",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a274db-7cc5-4424-87e0-eb1848af2ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab14e6ae-8fb2-4887-856e-e2ee88128499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b829e2-5541-4636-8fd8-d57d1a3b505b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87bd47f-4fbd-476f-ac01-9a368d79cb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed43f55-be88-4d35-b33a-1784ffc3389e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21a3532-eb08-4b8f-9868-40840c7bf00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58466cf9-ce9f-415b-acfb-868ec2c21c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8615b75f-d567-46ab-b4cc-5aa12c343abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f7d656-4e7f-4e48-8bcd-6f90a98cfe7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c57b6e-794a-491e-8fd7-40c22fed34c5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4349bb9-9fee-4f58-8be0-058def50495b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0d428a-9656-4e01-8acf-9234bd594388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef99c60-9919-46de-b766-c0f969dfe3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dadd1134-a13d-42aa-b620-d4b090d09460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76be77b8-f62c-486f-b16e-b86db1958937",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1466a89a-1dd4-4124-a997-2aed58f7c9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3383e9-4573-456f-bbda-77ef6cb541f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99a1add-b034-4d9a-9048-26aae4c67973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5120a6e8-cf04-4685-9894-bde37ab16563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f600e7-6ec8-46fd-b3a6-512b5f18b6a3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9fc1fe-9214-43eb-95bf-52b8b0c8a971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e29de29-4cd8-4605-8382-aa26deba1c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbf420e-7a5a-403a-9ef5-54d11155a662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9838a36-b52b-4382-9560-5028dfd33099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c054d53-ec05-41ea-9d5f-7b57e7fd8b85",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ec1203-29df-4cc9-ae3c-5db4eecd4eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a601fc-e81f-4de9-97e4-b18221d98e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540070f0-a3e4-44b0-b4e9-97d5e3557194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebe0c86-843c-4629-bb93-1ee7c025ba1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa80683-3b96-49f2-aaa2-5cf0379481ef",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e224026b-6d02-446d-8d07-95279fc19888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e227295a-d22e-46b2-97cf-65b19e4d9ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7e7d1b-7578-46ec-9a5d-c1984a5a3c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977879c8-a7f0-4deb-bb0e-dfd10d61adca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4174a6-9fda-4fc5-a472-02cc4513d58f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33fd738-17e1-4fb3-8e05-a71805fdc5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea0a342-a5bb-4aa8-97f4-5fb424bd748d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3086d1b-6fcf-404d-a93d-3cea925719dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e242cd5-8603-4b9f-9021-6adea348cb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689df719-92e8-4be8-a273-12daa751d641",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b7441a-0cd3-4192-b932-51c048264bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51140b54-4688-404e-930c-743e08f51027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d9af19-f1c3-4b81-9af2-0e8b97973e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09f2851-29ad-4e3d-835a-422c748ca98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a3e627-e58e-4523-82b8-8b1f739c711a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4af8c1-4edb-4e5b-a268-3b76a1f6df67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fa0a7a-4556-4c90-8369-4b88398c385f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5a50bb-8a7e-4347-bc10-058e25a387c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc4842b-bfc3-41b9-b1e3-ed0b667ba396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a13f2b-0a31-49b7-99c9-e11b9bc2fba2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17780af8-9c03-41ce-b28f-0efb571caa39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2309cd2-e85f-484f-b952-1e907b4103fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e5341f-6fdb-4dd4-bf5b-f519cede3729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904c1875-cb9a-4c0e-9ed9-c1f65c672f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38f57bb-dd5b-4dd7-af62-329fafc29c88",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7364d3bf-208e-4704-ab67-83e482bc722b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8304e219-b5d5-49d6-ab13-f6f7fd593ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972579d1-e876-4bac-b049-74885b04aa5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82881231-a8eb-4857-b146-6e9d5ffd2da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e521ba30-497e-4b37-8022-56ba334481c1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dabd8f-85bd-44f0-8016-5bd7f3d93049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0626c8f0-7d69-4544-a075-59f85a0deb5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79a0fb6-6e17-43d2-b58d-be6bfc9e0c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991bae5b-87dc-4030-9be8-7db3e0ad0f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dfc92c-c720-4173-a4dc-598077ce7d95",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e79709-bec1-4014-b23a-2fc69018d4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95a30a0-fdba-4a29-8db9-9e3f10f2d7bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406935aa-5e3b-4f14-b5b3-efe2867ff033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d78f4c-be94-4008-b9d9-b63f518e8784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8433040-29ab-4b9e-9487-d155bdfbf34e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ece8ff6-b360-4af5-8c08-538b145c0c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb40a5c-398b-4c58-bd8d-0f160d263a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2b328e-caea-4e60-b912-e75fecc493e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb67857-91c6-43c8-9da6-337bdb2d70c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198dfbee-d32b-44fd-89f2-abbfd2fc2cab",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6deffa-7e15-42e1-ad57-6f651ce9f81e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dce8ab6-ba64-4c94-ba17-b54cc2836dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0832f73b-ab31-4d99-bddc-e61cbdd0083c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3621ba9-a7d4-4acc-8fb9-b609f62cf863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb299bc-e4ca-41c8-ad1f-f00976cb5e20",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8918ef90-1119-434c-b6c4-d7e3e29986fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5df329-cfd0-49bb-9ec9-340af3630475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7611ebd-4f76-4cde-9b4e-82226443993a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d80390-0321-4716-8918-8f43c021902c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd84ec99-d57f-4ba1-89da-f5f66c48f647",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0b962e-6391-44ba-b92c-4e358513a9d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "682216ab-4c33-4f67-8d46-ef3965355ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3028194e-f04f-47b1-a106-f8486734ea9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec27115-07c5-4aaa-8852-87b206a689f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd45769-b09f-4011-9c6d-cf6672aa02fb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e543e216-2c99-4022-80c3-55d4c00a5156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08bc0de-6643-42ad-b9fe-37f67220cb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bc125b-d893-4a52-978e-5449cee4ddc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8142615-ed3d-40e9-91d0-3dfd074607a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54109181-681a-496b-b8b5-d95538c315bb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63847d0c-fd65-4256-a77a-be2061227335",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efb834c2-762a-48b2-bba8-de12515c2474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e00231-f875-41d6-901a-9b94f54e1315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb9b4f9-213d-41f1-8a88-9105fd17235a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1caf752-10e9-4d6b-93f4-2341fa1f1b6d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53568439-ed51-4efa-89d6-a5e126cab537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce9a4661-d771-438d-93c2-f1aeec623f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cf8497-f54d-4079-93ea-b425a2c68bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6123325-a95e-415b-b8b9-0223c98076af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d92df9-0d36-4c21-bddd-de253b5b1bbb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4965051-dc3b-4883-aff2-3f3c70265800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84d1e39a-f9c4-465c-83b9-8d0826839198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5754051-179c-47c6-a762-38c88ff31cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663f3606-1979-4e12-9dd1-b6b2e187d422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f69896-fcc6-4ced-b6ea-45033db8944e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb63773e-9c18-4543-bb60-0bee8d3027ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6007ceb5-d9b8-4f64-aade-b2a78564ce8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7416656a-a380-4510-ac80-5f0b12d1e557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732b2879-b44d-4895-bb1a-23e3654bd7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6c1116-6643-4566-abef-edd2c9410f7a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058c15d2-b98e-4c29-89b8-cac86e94d029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa627bd-f718-44a4-8a17-a3f31de3bc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f91f4b3-a0f1-4b11-bb67-c11700c39220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1184531d-2788-4e49-883d-2f011e3d35e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a560672-62f4-4086-a239-25bbb3b735c3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6721232a-a0cf-4e85-a0c5-b7cb703f6d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "010f2b8c-38e1-4211-9c8a-48f189a3647a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76610a08-12e5-403f-89f9-c18b0dd7e419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa20e23d-48f9-4874-986d-2545c0ad10fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30baf8f-5eff-4a8f-81ac-9502a8d32465",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af76bc8e-d8d7-4b7f-bf34-76244d635d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "762f72e9-f1ef-4830-a8b7-bee51a65e47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4be7eea-3f0c-480b-85d6-3755c05041f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c047f0b-82c7-4762-bcbb-6827dc2fcca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22def921-c81b-4655-b3bf-f06e19aeedcc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bc4343-6142-441c-a6e2-242ce070f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff3e9c4-513a-4a3e-b7f7-8a7b62b1a316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0c088a-76dc-454a-81d2-ef97bfd55396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7291c062-86a5-41bc-9f43-fa23cc93a002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f1333b-5a7e-4f90-b246-f2946147ee42",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a740759a-60aa-4cc0-afd7-63c9f6d274e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4cd25d-d45b-475b-abf5-401951cb823b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9067b24-c596-43d6-baa0-c766ffae1910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1931097-3a3b-48db-9f44-d5a90dc18b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8cf45e-dca1-48a8-97b2-2928a9ef3a49",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80aa0c50-1672-4f4e-9234-c270ae7c6316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6fcc340-79f1-43d0-a614-98a86c287109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c4f2d8-5024-4c6b-b0b8-562b4006b527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672e8ad1-2c63-47f7-95c6-18fad120fa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1aa1eb-4a99-419a-b78a-aed60da7cbfa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15acd8d2-694e-4a64-bd92-74fcd84d31de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2194056-e003-44e9-8dcc-ae16c431bf9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2147582-f6f7-403c-8e44-238922ed4ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde9d15d-17fc-4a06-b99a-75f62fefcf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8519dc25-3892-4a67-85bb-f78cd8c23b7b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba15e16-a302-4fd4-bd3c-e2e171157ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3dfdd8-e23c-4e0b-a03d-92652f1f328b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36db509-e678-4e89-97d4-5fa7e3bd09fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c83535e-edf4-409b-b7ba-ec518e8a5abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85869d7e-3b89-43d5-ab4f-e5e824a4b52b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f66b70-1811-4055-9a84-487ef6ccc202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ce34538-cb40-4b27-96f8-325f21a84615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46c135b-e0e8-474f-99d7-838456f73af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b997846d-7f1c-44e1-b688-f355ab5c6d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34ad603-8abb-4cd4-8bd4-d70a28e92a24",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb986a1-9b28-412c-83d9-d26c53b1bb59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfc2ebae-6d16-4bed-a929-6ada2c712daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8b225b-4b22-488d-9596-b5a0ca611b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86adbf5-b08d-43fe-80fa-88ef53cd3252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f61382c-ef52-4253-be47-89da580d31c2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47efe231-cd2c-45d5-b7f5-e957f8c71fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e532cdef-1329-468c-844d-3acc1a0018f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621793a9-c9de-4d5c-859b-0f8f3ed3997b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd0f7a7-1fec-4610-9fb3-44670e3309e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ac2941-a72d-40d6-83f2-fb42de3c8c3f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd2f7ec-4b0b-4bc5-9bc3-efbefd2599ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46919250-ced7-4099-9a20-0a08db5deeef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d90840-88f8-41ef-91d0-2f5756baf35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf00d30-e3f7-4101-9897-8af394d55f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9757f0b8-673f-4468-b843-61554ba66b2c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32566f17-d44c-4181-9946-ff586dde9a02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "809e9c5e-a974-4c0e-9c2a-888112a3ad59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6c213a-398e-45a8-8364-d0b4f2fdbbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8189b4eb-8227-4dd7-8642-394bd7f56efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f734798f-fae2-4fd1-982b-7ca7d8c3727e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119c613d-5e14-497d-b31b-8dc76b610643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3666d51-5d81-4f8d-9970-bbe29fe8b34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e55f61-63c0-41d5-ace1-64d85439ee91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b16845-2713-4a47-86f6-5f30f87d3b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a62b7c4-3c59-4f21-83c7-8d3b23478bdb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a76268-f75b-4fb7-81a5-1c7b12fa64f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5efe7031-3747-4592-a38a-a69c833eef26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a0ae55-a842-47cb-923e-b07c1c422f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1426bbd-0391-48df-ad06-d49fba5589b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764a8387-cfb3-45d3-85d2-cb7329f1c996",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bdcd85-fbca-4a08-8bf2-266a19ee692b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533bf619-1e17-47be-898c-cbb439f45c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f180feea-dbdc-4684-afa1-c708023db60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359ed003-ca93-4333-8bcf-904c7692944d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a645ca-6450-48b2-a633-cec092449844",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96d65fe-21ff-4089-adf0-9124e69950f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf075a09-3f6e-4ea3-902b-0616e3f5c532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dd45a0-6fdb-43a9-ba9a-80c0cac13199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6a166c-9b32-43de-821f-fc852eb1c0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4be2b95-a10f-4079-9a2e-512383491e75",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523f09cf-a66d-4287-aad4-3dadccbc4d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "971f2af7-4319-455f-a32a-5fe8fdaeb752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c910e8a5-7c58-4c26-a30b-bb85091698be",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193dd7ef-49b2-4cd7-aad0-04dc777a3c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c8863b-d478-4717-ab5a-6feef14d9f23",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe88e27-5ebc-494e-baf9-2712dd600734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8f54236-541e-485e-966e-66bdc68914c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ff529c-52b1-4b0b-bc56-adce8630e521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314f2123-aa48-4dbc-9232-2c319b6a4228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36421e13-c918-4de1-9ee4-e4fd5b1f7d16",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083b1dea-3052-41d3-8fd8-6db4d272cfaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add8b23d-7819-46ef-9f63-a79028cba02b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6cc5b9-a737-4f58-ae6f-ca31381b5838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f62e68-77ad-40ff-b503-f93d3dcf1567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178c6035-2e7e-4960-bd8e-91179b2e8c5b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e1d915-78ee-484f-8ef5-e7631f8709cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57c923b6-87a8-4676-ac94-be19132b94b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b14f54-d771-4076-a3f6-fa39591b7417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375e9bcd-57c2-4781-9880-f0a6292620d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ec85c7-f339-403a-8c82-ff0966549c1d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7349ed-6153-4428-b299-4663361fa6ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b07637-7ae1-4318-bdac-2cf97c76bba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d058ee-cbfd-4451-8d18-bf251e38a137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cdeff1-2596-4a72-bca8-3af88b5a251b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d448a8ab-2e33-4f45-b963-87e923e20384",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b286338d-112c-43cb-a5a2-6adeae4849d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45907c3c-b7f7-4c71-b9aa-f787f77f82c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad61342b-3241-49c7-80b2-b9ae44e2aff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069c0fff-11a4-4c5b-a64d-ab316f8b9a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab49d22-e73a-43d0-a2fd-e90263397efd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31531ccd-5e5b-4d69-ab03-b2a16e321f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a4fa30-0a6b-481a-92d7-bfae5bb73e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f384c2-46a3-41ab-893c-c11c3f77e944",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be12294a-1532-42da-b8c9-a1b4fb9ab608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798c2e7d-01fd-4792-b4c7-9c87c35655b7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f543bc-463a-4f33-b346-f6abaf7a318e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4691aef8-e2d5-4922-bf6e-d8f9145f10d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eefbc79-95c6-4de1-8758-a6435b209465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4338ca-23c5-4cdc-bc52-709214370fc7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80be71a9-3787-40f7-bd14-a1feec7e5b77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba92ffbe-0c87-4ac9-8d5a-17879b255cd1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b788928-1444-4f49-8061-8ac02cd8e372",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4952c934-9ea2-49d6-be09-7b907213ae48"
                    }
                  }
                ]
              },
              {
                "id": "f44e678a-523b-4c55-9298-797442bec09f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ad8b31f-99e9-41e1-8700-74eeb2f6a1fe",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132d60a3-2097-469b-98b6-ef737b85f67b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "89008f72-e8c3-41f0-8f91-579d09624588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126701bb-cb07-4b11-808d-b3282ff8c502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8917281a-33d7-4f81-8969-ebb10c4c0b7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec2eafcc-53f0-4e85-8522-eff811afe0d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a56a8b7c-0ffd-470b-99fe-13333ab970f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4034f5f1-dee9-4ade-ac98-bd4c56b803d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53a2501b-3ec0-412f-bbeb-d4667c3f82c6"
                    }
                  }
                ]
              },
              {
                "id": "9b993b4d-7c7b-437a-9475-1295256c2895",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e03b7f3a-2598-4897-8e7f-7bf25c5232c9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bda7351-1a33-4a7d-b171-02b251972049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "077504dc-daa4-4f51-8a16-f4ebf829e485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a86e73-ad2d-4e20-acaa-02a0a8d43a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9914c386-7e5e-4323-b03a-2e8993ab8d2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d0c7c2a1-8aea-42e7-821b-489d13256a2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "499cce8e-7463-4fe2-8999-02b1d246d2bd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28707a07-5cd2-4b2b-8b2d-ded90e825f90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "107dee7b-82a8-49cb-bd15-732621e51521"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43879f63-ebe3-4f12-b8e9-9815ac34bb20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfb080be-2811-4504-9a52-7a6bc0e85384"
                    }
                  }
                ]
              },
              {
                "id": "29d2f95b-39c2-49cf-8190-51790ef65d8b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77d39fef-bc43-40ac-a655-2ca6d348cc3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9611c5f7-112a-43db-b802-9dcd54b94a93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db1bd767-b9ac-49c5-9bcd-435ef481a2dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99f1b0fd-aa5f-4bc7-9735-e0ff9802b1f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d11d8f8-a17b-4b4e-ab4b-e19869f2bc44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1afcf192-951e-4157-afbf-9abc306a74e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e76805b-4a34-43af-8e9e-d6679ad7ef1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "294d8fe8-a185-4f70-b675-87fda8aa617b"
            }
          }
        ]
      },
      {
        "id": "b11513be-a6b1-44f6-814d-5de396efe226",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3c3b21ee-905e-4db2-b18c-33c8ba4fe8aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a731f4b0-bcd9-4cb3-a55f-b41fc9cf1a2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0cf0a337-c078-404d-a316-682e538090c5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8490832-d051-4ef7-97dd-051952f8f11b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "30d7d17e-c633-4571-8007-f43fded46415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2068777a-a3c0-4279-8aba-9e571b6fe36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "291fcc68-1449-473d-a342-e79409b9cf91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50d504c9-2af6-4afa-8752-16782bdfb5af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04998f44-74af-488f-9063-90bb2a0fddf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7fe815b-b3c5-46b5-b746-45f318dc1b63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adac9d43-bece-48e3-b535-dd332f454a0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "019bf140-6918-4e64-a18b-71505450a6db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d681f390-c490-471e-bc67-e134e520e1f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bed10c1-f2b0-4571-bd4c-11f441dae6e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c00d0771-d6cb-4352-9f17-2ecc15108ed3"
            }
          }
        ]
      },
      {
        "id": "b0adb6a2-2e52-4815-af83-6b812f037eb7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e0ff43c3-2b67-4525-ab92-dfd14604453f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ae838d1-2ace-4c8b-a55e-132e0d31d03a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a281716f-f099-4ea9-875a-b7fee4629db0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55982139-cc3c-47a6-bac4-35813a6337d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6198311-8bf9-439d-8ebc-52c1ed54e491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d15ec3a-5077-4613-a752-9fd7f4ce39d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d2800f2-dff0-4da4-bd93-8ada3d6b32f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "770021de-09c3-46a6-9372-495aa78e9473",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "905a5945-23fa-44e7-ab66-9f5b16409974"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e394f25-59a1-4282-b94c-f501254203fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2726c4b9-cc04-4c52-b60b-78e3c6b1fd6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1293f169-f4be-4b65-8d65-1f4ece82e42b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "608521ee-f1a2-41c0-95ee-d5c5f398df3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46b780f9-c2e2-48e8-aa53-01c3b477a014",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "944fc7b0-877b-45e8-8bef-36c317e9f98f"
            }
          }
        ]
      },
      {
        "id": "c0346a9c-37ea-4db0-8a60-e680c357dcfe",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "75046693-cbec-4928-a75f-8bdc2b076e17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9732d52e-91a4-413a-9942-1868fa0daf54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca385fa5-21ac-40ee-bdb6-a823b19a3eb5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b9f20d-bd8d-40c6-9658-bfa5d8fb14ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9d87d34-d83c-4ca9-bdca-847ff5c1e697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f74a309-b6d2-4113-8ba0-cd154513126a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acaf9491-9507-4f38-9c46-07ff25c70d92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3b993b2-e05e-4f7c-9b70-e6ab6a361929",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5553387-34b8-4a56-8b0c-497688c85b2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e0ebf28-d621-46d9-88ad-ca96e3432dcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ae3012e-efca-40ef-9342-2d3f7b6b94d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a618a2f-4744-42a7-b6f2-cfaf1ee2cc5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ed3452b-28d9-4678-8235-a785cb95ab6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e87e93d7-4ad1-4d32-8767-98bc63663737",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89cbe1d2-a25a-476d-a150-2d95d3dd1b15"
            }
          }
        ]
      },
      {
        "id": "87fc7f85-a6e1-4857-bd2c-69bb2656a131",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2537b61-6738-40a1-a4c3-e41a517fb38d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a5ebb11-cf98-424e-9e52-d5b8a7c5d87b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "09c6c21c-324a-47c9-ab1e-79a5f9a00c03",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a26a7e5a-f62d-4b43-aa2a-59f808a80c3e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b01096a4-96f3-4c0f-a3ff-a9168c3418ec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 111.10526315789474,
      "responseMin": 9,
      "responseMax": 8349,
      "responseSd": 579.0968371649121,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708475642448,
      "completed": 1708475683308
    },
    "executions": [
      {
        "id": "eecd4e3f-2d53-40b6-bf06-12542d475adf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "33a72c1e-aa83-4d3a-92b7-f975be63970a",
          "httpRequestId": "7acebc3c-d27f-48c0-98e6-7e9f5928836d"
        },
        "item": {
          "id": "eecd4e3f-2d53-40b6-bf06-12542d475adf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3050d35c-4da8-4cba-8e49-92ecef15a415",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "9c9b5b27-e748-429f-8c37-281067d5c0f6",
        "cursor": {
          "ref": "5148386e-0a7b-4656-9649-e2e70ecd0614",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "626b036c-6ab5-4775-8c3d-84ac8bac1716"
        },
        "item": {
          "id": "9c9b5b27-e748-429f-8c37-281067d5c0f6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4a28ff4e-f7f4-4121-b67a-1278005ad48f",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "3f7e6d5c-eee2-411e-9558-77d74d824888",
        "cursor": {
          "ref": "ab358b75-5f69-46fb-abf8-35f1e64734e9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6a9ec474-cf23-4732-9c6c-5a7f095a898c"
        },
        "item": {
          "id": "3f7e6d5c-eee2-411e-9558-77d74d824888",
          "name": "did_json"
        },
        "response": {
          "id": "527f0a4f-e6d5-46a2-8052-8079e571d88a",
          "status": "OK",
          "code": 200,
          "responseTime": 386,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1251f2e9-db3c-4246-8fb8-c608cd4c22a0",
        "cursor": {
          "ref": "b72d7bca-7bcc-44b3-a7e4-57605f8ebeb8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e62c4838-3efc-4a43-928e-75e3ecf390d2"
        },
        "item": {
          "id": "1251f2e9-db3c-4246-8fb8-c608cd4c22a0",
          "name": "did:invalid"
        },
        "response": {
          "id": "82bd565b-af2a-487a-a439-6bb84f095cf3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 878,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1251f2e9-db3c-4246-8fb8-c608cd4c22a0",
        "cursor": {
          "ref": "b72d7bca-7bcc-44b3-a7e4-57605f8ebeb8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e62c4838-3efc-4a43-928e-75e3ecf390d2"
        },
        "item": {
          "id": "1251f2e9-db3c-4246-8fb8-c608cd4c22a0",
          "name": "did:invalid"
        },
        "response": {
          "id": "82bd565b-af2a-487a-a439-6bb84f095cf3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 878,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75994d96-f4fc-42b2-85ef-8b3fb85de94d",
        "cursor": {
          "ref": "bb3d4cfc-19bf-4371-85b5-833b4d5f6f9a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "df95f460-ee48-4ad0-ab4b-5a2455f7f7d1"
        },
        "item": {
          "id": "75994d96-f4fc-42b2-85ef-8b3fb85de94d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "917c9ac8-d1d4-4eaa-acc6-df5e487995d9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab9e5b6-ccae-4a37-a24f-8f287fc92681",
        "cursor": {
          "ref": "b36924af-15c1-4e77-ae31-3449725a149c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "028c6a21-812b-4e7e-8bee-a3c59c0eeb20"
        },
        "item": {
          "id": "0ab9e5b6-ccae-4a37-a24f-8f287fc92681",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "de06e03a-e608-4664-838e-8ef110bd248f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03151ad-b799-47de-8c33-c625342c060c",
        "cursor": {
          "ref": "98dcc3ec-2799-48fa-89f7-08629855c2af",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eb7a8c55-e828-4568-9b95-27590bba1689"
        },
        "item": {
          "id": "a03151ad-b799-47de-8c33-c625342c060c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e4e746d6-e848-4aee-b987-08f197e9a77d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c86bf4-0db7-4333-8867-f73bf283654a",
        "cursor": {
          "ref": "f532c292-620d-4aa8-810b-cfb4085dbecb",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "017460b4-a86d-4c66-8c0b-031e85c1218e"
        },
        "item": {
          "id": "b8c86bf4-0db7-4333-8867-f73bf283654a",
          "name": "identifiers"
        },
        "response": {
          "id": "6e63521b-2c88-4c59-bdc5-52594893c50d",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa1a813-218d-49ec-8a51-0f5721fa5499",
        "cursor": {
          "ref": "5791b079-ee25-4f15-8eab-f9227175f499",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2d53591c-3248-431e-b79d-99c5dc3cbd41"
        },
        "item": {
          "id": "0aa1a813-218d-49ec-8a51-0f5721fa5499",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9ae6d0a4-2d9c-4cd9-a441-caa87b651510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af036af-120c-47c4-9bf5-0affa2f2ea95",
        "cursor": {
          "ref": "da42f40a-edff-4cf7-a7a1-cb20ba7261de",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "88332265-7fd9-402d-a235-551cb11aa4a0"
        },
        "item": {
          "id": "9af036af-120c-47c4-9bf5-0affa2f2ea95",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "baf586ff-4ad7-410d-94e1-aeb261e9ad14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74e2834-5071-4cd5-871c-f30e9e044d05",
        "cursor": {
          "ref": "c736eb3a-b63d-4479-8717-fd9642db2085",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "25163e70-624d-4069-b880-00eef0bf2689"
        },
        "item": {
          "id": "b74e2834-5071-4cd5-871c-f30e9e044d05",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "660e2847-55bc-4354-acee-288ad3dcd85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dccd4ac-5408-493a-a728-90eb33f5ae71",
        "cursor": {
          "ref": "8e11c263-d81e-4f68-85b7-58cab624741d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "af9e11ae-b2ef-4ba2-91e3-813f59ca6c27"
        },
        "item": {
          "id": "2dccd4ac-5408-493a-a728-90eb33f5ae71",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "49ed1296-d9f9-4b71-8379-f5534ef2dd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8546582d-1bb6-4223-ab54-2a9618658c49",
        "cursor": {
          "ref": "eff029b4-0d44-491f-846d-f42a5127dc42",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b2483921-38ad-42d5-af96-2bbcba6fad14"
        },
        "item": {
          "id": "8546582d-1bb6-4223-ab54-2a9618658c49",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5a7e22f5-1dea-469d-9fde-d16b3e5371c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2bb8c9-8375-4aba-83f8-02595d11eed7",
        "cursor": {
          "ref": "3babcf71-f4e6-43a0-bef8-4a4d40a31c52",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d037debb-3f33-4306-bde2-d2b168adc946"
        },
        "item": {
          "id": "0f2bb8c9-8375-4aba-83f8-02595d11eed7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "590349a0-a01d-49e7-bffc-6503422dadb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff727a5-51a5-4b89-8078-37b702fa9efd",
        "cursor": {
          "ref": "79665472-29e9-48ea-ab5b-213fecc28f3f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e0ee283e-73ef-4bec-b9fa-8d58a3d18666"
        },
        "item": {
          "id": "dff727a5-51a5-4b89-8078-37b702fa9efd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1d708d48-71ad-4a63-9b86-e352674b1533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1399dd4e-a524-466e-8ec9-4636b608ba3a",
        "cursor": {
          "ref": "ac3867b5-3e07-492f-a4ce-53fbfc2dd7e2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d94f2637-700f-4c94-9dba-f3edb21fac13"
        },
        "item": {
          "id": "1399dd4e-a524-466e-8ec9-4636b608ba3a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "453e27d3-4bf2-4b9c-9946-4e134847c360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901719df-f7b4-41a2-a4a2-c5529a11b7d5",
        "cursor": {
          "ref": "036bae51-cbe8-48fe-a1bb-ababbafb0932",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "83fb50c0-17f7-4999-acac-27d48c45c954"
        },
        "item": {
          "id": "901719df-f7b4-41a2-a4a2-c5529a11b7d5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b1ed9fe3-efab-4ae5-97cb-bd7de7fc2cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c997f2db-2f27-4abb-98eb-a19f4f20ff5f",
        "cursor": {
          "ref": "16aad816-dc02-472b-b64c-851728b03a1d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b4234276-af8e-430a-affb-0387eaed2025"
        },
        "item": {
          "id": "c997f2db-2f27-4abb-98eb-a19f4f20ff5f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0649d2fe-31c1-485d-917e-13c202376d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa38cbfa-200d-4f20-b7f0-722894bdf299",
        "cursor": {
          "ref": "05c55419-7a6a-443a-8d4b-94b876f6a6ff",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b60b3dbf-2843-422b-b1d7-f8664af8b147"
        },
        "item": {
          "id": "fa38cbfa-200d-4f20-b7f0-722894bdf299",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b3df6ad8-3413-4c71-af35-4c48030c1aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a814b1c-a2eb-4cb9-bc39-14facb03f5ac",
        "cursor": {
          "ref": "3b53ae02-bc8c-4626-9f05-c95d48aea004",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f02a64b4-6e7a-4d38-b4b8-fc06227a117a"
        },
        "item": {
          "id": "3a814b1c-a2eb-4cb9-bc39-14facb03f5ac",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e08da9c1-2391-401f-bada-24dfc5cbc38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef34c80-6197-48a6-bb99-2217f7baa367",
        "cursor": {
          "ref": "0139053b-22bf-4f22-b5ab-a2ec898fd945",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "39eb717d-ab0c-40bd-bc75-2a4133dbd60e"
        },
        "item": {
          "id": "bef34c80-6197-48a6-bb99-2217f7baa367",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2cdf266d-6691-4c93-b73a-059c67ddfa53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b673c1-0e35-47fb-9a09-9c57d6872d04",
        "cursor": {
          "ref": "9c0032bc-1951-4f52-8d1a-4a5d7f3b0267",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "62f3ea2e-fa36-4644-8c9d-43aa7f5567d2"
        },
        "item": {
          "id": "15b673c1-0e35-47fb-9a09-9c57d6872d04",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d060f388-7073-4b2d-98b2-4f4af901c07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcfa9d2-16ca-479e-93d5-c0e7626d77bf",
        "cursor": {
          "ref": "815b6003-b88b-4298-9743-359f3528cfd9",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9bfcfe32-c922-474a-9dd4-7ab5d59fd29e"
        },
        "item": {
          "id": "6bcfa9d2-16ca-479e-93d5-c0e7626d77bf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ea72d0f4-cea7-4aae-a0c6-f3e0506a1e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0384f3-797e-45d8-814a-55007a34fb71",
        "cursor": {
          "ref": "d5ea3d6e-a09d-4eb8-962f-0106d0d65452",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "95992779-3e7b-4ad6-a0a6-7dfe0d8223e7"
        },
        "item": {
          "id": "7c0384f3-797e-45d8-814a-55007a34fb71",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "31313621-099d-4ef8-a6d8-ce6b50a131d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17764c6-d629-4417-8f19-bb46d54e3367",
        "cursor": {
          "ref": "f1a38840-15df-4c8f-ad96-f922687a1fe6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "01385ffe-5e8d-4a15-bb84-fd4b68568d3f"
        },
        "item": {
          "id": "e17764c6-d629-4417-8f19-bb46d54e3367",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e0d711bb-be02-41d3-8462-a5ee04184b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d474591d-8331-4e88-8663-7badc110aea3",
        "cursor": {
          "ref": "ed67a992-993f-4e2f-886b-e288a0881c82",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6663501e-7166-4c86-b233-e37a5ff72dff"
        },
        "item": {
          "id": "d474591d-8331-4e88-8663-7badc110aea3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "09dbf8ec-27dc-486d-9493-91ebb00afff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7908f7d-017a-4351-b4f3-0d918dffdfdd",
        "cursor": {
          "ref": "28ab3b02-4e70-4d54-9cb0-5ecee1d0d1f0",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4eb87f9e-3014-4099-8eed-16ad2c5e4f0a"
        },
        "item": {
          "id": "d7908f7d-017a-4351-b4f3-0d918dffdfdd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4342423a-676f-4828-afa0-341b4ec6a0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fc7a3e-e005-4d6f-a78c-3b36c11145a4",
        "cursor": {
          "ref": "e7304333-88c3-4bfd-bee8-6cb8833228b4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a6d8be3c-e5cf-454b-90c1-8a67655af581"
        },
        "item": {
          "id": "64fc7a3e-e005-4d6f-a78c-3b36c11145a4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4a66cf14-84f0-448c-98dd-6b38d8e5d16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceda445c-bdfd-4782-8092-e4e3593232cd",
        "cursor": {
          "ref": "c89fda09-d4a6-42a4-979f-b1bde902224d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3eff1b89-e18f-4bc0-a41d-702d1c567c21"
        },
        "item": {
          "id": "ceda445c-bdfd-4782-8092-e4e3593232cd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c2f1bb83-5d28-4898-960a-cec67a412370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3af7e07-3c6d-4ba9-9e66-95d71f14016e",
        "cursor": {
          "ref": "61783925-ae99-4b36-8820-e6fd4f2185b9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4f4764a4-3398-4734-a21c-ab95a380cdcf"
        },
        "item": {
          "id": "f3af7e07-3c6d-4ba9-9e66-95d71f14016e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a04438b3-b65e-465d-9a78-8751c49cbe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458a0654-819e-4197-8725-96f072e5b3c7",
        "cursor": {
          "ref": "057f3be2-da2c-4fea-a3c7-6d71c1376213",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5b5f346c-3712-4800-b679-a5d7acfb1697"
        },
        "item": {
          "id": "458a0654-819e-4197-8725-96f072e5b3c7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "82dbfd5e-70fc-4f50-82be-9ce58736f875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15309ca-284d-4b75-8935-5f5b5c92bbb0",
        "cursor": {
          "ref": "f54a3712-b4c6-415d-ad79-9fcaa2b57a86",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a2be0f79-b6ed-4556-aa04-476bc5f5104d"
        },
        "item": {
          "id": "f15309ca-284d-4b75-8935-5f5b5c92bbb0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e461426e-6162-4714-ace0-fe1caf662327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa53afa8-3d1e-4e7c-8d83-78ca274bad1e",
        "cursor": {
          "ref": "1e1cf05c-6337-40b5-9b3c-5c900973b724",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e8818774-f244-41b0-95c5-bcd0e8fbd663"
        },
        "item": {
          "id": "aa53afa8-3d1e-4e7c-8d83-78ca274bad1e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a0fc0e9a-92f6-4bc9-908f-433e4d7c9479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5422d7-b851-47f8-88e5-02a515d3afff",
        "cursor": {
          "ref": "9e54e0be-f637-4801-ab53-490525ff8414",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "799b2f8f-502d-47bf-8838-c3e7901e67b8"
        },
        "item": {
          "id": "3b5422d7-b851-47f8-88e5-02a515d3afff",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "66452007-e51f-41e7-9231-6cfc1d0d02e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450092e1-543c-4687-a7e2-1e903008ddd9",
        "cursor": {
          "ref": "55d8be63-bb5b-44c2-827a-413fa0fb7341",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f169e73a-713a-4b65-b11b-97e70c59f9e1"
        },
        "item": {
          "id": "450092e1-543c-4687-a7e2-1e903008ddd9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a1f06382-a005-43b2-91a1-6f2c0ea459d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db8d294-c04a-4ae0-b5a0-ad101dfce997",
        "cursor": {
          "ref": "c50d6fcd-f0d7-4296-a064-557696970f9a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "27403b7c-b9d9-4e2c-93d5-e426b989ce4f"
        },
        "item": {
          "id": "0db8d294-c04a-4ae0-b5a0-ad101dfce997",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "97d0194d-9769-4121-a06a-f39ed2554d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc71ade6-0961-416c-844a-03c6d5558964",
        "cursor": {
          "ref": "261a313c-1a06-4e7c-8a99-77f0ea648a98",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f484360e-0624-4126-aeed-d3948c2c30a5"
        },
        "item": {
          "id": "bc71ade6-0961-416c-844a-03c6d5558964",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "46f60652-801d-424d-b423-e093eb2dc582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8165c3d-afb9-4641-a381-1614a8d4aa79",
        "cursor": {
          "ref": "bebac098-0559-4bd3-b3e8-715a231689cf",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "aff2a488-f412-48af-b7a2-d12e89c77f89"
        },
        "item": {
          "id": "c8165c3d-afb9-4641-a381-1614a8d4aa79",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "93b3e6a5-47c0-4500-880d-c6f6603d28d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da62c236-b8c0-407b-a672-9d613e488961",
        "cursor": {
          "ref": "9007d732-9e35-480b-a92d-06e0420b00e6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5fac5585-7b96-4777-891b-2b607c6b28a8"
        },
        "item": {
          "id": "da62c236-b8c0-407b-a672-9d613e488961",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "586b1a42-24a0-4376-89d8-26b4edad7638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e346b2-4b59-4a9f-9ac9-f7ac1efd8fbb",
        "cursor": {
          "ref": "da8619b3-3f9c-43ca-8dfc-75ce8cf50b27",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "eba18631-f082-4dc3-923d-520ad741d03b"
        },
        "item": {
          "id": "07e346b2-4b59-4a9f-9ac9-f7ac1efd8fbb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "de442e8f-18ef-49fe-b869-9067b456e264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b930980-2adf-4015-a53c-7b0c440f3254",
        "cursor": {
          "ref": "dde098cc-80f7-4899-beca-d813c729891a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7c1cbde7-0707-4a29-aa24-ddb76dfca21b"
        },
        "item": {
          "id": "4b930980-2adf-4015-a53c-7b0c440f3254",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8e67702e-ed52-4383-8375-b23028753720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab77a6d-eb7c-4cff-8b86-1be4658f0eee",
        "cursor": {
          "ref": "16ff6fab-efc0-4a74-87bc-16f879d5d3d5",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "93eb427a-f289-4d3d-ade2-bb8ed8218ea6"
        },
        "item": {
          "id": "eab77a6d-eb7c-4cff-8b86-1be4658f0eee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1c37fbe3-bc99-49a1-a68d-c4268b32ac7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e65f237-3289-4ef6-8b27-be67ba1b0dba",
        "cursor": {
          "ref": "045193d2-f89d-4021-bce8-03247c619900",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "74c30f21-b5e9-4729-a782-e71de75148f7"
        },
        "item": {
          "id": "4e65f237-3289-4ef6-8b27-be67ba1b0dba",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "44b702a3-c7ce-446a-9f34-b2b749c10480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56889a7c-6c3f-4802-ad77-d3acd99bf0e6",
        "cursor": {
          "ref": "96c91502-b2aa-44a8-a7a9-ac89c12d7bc9",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c5003722-571d-4621-b593-85f9b024322f"
        },
        "item": {
          "id": "56889a7c-6c3f-4802-ad77-d3acd99bf0e6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2ea45302-e5d3-4646-87c1-210c294863cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c829ad2e-2898-4697-b329-d257ea023316",
        "cursor": {
          "ref": "9fa78445-8204-4ff6-85f6-e4d99b649d9f",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b668c744-147f-4959-97b3-d2cf1d695ec2"
        },
        "item": {
          "id": "c829ad2e-2898-4697-b329-d257ea023316",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dad6abce-b9d6-4282-8046-5b0c06b451a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d05349c-677c-41ea-a2b1-dc605031b7d9",
        "cursor": {
          "ref": "b47b0e3f-1456-4e0e-8c5f-f3d8a676505d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "72633b46-8b94-4334-86ed-ead2ba72f231"
        },
        "item": {
          "id": "4d05349c-677c-41ea-a2b1-dc605031b7d9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "858086ec-b0fa-42c1-bb3b-190ed8683915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c8c5e1-a7a7-4087-a519-5df5598d652f",
        "cursor": {
          "ref": "4add4593-743b-425e-8d48-a881d38f7767",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "67c16250-e016-47a9-a9d2-1013f9691c15"
        },
        "item": {
          "id": "66c8c5e1-a7a7-4087-a519-5df5598d652f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "72d11e30-21a0-4afa-8f99-0061a8235dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7241e61-22d1-4e50-b9bb-37ad7505a6df",
        "cursor": {
          "ref": "caf1f799-d909-455b-ad3b-1b658dcdee67",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "52cff617-36a2-4789-b3b4-f873cdfa7b9d"
        },
        "item": {
          "id": "e7241e61-22d1-4e50-b9bb-37ad7505a6df",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "62c6ba37-72e5-4a2b-a282-5f82a11ad660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c52f8d8-0351-4e8f-ac91-dbdc9cbb9c87",
        "cursor": {
          "ref": "afa603a5-be6e-48de-a51f-8e4afb27affb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "80a00de6-8e62-4e92-b608-9265df0122cc"
        },
        "item": {
          "id": "6c52f8d8-0351-4e8f-ac91-dbdc9cbb9c87",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cff54716-2aa2-44d5-9d68-0e2a365527b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3831b8-b179-4c61-a179-66690f290da9",
        "cursor": {
          "ref": "b0fd70ac-7603-4675-b609-4c05f2611778",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d3b17389-1715-4ae2-9efc-5b05ea57c4a0"
        },
        "item": {
          "id": "4c3831b8-b179-4c61-a179-66690f290da9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5926b6f3-6318-4629-9513-a4afd12a0a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4484ba55-7dcf-4add-8c1d-a7ee999f438a",
        "cursor": {
          "ref": "825f8747-c7a4-4419-83f2-7b23c75eba41",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "295c136a-10e9-49dc-ba90-8470fe3afb6c"
        },
        "item": {
          "id": "4484ba55-7dcf-4add-8c1d-a7ee999f438a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "60936d0e-af75-4493-9a47-fa227e0d8caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d6e50b-0e2b-4aaf-a670-a2dd13caa124",
        "cursor": {
          "ref": "75b6fba2-59c0-4d34-b3fc-1afcf57acb1b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5b451e47-f469-40e8-b9a3-6d1c65e7dda3"
        },
        "item": {
          "id": "a4d6e50b-0e2b-4aaf-a670-a2dd13caa124",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e8a5c192-d54e-4242-bac6-ee9b00c148c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453ad32c-048a-4614-baed-a8f7e73ff81a",
        "cursor": {
          "ref": "e0b50c97-58fa-44ce-8484-98dc77e9505f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "209bdd6e-7e31-4cc7-b9f7-8d04ce869768"
        },
        "item": {
          "id": "453ad32c-048a-4614-baed-a8f7e73ff81a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "271ab027-dd07-4f90-86f9-26ad74aa4fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3775c1c3-e13a-43a7-acb1-dca22ec49036",
        "cursor": {
          "ref": "b73051c6-a755-4efe-80a8-9ac375e621a9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "88aceeba-b94c-479a-bc43-d505d6f69943"
        },
        "item": {
          "id": "3775c1c3-e13a-43a7-acb1-dca22ec49036",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "79d61cb4-b038-42b1-98a2-7bbd6932e528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ba7c6b-69b1-4dde-a199-fad61c50c032",
        "cursor": {
          "ref": "bbd76eb2-5055-4b23-bda0-1c126d91bece",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "23e9d6ae-c984-472c-9bf2-26428d3d4bdb"
        },
        "item": {
          "id": "90ba7c6b-69b1-4dde-a199-fad61c50c032",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9a7174a7-6b90-4c6c-b7b4-70b126d42a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fba220d-dd00-4291-83fb-76bca9148055",
        "cursor": {
          "ref": "db644236-a441-4a01-8ac7-bdd1d7b3b529",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2ece5752-bc05-41ae-84a1-cb2bb17468f2"
        },
        "item": {
          "id": "7fba220d-dd00-4291-83fb-76bca9148055",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "05d81cc1-d6af-447d-8467-22b1915f6694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7317f41f-dd9c-458f-998a-58bfb2b5f3ef",
        "cursor": {
          "ref": "8292086a-2bd8-44d4-945b-c4adff0c7bda",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "832da937-1672-4e9a-b014-216f138a1d42"
        },
        "item": {
          "id": "7317f41f-dd9c-458f-998a-58bfb2b5f3ef",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3b06d40b-758a-4fe8-af76-f7318fa83120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabc7dba-8c8e-49e7-8a0c-62b2d0eb063e",
        "cursor": {
          "ref": "6715a2dc-e059-4c98-ba4d-e012c2f49a14",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5d25e61c-df5e-43d2-9f05-01181e9ab913"
        },
        "item": {
          "id": "eabc7dba-8c8e-49e7-8a0c-62b2d0eb063e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e1fd4c33-1d95-45c3-8144-b0662d208ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08213ff2-bc70-4f8b-9638-42e9fd2af694",
        "cursor": {
          "ref": "ef4a953f-fc69-4692-af59-46d762af5254",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3251526b-dde5-4f80-ae8f-1b55a5e07891"
        },
        "item": {
          "id": "08213ff2-bc70-4f8b-9638-42e9fd2af694",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d65a289b-5ef7-43b5-8c41-1cd1090f0cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d087ad57-b9c3-4ab3-b01f-7e794eea5de1",
        "cursor": {
          "ref": "c2b8f5f5-edab-41dd-8dd6-417b3c43c327",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9821a1e4-fc1c-4b6a-939d-4021bfb22ece"
        },
        "item": {
          "id": "d087ad57-b9c3-4ab3-b01f-7e794eea5de1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c1495167-5199-42cf-ad2e-bd2b426d81e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835be0ac-1b8a-4639-83ef-44adf4187566",
        "cursor": {
          "ref": "97f00c28-6180-43da-b98f-00554e2b78c3",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "036eeae7-60ae-497c-9150-4a836d40ba16"
        },
        "item": {
          "id": "835be0ac-1b8a-4639-83ef-44adf4187566",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9b0f0442-569c-4f00-b870-fff6f50e2bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178be59e-c08e-4dfa-bb9e-18d049849b9b",
        "cursor": {
          "ref": "8c51e0b1-8ca5-40bd-83e0-ae5928a4b1f2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b728d0ab-e62a-44d9-8a58-472d7e83ece7"
        },
        "item": {
          "id": "178be59e-c08e-4dfa-bb9e-18d049849b9b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2371e011-6450-4385-9ec3-5507f1f7c0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930ba6b5-e4ab-4f8d-bb78-c0953de4510f",
        "cursor": {
          "ref": "a1d9322c-27f9-498c-a47a-9703094ed417",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d7e2119b-b831-461e-b734-8185ba419cc1"
        },
        "item": {
          "id": "930ba6b5-e4ab-4f8d-bb78-c0953de4510f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1ba1c2f9-a295-400c-8f4d-faa3d62737a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64ff22d-ee7c-4e01-8333-c559a7f05da2",
        "cursor": {
          "ref": "ecc8e3b4-04d5-49aa-bc1b-89ce90609453",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7eb0e2c3-d4dd-45f2-b486-ecba632142ff"
        },
        "item": {
          "id": "b64ff22d-ee7c-4e01-8333-c559a7f05da2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "98e3d310-4d7e-43c9-a399-6e4db0de1a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0457b2a1-d9e3-453e-8432-ac3095b7bd98",
        "cursor": {
          "ref": "199ce638-f605-4d5c-ba55-ff6760dafcad",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cb83c3b1-bbd7-4f1a-9da9-e400dca33fd2"
        },
        "item": {
          "id": "0457b2a1-d9e3-453e-8432-ac3095b7bd98",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "465a70f1-04c0-4f27-a058-e9d69126deb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb7f5d9-58b6-492e-8de0-f94c3c9b19e4",
        "cursor": {
          "ref": "6b96cde1-7e60-4ce6-86d6-0b3ae1495b0a",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1b252725-660e-445d-b56e-babbb616c9d7"
        },
        "item": {
          "id": "1eb7f5d9-58b6-492e-8de0-f94c3c9b19e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "322b2161-dd42-46c9-ad06-5b26d4ddfac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c0d6f6-89d7-48f6-8945-3f5a0e37135e",
        "cursor": {
          "ref": "c5127454-dacc-4a89-b795-aae5815cd85e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5dd53687-1bf5-4e9d-b185-ee5eef3541ff"
        },
        "item": {
          "id": "31c0d6f6-89d7-48f6-8945-3f5a0e37135e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "71f914ab-98e8-4ef7-b92a-4f051abaae36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683d9c4e-b18e-484a-af92-4ed228acb104",
        "cursor": {
          "ref": "dd916867-d967-4165-8b6e-b3465b4b5750",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ed1cf370-115a-4cb6-8265-614131bad2bd"
        },
        "item": {
          "id": "683d9c4e-b18e-484a-af92-4ed228acb104",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aab6a54c-3c2a-4e5e-8236-bbabf4f338f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c459dd4-6354-4194-bba0-656db49daf3c",
        "cursor": {
          "ref": "62aa03f8-d15c-4b66-b9e7-bcd98a59da43",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d3550330-5313-436b-b860-3516f1d701da"
        },
        "item": {
          "id": "0c459dd4-6354-4194-bba0-656db49daf3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "93637c14-5389-4cf9-b490-2f98b98037d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9086bdea-3fdc-4994-86eb-ce7bc7849aae",
        "cursor": {
          "ref": "4d755834-3a6e-4e00-a0ed-026a1a6a4fbc",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6de30961-25f5-4e5b-9a7d-ad5281dfa2df"
        },
        "item": {
          "id": "9086bdea-3fdc-4994-86eb-ce7bc7849aae",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0e027bb9-4d50-4658-8923-a03a9c7adab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d11525-3f6e-4932-afcd-8c8ed608600d",
        "cursor": {
          "ref": "ca7963bd-a93e-494c-960a-7faa126c9d26",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4a327f74-615c-4b30-ae86-eda3904bb707"
        },
        "item": {
          "id": "13d11525-3f6e-4932-afcd-8c8ed608600d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3a488832-4832-416d-a1c9-6733b4e66a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2029a575-5c30-4b9a-ba4e-8f960c90276a",
        "cursor": {
          "ref": "4e16056b-ce59-46be-91fe-a273f8447993",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dec84b67-3af5-4cba-a7ea-022b5e162f7f"
        },
        "item": {
          "id": "2029a575-5c30-4b9a-ba4e-8f960c90276a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "871fadc3-eb77-4aee-b78f-239b96c72ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58adbb31-8ad1-484d-96b6-c2df3374057e",
        "cursor": {
          "ref": "0f94cb90-ae3d-4f73-af94-09bf63167d5d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "dcf9fd1c-9df8-4b4c-a7c8-4213ae38fd4a"
        },
        "item": {
          "id": "58adbb31-8ad1-484d-96b6-c2df3374057e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c9964f14-8d3e-4a30-a388-9053871150de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067f2181-6b2b-4a94-8c0a-a40a99d4e7b2",
        "cursor": {
          "ref": "9d2c670f-9cfd-460f-8292-8f81edc0af92",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f4f944e5-114f-45d5-af22-fc0166fdd8bc"
        },
        "item": {
          "id": "067f2181-6b2b-4a94-8c0a-a40a99d4e7b2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a5c9f984-709c-44a0-ba3e-c6da0222a9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792516b7-e86a-46f7-8615-3c0e9082f628",
        "cursor": {
          "ref": "dc203fb2-dbc9-4ec4-b323-4f3cff8f3585",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "49d6fbab-a8cc-49bc-b093-9f2b47ab4d6f"
        },
        "item": {
          "id": "792516b7-e86a-46f7-8615-3c0e9082f628",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b85c3144-b74a-483e-8f56-b4e693397365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76622a3-e2e1-4384-a9cc-4965087f1329",
        "cursor": {
          "ref": "97f5b41a-772b-4880-a2e2-6234fdafefab",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9309a82e-e319-42ac-8208-e91efe11b67e"
        },
        "item": {
          "id": "f76622a3-e2e1-4384-a9cc-4965087f1329",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a4c277e7-67d1-4553-92d5-c6539357f7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4f3216-a2b9-40c3-ab01-f27b5dc5b42e",
        "cursor": {
          "ref": "756e8493-9b91-47f2-8f2c-fddc7f19c082",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "27083228-9043-427e-ba1a-1ad7fe48b9ed"
        },
        "item": {
          "id": "3e4f3216-a2b9-40c3-ab01-f27b5dc5b42e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5f648067-23e1-4f23-b3b7-ff98495aedeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ebd42b-fcfc-427f-8fc8-130be5e92aa4",
        "cursor": {
          "ref": "368383a5-cb39-48dc-9425-31167d6b0c5f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0c9f8f9d-5d42-4cd8-8dbe-28d714c90283"
        },
        "item": {
          "id": "48ebd42b-fcfc-427f-8fc8-130be5e92aa4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "eca17357-c57a-4d7f-8665-c0738166990b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be552ee-8a0a-42d3-9638-fedde74d21cc",
        "cursor": {
          "ref": "4dc6a17d-296f-4bcb-8ebd-8e2c5b431f49",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7517afc5-968c-45a9-b18a-1020f83822bb"
        },
        "item": {
          "id": "6be552ee-8a0a-42d3-9638-fedde74d21cc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0fe39533-3d81-43ec-92e5-7b373a4c66ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cee8a6-5c3d-46b9-87a1-1066e4b96102",
        "cursor": {
          "ref": "2b47bddf-73c1-4236-b58f-a521a0c3ab67",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "aee739c7-cf6e-4934-b2fd-76576ef9bfa1"
        },
        "item": {
          "id": "e5cee8a6-5c3d-46b9-87a1-1066e4b96102",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8a06b491-a340-455b-846f-1615f7324836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e28af74-cec5-4f61-aeda-caba5d030738",
        "cursor": {
          "ref": "21093638-69c2-44da-b94d-d3ceccd2eebf",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cab73013-a82d-4618-96f9-d9102a8667f2"
        },
        "item": {
          "id": "7e28af74-cec5-4f61-aeda-caba5d030738",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a4dbdae5-559e-432b-b595-3354cd9cdc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a2a422-dfc9-404e-9254-a397647a3f6d",
        "cursor": {
          "ref": "35ffe753-8a42-40f1-bd64-79968676a1e1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "70df12f6-16dd-44a4-bdc4-4ba0e9ad76aa"
        },
        "item": {
          "id": "c2a2a422-dfc9-404e-9254-a397647a3f6d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "81d831a8-0e17-42bd-a8a4-fbd654c57fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccddc70-4feb-4625-9b0f-5026b3d11608",
        "cursor": {
          "ref": "a312137f-8b64-4752-ae2c-2028961c19fe",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7fc00689-ee77-4805-b7e0-6ae123181069"
        },
        "item": {
          "id": "bccddc70-4feb-4625-9b0f-5026b3d11608",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3104775f-e511-4bb1-8b9c-dfc98a15b340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4964d48-ff17-4216-8617-0c7938f474e9",
        "cursor": {
          "ref": "67559f6b-11c8-4b4f-9e23-8895db108579",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d998e5fe-56fe-49db-bd13-2cb2f3954bdd"
        },
        "item": {
          "id": "e4964d48-ff17-4216-8617-0c7938f474e9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1c34ebb4-e680-4aaf-a0fe-0a904dd296c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b2c87c-0048-4ae1-9496-93c4b60d1bbd",
        "cursor": {
          "ref": "ebe73f52-ed22-4683-b255-9fe62e089c64",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e59cc253-eee3-45a7-9571-92b6d18fba7a"
        },
        "item": {
          "id": "96b2c87c-0048-4ae1-9496-93c4b60d1bbd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f76ac4a4-3965-406e-adf7-e6ce629ae0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c795ffc9-b1a2-4a68-9bc2-a1580115b68b",
        "cursor": {
          "ref": "ce9ec005-352d-4edc-86f9-63f40de05029",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c00eee7e-c2c3-4e80-8276-b48ce61898bf"
        },
        "item": {
          "id": "c795ffc9-b1a2-4a68-9bc2-a1580115b68b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "10e5561c-72fa-4efa-ba89-77782d8ca4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f5d941-f364-4aa7-9e9c-156595d18b8f",
        "cursor": {
          "ref": "14529e43-fa27-4def-9fbc-04bbea79c850",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b3a87a95-e75b-4f04-8dc7-0c2757aa5522"
        },
        "item": {
          "id": "46f5d941-f364-4aa7-9e9c-156595d18b8f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bf65161c-76a0-47c0-93c9-76cbaa31a9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0315ca-114a-43d1-9cd0-129cd6490782",
        "cursor": {
          "ref": "82e3f3d4-2cc0-46ab-a8d5-59a0aed27707",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "711457ba-2223-480e-a675-4d24236e06ed"
        },
        "item": {
          "id": "bd0315ca-114a-43d1-9cd0-129cd6490782",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c23b3b43-8dc5-4b1d-82e5-36860fcb9b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01bb64a-b430-4425-b188-674e8ae6c951",
        "cursor": {
          "ref": "5e6a6e0c-b1f8-4f9c-91da-d20f3d94230c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "08c55157-55a0-40ed-8ae8-8f567b1cbd4c"
        },
        "item": {
          "id": "c01bb64a-b430-4425-b188-674e8ae6c951",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4e4c01e8-a949-4b28-ae9a-b27a91934949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f141bf97-bd54-4792-8c35-0b4bcbe89239",
        "cursor": {
          "ref": "3827d970-ebfe-4796-8381-f2a6ff3c8c53",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5ee41545-5b52-453f-bed6-3acaff662bd8"
        },
        "item": {
          "id": "f141bf97-bd54-4792-8c35-0b4bcbe89239",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f0b07480-6163-412b-99e3-43d8d6fd4ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592b2412-3294-482c-b7eb-15977cef5382",
        "cursor": {
          "ref": "6bffbc8c-7862-4af8-a351-f595e1b5f9ad",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bfd0f899-5098-44bf-b68a-cf93be964e96"
        },
        "item": {
          "id": "592b2412-3294-482c-b7eb-15977cef5382",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "93666a32-dfd8-4964-8dca-a0d3fe049878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d319894-49d1-4c36-8741-316e7ded3649",
        "cursor": {
          "ref": "cc9f29f5-d1a2-4c5a-b7e9-c70895d6946f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dff0826f-08ce-4e75-8833-cba614374648"
        },
        "item": {
          "id": "2d319894-49d1-4c36-8741-316e7ded3649",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "272272d8-1e33-4a50-a640-eef8a63c81b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa0ab08-f108-416c-94ae-581c8445abfd",
        "cursor": {
          "ref": "891b1aeb-361b-4c19-8188-6d22baf405cf",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6751bade-8b30-4f73-ad0a-b6766d279f6b"
        },
        "item": {
          "id": "caa0ab08-f108-416c-94ae-581c8445abfd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "57dec241-16de-48e1-b517-9e2b3ce2e588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cf9c9e-61bd-4ffd-9c47-b4a3778bf8d9",
        "cursor": {
          "ref": "57071e7c-a49f-4a87-bc56-130a7f77f416",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d49c21aa-533f-47f2-b00c-3e33b896f2f3"
        },
        "item": {
          "id": "21cf9c9e-61bd-4ffd-9c47-b4a3778bf8d9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "773fc64d-b082-4d45-a0f2-a3581a831aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21c3540-52a7-44d0-ac32-ae28ed5d3278",
        "cursor": {
          "ref": "877ae2b3-e26d-4ec8-bd07-c8333a8364c0",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1bf46fa2-8082-4379-92f8-2694fccf94f8"
        },
        "item": {
          "id": "a21c3540-52a7-44d0-ac32-ae28ed5d3278",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0c1cea66-1128-4d02-8c3c-772c6db69c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3be1fb1-189f-4954-9d6f-a14712a4bede",
        "cursor": {
          "ref": "5e1071a1-53a2-4f81-b318-d88bdeb59df5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6cf1eb4d-7fe4-4fe4-ae98-49d4fef958fc"
        },
        "item": {
          "id": "f3be1fb1-189f-4954-9d6f-a14712a4bede",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4527219a-98ee-4cde-b5a8-e6738b61639c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673fab09-cc76-4340-908f-b0d9ea193e97",
        "cursor": {
          "ref": "0f1a299d-bb28-4e63-b536-2598922aba76",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1facb0da-97d5-464c-a073-f6d6754be5a9"
        },
        "item": {
          "id": "673fab09-cc76-4340-908f-b0d9ea193e97",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "79049e2b-1ac5-4eac-aa80-43a1aa76f1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a74fc5-8f02-42ef-82e8-21b0cb911712",
        "cursor": {
          "ref": "a0121d77-0817-4fce-9720-a59d20baeb3c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "af4f2980-3e6c-483d-9ed3-d3b61b9313fa"
        },
        "item": {
          "id": "d5a74fc5-8f02-42ef-82e8-21b0cb911712",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f05b8a69-410c-41f9-b69c-08edd1531c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0a1a4f-6d82-47ee-ae50-42cfcb882e6e",
        "cursor": {
          "ref": "a3b3d8b5-eec6-49e3-aa27-c466361615d9",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7ecba1e5-bd72-4d4f-9331-0f6b2c063bd6"
        },
        "item": {
          "id": "ab0a1a4f-6d82-47ee-ae50-42cfcb882e6e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "594993ca-d79d-46a9-a480-9d53bdb64377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d659db7-3e89-4e21-90f5-212b857681fd",
        "cursor": {
          "ref": "b8a64bc2-8c23-4666-9627-600f740c9a94",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6c10093d-6e0d-4d17-836b-f9470df9572a"
        },
        "item": {
          "id": "8d659db7-3e89-4e21-90f5-212b857681fd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "738fa232-3bba-4262-b393-ede867c3d4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6940de-9a25-427f-acc8-2ad741e3ea54",
        "cursor": {
          "ref": "8c33b717-afee-4042-8d95-67a0358f789b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "158d16ff-9cf0-437d-a87b-6688d990269b"
        },
        "item": {
          "id": "2e6940de-9a25-427f-acc8-2ad741e3ea54",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2687f4e0-8c66-4148-893d-154f953b7f54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ab059f-9a16-412e-b52a-57ebec147e18",
        "cursor": {
          "ref": "f7c1fa1f-dcee-41bb-afba-2de241761589",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ea9806ed-ce6d-4f87-b54e-c1a28dfdd8cb"
        },
        "item": {
          "id": "10ab059f-9a16-412e-b52a-57ebec147e18",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "80aa2e17-1bc3-4cde-aff7-786c4b72f9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3fe82ab0-7a67-44eb-9534-ec2159ed7c8c",
        "cursor": {
          "ref": "0d776bc8-1ad9-47fb-84c7-31e23bf8c3f7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4a600af9-5863-42ef-8871-43ab7a4aded7"
        },
        "item": {
          "id": "3fe82ab0-7a67-44eb-9534-ec2159ed7c8c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e537b377-9589-47f5-92e7-1391ef71d23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "70102672-7486-473f-964b-f6fe043263b4",
        "cursor": {
          "ref": "c7893489-19ac-499e-9c7d-d1b88fca3dba",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "507fadbc-4b44-4c91-addc-b23d4212f5f3"
        },
        "item": {
          "id": "70102672-7486-473f-964b-f6fe043263b4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f468a635-d9fc-40fe-8c9b-ef5c87875ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "414b4321-cf98-453a-9259-5b9351a7c273",
        "cursor": {
          "ref": "441696a8-6055-4ca2-aecf-d04b6864734a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "812e2520-2344-4f5d-888a-215ec4ec7c35"
        },
        "item": {
          "id": "414b4321-cf98-453a-9259-5b9351a7c273",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7ecd1a1f-0604-4141-8021-3679c7fa4f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0d43804a-8b57-4c3a-ba4c-58ebddd6818a",
        "cursor": {
          "ref": "ed9cfb19-ef5d-4b6d-87f6-26fc8e9f801d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "326aa2df-9612-4fe1-b278-5c74e32ae854"
        },
        "item": {
          "id": "0d43804a-8b57-4c3a-ba4c-58ebddd6818a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4238695e-4d87-4344-983d-01b387bf0240",
          "status": "Created",
          "code": 201,
          "responseTime": 8349,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5090d785-10dc-4f61-ac87-2e2fd9c750f4",
        "cursor": {
          "ref": "388f09ab-6f8a-4c98-af8e-9dc1be3b38bc",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "80662d06-9b3e-4694-a47a-bf331f94195d"
        },
        "item": {
          "id": "5090d785-10dc-4f61-ac87-2e2fd9c750f4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4af3d523-ec40-4e27-93de-92761b6090c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0df547c8-1e7c-403a-83dc-ec00e5de1869",
        "cursor": {
          "ref": "7cbd166e-7fd5-4f8a-beff-43875d97c416",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9114506b-c74e-4fb7-9848-891f047e9727"
        },
        "item": {
          "id": "0df547c8-1e7c-403a-83dc-ec00e5de1869",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dbb026ff-98b2-4b00-8845-b4178015c5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7627c430-9eff-40a0-90df-9815c853ed1f",
        "cursor": {
          "ref": "43f70e2b-b2af-41ec-88ae-19d810b94309",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "64f66578-2853-49e8-afa7-c2b7a0f6d033"
        },
        "item": {
          "id": "7627c430-9eff-40a0-90df-9815c853ed1f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bc888d2c-8168-42a3-8879-74e194fba5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30164c3a-70d3-44e6-bc15-ea7109375a8e",
        "cursor": {
          "ref": "d562ac91-71b0-4a83-a312-4e6bf9b3409d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "306840e8-eeed-4d75-8e96-a7f726d9cdf9"
        },
        "item": {
          "id": "30164c3a-70d3-44e6-bc15-ea7109375a8e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7fdac902-7919-4737-9d70-39bdf590e9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa8e4f8-343d-4252-8013-215a9dabfd5a",
        "cursor": {
          "ref": "85b83d09-a656-4bdb-8f3f-9a205866efcf",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9d7801fe-324c-45b3-8c83-35dce7831d2d"
        },
        "item": {
          "id": "3fa8e4f8-343d-4252-8013-215a9dabfd5a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "65e7e19b-3ea7-465f-a063-d82336749d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff458168-05da-49c9-a364-741f0c230c43",
        "cursor": {
          "ref": "6e7ce3ae-b167-4f84-b694-c44b9ed7c21e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9195d1f7-609d-466a-a378-4f1c42ed34dd"
        },
        "item": {
          "id": "ff458168-05da-49c9-a364-741f0c230c43",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f4e6b997-64c3-471d-b418-84448aedb88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e17a6d4-5632-4385-a80e-6f24382fa3c6",
        "cursor": {
          "ref": "1b55f09d-907e-4e55-b2ad-daa0930e99c0",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c90e16b8-6b58-4f30-95fa-eacf8432d6ce"
        },
        "item": {
          "id": "8e17a6d4-5632-4385-a80e-6f24382fa3c6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2b1a4914-9f91-4e84-917f-8d7bcd5a9021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b968c3-3048-48f1-ad87-83e249cbd47a",
        "cursor": {
          "ref": "f4e8fcd7-5470-4f8d-97ff-2ccd65a0f8c9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "65b60328-1b46-4695-8ae4-269f71113493"
        },
        "item": {
          "id": "33b968c3-3048-48f1-ad87-83e249cbd47a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9348d596-7aae-44ad-bc70-26f02cfb3235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a99b3cd-c9cc-4d7a-91b5-5f1d503512a4",
        "cursor": {
          "ref": "788630cc-087d-4a82-b1ff-899298d41a34",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f434d2b3-81cd-4e22-8885-4aa20f780ce2"
        },
        "item": {
          "id": "0a99b3cd-c9cc-4d7a-91b5-5f1d503512a4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5815e14c-f3a2-49f1-be66-e2684f32b9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbd5929-5ffb-4ae6-a968-d279b0d5b459",
        "cursor": {
          "ref": "15e0ba28-3752-4bf2-a166-35b63b17deb5",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d8e77db4-49fc-41ad-8358-db15b0b656eb"
        },
        "item": {
          "id": "4fbd5929-5ffb-4ae6-a968-d279b0d5b459",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8d6a76f3-dd89-4de5-91f9-b4be8bdf1a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbfd9b9-f175-44fd-a36e-033b56ec4e85",
        "cursor": {
          "ref": "b7c43ba4-af47-4bf0-bcea-66f697d279c6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bad99935-3c5f-4dfb-8970-f673e3318b9a"
        },
        "item": {
          "id": "4fbfd9b9-f175-44fd-a36e-033b56ec4e85",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "91bda67f-52f6-4d0f-bef6-2278a3dfba8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5933075e-4eaf-4573-b35a-a108bd9cef55",
        "cursor": {
          "ref": "35285130-ed2b-4ad9-9fab-fbb41c4e10b3",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dea51b9c-6afd-44a8-b85d-b33fdeb1e114"
        },
        "item": {
          "id": "5933075e-4eaf-4573-b35a-a108bd9cef55",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9059c552-6128-417b-9eff-3069ba6ae52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15524f72-552d-4c1d-8ecd-800a7f60505c",
        "cursor": {
          "ref": "b1e3e88d-5b67-4ab4-8d0c-f33a5841a9d7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6955d294-4c62-43f8-b2b6-efc8a64a60cf"
        },
        "item": {
          "id": "15524f72-552d-4c1d-8ecd-800a7f60505c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1f89063b-17b7-43df-a8c0-addd6c633c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89ae884-4126-4672-943d-8902e71b8f6c",
        "cursor": {
          "ref": "06787705-913a-4eb4-9b58-e95eaa07b6e8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1252759e-3c8f-4628-9775-1b8516167a31"
        },
        "item": {
          "id": "a89ae884-4126-4672-943d-8902e71b8f6c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "870d2be5-70fe-4158-8742-526c4396d1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09734939-9f7d-4039-a8c2-b5123312e179",
        "cursor": {
          "ref": "4f5ab4ee-cce9-412f-8533-817415da89cf",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8b244f75-7d45-428b-8af6-868f97de6b5f"
        },
        "item": {
          "id": "09734939-9f7d-4039-a8c2-b5123312e179",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "91d015d4-2798-4aec-b548-692a791c9aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424c13cc-ec7b-4c11-ab4c-17a6abdceda1",
        "cursor": {
          "ref": "e35825db-44bd-4018-8d0a-2fcfb13a2f91",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e1c33b9c-6d04-42c5-b3ba-52671645a182"
        },
        "item": {
          "id": "424c13cc-ec7b-4c11-ab4c-17a6abdceda1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c7c4fdb7-a1cc-4296-b54d-124ebf8941b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a78d77-e534-4f41-98c3-e25a277c47ec",
        "cursor": {
          "ref": "ea7bf26a-ae6c-41b0-9457-70424ce2b134",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "753294ee-9b96-4621-b306-c4d99c3d36c9"
        },
        "item": {
          "id": "00a78d77-e534-4f41-98c3-e25a277c47ec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5bbb21c7-8d6b-4c51-b216-f590bc3d554b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba45436-ab36-4664-b494-cf34d4ac60cb",
        "cursor": {
          "ref": "909e35f5-7654-4dc6-a1f0-a720ead4df3e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4b156d1b-063c-443f-b128-cb727e3cb619"
        },
        "item": {
          "id": "3ba45436-ab36-4664-b494-cf34d4ac60cb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7edd27a5-dcce-4008-8b12-f05ca82eaff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0e434d-324b-4cd3-b6cd-f8adfe68c015",
        "cursor": {
          "ref": "5d4b0924-8065-41e6-bdc0-ada697a2ee40",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3dabb3c5-bcb0-418c-ac14-04f5daa8e04b"
        },
        "item": {
          "id": "3e0e434d-324b-4cd3-b6cd-f8adfe68c015",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b3992685-e4ee-4c3d-8577-3fd99b4f4610",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c9f5a90c-f3c6-442b-b3ac-ac05e39ea5d5",
        "cursor": {
          "ref": "0604ecce-1322-42b1-b936-df0d13819e6a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bc118ac9-361f-4714-9572-487687f5b971"
        },
        "item": {
          "id": "c9f5a90c-f3c6-442b-b3ac-ac05e39ea5d5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dc25a65a-5151-4d01-8b88-184cf0802d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17a3964-8689-458f-bff9-4d91b197c9d9",
        "cursor": {
          "ref": "f2effebc-f38f-45d6-ae3b-83c5b0b4b11d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "255e8367-76f0-4b12-baeb-fe94fb99241e"
        },
        "item": {
          "id": "a17a3964-8689-458f-bff9-4d91b197c9d9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4242aa54-324e-451c-b357-670b01f1de6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e88924-7300-4f6b-8f76-01f2ac7a865f",
        "cursor": {
          "ref": "402c6a9e-cb68-4979-be6e-7d27eb4d5fe9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "460b5f36-0b52-40cb-8f3e-4f7491bb5313"
        },
        "item": {
          "id": "47e88924-7300-4f6b-8f76-01f2ac7a865f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "52b3bbcb-f86d-4172-81ef-d28cf438dcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a95348b-10f2-41e0-be53-b321605147a0",
        "cursor": {
          "ref": "5bfb2d03-3934-41d9-bec8-132578320e05",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "379ad53b-de12-49a5-acb4-1b7b22988c2f"
        },
        "item": {
          "id": "8a95348b-10f2-41e0-be53-b321605147a0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e4283af4-c1f8-4e73-b2a9-559ea0c8d738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6813d6d5-a772-4286-ad65-96338b9b2663",
        "cursor": {
          "ref": "cd7e1546-944c-4500-87e6-3ea57e82595d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fa9d9022-7a79-4bc9-8b0d-69b40e7f1e6c"
        },
        "item": {
          "id": "6813d6d5-a772-4286-ad65-96338b9b2663",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "052210d4-c1fb-4430-8471-60d6866812eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfa540f-7a89-43ee-92b0-26779f90bb36",
        "cursor": {
          "ref": "b712ca5d-cbb0-4562-9e35-e64820424f9d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1c649963-bdf6-4f35-98dc-27c4390ad87f"
        },
        "item": {
          "id": "adfa540f-7a89-43ee-92b0-26779f90bb36",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3010308b-4995-40fa-85b5-d23452a76b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d3ce77-0fb5-4b48-bfb0-b96f423d347a",
        "cursor": {
          "ref": "969939a6-be97-4032-ba5f-cbc44f186b1d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c8aa1ddd-9c5f-40dd-ab44-ac7fbd4ef8de"
        },
        "item": {
          "id": "28d3ce77-0fb5-4b48-bfb0-b96f423d347a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2128d9d9-3825-4fa3-8adb-1edc3afb4446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bcb1e9-bc44-4827-b95a-11f98950a7e2",
        "cursor": {
          "ref": "70363a1a-a3ec-4e2a-995f-b0255d083a79",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "50cd4274-28d9-4f94-b748-ce497d98d366"
        },
        "item": {
          "id": "50bcb1e9-bc44-4827-b95a-11f98950a7e2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "988d59e0-5e4c-4da6-95cf-75cd987c9b7a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "bf852f94-f819-4f5c-a1e2-30cc5252f1b9",
        "cursor": {
          "ref": "f8afacc4-3315-4229-9e35-685739c3d4ac",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "457755d8-8e7c-42dd-96dc-e613a052050f"
        },
        "item": {
          "id": "bf852f94-f819-4f5c-a1e2-30cc5252f1b9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b98f4ba2-ef35-4fc5-a190-f97d9bce69a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfe8aaa-0e61-4c24-8b4a-ff22907743d9",
        "cursor": {
          "ref": "c2bb60f8-f96a-4c40-8e54-1bcd5cd6b9ff",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7e814626-9031-42b1-9fc9-9142fc7d75b4"
        },
        "item": {
          "id": "9cfe8aaa-0e61-4c24-8b4a-ff22907743d9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "123c0be1-1dab-4af2-acf7-eb7ad6a3704c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3a7b20-20a8-4e70-a8c0-b391b040c4aa",
        "cursor": {
          "ref": "2e25590d-33d6-4a88-8aa4-df03a450accf",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1ad8d21f-eae0-4792-a3d1-3da6cd34fda6"
        },
        "item": {
          "id": "ec3a7b20-20a8-4e70-a8c0-b391b040c4aa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11940fb9-4b20-4e1c-a9e4-e34ea041689f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a796e90-2ebc-4598-8140-d1ecc264bb16",
        "cursor": {
          "ref": "dcc28f87-be31-499b-a355-412bc2d13915",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e2fc2895-d044-4a09-8478-e16bd3b81542"
        },
        "item": {
          "id": "9a796e90-2ebc-4598-8140-d1ecc264bb16",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "48251b6e-10d2-4843-921f-9f1f72da418e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d624fe9-193a-47ba-849e-2ee275cb0e8b",
        "cursor": {
          "ref": "de4af838-c537-4d0f-a049-f3dd10a37471",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d5a23270-bdec-4ab8-bb09-27cef7152bb7"
        },
        "item": {
          "id": "3d624fe9-193a-47ba-849e-2ee275cb0e8b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c0db82df-2576-4b90-b890-294c92601a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5615980a-d32e-4f0a-8c08-5999fdb905a0",
        "cursor": {
          "ref": "68935dc4-5b86-4f69-8337-2d2cc304fefe",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8556316b-0512-4416-9b30-e55f49168d0e"
        },
        "item": {
          "id": "5615980a-d32e-4f0a-8c08-5999fdb905a0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "66ae2551-d2e9-43f8-8d18-ef17f9fa7ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ea2457-0a6e-4b4e-841a-61bba59bf970",
        "cursor": {
          "ref": "6f91606b-d0f1-448c-9ce2-86884f9fbd9b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "115e990f-10f7-46b1-9c92-afabb0235973"
        },
        "item": {
          "id": "71ea2457-0a6e-4b4e-841a-61bba59bf970",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1e54e499-fd35-4fad-8a55-f073c3bc0721",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 102,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "bcd1c1d0-88e8-404c-b17e-dabfd0392cd0",
        "cursor": {
          "ref": "d35398dc-8cce-4876-a0db-22f2708321eb",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9a5d83b8-0366-4446-8cc6-774a5c1d0fde"
        },
        "item": {
          "id": "bcd1c1d0-88e8-404c-b17e-dabfd0392cd0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "84850ddc-b2a8-4d57-a9b3-1b8455e0fddc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebff07ca-7ec9-470f-a0df-fa2abfd5ff82",
        "cursor": {
          "ref": "8aa172c5-27b0-426f-be5d-fadddf8e2bcd",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b2e71935-b32c-4e92-b10c-19fd03342a9d"
        },
        "item": {
          "id": "ebff07ca-7ec9-470f-a0df-fa2abfd5ff82",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6f8706bf-ea1a-401e-ba0e-532fdffccc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7020e3-e0a2-404d-be91-1f3cae355df3",
        "cursor": {
          "ref": "811fad65-51e2-4bbf-8079-c04f9ef9ddb6",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "47475be9-a9a4-43a0-9932-4fbd344a2ff5"
        },
        "item": {
          "id": "bc7020e3-e0a2-404d-be91-1f3cae355df3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "87762776-3308-49f4-a032-50b1c40a7746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a800009-b142-460a-8b5e-234d14cc06cf",
        "cursor": {
          "ref": "7877ac60-7497-405e-b2a9-ec634f919df6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b448c468-ec47-40f5-8595-eee81663dd36"
        },
        "item": {
          "id": "4a800009-b142-460a-8b5e-234d14cc06cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fa54ba57-ed03-4943-b803-d1d9210cc1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c5aae8-91c1-42bf-9a9d-9569f22e3fbc",
        "cursor": {
          "ref": "723ebeed-dfff-425f-a71b-b48c642adbba",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5583b214-0bfa-45bb-9ef9-db703e241dbc"
        },
        "item": {
          "id": "26c5aae8-91c1-42bf-9a9d-9569f22e3fbc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "94014733-f534-402c-a6d8-1f68ae2386b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f0b060-efdf-4800-85ff-4fccf46461a9",
        "cursor": {
          "ref": "5c217d15-42d2-470c-bc96-bb55852e0933",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2e1c0519-f9b1-4c62-999e-a130c0f1cb42"
        },
        "item": {
          "id": "b8f0b060-efdf-4800-85ff-4fccf46461a9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4a7a8c34-2c43-45f0-be92-87dfe94e2661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8df6f49-487b-400c-b891-54fc0718b628",
        "cursor": {
          "ref": "35bcc999-19a9-4b68-8442-8e080dee66f0",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "136424ae-d582-4706-a565-3895633661e6"
        },
        "item": {
          "id": "f8df6f49-487b-400c-b891-54fc0718b628",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5877eda8-73e5-4aab-9156-e2c3ba03c3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e1cf92-cd43-478d-81e4-b21bb36cd762",
        "cursor": {
          "ref": "85ab4c70-078d-406b-9f10-dc6e1c85459a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cda943f3-f963-41bf-96a4-febefcfc6408"
        },
        "item": {
          "id": "f5e1cf92-cd43-478d-81e4-b21bb36cd762",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0dc589e9-7a8f-4392-8941-037ca7b51b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc206850-b9d6-475a-9ea5-a1a9c47dfb10",
        "cursor": {
          "ref": "12441001-6e30-488a-b38a-0adb5a5142c0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "de1edf29-2f04-45fa-9f4d-1b78867fc8fd"
        },
        "item": {
          "id": "cc206850-b9d6-475a-9ea5-a1a9c47dfb10",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c08c093-02d4-43fc-b272-bbb6d45dbabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730be3d3-9511-428f-89db-9bc068b920be",
        "cursor": {
          "ref": "14eef20e-a3ae-421c-b456-e369991b696b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bda609ff-f89d-4c82-92a3-520ab2878234"
        },
        "item": {
          "id": "730be3d3-9511-428f-89db-9bc068b920be",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "27057858-813c-4b0a-b503-fe9a74cb5944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee21a097-b7ee-4920-96c1-44370c986078",
        "cursor": {
          "ref": "268d086e-dfd0-4b5c-a126-539b9c9aeb8d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9b6fc295-2ce4-4d02-a72f-66de0fe99dc7"
        },
        "item": {
          "id": "ee21a097-b7ee-4920-96c1-44370c986078",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4c2bc15e-3cf6-4d65-9c00-3e82cdd91768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aec9ef3-53dd-4d87-81fd-a6e3f75e772d",
        "cursor": {
          "ref": "761ce7cc-5730-42f9-85e5-dacd2afd6121",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cd9b8317-3a55-46e0-b357-d4b6219560dd"
        },
        "item": {
          "id": "1aec9ef3-53dd-4d87-81fd-a6e3f75e772d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b6057852-78eb-4b95-9414-99143d9ef12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e8e088-c434-43e3-9746-18d9776b2c6c",
        "cursor": {
          "ref": "97888b45-0c6b-44e1-bdc6-d7108340860c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c804a627-e146-47dd-8fe7-9546803e2f1a"
        },
        "item": {
          "id": "d9e8e088-c434-43e3-9746-18d9776b2c6c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ea074c3a-0677-49d8-a823-2a3ec9091c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bea862a-6d98-49ef-bd39-312efbf2d292",
        "cursor": {
          "ref": "49cfde10-eb4d-42d9-bc27-d0860c612860",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "46e0a729-530e-4850-b7f0-a4e592e5025c"
        },
        "item": {
          "id": "0bea862a-6d98-49ef-bd39-312efbf2d292",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f982b180-a622-40cf-9aa2-4694954ee35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420feaac-bd3a-4b41-8216-30006da81b1c",
        "cursor": {
          "ref": "29bd5428-834c-42f7-bfe6-8741acd5d122",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "abe43bf6-793e-4e35-8ae7-f4b85df7530f"
        },
        "item": {
          "id": "420feaac-bd3a-4b41-8216-30006da81b1c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c6453d1-17f6-43f2-9188-b281262ba158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086d1b04-92cd-4072-afcb-6d3c78684c61",
        "cursor": {
          "ref": "cdb25fcb-a0dd-45ca-99f4-98e4a72b5530",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bf53bf29-3b43-42af-aa49-63255b1178d9"
        },
        "item": {
          "id": "086d1b04-92cd-4072-afcb-6d3c78684c61",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1c2de520-2019-4fb1-b1ea-cc606d74951f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feca2062-8d21-4921-b03a-baaf9afbed60",
        "cursor": {
          "ref": "235420a1-5900-435c-9b77-83b1ff77a4bd",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "89d1143c-ef59-4674-8d7b-813e3da40153"
        },
        "item": {
          "id": "feca2062-8d21-4921-b03a-baaf9afbed60",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8b2bc22f-6eeb-4424-be58-6eb65a0cb62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d2a25a-09bf-4615-9c3c-bfde67bc95a7",
        "cursor": {
          "ref": "77704179-ca6f-48ce-bdd3-b86ae26261d9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "abf30f7c-32e4-45ec-b304-5a6a235049f3"
        },
        "item": {
          "id": "56d2a25a-09bf-4615-9c3c-bfde67bc95a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ee8e4e01-e366-4183-8c4f-b9e1491447f1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "a731d2b6-09dc-4c30-93d7-f11a06b2dc51",
        "cursor": {
          "ref": "e84c1fe6-db73-4151-bbfb-967857c7bf1a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "244b75ac-3733-4daf-a889-1a8155ce79dd"
        },
        "item": {
          "id": "a731d2b6-09dc-4c30-93d7-f11a06b2dc51",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b6f15999-fbc6-4d6b-9ffc-19d619390765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6eb5ea-7d4e-4d1a-848d-c5a2e8f4d70f",
        "cursor": {
          "ref": "de6e54d7-5054-4951-9845-58ec8fe2bc51",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6212dc8d-a1d9-496b-813c-2081670eff1b"
        },
        "item": {
          "id": "ef6eb5ea-7d4e-4d1a-848d-c5a2e8f4d70f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ef72baf9-6d6e-4f8b-8d7e-00aff6185d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafe3edb-a1e5-4b98-bf6b-fb2da64caea2",
        "cursor": {
          "ref": "18215069-83be-4f16-9cfa-d7015ecfc870",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "93264ebb-4fa1-4f90-853d-7df27650444f"
        },
        "item": {
          "id": "dafe3edb-a1e5-4b98-bf6b-fb2da64caea2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cbfd78c6-da36-4f7a-a851-e209c736d1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3475609-92ef-4ad2-9a56-239132a0ba5a",
        "cursor": {
          "ref": "3aac7736-7c5e-4241-86a7-3a43246e2dc8",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c132463b-3bd5-4718-921d-b8060a1e5043"
        },
        "item": {
          "id": "e3475609-92ef-4ad2-9a56-239132a0ba5a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2ee2ef65-59e4-40ec-b8a7-3bb87adb0968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03981e7e-9983-4c42-9369-9eb24d148dec",
        "cursor": {
          "ref": "909c02c1-90ac-43a8-9a58-8ec662e41280",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "aee6b073-7b35-4853-8a08-5ee00d7b1566"
        },
        "item": {
          "id": "03981e7e-9983-4c42-9369-9eb24d148dec",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3c2c3b2e-e62b-4ab6-bb9e-755ff7d300b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bcabb9-5ce0-4d27-b74c-e5d9014b6495",
        "cursor": {
          "ref": "2e8113c3-7950-4623-8205-243a1a93ec5e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a2b72554-1868-4313-8ae0-026b3f6b8630"
        },
        "item": {
          "id": "b4bcabb9-5ce0-4d27-b74c-e5d9014b6495",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "caa6474b-cf15-4a3d-8002-eaafbd7bc624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4af14a2-eef0-447b-8bb5-295de525e92c",
        "cursor": {
          "ref": "909d256f-dd6f-4d1e-8530-319a4f24e051",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "048283fc-e500-4911-8c8f-201f4f039999"
        },
        "item": {
          "id": "c4af14a2-eef0-447b-8bb5-295de525e92c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3f84a7c0-cdad-4d63-b7e8-dfcbfc4f3c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3c19fc-4110-4a00-a3a9-97b6598e8cfd",
        "cursor": {
          "ref": "7dca7273-1cf0-40fe-8a1a-5f62ed9bcb27",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "49667935-63d7-4b2d-9d1e-f9ef29974880"
        },
        "item": {
          "id": "5b3c19fc-4110-4a00-a3a9-97b6598e8cfd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b825455e-3c0c-4eec-a9f1-7706fe2017fd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "29d46d65-2bd3-45ed-80d5-97b17ca3f354",
        "cursor": {
          "ref": "f20d4bc8-414c-48cf-b483-188563cb61c7",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "dfe34ad3-1491-400e-a16c-84fe0d3f3c02"
        },
        "item": {
          "id": "29d46d65-2bd3-45ed-80d5-97b17ca3f354",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "abcf226e-af40-4eeb-98f4-375332bbee19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610c5c66-a892-4ee7-93f7-5ec3654bd0a9",
        "cursor": {
          "ref": "3fc7ce4e-9386-486a-b1e9-6c7aa67b736b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "281203ca-fbc4-4bc2-9628-6c688802291b"
        },
        "item": {
          "id": "610c5c66-a892-4ee7-93f7-5ec3654bd0a9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a163ba6a-5ab8-457b-beba-7c46cc309b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3808aa-b975-4c39-a8ad-c053024ea596",
        "cursor": {
          "ref": "5dc52d17-98e9-41cb-b35a-00385ce33689",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "10f959e8-7454-4670-b8ff-597aaa29d1ec"
        },
        "item": {
          "id": "ef3808aa-b975-4c39-a8ad-c053024ea596",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9dbcfca2-c91b-45a7-bac7-59a22d84dd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43551b0-5bb8-48bb-acd3-45db953a5688",
        "cursor": {
          "ref": "4ac721cb-f131-4d0a-a67d-9922383152b6",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0c61cdca-7991-4036-b46a-0db76fd36e44"
        },
        "item": {
          "id": "c43551b0-5bb8-48bb-acd3-45db953a5688",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8398acbd-55aa-4456-a28f-e5e8383845d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86345a36-6c03-42a9-bafb-1091634fdd9c",
        "cursor": {
          "ref": "09a038bc-e04d-45f2-ba7c-bf2f5e668077",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d30be6f2-5ec9-40ee-9774-c34087b22c9c"
        },
        "item": {
          "id": "86345a36-6c03-42a9-bafb-1091634fdd9c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7b484e8a-20be-47ac-867d-39a89c93fd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc41c543-0048-4577-aaaa-397b80e2e022",
        "cursor": {
          "ref": "5bb47104-c4d1-4b70-881d-9d5373a7e5d6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e785a109-c279-4090-a1f7-2fb3f4d1dec5"
        },
        "item": {
          "id": "cc41c543-0048-4577-aaaa-397b80e2e022",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "76bef94b-6a08-4a53-bcf6-d2a528ad7475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc2843f-c0f0-4aa1-8b4d-2cc47437762f",
        "cursor": {
          "ref": "53f2f45d-6edb-4842-b2bf-706a0ea031be",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cc7cf0d8-1202-46e1-b007-efd602d6e516"
        },
        "item": {
          "id": "3cc2843f-c0f0-4aa1-8b4d-2cc47437762f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "98fc4d96-0564-4fa2-90e8-51bf356cef0e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 55,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "766371d1-1023-4977-ae03-65ed4d741ede",
        "cursor": {
          "ref": "b71dd4e1-30b5-4e0c-916d-b28a94c170c9",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "173a36fb-def5-4eb4-9b9c-5979c73f902c"
        },
        "item": {
          "id": "766371d1-1023-4977-ae03-65ed4d741ede",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7cee4ad1-e044-4c34-ba5f-2195322aab6d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "4d14f413-ce27-4d7e-a4a6-328e4aec8f67",
        "cursor": {
          "ref": "4a91a193-6a4d-4d26-8bba-3de0b1b3e430",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d51b404a-47e8-46e9-a59d-93f5f44e55da"
        },
        "item": {
          "id": "4d14f413-ce27-4d7e-a4a6-328e4aec8f67",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "90db3871-1a3d-43db-acb0-d87e1b625c86",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "8f61e2e7-5938-4ff6-8e5a-3dc70601c59e",
        "cursor": {
          "ref": "1a8a5221-7bc4-43fb-b7e4-0d3e895fbc08",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "38d693e9-a54b-43c6-a2c2-549e8817840e"
        },
        "item": {
          "id": "8f61e2e7-5938-4ff6-8e5a-3dc70601c59e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "37ded659-c573-405e-b96a-7da5ae6e2039",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "9a89948b-fb39-4cc7-a59e-a9aaa696d553",
        "cursor": {
          "ref": "92a4a6db-151d-40c7-b5c3-2ccae3e5160f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "62421acc-482e-4f55-ae62-1a5fb607d331"
        },
        "item": {
          "id": "9a89948b-fb39-4cc7-a59e-a9aaa696d553",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d823e50e-04be-43d5-90cf-85bd57eb9cfd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "31592e94-4fc6-4859-ad58-4809825f9792",
        "cursor": {
          "ref": "6e6f32e6-b7d8-4b0b-a7f0-133f43a97e08",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e88d217c-1142-4b01-9b04-aed8a5e7c4f6"
        },
        "item": {
          "id": "31592e94-4fc6-4859-ad58-4809825f9792",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9f298fdf-05ff-4051-9e03-8233760c223c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "93f0fbc5-a170-489d-90d1-71851a125368",
        "cursor": {
          "ref": "f1339fb5-0a24-41d3-bf3c-3689a15544a4",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7d432290-c5ce-4279-b6be-b7a0ceb35627"
        },
        "item": {
          "id": "93f0fbc5-a170-489d-90d1-71851a125368",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "030b8292-2f67-46b4-b5f7-be0475471d6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a41bc7-9944-4365-b6c5-b2ce4659d634",
        "cursor": {
          "ref": "76038134-44d4-4e61-9090-067969865280",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "33d16f35-f679-428e-971c-4c7b68a6e467"
        },
        "item": {
          "id": "33a41bc7-9944-4365-b6c5-b2ce4659d634",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5ccaf01a-cc99-4070-808f-595efe49fc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d001dc3-a22e-45f4-9fad-677ff5be84d9",
        "cursor": {
          "ref": "bcaa8d43-7489-477d-bc74-7650a66b939c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3394090c-02c9-4827-9a87-3f26fc344997"
        },
        "item": {
          "id": "2d001dc3-a22e-45f4-9fad-677ff5be84d9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6a032e77-d126-49ac-9563-c1bbfe6dc82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404cfa77-5149-484f-a217-0a039945b84e",
        "cursor": {
          "ref": "ccf69915-d967-4a38-a8ac-65318c2f8f5c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2a336ce2-b174-44ac-8a22-de745d6a320e"
        },
        "item": {
          "id": "404cfa77-5149-484f-a217-0a039945b84e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3926f3f6-d381-46bf-a392-177d213369ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783fd969-1711-4ef7-aab0-ee8bdc2ce745",
        "cursor": {
          "ref": "edf7912a-d207-4e20-a8b2-e9b33c980603",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "49c59489-3c05-44c6-b7df-40784b83eae7"
        },
        "item": {
          "id": "783fd969-1711-4ef7-aab0-ee8bdc2ce745",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5756d298-5aea-46f4-8ecb-bbe897b5d81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23e34e5-15ad-47eb-9ef8-3088a025fd7e",
        "cursor": {
          "ref": "6fe3c25b-8ca6-4404-bcf9-ff4e7315e506",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e11c7f72-9f41-4187-bfa2-1076cb64bf2f"
        },
        "item": {
          "id": "f23e34e5-15ad-47eb-9ef8-3088a025fd7e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f4b83e21-b040-4b6a-92c5-2736a8d69a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f98bfa8-5eee-4cb3-ba80-3620e612d1a4",
        "cursor": {
          "ref": "a5a73099-f488-43ae-b1d5-79eb228c017b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "98bc32ca-8177-4e7a-840b-b1b9e7883322"
        },
        "item": {
          "id": "5f98bfa8-5eee-4cb3-ba80-3620e612d1a4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a36aea93-dffd-4ac4-ae4e-b538a872ca88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d948f1-2b56-4f1b-b1a4-3738c411a817",
        "cursor": {
          "ref": "ab894a6c-b8d0-40d1-9cb3-8175decd5fd4",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f96fabbd-0d1f-48d6-b293-6302218bac80"
        },
        "item": {
          "id": "78d948f1-2b56-4f1b-b1a4-3738c411a817",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9ad8d6f9-2ac7-4901-982d-1eeb3a41655d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144c859a-1cc9-43f5-8e97-b71f0a7d8476",
        "cursor": {
          "ref": "77dcdb93-17a7-4c5b-b773-723cd5570d26",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5d46da6f-43d9-4972-bd14-1c8706853861"
        },
        "item": {
          "id": "144c859a-1cc9-43f5-8e97-b71f0a7d8476",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0505132f-06ce-4c35-bf74-1a83525d3862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d00ca20-b201-4b9a-90bb-5c0d3a4ccda5",
        "cursor": {
          "ref": "c53f131d-da8e-48f6-ac3a-2b0113cb14a9",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a50f2b8b-91c3-403f-a715-3247602fce70"
        },
        "item": {
          "id": "8d00ca20-b201-4b9a-90bb-5c0d3a4ccda5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7fcd5341-2b17-4c19-bebb-3372dc5fca85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6fe4ee-3eda-4b93-9ca6-102ac8ba0c40",
        "cursor": {
          "ref": "d9a1c09c-ed32-41a2-b3dd-481c47c613a0",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8e399e74-6fd8-467f-8364-8d55598536bf"
        },
        "item": {
          "id": "4d6fe4ee-3eda-4b93-9ca6-102ac8ba0c40",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3b7da493-9452-4827-bf31-b40e6be92c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22731aae-1b3a-45d2-8205-4b0dd443ddcd",
        "cursor": {
          "ref": "274eb36f-e6ef-4494-9afd-4840eab9f88c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fc09a2ec-664a-4e25-b148-655ca0c7f655"
        },
        "item": {
          "id": "22731aae-1b3a-45d2-8205-4b0dd443ddcd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5843f8be-d80f-48f2-8e30-f4945bb486d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048ebec2-5069-4825-88a0-86b4f244ff30",
        "cursor": {
          "ref": "6aca849e-10aa-4a4c-8520-52a1e1b84650",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2da64e42-df83-4839-baeb-0a8ee2c482ca"
        },
        "item": {
          "id": "048ebec2-5069-4825-88a0-86b4f244ff30",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "816af7c6-b33b-4a38-bae2-4d4524d36f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dded59-8a13-4ac2-8764-85fc3ebba0f9",
        "cursor": {
          "ref": "135c011a-c3aa-4205-a53f-dbddb98b5368",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "94146615-ae2d-472d-a4ce-54ec9892a274"
        },
        "item": {
          "id": "97dded59-8a13-4ac2-8764-85fc3ebba0f9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eb0b4c7a-808a-41d3-8712-9f6421d67f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd65fdb0-e72a-4e6b-a72f-ea039d27f007",
        "cursor": {
          "ref": "78422001-af57-4a9e-991c-0c5a2e7a668a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "87f32983-e03f-48f7-a2e0-75643f7bbddd"
        },
        "item": {
          "id": "cd65fdb0-e72a-4e6b-a72f-ea039d27f007",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c4793bfe-2281-4caa-9e28-ed71ae93bf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd01596b-0605-431c-9f2f-fe21e0c0dade",
        "cursor": {
          "ref": "31e559a6-22f3-464a-8f5d-5754c441c937",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "17bde46c-57b4-4cb3-a849-00f7a2f7f19d"
        },
        "item": {
          "id": "fd01596b-0605-431c-9f2f-fe21e0c0dade",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a7f2fed0-b86d-4976-b754-4ed54ea4af42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9a0641-d43d-4548-a052-f05caedeb2be",
        "cursor": {
          "ref": "267a0d6b-6c85-42f3-87b9-d81d4afb9db4",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "177b7a5d-8482-4550-b7e4-742f2ad47ba8"
        },
        "item": {
          "id": "dd9a0641-d43d-4548-a052-f05caedeb2be",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a8d6cffc-59b8-4758-9ab7-00b5d4c5b127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fce454-f4cb-4a15-a3f5-07ee3edd9c90",
        "cursor": {
          "ref": "75ea89dd-9527-4b29-8b76-1017c4c235f0",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bbdfb93d-5a25-455a-b58a-4c5d70b90d94"
        },
        "item": {
          "id": "b0fce454-f4cb-4a15-a3f5-07ee3edd9c90",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9deb07ac-58d1-4bba-860a-36c2c2190719",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "767445b5-785c-41f0-a35f-eb887020fb43",
        "cursor": {
          "ref": "0bdc68fb-1076-43f9-b1af-d6cb00871f4a",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cabefdfc-c705-432e-a675-d1ff26d26be6"
        },
        "item": {
          "id": "767445b5-785c-41f0-a35f-eb887020fb43",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4939b10e-53c0-49a5-a04e-a5028179b3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036dbebe-cb5a-4e7b-8411-820e93de77e3",
        "cursor": {
          "ref": "7a647d64-0899-48a5-be2c-4dc0597dd167",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c2a023ac-e845-4613-a8a0-0a8120271124"
        },
        "item": {
          "id": "036dbebe-cb5a-4e7b-8411-820e93de77e3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "34f2af81-ef03-465c-977a-9d5df95b6e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170fe118-33ce-4e51-a92c-0122b3f3d8fc",
        "cursor": {
          "ref": "430fb107-18d1-4757-907f-c2292be23d4f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8030572d-0fbf-423d-8886-2a77fdd0b429"
        },
        "item": {
          "id": "170fe118-33ce-4e51-a92c-0122b3f3d8fc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8336279e-7371-4296-a363-a59ee584dc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1a113f-16c3-483b-ba4a-2d0c7b4aaf8e",
        "cursor": {
          "ref": "15f6d057-953c-4c9d-921a-63de8fad6d10",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "18473880-687b-433f-90e7-c5773e141bb1"
        },
        "item": {
          "id": "9f1a113f-16c3-483b-ba4a-2d0c7b4aaf8e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aa5a11e9-8e7b-4829-a93b-97bd440ec54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814aa88d-cf3d-4be4-9d1b-443829387590",
        "cursor": {
          "ref": "12739909-ece4-4c9a-b75c-9357142bab48",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2a5efb88-6204-41a4-a6e6-b9c1e085c7b9"
        },
        "item": {
          "id": "814aa88d-cf3d-4be4-9d1b-443829387590",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7c799647-b362-42ab-a6a8-ff128884d528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb74b1bf-0863-458a-8f33-108a9efec4a6",
        "cursor": {
          "ref": "a422c220-d428-4dee-9ddd-692484f6cfbd",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ecc91b80-dd5b-4b1e-9ed8-66f0c2d845fe"
        },
        "item": {
          "id": "eb74b1bf-0863-458a-8f33-108a9efec4a6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "49e5a66a-59a2-4f8a-ac1d-525f10d2b93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad5ce57-92db-42b6-bce0-e2e6837f9ab9",
        "cursor": {
          "ref": "f1faf08f-0f54-45c4-ba6c-33543d6f5be0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "40448fb9-029e-47de-9b8e-44dc9e22b5f2"
        },
        "item": {
          "id": "6ad5ce57-92db-42b6-bce0-e2e6837f9ab9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "13f606b8-2259-4c1a-8b93-1885c751703f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f59d63-0b21-4339-9d27-efb181945a60",
        "cursor": {
          "ref": "fdff77c0-59ca-4858-96a1-d3d80c613f2f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d928bf1d-1688-4c4c-9f2c-e40a115e84e5"
        },
        "item": {
          "id": "c2f59d63-0b21-4339-9d27-efb181945a60",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4f57f1df-8940-463b-a2fd-fbc2c5620440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9efb2a-c5ab-4f5b-8bfb-7a135d7ab222",
        "cursor": {
          "ref": "c05b8d6c-541c-4b7b-8ec8-636ff828a65b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d8c25b5b-3c16-40e9-a5d0-6b064df2e33d"
        },
        "item": {
          "id": "0e9efb2a-c5ab-4f5b-8bfb-7a135d7ab222",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1ea7a01e-e1ab-4cee-8969-1f7b5beafbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d2b365-0c42-477b-8701-0a07501e3cb8",
        "cursor": {
          "ref": "8a374042-6b58-4d88-b571-97a8ba47b294",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5e6d654e-6f87-422e-a968-786b6edad671"
        },
        "item": {
          "id": "46d2b365-0c42-477b-8701-0a07501e3cb8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9231811b-fb5e-424d-bb51-8defa14782d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d292ce5-bfc6-4193-ad34-3981d4198a92",
        "cursor": {
          "ref": "72cdd047-9bd8-48b8-b60b-15b304c613ff",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a131da84-d5a7-44a5-903e-886e4e3f6dd8"
        },
        "item": {
          "id": "7d292ce5-bfc6-4193-ad34-3981d4198a92",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3fcb9f03-1e61-49f5-9dc4-a1516ea3cbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a56338d-cbfb-4a50-9e9f-52c7518f370a",
        "cursor": {
          "ref": "cf4c6495-306b-483a-bf0e-1c249bc21530",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "42dac069-3ed6-42c0-b996-064acd433dc8"
        },
        "item": {
          "id": "6a56338d-cbfb-4a50-9e9f-52c7518f370a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9b742b20-b5c4-41f1-8dce-3410b97eff80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f343ef8-9f3c-4906-815b-fa56d0176158",
        "cursor": {
          "ref": "48b6af2a-49da-4986-9147-a9d63c81e556",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "29c20b10-e481-4544-a94e-665f9024a40e"
        },
        "item": {
          "id": "7f343ef8-9f3c-4906-815b-fa56d0176158",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "16fbb27f-7fc6-4d63-8b93-786b4167415c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a93a2a1-0015-4f81-9f81-92b01c1b01bc",
        "cursor": {
          "ref": "ab9d8710-1acc-452a-840d-314606457fd9",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d5ef4eaf-1cbd-4983-a129-295b697a0067"
        },
        "item": {
          "id": "1a93a2a1-0015-4f81-9f81-92b01c1b01bc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "667a5543-55f1-4126-bc9b-72c754c0542d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf74ec98-0102-4fec-a67c-1e910d3d58a0",
        "cursor": {
          "ref": "8661fc7f-4440-4d94-8b20-903ac0cbb75e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6b105faa-ab82-4ad0-a27f-10fe8777f5e8"
        },
        "item": {
          "id": "bf74ec98-0102-4fec-a67c-1e910d3d58a0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0b7c454c-e2f6-47bf-ac3f-f0d486ee1022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4d0233-514f-441b-8c0a-4d74453c86cc",
        "cursor": {
          "ref": "31a49f9e-b7a6-4826-88e9-6e1d734782a1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "60a2280a-ff9a-41eb-932b-86e4f287a414"
        },
        "item": {
          "id": "0e4d0233-514f-441b-8c0a-4d74453c86cc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "256ade83-ae9b-4aa1-9e2f-11a5f8fa32a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5f6693-03e0-4deb-85dd-b4f36373f72f",
        "cursor": {
          "ref": "c8bb8bfc-4a73-4c71-8c9a-a278b56b9fc4",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8f25f046-c03f-4fee-929b-01c1e45bc434"
        },
        "item": {
          "id": "be5f6693-03e0-4deb-85dd-b4f36373f72f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c00ee574-fb89-4550-8fe3-eec74024d4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d238e9-e891-4b19-b4af-f219465cb5de",
        "cursor": {
          "ref": "4e862c47-eea2-48a3-8a15-afa4753126fd",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4d79b405-1271-454c-8142-21e194912735"
        },
        "item": {
          "id": "a1d238e9-e891-4b19-b4af-f219465cb5de",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9175ef4d-4ecc-4480-8924-fabe38a5c502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3201ade-63e6-4535-a607-deadff610391",
        "cursor": {
          "ref": "928c5101-8549-4301-b168-b9a33a7029df",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "33c23f8a-19ef-4090-b3cd-2600b17685ec"
        },
        "item": {
          "id": "f3201ade-63e6-4535-a607-deadff610391",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3c3979a5-3ffb-4ee7-9df4-7537cd733d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeda38b-940f-4224-9d6b-77f02a88a3af",
        "cursor": {
          "ref": "7f9e3b75-b4b0-416a-816e-615a6a41a8c2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e69191c7-d857-4230-a09a-0b0473d712e5"
        },
        "item": {
          "id": "ffeda38b-940f-4224-9d6b-77f02a88a3af",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6b9f84f3-5c5a-4184-b50d-1aefda472ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bc1a75-a909-4fa7-9763-01d966ae8b95",
        "cursor": {
          "ref": "5e2ef9f4-100e-4e65-b3e1-5ee41740d5cb",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1e75bfcd-e77a-40b4-9b3c-861826ea30eb"
        },
        "item": {
          "id": "b3bc1a75-a909-4fa7-9763-01d966ae8b95",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "41f48de3-8334-47af-ab86-26bb9449c52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a8b20a-6a1a-4068-a32b-fb1123a61d16",
        "cursor": {
          "ref": "fb3c2b55-cb78-452f-b117-d8eced684361",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0adab403-af8d-4299-a8a9-d23b31338d18"
        },
        "item": {
          "id": "14a8b20a-6a1a-4068-a32b-fb1123a61d16",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e2a73d88-b979-46e0-b6b8-b79db4e0b84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42995615-fafb-43b9-bc9b-1ae0a8445bc0",
        "cursor": {
          "ref": "bb1e810a-d9de-4f46-9036-8416f208d6da",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "309ff9e1-7d36-435c-8ffa-480214b5c666"
        },
        "item": {
          "id": "42995615-fafb-43b9-bc9b-1ae0a8445bc0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3b0ad586-4372-45d3-8f90-b0da1385d8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c24514-6474-4580-9569-57f73859fa9f",
        "cursor": {
          "ref": "25c29a6d-3a9d-412a-ba9c-04b9dcd3d8ed",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "95771c1c-1ea7-42c9-929f-e019ab972504"
        },
        "item": {
          "id": "c2c24514-6474-4580-9569-57f73859fa9f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2d636ee5-f7c6-451a-b4b3-f85291e08bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd6d671-5eaf-4dec-a4b2-74ccce885258",
        "cursor": {
          "ref": "81b58796-0463-4d01-9184-a69018df452b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8a148129-bd70-4920-9fdb-8cafe183af8f"
        },
        "item": {
          "id": "7bd6d671-5eaf-4dec-a4b2-74ccce885258",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "531ed8cc-dc27-494a-82f1-8c07fba018cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762c5996-a5e6-47e1-a44f-bdce45c078b0",
        "cursor": {
          "ref": "d0a92143-5dfa-4ca9-94db-551fab2f7871",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "87364f70-874a-4e5a-93c8-bd255d576c06"
        },
        "item": {
          "id": "762c5996-a5e6-47e1-a44f-bdce45c078b0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f32c114c-4d12-4144-85f1-1d557c53bb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cb70a0-c8c6-467e-be3c-de6abc1ad8e8",
        "cursor": {
          "ref": "356bee12-2765-439c-8983-d2f44c1edb7d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "36662544-ef5f-4aa4-af56-6880b501c4d1"
        },
        "item": {
          "id": "71cb70a0-c8c6-467e-be3c-de6abc1ad8e8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "77b62dd0-0bb1-4a30-a353-d3d10b2d929c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67389d6-c353-4e73-be5c-090f342456ab",
        "cursor": {
          "ref": "b86703ec-4a25-4f35-b1ac-fbd9927c07dc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6f63f0cb-dd32-4ec1-9bd1-f40e6179a322"
        },
        "item": {
          "id": "b67389d6-c353-4e73-be5c-090f342456ab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "edf4d394-1c50-4be9-abc7-350c1f0c4909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cfc745-c051-4e61-ab7a-f07acfcc1e8d",
        "cursor": {
          "ref": "a528d5bf-e977-4c60-8363-ee5a012425d8",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "445d2897-aa5d-4b5e-aca0-078e1902531a"
        },
        "item": {
          "id": "52cfc745-c051-4e61-ab7a-f07acfcc1e8d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6b595ef5-a62b-4d13-b282-a34ec29b1089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4ae81e-ab02-4f01-8777-bd78508af269",
        "cursor": {
          "ref": "b0a33fbd-fdb3-4db5-94d8-8fa886b610ca",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3373c28c-e261-4a3b-b868-44b005562f48"
        },
        "item": {
          "id": "8d4ae81e-ab02-4f01-8777-bd78508af269",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "af8ad9f8-260e-4213-b3ad-7e2c887fdf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d9c11c-e23f-4424-967f-e5d73e99e625",
        "cursor": {
          "ref": "d35e1fdf-2725-4fc7-ad92-1cfae9a4d951",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c7bb8d19-a7d7-453c-8be1-a066e8cb7a30"
        },
        "item": {
          "id": "c4d9c11c-e23f-4424-967f-e5d73e99e625",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4bcfcca1-d620-4a4a-9ae9-37d429d490aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d97efe3-47a7-4c64-8f4e-fd12aff0ea22",
        "cursor": {
          "ref": "9718bd1c-2db2-48d6-a419-88800633c84e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "caec2fa6-7e78-4b2d-9da7-26a7ee0fb5f8"
        },
        "item": {
          "id": "2d97efe3-47a7-4c64-8f4e-fd12aff0ea22",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "69b4e316-0aed-42c7-b1b2-5f5628b51e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61661ab9-09a2-4140-b6e5-929260a653ef",
        "cursor": {
          "ref": "b1c6037c-59e0-44de-911a-259c17c9f62d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9dd50a21-a84b-4f5d-9703-9a3200dcea2b"
        },
        "item": {
          "id": "61661ab9-09a2-4140-b6e5-929260a653ef",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5814aec4-fd8c-4ffc-90b8-692139c828b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed43f55-be88-4d35-b33a-1784ffc3389e",
        "cursor": {
          "ref": "7f262b08-9eed-441d-9aaf-6b243da7fa18",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "63b4113d-4125-4f7a-93a2-4b0741d19433"
        },
        "item": {
          "id": "5ed43f55-be88-4d35-b33a-1784ffc3389e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "393bd588-9940-4026-b70e-496faf4598d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c57b6e-794a-491e-8fd7-40c22fed34c5",
        "cursor": {
          "ref": "105a452c-2928-4505-9647-081d3e50eee4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "98ce26a4-21ca-4965-8aad-d3a34874f645"
        },
        "item": {
          "id": "75c57b6e-794a-491e-8fd7-40c22fed34c5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3d08edc9-7550-46a0-9a48-f8e4f75ef042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76be77b8-f62c-486f-b16e-b86db1958937",
        "cursor": {
          "ref": "657d42ba-16b8-4ef0-91da-b7f7c94f92ea",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "50eb0f15-fb28-4b11-8059-b6e3385e32f3"
        },
        "item": {
          "id": "76be77b8-f62c-486f-b16e-b86db1958937",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7e10ffb7-b1ff-49e1-8f4b-4825240af9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f600e7-6ec8-46fd-b3a6-512b5f18b6a3",
        "cursor": {
          "ref": "20111eb2-e082-4cfb-af9d-7de6fbdf5db8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1f94fe26-04f1-404a-9f75-7e0a0f8ffead"
        },
        "item": {
          "id": "79f600e7-6ec8-46fd-b3a6-512b5f18b6a3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a4afede1-fbaf-40fb-b5cb-945092194707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c054d53-ec05-41ea-9d5f-7b57e7fd8b85",
        "cursor": {
          "ref": "1e867a80-1c23-40a9-9ef7-f89457cb31b8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7b1ccb88-5c2f-43aa-afbe-d1b7f10978c3"
        },
        "item": {
          "id": "3c054d53-ec05-41ea-9d5f-7b57e7fd8b85",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "01a0063f-e809-4af3-8595-948764668e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa80683-3b96-49f2-aaa2-5cf0379481ef",
        "cursor": {
          "ref": "217846f1-642b-4aff-b0e9-d374f89f37b2",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a1bec496-5009-420f-a3d9-a2b54ffbfa27"
        },
        "item": {
          "id": "cfa80683-3b96-49f2-aaa2-5cf0379481ef",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "004c5ef3-8ccd-47d9-970b-97cf71836020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4174a6-9fda-4fc5-a472-02cc4513d58f",
        "cursor": {
          "ref": "65dbd79e-d90b-49d6-818e-2a64246f81a2",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a7363f80-864b-4dca-a684-dd4ee60cd0ce"
        },
        "item": {
          "id": "5d4174a6-9fda-4fc5-a472-02cc4513d58f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f638f427-cf81-490e-b21e-ea656232792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689df719-92e8-4be8-a273-12daa751d641",
        "cursor": {
          "ref": "ae02abc6-b7aa-4b55-9b99-45426f28db85",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6b355e7f-fe8b-4fe1-a520-11a297fd5678"
        },
        "item": {
          "id": "689df719-92e8-4be8-a273-12daa751d641",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "de9e86fe-1187-4fb5-8fc6-349436b7da83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a3e627-e58e-4523-82b8-8b1f739c711a",
        "cursor": {
          "ref": "5c58b386-a35f-4f38-a6f8-912e3d63e940",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "65d9c846-eea7-45bb-b905-695d696722ef"
        },
        "item": {
          "id": "a3a3e627-e58e-4523-82b8-8b1f739c711a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c6853ab6-bb4a-4d1f-94ca-8f07d30662b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a13f2b-0a31-49b7-99c9-e11b9bc2fba2",
        "cursor": {
          "ref": "fffe2b26-1c6b-4501-a608-7bfaeb801fae",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2c56f79a-6f26-4a1f-9a42-0bc62067e1ff"
        },
        "item": {
          "id": "c4a13f2b-0a31-49b7-99c9-e11b9bc2fba2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "16ac6c77-3b36-4e8b-8ca7-fa3ff4978b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38f57bb-dd5b-4dd7-af62-329fafc29c88",
        "cursor": {
          "ref": "59014883-ba50-4b4b-a1ff-c66eb38d3ef2",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "526b4c18-ef75-4795-964a-a60967a7cbc0"
        },
        "item": {
          "id": "a38f57bb-dd5b-4dd7-af62-329fafc29c88",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9a4f3ba9-9334-4bcc-8dd5-f3e34eee89ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e521ba30-497e-4b37-8022-56ba334481c1",
        "cursor": {
          "ref": "32341d87-9c46-46be-aed6-afc0c02fa0e1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c84303c0-f0ca-4065-a437-cd3739bcb3e8"
        },
        "item": {
          "id": "e521ba30-497e-4b37-8022-56ba334481c1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d7dee572-f907-4239-9824-2e139def6bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dfc92c-c720-4173-a4dc-598077ce7d95",
        "cursor": {
          "ref": "1ae94b3d-9b1a-4bff-acb9-f9929aac58a6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "27d52876-5fe0-4cad-b673-e1d3afc825f1"
        },
        "item": {
          "id": "13dfc92c-c720-4173-a4dc-598077ce7d95",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b02d8e12-ae20-40ac-bb9f-f84b109dcd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8433040-29ab-4b9e-9487-d155bdfbf34e",
        "cursor": {
          "ref": "286bf7e0-dff9-41b4-a934-395c48409ed2",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6e8caf4b-dd96-4b63-ab31-0297b63f3aa7"
        },
        "item": {
          "id": "f8433040-29ab-4b9e-9487-d155bdfbf34e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9c92c6a9-e3ab-4cc9-9bf4-65fff0e27a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198dfbee-d32b-44fd-89f2-abbfd2fc2cab",
        "cursor": {
          "ref": "6360b077-b643-469f-b163-78ebfefbd78d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "04937baa-e8de-44fd-847c-c6eada858ab4"
        },
        "item": {
          "id": "198dfbee-d32b-44fd-89f2-abbfd2fc2cab",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a2cd30c8-808e-4d42-b91e-a84c718faea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb299bc-e4ca-41c8-ad1f-f00976cb5e20",
        "cursor": {
          "ref": "5f123b1f-1a15-4702-88d6-491ce8b25483",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ff51c5be-9f8e-4fab-8b3c-1fd4f50aaa8b"
        },
        "item": {
          "id": "deb299bc-e4ca-41c8-ad1f-f00976cb5e20",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c82e387-08c6-4d0c-afef-b3e6ff82ce35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd84ec99-d57f-4ba1-89da-f5f66c48f647",
        "cursor": {
          "ref": "342dcd27-a9a6-45e2-9bc8-f9a95ddc8294",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "304de064-4866-446a-848c-f214b277fdff"
        },
        "item": {
          "id": "fd84ec99-d57f-4ba1-89da-f5f66c48f647",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7a18b66b-3e06-4bae-99a7-3f18df8ba89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd45769-b09f-4011-9c6d-cf6672aa02fb",
        "cursor": {
          "ref": "c8657f59-a6c4-42ad-a8a0-fcad96836539",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8e48c975-10cd-4051-aab7-004b0c696683"
        },
        "item": {
          "id": "5bd45769-b09f-4011-9c6d-cf6672aa02fb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "09dad71f-d035-4d20-b143-85259b547008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54109181-681a-496b-b8b5-d95538c315bb",
        "cursor": {
          "ref": "9ea766ab-1d5a-4d7e-84d2-e304ea2578cf",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c5aea525-90d8-4ece-afca-908c9bc58887"
        },
        "item": {
          "id": "54109181-681a-496b-b8b5-d95538c315bb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b14cd612-6d42-4930-b392-d7ae77cc2bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1caf752-10e9-4d6b-93f4-2341fa1f1b6d",
        "cursor": {
          "ref": "affcce7f-0c83-4178-904e-a6561df52c03",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2389f16d-7336-4af9-b57c-0fc1d66d36c7"
        },
        "item": {
          "id": "d1caf752-10e9-4d6b-93f4-2341fa1f1b6d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2c5aadfe-2f4b-42c0-9c6f-80ba288deb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d92df9-0d36-4c21-bddd-de253b5b1bbb",
        "cursor": {
          "ref": "4935ae7b-6469-4e87-8a5f-96442a57d9e1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "aa799f12-6f8e-427d-b119-c189746e6467"
        },
        "item": {
          "id": "e1d92df9-0d36-4c21-bddd-de253b5b1bbb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7a2a13f9-afd3-468d-ab7a-0755cd277fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f69896-fcc6-4ced-b6ea-45033db8944e",
        "cursor": {
          "ref": "60d805ae-4494-4972-a23e-a7df2b140538",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4ea5ab3a-3ab9-432e-9ed2-bbe969a13b39"
        },
        "item": {
          "id": "80f69896-fcc6-4ced-b6ea-45033db8944e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8e78dfef-9794-49f3-b299-bd40a9a69d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6c1116-6643-4566-abef-edd2c9410f7a",
        "cursor": {
          "ref": "0eeca74c-8cdb-42f0-b596-edcecac0863d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2db0921d-b5aa-4e0a-af93-d290df996990"
        },
        "item": {
          "id": "2d6c1116-6643-4566-abef-edd2c9410f7a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2de89b7a-48c5-450b-b3a6-37ba855122c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a560672-62f4-4086-a239-25bbb3b735c3",
        "cursor": {
          "ref": "65be22a8-b475-4fe5-bf64-8acebb765244",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cf368da3-3825-4386-b2fe-74daca9049ae"
        },
        "item": {
          "id": "4a560672-62f4-4086-a239-25bbb3b735c3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "811bc0d6-bc5f-465d-84e4-3496acfc9334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30baf8f-5eff-4a8f-81ac-9502a8d32465",
        "cursor": {
          "ref": "c990e128-a2d0-490c-8677-189a35e054b4",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9c070f7b-5455-4a90-b42a-c37ab2729209"
        },
        "item": {
          "id": "a30baf8f-5eff-4a8f-81ac-9502a8d32465",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bc737802-0ef9-48e5-9268-d5bc5fc6bc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22def921-c81b-4655-b3bf-f06e19aeedcc",
        "cursor": {
          "ref": "d11a9033-f2c6-46aa-8d8b-c448100f0516",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f3857702-2574-4b58-9150-e6088668d857"
        },
        "item": {
          "id": "22def921-c81b-4655-b3bf-f06e19aeedcc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8b401474-7580-43ef-b6fc-46a50c234ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f1333b-5a7e-4f90-b246-f2946147ee42",
        "cursor": {
          "ref": "ad9b6294-ded6-403b-911e-b0d457400666",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "845b5be8-9666-4940-a34d-62143d5f8fb5"
        },
        "item": {
          "id": "92f1333b-5a7e-4f90-b246-f2946147ee42",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "73920e1e-9c9d-4526-bcd0-79055eea2bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8cf45e-dca1-48a8-97b2-2928a9ef3a49",
        "cursor": {
          "ref": "7a9ad848-2062-434d-b7cd-fa3acc324282",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "341332e1-9f7d-406c-a8bf-a9087053ef87"
        },
        "item": {
          "id": "ad8cf45e-dca1-48a8-97b2-2928a9ef3a49",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7bcac324-54d5-4bfb-b299-15e465767c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1aa1eb-4a99-419a-b78a-aed60da7cbfa",
        "cursor": {
          "ref": "514a7add-38c7-4a54-ac8d-41bb1f707895",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "77dc1a7f-cc43-446f-8b76-3e2d5f10a435"
        },
        "item": {
          "id": "4f1aa1eb-4a99-419a-b78a-aed60da7cbfa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c8597508-a370-4f0f-8b7a-8d2433b8e474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8519dc25-3892-4a67-85bb-f78cd8c23b7b",
        "cursor": {
          "ref": "3b593deb-9ef5-4f04-9711-55ebfa51607a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b18b3c04-22d6-45e2-bd27-16bcca43d22f"
        },
        "item": {
          "id": "8519dc25-3892-4a67-85bb-f78cd8c23b7b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c71e333d-0391-47d7-aba1-bdf6abcb4564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85869d7e-3b89-43d5-ab4f-e5e824a4b52b",
        "cursor": {
          "ref": "cd48b88e-6dc4-43c8-8c20-1dbc8b82a741",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "27567b93-8d19-44ce-8604-49e83cfc2095"
        },
        "item": {
          "id": "85869d7e-3b89-43d5-ab4f-e5e824a4b52b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "25632aa8-5d2c-4030-8ddc-ba11d974a5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34ad603-8abb-4cd4-8bd4-d70a28e92a24",
        "cursor": {
          "ref": "bd1bb6cf-fc00-49f5-b856-66df897f8c49",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6175d5dc-1dc9-4192-b658-e67e0d8a7524"
        },
        "item": {
          "id": "c34ad603-8abb-4cd4-8bd4-d70a28e92a24",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3687e631-6ca4-4412-896c-7853b60c2116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f61382c-ef52-4253-be47-89da580d31c2",
        "cursor": {
          "ref": "b847f528-c2d2-4944-9e6e-e68d16b45333",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e6c692be-20d2-4335-b639-eae4eaa0521a"
        },
        "item": {
          "id": "3f61382c-ef52-4253-be47-89da580d31c2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "92fb20d9-a754-4763-8ffc-2f68f349a96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ac2941-a72d-40d6-83f2-fb42de3c8c3f",
        "cursor": {
          "ref": "4300fd14-4c40-4138-8b2a-3e616fec923c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "145414d2-a5ae-4cd6-a115-9327364f8617"
        },
        "item": {
          "id": "b9ac2941-a72d-40d6-83f2-fb42de3c8c3f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5d8210bc-0068-44b1-a5e5-2c14ba733a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9757f0b8-673f-4468-b843-61554ba66b2c",
        "cursor": {
          "ref": "df8ef00e-6753-4995-bc59-6fc1ae0b0795",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "dfbb9347-4348-45e9-ae62-5435360b40d4"
        },
        "item": {
          "id": "9757f0b8-673f-4468-b843-61554ba66b2c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "35367436-d8a3-4911-8957-09944371d79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f734798f-fae2-4fd1-982b-7ca7d8c3727e",
        "cursor": {
          "ref": "6d30133f-1dcd-4998-a55c-553adafeae57",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "353c8512-2325-4b37-ae6a-90aa19f314e0"
        },
        "item": {
          "id": "f734798f-fae2-4fd1-982b-7ca7d8c3727e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7026647c-6b83-4f29-ad87-9f3bb881bae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a62b7c4-3c59-4f21-83c7-8d3b23478bdb",
        "cursor": {
          "ref": "8ad1e4e6-7ca1-42d4-b5b2-ca96b8469b6f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ff6dc67b-9e90-46cb-a6da-967ddce9ba54"
        },
        "item": {
          "id": "9a62b7c4-3c59-4f21-83c7-8d3b23478bdb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cdd01680-eeaf-41f1-b830-cadbb5c81f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764a8387-cfb3-45d3-85d2-cb7329f1c996",
        "cursor": {
          "ref": "540a3be8-9027-4341-b810-e7b6157ac2fe",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b2f11923-d17e-41ca-9caf-ab151e87b4ac"
        },
        "item": {
          "id": "764a8387-cfb3-45d3-85d2-cb7329f1c996",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e59b99a4-8c15-4740-80ae-407d8fd18b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a645ca-6450-48b2-a633-cec092449844",
        "cursor": {
          "ref": "64fc45b3-cb19-4de8-add9-b8aa25e604ca",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6f2d8de1-0d08-4ca9-a2ee-fb23c687bbfc"
        },
        "item": {
          "id": "d2a645ca-6450-48b2-a633-cec092449844",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "29b5f115-276e-41f2-a332-bb614d22e15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4be2b95-a10f-4079-9a2e-512383491e75",
        "cursor": {
          "ref": "35fe9ee8-8dd0-4c87-b1bb-ff7320201746",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "cd35ac98-2cc4-4a76-a990-ae963c701bda"
        },
        "item": {
          "id": "c4be2b95-a10f-4079-9a2e-512383491e75",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "73c452c8-30a4-4f25-b30a-6497aa698b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c8863b-d478-4717-ab5a-6feef14d9f23",
        "cursor": {
          "ref": "b47ebbc2-3279-4be5-af83-f6b5158f7b04",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "35ef4570-fc9a-491b-8374-1bfa32425c35"
        },
        "item": {
          "id": "f6c8863b-d478-4717-ab5a-6feef14d9f23",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5e9d94c7-5778-4c0c-a0f1-01513354e53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36421e13-c918-4de1-9ee4-e4fd5b1f7d16",
        "cursor": {
          "ref": "6fa0ab98-f39d-401d-af83-bcdf46d6812f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "58dc42be-9144-4955-8b29-72c98037c0e5"
        },
        "item": {
          "id": "36421e13-c918-4de1-9ee4-e4fd5b1f7d16",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "98fe8c92-1454-4f7b-ad75-36c9be5d40f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178c6035-2e7e-4960-bd8e-91179b2e8c5b",
        "cursor": {
          "ref": "43ccca85-fd4c-4dce-9475-1782bc194e2c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ce6b8281-9111-4855-a959-4373c3667909"
        },
        "item": {
          "id": "178c6035-2e7e-4960-bd8e-91179b2e8c5b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "822ee9a1-2735-4aff-ae42-8bff47d9e63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ec85c7-f339-403a-8c82-ff0966549c1d",
        "cursor": {
          "ref": "782f0e8d-dd75-405c-8353-0e6fb3de77b9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a0098e5a-4176-4925-b031-6e7c3464f9f9"
        },
        "item": {
          "id": "f3ec85c7-f339-403a-8c82-ff0966549c1d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "56181f14-75f4-43f7-8f86-f42e783dcc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d448a8ab-2e33-4f45-b963-87e923e20384",
        "cursor": {
          "ref": "0985b0fd-5ad9-4cb3-ba61-c70154378b15",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e8c51af6-e7e2-46cc-9b46-986b94368c15"
        },
        "item": {
          "id": "d448a8ab-2e33-4f45-b963-87e923e20384",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fd20d344-8cb9-435d-8e29-bfc1ed1bd521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab49d22-e73a-43d0-a2fd-e90263397efd",
        "cursor": {
          "ref": "f83f42cb-c522-4fd0-bc27-1b38f9a1f686",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4ae56161-5c47-4348-924f-cd64534376ed"
        },
        "item": {
          "id": "1ab49d22-e73a-43d0-a2fd-e90263397efd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "054268ec-92f0-4763-9b85-477a0d3b59b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798c2e7d-01fd-4792-b4c7-9c87c35655b7",
        "cursor": {
          "ref": "8ca6084b-f1aa-442d-a289-940c11208457",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5ac9a5d0-34fe-4894-95c9-b5e7e1aefd91"
        },
        "item": {
          "id": "798c2e7d-01fd-4792-b4c7-9c87c35655b7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "35efd15e-df17-4657-8d00-e7223a1398ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad8b31f-99e9-41e1-8700-74eeb2f6a1fe",
        "cursor": {
          "ref": "9bfd834a-2944-4848-b52d-c80f8e4fa229",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b56e8257-d579-44a4-9d31-9cea93cc62e8"
        },
        "item": {
          "id": "0ad8b31f-99e9-41e1-8700-74eeb2f6a1fe",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6e96f919-c981-4292-8fd6-ab37090c5e8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03b7f3a-2598-4897-8e7f-7bf25c5232c9",
        "cursor": {
          "ref": "771a6b77-3da4-489b-9409-8656c3414739",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "80d885e1-73d9-4126-b513-51d4c46963fb"
        },
        "item": {
          "id": "e03b7f3a-2598-4897-8e7f-7bf25c5232c9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "36bacc79-976f-4213-af22-d00fcfc67f0e",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "499cce8e-7463-4fe2-8999-02b1d246d2bd",
        "cursor": {
          "ref": "0960603d-0406-4bc9-a05f-227504f55ef7",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "84349681-1e09-4367-894e-aaf6685e0b0b"
        },
        "item": {
          "id": "499cce8e-7463-4fe2-8999-02b1d246d2bd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "931ac814-d644-40dd-b973-5d758d0b3496",
          "status": "OK",
          "code": 200,
          "responseTime": 2615,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d2f95b-39c2-49cf-8190-51790ef65d8b",
        "cursor": {
          "ref": "fd93c508-434a-48fd-8402-1c2d63829793",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "15811a84-7b6f-41cd-a09a-6281a94bebfa"
        },
        "item": {
          "id": "29d2f95b-39c2-49cf-8190-51790ef65d8b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c13326f6-780f-42c4-9a9c-069998407fe0",
          "status": "OK",
          "code": 200,
          "responseTime": 4154,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf0a337-c078-404d-a316-682e538090c5",
        "cursor": {
          "ref": "eecaaa4a-0b3c-49b8-b3c2-d6a45eaa44a0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5343c531-809e-4227-9cc2-00c247769adb"
        },
        "item": {
          "id": "0cf0a337-c078-404d-a316-682e538090c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d3143b5-d15f-44af-b891-908c9169295c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf0a337-c078-404d-a316-682e538090c5",
        "cursor": {
          "ref": "eecaaa4a-0b3c-49b8-b3c2-d6a45eaa44a0",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5343c531-809e-4227-9cc2-00c247769adb"
        },
        "item": {
          "id": "0cf0a337-c078-404d-a316-682e538090c5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d3143b5-d15f-44af-b891-908c9169295c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a281716f-f099-4ea9-875a-b7fee4629db0",
        "cursor": {
          "ref": "a757928c-7ada-482b-9278-c7165b87e2a9",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8e962aab-dd6e-4ba4-949c-a5c4294527c5"
        },
        "item": {
          "id": "a281716f-f099-4ea9-875a-b7fee4629db0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fe781661-95ca-4007-b774-097c263da623",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca385fa5-21ac-40ee-bdb6-a823b19a3eb5",
        "cursor": {
          "ref": "5cf941de-845d-4e54-9133-a46b7ca940fe",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "03d31a62-9192-42d9-bd2f-09dc1fc18e59"
        },
        "item": {
          "id": "ca385fa5-21ac-40ee-bdb6-a823b19a3eb5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7be3ccec-3cf0-47b6-a9a0-f7a25b2f99c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}