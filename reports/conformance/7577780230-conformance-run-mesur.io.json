{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "24ee71d8-e274-4c73-ab38-a46751015a69",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1d357d7d-2e5f-4168-b6c6-b5befeda682b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aefb3cc9-9115-4d80-908b-65e415c21948",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28e89761-a3ba-4abc-b51c-8e29228079c3"
                }
              }
            ]
          },
          {
            "id": "bfc62947-81fa-48aa-af4b-180cd64a1232",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6dac2d5-ef0a-4d12-acea-6928f1010210",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aa52a7a7-10aa-429b-a630-294cbf6ac61b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0644cd6e-0da5-455a-a9b7-681c37218b4c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f95ac14d-bd7d-4537-870e-a5b3cf9aa7f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70e0f93b-bdae-4c3c-ad93-627cdadf836f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05bb89d9-2db1-476e-8924-3a1d16bc6e74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a58e1615-0df3-4dc6-8218-d71f2761d323"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "24de9bf3-a382-416b-adb2-3d38e1d5ad0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "632ff528-6e0a-4e1d-8d06-b66848d1d2c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "954a54c3-7333-460a-aae1-db759f399e5a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bbd98400-c190-468e-bc39-918fed7f8ed9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f00e0c75-d661-4fc8-ba30-813850fe3681",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "483555c0-f2e1-4c63-8bfd-a4d7e32dbaf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8df7de0f-b93d-4374-9137-953ce69c974f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7a5cb16-edf8-4bf3-b873-8b4720b29595"
            }
          }
        ]
      },
      {
        "id": "47cbac57-eb16-4922-b75d-e9bda3fc56f9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "13a351c3-b685-4722-b69d-1add6d43061b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "909fe95d-c6c5-44ca-aa48-fc7f161a6ce9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a3bd4558-ff95-4fbf-9b4b-ee85c1426595",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81543316-c4f0-41f0-8e80-d56dbfdeea35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec582151-60bc-4473-9585-da6517f293bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5bca71-9fd5-4681-b134-419d83f7b5d1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f43e93f-1a80-49e9-9ff0-fc64c9266a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0e42db4-9aa8-4822-bac0-74e82f6e776c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc72d02e-a9b9-45cd-8065-3bc43d598e22",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd83997-6272-4680-8430-54b00df68b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62ec52f0-242d-4dcc-99ff-1a43e8622897"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23a8ab2b-7175-4b3e-af06-d798665f22e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b53d533-12a9-426c-b2a5-4a78b680cbf4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32524e13-d066-49b4-8855-63d432407933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8523d3bd-a8e4-4eb5-8c35-3fea9d7ac474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebb7690-ef3f-4da1-b182-6e16da8b6a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fd6b42-8b68-4ea4-b4f3-e8cc1223fbfb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d2562aa6-e9c3-42c0-a98d-8b1cc8caede8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a74eb725-a6ea-4fb3-a10b-93fb07051bec",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb350439-66ee-4077-9d2c-2d897b3b535b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e1ac3aa6-098c-4e55-857d-164507fd299a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "999ebaa4-3ac4-4181-b68d-78cb79b60e2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a7c6207a-642a-4efe-9782-60e9ff51379f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2887c152-8db2-4e90-9996-103b5ae14f8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f254e511-b112-44f7-85e9-9b38602a065c"
            }
          }
        ]
      },
      {
        "id": "4b37abe3-3285-4a92-ab76-65d88ee8e002",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "188eccb2-0b42-4771-983c-d6d42b91f568",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7da80886-1669-4cd9-8cd3-66c5c27730c1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b68f2f5a-f13f-48dc-b775-aa5cd67442e4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0217931f-05bb-49b4-96d9-b50c6e45d361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e525ba58-1156-4aac-a012-25f7bcd232b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e722bcbb-b8b4-4d69-a0fa-2b1af4af6693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d64b06b-7ce3-4834-806c-bac2ccb47b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb346e8d-1a9c-40d4-88ff-58520c3c573b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fe8253-b06e-4bdc-b9d4-49ddf89e152e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8b2911-8e5e-40b6-97f4-eac2f8dade74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5a8f2e-652a-48f3-ae4b-95924716e9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba1a91d4-5cf5-41d4-90bd-3be10b63fedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54e8a80-ca66-46c8-9613-4253353540c7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb287672-003a-4041-82db-4b1f299db0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fe3f97-c6a3-40f4-b4ad-32236a57005a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0d852e-dab0-454b-b1e2-224f3f6c7fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1211a1fa-087f-4414-8bab-68663d18a297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b4ff18-6012-4d69-b668-6a64782b906c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1feb10b-3992-4c54-bd7c-d182634d0f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770d8a6f-5c7c-4d5b-8780-360705b8117c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d3e6e0-e39e-4ddc-b7ea-088663d61635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16dc26d6-43cf-42e2-8a6a-d078d6dca9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c1868d-da1d-4a40-8ec0-257f495ccc3c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17eaaf6-4322-4720-b6fc-fc200338609c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34aedb7e-323b-44cd-8875-dc5eec2d271d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0743632-9b15-410d-906c-320f3d13723a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8b855dd-2648-4ef9-9f26-31e38824bac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1dfbe4-8d2d-4b5b-a2d0-161ba96eec87",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb0ac63-388f-48eb-9e7c-2642954eaf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba091a5-a3bb-41c3-aae1-7cb645859f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4330e173-f1e5-4571-9784-4eb38ff66bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1d1bf04-c250-4ddf-bc8e-19b251ed7a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b5b519-53ef-4cd3-be32-8fce9e213a8f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c9b88d-bc08-4fc8-8132-761abe7166d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60482480-8dbb-4f85-a207-d58a4528de6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411e3c75-44bf-4a52-9ca1-521afd6dcd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99fd152a-5cdb-4d1b-9cd1-4974680b796e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f199b23-6d97-47e7-85cb-ab813a639ac8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc986331-f5b1-45bd-b450-da391d1902d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858020c6-c9c4-47f5-b919-e0208909421f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf6b9cd-1b3d-4499-8b89-b6efda6b7e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68bd4449-7023-4259-931e-c6a6145296f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56155c42-f36e-43f5-b634-205233c153e8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1f70a2-58df-470b-8760-ac99d730ee4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd87513-315c-4935-9b68-88ccb9c176dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4310f7-2ca7-4046-b462-deba0b2de00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "140eef52-9cf1-4b48-ae01-f8fd664d0d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d88939d-92f3-4cd4-bbb7-7b1f988668cc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6904f64-c31b-469b-b227-cd02f19f5401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5a5788-b231-4f81-98bf-31d4dbf48c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a970d4-c455-462c-9dfe-62b630dcdc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8a121c0-a197-4c35-ba1a-c66003d4bc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bdb362-2881-4778-ac83-3010bf5d8535",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6e0a14-397d-4c87-923f-5769c982584f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edb5067-461a-4d11-a909-9bc79ed2f44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd14a7a7-92ad-4c69-8f20-df01eed9ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b1fee9a-ce6d-4806-81fd-da2ae090fe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c035333-27b8-478d-aeed-1c66234a3ae6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5656d54a-b76a-4608-a9e9-90b2d9e60833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7558d3b7-b973-4d4e-900b-9c7507aa1c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80db3dc9-dfe9-41b0-aea8-4ceab72a1c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dee35934-2640-4c3b-8f4c-a475d7c100ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d97cd76-784f-4180-88eb-4965dac026e9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69db6ac-2f08-4bb3-a2fa-4072ae219ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c03090-c54b-4c2e-b665-5ab0819ba20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6961d68b-8419-48b7-953b-a515167dd731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c23ecfe9-1285-4295-9570-f321de47c5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b529fbcf-a8a9-478b-986e-cbd82bed3784",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c3a1e2-f7b2-4e0d-9c47-6dd21d0e214d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99316579-73c7-4ef4-ad24-d7d76031ca74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7715d4cc-027c-4dfe-b05c-1fe94b20ff99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03c00b0c-b0cd-43d7-beec-2b1743705a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b4f1ac-63b6-4fb3-b5f6-98b4e0ee02ec",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac720b7-744a-4707-a81e-ff5ebced0b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c450f8-8b74-44a3-898c-4fb3c461499e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5154d1b1-524d-476a-80b7-4d58ae1baad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28d9c847-2296-4bd7-86ed-e295b8ee766d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfbc92c-b3c5-4614-bccc-1cd6c5f04020",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8b2e10-46fd-4687-a260-70873d500016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f878a94-fd67-4fe3-834e-95aa9ded03cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8159cd8-9e0c-4ccc-bf03-1933bcf744fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18b7f76b-57ff-419b-847b-ece3b33002a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d76e83-b1f9-49d4-9c0d-87dd751af657",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a008eb45-0a49-44ee-b110-a1806ae84af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e503820-5fe5-4b13-acc4-4795e94556d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cbb45e-99ab-47cb-8f78-6df70f65888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15e16aa1-9d93-400f-ad79-58c4cded68ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb212123-5032-4d8b-9075-cee0d60edd0f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a790d8-78e1-46bb-b71a-123b694b8980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021b9ca4-4731-4b68-baf1-7a565a4112a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282ec204-64ec-4194-b7f5-46dc54a22a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5631e2-ba44-4a5c-8916-5fdc08a7d0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3aaee68-241e-4639-8c82-da0e43818099",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e67893-4e99-4e7b-81a9-03d91cfefd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79baaa6-9c78-4442-9f47-567f8429fda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3d6484-9dec-402b-89b9-15b65fdd718c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd887964-b8cf-4253-89fe-afa17dcfa2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36afb09-e974-4278-aa45-70efb73edd4e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41041a0f-cca0-4fa1-82a1-a53fc57c656d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e65ac08-7960-44d4-b27e-1fbe08428de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2c6a17-cd81-4c23-a197-b1954033dfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2922e7-6efc-4afd-adbb-ea70008a4dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a75fea2-b3b3-45bc-b8b3-95e7ab19e065",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9c27f4-6fe8-46fc-8bed-44f83cd37090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb6ef99-445a-42ea-9d7e-63ebd228ac9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5561859-8f5e-41d2-9265-24b40cff3199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "818a70cf-d577-4937-9bea-21603f61a0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc760d6a-2b30-4e4f-8f3a-47a512be1652",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab116662-f4b8-4e8a-99e1-1b655ae9c7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97d14c9-32ce-4cfd-8760-cce7977d96dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a37aa3-ba40-4261-95e5-0f951086af0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db5047c9-791f-471e-99d9-1c3995008b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2dab2e-9ac8-43bb-b13e-961d8a6e7ef4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf8e6cd-a4e8-48b9-8b80-b4ca1613ba4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0b8441-5ec1-4d9c-991e-7c5e828406c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3494e9b-c524-4675-bf66-09771c1f8230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b781309-1f28-40d7-96de-502cc1816d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396912b1-94a2-446d-af7d-6d74ab5d4d5a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eff9a52-4884-42fc-bd09-65db44cb90b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5a8864-fac1-4e9e-b994-022c3a004723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8a916f-555f-4030-803b-2c502e78c6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "444210e3-5250-40c8-a00a-885fe7bdbc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00df1873-072c-4a15-8494-a37932253f4f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5482d46f-9265-4c9e-90f3-f9025f6b6ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c54cd00-6437-449c-937b-2e909bfe801c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d37325-e948-4d9b-905d-8e992fd00632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7b51a9-8201-4530-b780-97a706339335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff537aca-f55e-4131-90ad-e0b2e4734f6a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7165ecd-3ce1-412d-87f9-87ec2eb5e874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad13de8b-f05e-4494-bb74-16a8f0665928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a8390c-5e7f-476a-919e-49a0b8d361cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1cecd2-9fca-4530-b95b-5d0c8d36e053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecb3cdd-c7a1-4423-9bb4-a0ca9c9c8b30",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6588f0-1e90-47d1-84dd-6d6137435de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bf5f61-f07d-4e5d-b11f-1bcc89c71e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13cd997-3ab8-40ab-8575-276f11c7a55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf105e91-2294-4caa-bf25-24f5b685f7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222e61a2-d20d-4169-8f8a-3493e72d7e2a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cbfbfe-39c9-467f-bcbf-e29bee7b5c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedfcc5e-5015-4af0-af46-f96b15ff5001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1fc3c8-34ef-4477-a93f-33f517297672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3730a2dd-1936-46f6-9065-058147d31a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6115b5ad-1748-44e0-bd7c-c9d4b68d4076",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431724f2-7331-41c3-a2ef-e910172d5c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4b80dd-f29f-48a0-8433-76b25f666b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67314a6-09d1-48a5-a712-e5d5469074d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec38767-ad60-4066-9d4b-b9d0262d9b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f35db01-3142-4d50-9b4f-fe0712353a97",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d3bd54-2b77-40ae-bfc5-bc69b58248c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce1aa81-c3c8-4c56-9601-1cc014e8a4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e952d7-6b67-4f00-b78d-0dbce44543df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "35e3b2ac-d4cc-4831-8cc2-822465a4b8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fea57cb-f2c2-43f1-b263-9ddc47c9e6f1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aae44ab-3562-4a79-870d-834917b33810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7be11d2-066f-4794-85c9-af21e7e513e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e09b8e-ba76-4867-9cd5-2e49868ab501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d52eec7-0b59-4b22-a7e0-d869bd00718b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478f8df5-ec2f-4a95-987e-bfebb377d460",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedc83b4-c805-4f30-9e81-87380fcc9da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bc82bc-a9ff-4227-9e0a-51e8ffd6d99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8516a263-bd9d-4fbe-a737-cbc69adf0c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb1a658-2443-46f2-89b0-c9e503d6890e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa215003-31a1-4cb6-8474-c8479736690d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f8796b-414f-47c0-88db-23c07eed0681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af0d82b-38f5-4e71-ab1e-8e019b285ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424da13c-b80d-4080-b49f-12c5d4e49a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13d48c6f-99d7-4c08-b28a-7653342eafe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8195e85-38ab-4508-8916-798ca965d3ca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb58a30a-0488-4807-8e77-7cd2e72c7709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d91fe5-c090-4947-8934-bf67884c9228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de746d9b-726d-4907-aa23-62919718f595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe0884d-c73e-486d-add7-f42c4c8d52a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee72fd77-62df-4ed2-ae1d-82d3299f2039",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3154b5b-509d-401f-be20-84117c129a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b62102-edb3-4b09-8e1e-eabdfb11ab7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9368a1d9-162a-42a2-b470-c8cf49865966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1214b9a9-c30c-4a85-b765-c9f6c2c06d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045d7d83-71c9-430c-add1-d2f8dd2cfdf3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec422173-50cd-49d3-99a9-915998ad33dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa96c8c4-122f-4557-aa7c-71ce2e4c1a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c25011-1cdd-4b10-abd3-068f0d625a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32a81620-ce3a-4510-969e-e3eaa026dddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fb3ea3-c33d-4c9f-bba7-19454896a9fd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbd5a62-9b5c-4e35-b3f5-237bfcc0aabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6af497-92b0-4276-a0e7-129b57cd3464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa64acf-7ecd-4b50-87f2-fa661fcededb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a335cbf-3064-4d17-b483-d9aea8576a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5bf929-e2c0-4ef5-b181-a519b7d7d3ad",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a52cd6-c567-425b-a156-d70846346e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806abb93-c5fe-4ec6-975e-e366377eb2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a41ac8-4763-4a40-bbcc-d28abdc3269d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a6a4e8-892a-4098-b36c-a8cdda46ec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc59cbb-48d3-459c-9dd7-855be85c5d0c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc50694-1477-44a6-bb68-6b4317b3467f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db0593b-cc4e-4cbb-bd22-4b91db0042ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486611f3-11f8-4518-9f42-6a2076a7e200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99c1f756-f396-4f74-ab58-d1261de090f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58041ed0-0f92-42ae-80da-dfa805ad4b9c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c617d087-4b4f-460d-a3d5-5b4ead1e2796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348704c0-269c-4245-9e48-8a4c96d0783d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80d5ba1-bd57-4308-9a09-f0c56b1761cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b967c31-5f77-4760-9e4a-476e862f9f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae41e263-e9f0-4f23-9318-e579fc790926",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d453b1-cef2-44ce-82b0-4984b799a5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de94247b-c0ca-4690-b615-9454f5bbd186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa695bc-7d7d-4433-b3a2-992b60674b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbc180f-6718-4f71-a5d3-4690a7e34980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7403edc4-6ca8-418f-8bda-33dc7159af5e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcf75c9-f5b1-4070-9537-669a63aedca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3b28ed-413b-4013-80d2-f676eeb48278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef630a8-d285-4a20-8d56-acfb3eacb108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0b3604-ddaf-4e6c-9629-4bf85b775244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d80c5ba-f343-4609-a85c-4205988c99d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba8d1ba-ad02-4440-a158-5da05bb36088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b845ea5-34bc-43bc-9034-8ee3db396536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d2a236-6abe-49d4-902c-049812a1c911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4b2e4d-86e6-4bf3-a3a7-d7eb7e3f1488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83409186-18f8-497e-8707-77b2656ca6cb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c817f75-f35b-4991-aadd-ad379543f173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ccf04e-980e-430d-8ff3-1da2f3d60bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce94c999-4c66-430e-91c4-9b0aa8073d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4a452e-8bf8-4803-b315-0dd76660cf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15bd437-0e61-4025-9140-a8f3ab27d11a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cdbbf0-e7be-4dd0-aabe-349823727303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e96994-754a-415e-95d5-741aa45756ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ee30b2-932e-4bcc-ad8c-bd1ffb6cdb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f94902f-08ce-47b3-b139-5500f2dfddd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b95838f-20f9-4c9c-a7d7-84ea3d93100a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89958562-2546-41de-80ee-ae668eb4553f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf216724-c00f-47ab-b208-d7ad1893c8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fde8d8-ec4f-4aa4-b2de-22e47deff8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa5bb3f-ad1e-489b-b0c3-d35e32f4a2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea035ef9-8b84-43d6-9a79-70267e5f5ba8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9af29b-c09c-4bcf-a97f-c0953e8fced7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99fe3d9-77a4-4e2a-8754-05e22273b51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c0e681-c235-4d81-b36e-b4864e242659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "750c7519-afd1-45eb-82e8-9a50199bf9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeb25e7-8cb4-4a69-9104-ef6a1e4a28cc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b70337-4929-4a5f-9e9e-721d8af82dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f19a016-1f47-44e3-b517-882247bdb0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d22b898-1e48-4194-9303-708f2d157579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48c19470-2d25-4d6f-bc7c-acad8034eebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8284fc8b-f410-48fa-b786-95567d79d4fb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a9b8d5-e161-447c-ba7f-56ad46ed21df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a3052f-5525-4c50-bffa-3dd0e15700ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96845962-8ff1-45b2-a701-90b8d6f1ea9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29e95b4f-3790-4392-9206-6376ad0c3a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f726959-5d8a-4e5f-ad76-136f51295e41",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105eee4e-75b8-4979-a5cb-6ba8652fe465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633b2bdd-8c0e-45a9-8cb4-5ebbbaaeb2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc73d8d4-d3a3-4f96-963e-af3cf4300129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d63f279-6752-4d77-af16-83542b8d4f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cf3719-6b0c-4afc-9791-2db80f61b172",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f2d107-f958-4929-8daa-90977c6a179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2508881-54ae-4993-8236-d4104f2fd0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c03cd76-75da-4f0b-a881-0f40175b4426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "32831620-9dc1-4b81-8d42-7a371df28783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc813d2a-dfc6-485f-83a7-7b212b2564c0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85fb7ff-c81c-4286-9ba5-fb386496edd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35155e5-b711-46f2-9065-1a17006be093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7baf37-883b-4c7a-9ba4-a5bab2129a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1b5436-d02c-4e38-9a50-081f6f9596a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1423708-4b58-41dc-ab7d-bbca4304bc41",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce1501a-f82e-4a51-8de0-9c1d505024d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b72dc8-d009-4588-9777-53f2b707e293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070c5c61-106a-47a2-83a8-b2971faace5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d912bb1f-9786-4683-81e2-c3a5c16a2cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d315785-8da5-4f7d-985c-cef5c7476942",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c2b9bd-dc93-4432-993b-ccaf1687a916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca95b28d-4f60-4fc8-9211-b820c66603a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856f5a5a-cfc6-4f03-a849-49e5afbf3f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a458d6f9-f912-435f-aa29-2baed2f7a32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7be785-f6a6-437b-a23d-41f1ef954c8f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465d528e-5b6f-4c4f-b92d-9722503552ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a575c5-39e9-46b8-b5b3-ef91f6f48fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2964652f-67c1-40eb-9e55-72641b0a1310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8d18d0-c748-4301-80f2-a00a6e507115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1b9dbe-fa1a-469d-b49c-59f39ccb9a83",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c3bbfa-6a77-4104-acf0-b2c0fce9607d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c7172c-609c-4cc2-a227-96cca005e21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4ab205-20cf-476d-8bea-beefb2fa470a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d149d979-2f98-4b6a-aa39-316d96d3f287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf0e836-080d-4d24-90e0-3fbd955c90b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170da014-ae4b-4bfd-be81-a10544297b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f399b30-b814-49b7-9342-0fe34040d2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f1a4e1-04f7-40a9-921b-00adc1c7dba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2edf8e22-b703-4da2-a58b-1d970054e7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea35e4f4-632b-4247-a824-62bc8cc47ee6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132dc1d7-8f3f-4a55-bcfe-0f1caab17e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8b3c7a-0b0a-4d04-8a91-d75a8c9422d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad993c22-c61d-4950-91f7-a601ed09aa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1a2e8c-bc3f-4a65-87b8-7e2498a08c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ee234b-0a1b-4a44-943c-23ba605395c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528aa89e-ab74-483f-a224-9fe6df03ab41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963607e5-3a62-435e-885d-59f01e0150fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5038e45-bdb2-494d-8ba8-fba80ef869a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "14588fc3-e9fe-44c0-a114-6e5b79eef7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7284653-5925-4ddf-874a-26de9892dfbd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d09bd95-2232-43a3-94f7-95edd419ee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d516c6-4c52-4280-9582-ebfb740d4318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ae0330-07fb-4550-aa0e-79d0ef75218a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "337b5b03-d5f4-41b3-a75a-1a7f72189e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345d2a0d-544e-4985-b1b6-110d8778f2a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47355ca6-67bd-4d11-b671-a62ce1118a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bab610-1b19-438c-a27e-12a97b7b1548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16c8722-466b-4d78-a9ec-0e80eb561a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d477b588-6bfc-44ce-a2cc-c1f018249982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b809e84b-3656-4e8d-bf5c-704e5ba06812",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc51fb9-693f-402c-bf7b-9eee4bf901fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab837289-2da8-48f9-9026-f4d6d1d49b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666cc669-c1d7-4e50-92b8-f1e6af3e75e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b32e5c-7174-4891-b31c-4dbc249b8d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d679857-796b-4dfc-8c9a-9a3137253313",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6be984-6292-47b4-9555-59a7234ef49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461e39d6-a9c4-4da4-adf3-b19cbabd8351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c525ab61-99dd-4604-8fe5-ab36c2471aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "24751b43-2af3-4dc0-bdb5-3e2c0e9f6f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca195485-8b13-4751-bd01-3b9020dbe9b2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8632bef6-1a0e-4a81-9652-5db10df9b5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4013cbaf-10b4-4eb9-932b-0d6665228ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079a7478-7539-4a7a-905d-211039988ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93542821-6427-4649-bf74-1eee7e6a31f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8e91c0-0591-43ec-a87d-0c9b25003c0a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49887de3-b8c1-4b2c-a330-97067e481a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996c7d7a-e462-4e55-914b-bf1cb19e24a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e043d4b0-fd00-4706-a5e0-98c00252e9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "243b825b-c829-4566-8b33-b4aa8a563638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d098516b-748a-46c7-b6d7-a8832a34a2e5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeae1094-5c80-4c24-baac-19a901c7dd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ead3e6-baf4-4adf-a297-d468bbb10ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c059c979-f4ba-457b-91b3-f38a7f675900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "052a82e8-ff98-47e8-a19d-5c89d8c0ebaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6b1a2d-c912-4a79-9c26-f3c9215ab63d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cf7a73-352f-4eed-a362-d88e58b23d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4190a735-590c-4b7a-9438-b9469d610f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010e9d2b-a665-4994-a7c2-93616ebeff72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9ea0e2-c889-40e2-9f83-19e70159cb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7107ea-fc2b-4b7c-ab2b-a9a381ccff20",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b666dfa1-bb46-4fbd-82f1-0b6287e4264e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5962249-1bee-4690-98b4-369da25c092f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb826f5-7dee-444b-ac96-5f854cc69069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd920fad-200e-453e-b83f-b5422a9cacb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2929007-7c73-4cb1-84aa-354b89905b58",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1183dcf-76a6-42e1-9392-ab852a4b5489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6356fc40-dfee-4a00-ae25-6ff13a660a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dcdc5b-a18b-4347-ba25-4b7a76b5b4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8ccdf8-5faf-4622-ac6f-31e66a06f250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90cc2c6-2f9a-4738-8b9f-6dcf551c8f25",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b03529d-7f00-4c56-bc78-040bcaf07798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2b7707-f598-4e00-b75c-e308f0557922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d489bc45-0dae-4e9b-acc6-0cdc18f591ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0a8c20-8d68-4925-8603-78d4bf995509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d63b322-154f-4eb0-a0d0-8aaf0379dc4c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcd430d-3ed5-449a-9f73-3bdc17764e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2b08fb-c7a6-4958-a213-014cfb6ab7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5965d233-142f-4d50-b2d2-4b1af7d33454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd423c7b-22da-4e51-ad14-2cb07f88ef77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7387bc23-7424-4a1c-9744-ec2c5b0579e1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b875e44-2c81-4b33-bb7c-47e60267d2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e895256d-a53a-4124-a14a-7c87523f887c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590fc167-4a8c-4342-aa6d-d352246a81f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b119e703-8cd9-489a-b7ac-a9512b714da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac10870-0872-4857-9b7a-4261e700c55f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a700b2-5801-4d81-8d67-776384944c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c9a64c-c5f0-4d63-87c8-5bb7d1959300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b5ce89-dc01-4d38-8822-80731151f062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddaaaf9-3eb3-401d-a535-1957564db3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56e295b-92a9-4ec7-b0aa-9bd17b78a7b7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1511b66d-a451-42a2-b76e-0fef8eac7729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bfd74d-6cd2-49a9-9b0b-b74f903601be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e57ecb-7dc0-41ab-a088-4f042aa630d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "559701ed-9db9-459e-b1ef-7384f4cd71c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24f7343-4c38-4989-b65a-034e2288f202",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86682259-8a96-4ec1-a60b-08277fd2e545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dba482d-651d-4531-8dff-3f7648df31a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289025ec-185c-42e8-9064-9ec410317d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43286932-0ba6-4736-8c9d-a81933a5f1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09eab4d-d22b-464c-8141-83f0a84cf66a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9335e1d-a4de-443d-ad03-d45e5350cdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b718d225-4509-4a91-a154-8c05a78b33c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9555a52-226f-453f-9d45-363fb0a2910a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b718812-17dc-4863-abc0-8c99b1ab9073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c76f84-1eaa-4e1a-940a-3aea3a831a0b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2565f353-0000-4872-bd14-94db2606ec7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76bacdda-6d23-4818-920c-46a556a9dc43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe929590-8aa6-4b16-ad1a-49f1086dcf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bef643-8b4f-4ee3-a2be-b0182d5ade7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d343045d-3dfa-4e62-beca-25b696495d5b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd62e79a-0b78-40fb-875b-a36a79b2afdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947a9017-1f47-46b1-bdd2-15a6433a4041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a12b906-2883-466d-a7e4-8b87d0d482de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68ddabf3-b691-4037-ad6b-30ec811feaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1312c73-4c7b-45dc-87b4-73f4e666f783",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688c447b-10f1-4a73-9751-30e2a90d8016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0034df-0f11-492b-97b7-36cfe725be8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba96e85-0f45-454f-a7bb-62425beaace2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1a9074-8444-4bf8-bc11-a78defa06941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40af2071-5a36-479d-aa38-757c87ed599a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a3bbfb-27ab-4f84-bff1-6b3a5858b017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8495a39d-cb63-49c7-ba65-fdac9e4d1af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbb7bd8-d42b-4081-bf16-011686977340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1955da80-6835-4def-9bc8-217e6d82ca7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cd6c7e-5778-4f12-a7bf-0fb6b60d31a7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc49c9f1-6d58-4171-8a2b-55f66aadcc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d218aa3b-e814-40f3-986a-c03aca81665f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bc9ef5-1c08-4dcf-bde4-540dbd97747f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f3a025-7637-485f-847f-b0ccd1cc59bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd30bd8-5c00-44d0-9f53-6bf8d4bdab44",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff096f9-83d2-4845-b962-0bb49c0aa91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e209c46-2eaa-453c-beb2-77d65aceff7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021884a7-1f53-4ac3-8d2a-b210943330c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b22b6d6-74bb-4497-9adc-35d786518f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4af6e2-b22e-4144-a7d6-851bc20e4892",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e674e1-5cd4-4e71-93d7-222af0fdd81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a462c7-cbce-4437-ac86-3bd4ff8ae6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904466bb-55ce-480a-ba8b-4761d8491e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76f93175-b2a3-47bd-a91d-f577876c1c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5615b1d3-d6ce-4691-8537-3f1e0c0c7cb7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c07f3c-7b82-42c7-8c2d-7be90dde26b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b91afa4-1bd2-45e7-95a4-a66ba66c9105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd239fa-d3f8-4125-8736-cd4babfc41ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da1ac8a-728e-4618-bd0e-d0478c5956f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a389d7-2453-4d6e-91b4-8a255f956f22",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbc3fe8-dd97-4078-b4c0-67ef69cec86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd14cb6-ff18-431f-8249-85c9af329a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5841c2c9-2f31-4a98-a278-0671c27df1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "302b2006-0ac4-4432-aee7-c2e7565902a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd20508-49cf-4bfd-9117-6dda63ca4d4c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2b4638-2954-4636-86d2-0d22ff601904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250fa72e-78aa-47df-be1c-a668731d6261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001cb6ad-3155-49d7-9d5f-a6f6f0c1cf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7647a0-9a62-4d92-ae12-f4314f0a2830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca47e16-72fb-4967-ab86-939069ebbb15",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692fa37d-f412-4e1c-a16d-2e7b8a368465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355f3626-d1a7-46c7-adf7-9b4670a26468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a55b22b-65e5-4101-89df-e825236b4790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1473a95-3afc-464d-9984-ad88473f3f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbaa3dcb-2caf-4ec6-ad71-a036727b1807",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265691d2-5e5a-4fd1-b125-b41af551d905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c2ef7a-7589-47f8-8333-c441dbcb5afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bbf2b7-65b9-4765-b4c3-0d46c9ab9e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d715a611-fc23-410f-99a8-9dc520deda58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8419c60-afaf-44ea-a7e4-e9f0d5b49ac9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae5a650-ae9d-45f0-a174-85acbca4c510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e756d3-fa92-4bc2-9da2-da6bedd20d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff46049-bb9e-45ee-8c8b-ea2d7982ca17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2737730-b565-4306-a11c-06140384415a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01758959-b6e0-4f53-9cdf-26fcc9a6783b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581cda9d-a926-4938-aed5-0963026fbbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73ef570-802e-46f8-85df-552584a67704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dba1bc-33e7-4694-aba8-8654c5177ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed284a35-776e-43c0-b47a-323b5032e3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9445a78b-eef9-4471-acf2-8f1dc82b24f0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b2b948-4854-464c-8a83-fe93099ced3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8de430c-b299-4513-b07d-23bcfe857d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c714c8f8-4c6a-438a-8975-0ffa243cd426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "74a8b740-5c8b-4ed2-97d3-f87fec3f2a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abff2dd1-84ca-4e04-ac8d-aaa4f2d1e813",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1d4385-72f1-486d-a1cf-b2820e9bf961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1652d3c6-05b9-4fc0-85ad-3e7afd318048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84fa4ac-3d72-4649-8bfe-cc28d0e31071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "72427b30-1c20-40e7-985f-157e4f9fc93f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3b067b7e-1198-4fde-8ca4-1683cfa76279",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f8bc910-b430-4944-8a72-c2f59f468ede",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbead5c-52ce-40dd-a7db-972eb0680bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00e39f52-4440-433d-9d94-c68c7753037f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c354858-c63e-44cb-91d6-d16d6221ac15",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e0f85be-4dc4-44e7-949f-d1b610580271"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "454142a9-ce66-42c1-857e-369cfc30a1bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3aed814-0259-4551-a281-4b51f789896e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0acc5e54-0afa-4f8e-be83-e62b016b9547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2eb1aa80-d1d7-434b-a2c6-806967b9aab4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7462750-ece5-424a-bc9c-a88f421506c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "943bb91a-5916-462a-8f9c-dc7931559855"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7fccf7e-6027-4bab-9dbd-029d1cabe675",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "baaada01-83be-492d-87cf-ce41cdaaf366"
                }
              }
            ]
          },
          {
            "id": "6479a505-25bf-4bfc-acf9-f089cc430939",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3987e6fa-d3fe-4b74-bca0-2f97f9656d34",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1c49b97b-3bff-4ff2-8053-3c1ea5084279",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaf3d91-f50e-4944-9a2e-b6e685b283fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "97ba153c-bc28-4954-b27f-481bf74a91b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b19338a-0bde-4e3b-bfb5-86c48144d739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23eb636e-71f3-43b2-af30-f963387ae190"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f77e06d-2b52-469b-87b0-819e45e9c8d7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a587775-5c26-4526-84f5-7eb4a611d1e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ad892dc-a329-485e-9a88-aef7c806a01a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82f6af72-f26d-407e-87e2-92efd4ec5c81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f8896c70-ad83-481d-9455-9c0d59ec2c8d"
                    }
                  }
                ]
              },
              {
                "id": "201095e4-a0f5-46d7-bb18-60c904dc242c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00379d07-d89b-4e59-bc1d-9352010cba21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5f9e5ed-ba26-4f11-8113-366f80388354"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ebd4574-c218-4257-a84c-85882e0021d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ee59abe-d53c-49f2-b7dd-75263f20ea76"
                    }
                  }
                ]
              },
              {
                "id": "4506ef9f-ff76-4417-a012-bb173126ca55",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23d7bece-36b1-4ef9-8c36-74e40402b637",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03b21eb6-5561-4515-841b-62ba4192dee7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae341bd5-bd1f-49c2-a8fa-eed6a9d5267c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c90f5e3-5077-49da-a698-d28331024728"
                    }
                  }
                ]
              },
              {
                "id": "1ab37cbe-89a4-428d-bb28-b3f310e5296b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73d67497-a5b2-4199-a4a6-31e175e3138b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2da8313-60cc-4e58-a2b7-0fa1b74f8a07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "001d0530-9e7f-4a6e-880d-c38db489bc45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ab9a0367-3c83-4d7b-a2db-0a6bcb657a76"
                    }
                  }
                ]
              },
              {
                "id": "e63272f7-3b62-4a26-aa98-83bb414d5f58",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16b0095f-0019-49d5-bccf-c58d0d6e5f88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f96f063e-1197-4f80-baa8-5b6f388fec08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a7b1169-a289-4b0e-b2c6-c9fd26bd84d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "77d64bc8-fa72-4f6a-81aa-d14bc74fe6cc"
                    }
                  }
                ]
              },
              {
                "id": "ff5d7b06-6379-4840-96de-459f613965d5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2606cf3-cb91-441b-bda5-6d9463feafcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c03a8719-7220-4ec6-93b8-2b89a8ebe88b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d862c27-4f8f-4cfd-a753-883a2bea37f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6393fa6a-587d-4fd0-b908-8ee45f2043fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c28e13f-3766-4899-b4a1-3069a183ae7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "270561c6-449c-491d-8346-5f893afc367c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99135a81-a637-4bb4-9340-058521457af8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c6c7a4f-7463-4853-b567-364a95b7ae16"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5236d8e-92fd-421a-8690-0098f848f398",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1fae1857-08ca-468c-9cff-5cd491094452"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1bc3e87-b16f-4ebc-b705-d7ac655b1517",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f68f027-9918-4843-a673-daa658dff1e3"
            }
          }
        ]
      },
      {
        "id": "8ebdcc33-e3db-48ad-bbd1-813ba83af506",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "74834aae-1459-4d3d-8ce1-56f90e9943bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66260a00-c0cd-432a-8cb4-542eefc767a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1991138-5463-4368-ac3a-9b90356e96b1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e873e3f-4910-4f65-a6fb-d16d53730946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c9cba1-5f2d-49ad-841e-5acb36ad844d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a56fed1-fcb2-4de1-89cc-28e08a273313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "95e2f81d-7f19-4dbb-947a-615b579d5752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b785d8-a6ae-41c6-b39c-fb9b1f3a5458",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7aff24-066c-4b80-9b32-52bb6929e227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a74896b-3110-47de-a1bc-8ee4a040eb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c00e95-631a-490e-b5c1-35aa3d0a2ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d9cd98-827f-4b1f-8e7f-d2da380464ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e354059-a9fe-45c4-9f21-513696182091",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af06aaaf-f6c9-472e-bafd-3c5ea77f5d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f8bd32-f74c-458b-a7a2-4d3201018ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c135924-73d0-4cee-903b-15d1506fc131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05b67b57-2ddc-4cbe-9dd3-78b94177700b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbf088e-587b-49cb-be3e-388977c6d571",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3324e2-3dcb-4102-b95d-f36845414b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44184daa-4596-46ac-9486-1c425228ebb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa00dd5-4b3a-408f-8fa5-72f7808857f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c126fbc7-5620-495f-b68b-8d2f51205293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f613224-cd4e-4f71-aa7b-b384f4a05a11",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec5797a-4467-4476-b793-2ba0f1eedb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293b46af-9943-4010-a307-a94b7fd702e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52bc848-88dd-4408-97f1-75b9428cd27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d77eed4-6738-4396-8e42-b1abfd350612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b5b976-2fd3-436d-bea7-248910829391",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a400f4-a039-47c6-995b-77d8496c7184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425ac059-5da0-49cb-93d1-dc9b33eee864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad18202-42b6-4927-af7c-ed8f3cdb9565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "555f4f7e-0f77-4fd2-b682-a3e73de5ab70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad62358-ae7e-4570-a29b-e18d7e79eb6b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7544a2aa-65d9-4a44-a3b3-b138186aeba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6469b856-8a1b-4d4d-9b28-a2e00ef8275d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c048a0-b133-46c9-a123-02f118683bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "84858561-0f98-462d-a792-e045dae94357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a5ab7e-e11e-4da8-9dd3-e7375887aa87",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848e19e1-50b7-46d5-9a38-47d4ab1c1e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd673d8b-148e-450e-812a-749ea3952f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b860fc-677f-4ec6-b949-763edd560e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b550f8-b172-4349-be6d-875069159e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5429711b-d41d-4083-9b51-e1c4c263d871",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee021aa-5504-41c0-91aa-83af826023ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f6f5b7-2fcd-4d27-b7ff-499edf2ca8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc240cd9-bb79-4805-ac21-be37d46fc7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a489d91-f341-47f8-b80d-b0a55feeb1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c313b4-a483-41b4-ad8b-6af21002abca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be83c74-70d3-429c-8077-baecad711bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f8101a-3134-40ec-8cec-951e112473d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8f4584-da18-4f16-8d3c-1f29f3d9a2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e92e466b-d1c8-4597-988c-24c76669d985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa0dd3c-3af7-4b88-bb01-cbda87077f26",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479ad143-5675-48e4-914b-24b856d79181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624dd737-55e9-4156-a220-61ae90559116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf77ce3-84b1-44e4-8d07-47eeb2b98a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5955b4de-d805-46de-b6f0-9978e8f01197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e5a17c-33a6-4411-803b-3bb08313dc93",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65acfeb-923e-4f46-8c7a-6882d7936df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c77857e-3bb7-4eb3-90ca-64e05fb99e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bd06ec-7932-4068-94fc-b78ba2424e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7873410-c0bf-4da9-8023-fd22b3fc4a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c888ec7-6041-4742-82ce-8d1555871070",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a02593-ba72-47a7-ab27-3288f520f1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8283b75a-da9e-4784-9910-ec1b4c7f8242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13216815-5bca-4a8b-aff8-e1aa8a00ff1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44889d4f-1e51-4bf9-ab77-582cbf1d80b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41eaf771-a2e7-4015-bd85-c99b7c699a28",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61a4437-ca56-4370-ab97-201ccb0c3937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c361f98-a632-4fe9-9b3f-f9a948e9a069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabad6ef-edf5-4810-8866-38de2ba086b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb91131d-f269-4c48-b174-5120e296a230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13331047-6b6c-4c01-9ff0-bc9faa26f5a3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f02ab7a-7646-4c29-8e56-c9de80b1aa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04646719-bdd2-456d-802c-c336b96e293a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b565cb7f-04c3-47e4-8fcd-7663ea3a0f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4ff938-5cd3-48a4-a746-07158b2221ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c026b247-3adf-4b3e-aa3e-62d924d6ea5a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f1518e-16c7-4e6b-bfda-1151c3f4192d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793b5502-070c-47b9-8f0f-e4d279a9a25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b906ef2e-b96e-4698-be69-22af1fcfdf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c5c51d-cd99-45bd-9788-e68d993806b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f40b01a-c9ce-4d91-89f8-37c44f8be5b5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d63488-3cdd-495a-87c9-b659ed322d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af41db12-cdbb-44cc-88b5-64948837655a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a879baa-12eb-4195-90d7-c710c9b8128a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce77511a-d6f3-4b6d-9aa3-4030ffc78e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d910f6d4-1e99-43a5-98c5-0d96b2b5efa7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e7f3bf-6f35-4ad0-a9f2-764a51b75c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ea40ba-77bd-45d1-a3e6-1279c46b426b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6155a4-1ec0-4434-b806-f143c62e892a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25892dd0-b071-4756-b18e-4e4fbe11d4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6f2fbe-eb23-4e7e-8716-e6cbc02ef1c1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25f8b67-4291-402f-a57d-f6a29ea4d94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4e1070-f4c6-48ac-b574-b030a0cf4760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc96478-8652-4659-bd65-b359462c1d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c70048-5516-431f-a626-f934ccf011b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be77742e-d13b-4301-ad43-e3b4ec8c8bc4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e433717a-e0d6-4649-9a4f-df5c678e09c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e4788d-8917-41a1-be88-8513d4bf63b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be15f6e7-a0bf-4839-823f-b5e04176abd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0719330c-dfab-4b39-bcad-3c806b8430bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cb79e1-f478-43f8-aa98-31b42f0bf7e5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ef58d0-9a72-4f87-93ea-773780e2e180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffca060-77fa-4765-b96d-5a69ae4dbc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8422538e-20a0-40a6-bf5b-c03b3c9ae8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a23a0231-4b36-4e17-beaa-f3d315770c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b023c0-036b-4411-a87a-5333beb5370a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e305b7-31d3-47fb-b103-4262620f7c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bcc8c9-f117-4508-a642-070b8c22def0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6286d2-0a0b-4ad6-82a5-5b5a825ce611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aaac2ce-f3a9-4500-8394-cbb2da404150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ed1985-7c5c-4720-b973-acd5a349b9ba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e2869d-1eb4-44a2-8d3f-c7eada2d6d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83711539-a121-4d63-b201-ad354ca15470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23dc367-edb3-408c-980c-e1510a775630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ed71d3-99e4-4879-babd-709943712994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11ed075-9e19-4159-80d4-9326e9bb8d68",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ba93a9-eb7f-4239-9cca-2afb9af1e851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5458a2-b2bf-41ba-a3db-2cf99c8853dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb02196-9f74-4a15-bcda-f8a04bcc2a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8232ea51-3f72-4f05-a850-b4920754b6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd93363b-9fee-4531-9f2f-e94b32764638",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacf921a-3a65-4846-83de-23237130d046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d7193b-3747-4a7d-b206-511c5d1e633b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8cc4ac-2576-4820-a7aa-b25de6b217f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7f607b-8868-4c98-a9c2-ca16944db29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3486a86-941a-49af-b443-2dd6847137b1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf41729-6fa2-4186-a1cf-28ea1f242a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e86d765-1f58-4c2b-89a5-1d7d63afe293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe080cf-acd0-4ba2-914f-b28bc54feec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78c2236a-4865-4df3-a62e-28551d560813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15aae81-9659-498b-81bc-0b427675b76e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce12957f-6301-4c38-9387-be9b1f885a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de6670e-61eb-45c2-9dea-9efb5d3f6b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92bd0b1-cc0b-4eaa-8b56-7b242fd222fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af065f0-870b-41e8-8334-f7d6bd3fd19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bffc806-4315-43a4-94dc-f56c9221c839",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7cf69d-ae70-4887-9c66-e5f598d514b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9bf8f7-7a84-436f-9de9-60734799c704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4dda74-1bc1-4334-bd53-5e74f2c8d39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade2bed0-d7a3-44b9-9ba2-90c1dfd54a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f2438a-288b-4111-8086-a98407a2deea",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07789e06-501b-4794-8761-02c515f7b0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39b1d1c-4443-41c2-bfa7-a076add2c517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5181e5-4f79-4268-bce0-8cc54bd59cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1dea3b-0b66-4297-8d9c-692a962e4001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb2dbd8-cdd5-403e-96d1-9bfd91513960",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e97d30-585d-4bfa-8793-3e0fe58bdcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72c1b69-35c2-4dbc-949d-085842998e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fea9f2-3714-4b2b-8013-7d499bf25779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a818bb1c-246a-40a6-8137-7278f836267f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06ae134-7833-4cc2-9545-a9fe9a31c6d5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd99dcee-a8f8-4257-9076-93c9b0416cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da1dc19-d178-4e03-a034-6e9a14e90279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f7d9a7-1eb6-4e20-b377-fbdd805b034e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97952058-2f2e-4703-8879-3840b2a4e01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3603b5-4983-4dc6-8b14-e247d1b436c4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06fc85f-463b-451d-aa95-72545cf98e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fa2139-6311-4aeb-9bba-4b4ea04942a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf691f3-7107-4277-8f33-513cefd9b408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46a2c43-3c30-4bf0-b91c-4eb7f22f0f5a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e3db3a4-3c9f-425d-994d-b33824f195f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c819d5f-c913-4fd9-8f5b-47f602bce153",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2891e8be-8881-4552-bff1-e7e1ec3713f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea8312a-322a-4fcb-b8d0-09c3c1a4d8dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53846bd7-5561-4dd9-8f36-971c577553b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5d103de-ab8a-45cc-81cf-b632a888dbe2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a1887f9-8fb1-4721-91b0-ed72ad71fea9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2254d478-fd73-4534-8c52-84292e579e41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73ade402-4267-4e87-ab4c-746d568a4a31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "676fd020-a20a-4775-a7f4-a9aa7124e6ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44f9946c-5af6-4e8a-9981-1613dd6907a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "010b70ff-715b-4b40-8a51-0f5161a6050c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce980e73-3f53-4bab-b2d1-a843f2283b9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87b0d520-b96c-401d-9890-192dcaabead1"
            }
          }
        ]
      },
      {
        "id": "be7257fa-8bf1-4adc-93cb-1d210d596731",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "18cd57a7-adef-4e25-845b-bfc60f98f8d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "767b30f2-7199-4d86-ae8f-9ab2388fe128",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4527cb56-e501-4986-b6b1-f2ca8cdb2f9f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dbdc7a-6839-412e-b465-f4fd8214c877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344a6e71-420e-4ab3-b749-1aea69a91c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f861baf-63ac-4fbc-aa02-70ef6d350581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d8fb85-5f75-41c9-9a06-702e1ea68aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdaf8fa-a08c-4257-8b6f-bc85e145cf72",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5793b77-7557-4664-ab75-b5f68d524440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2722be54-7b9f-49c1-8c59-ba05fae8b0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650b7a84-f8e3-45e3-bbf9-6024079b6e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c924d4a2-821a-49ad-9812-516a8243e194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f61bfee-9a28-4067-ab7d-0335fa2f199a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ad4440-1f1f-4864-9fe7-8dcb4f2c17ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471f5c69-02e2-49f6-b645-a600bd582f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd67ce7f-ed6b-48d0-b6d9-84ebcaeafe26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "985ca330-6759-40c9-9f44-c5c745b69d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7a50ab-ba04-4b41-b65d-8b64742229bc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf89409-bd3e-46c6-9dc4-5f12b8a767c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e0a0c4-c869-49e9-bbf6-7a3c3045a696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4173ea-7a10-4457-9ed1-5c0950943700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df6b712b-155d-4ff4-a644-1891ac184952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be13b3f-f507-4410-b5b1-3afb3a9300ce",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c36d631-f60b-451e-b732-f162910b2a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb323f97-1582-40c8-ad8e-f025a9e757ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92c529b-079b-4aa4-b024-3d804ba7e213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff2c21a-082a-4f55-9770-a5b29ffc9f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa283aed-14be-4c9c-b750-7e2ee6823ba8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f984a236-8e9f-410f-a93b-b6a0502d759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35269e1-87d0-464b-8c0b-e1d41c160201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce066ef2-e99f-44ed-8698-138ee4575f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba20f300-29d8-42aa-aa6a-ca590ac40d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7c0c29-9f1a-47e1-bce2-8309b756ade8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dcb9e9-1664-4f28-a434-65eb919c1884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d92f1a1-fd9e-4f7b-9d50-ed2a84ebe1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414ddfde-6bbf-43ed-a565-27740a08f6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f98c566-5155-4df4-a177-e174d033778f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1162acde-a612-404e-8e8e-25000db0b9c0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7572e7-a461-4b29-80e7-434e527ceaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de80ab2-3002-48ad-b33e-9d1dd38343e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f018498-bab2-45c5-a876-65c56c2efb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8484c1-0532-417f-b49b-e3acaa6f8524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8e3b36-1221-463d-88f9-ba5dee6a5d34",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a5327b-9823-4adb-85fe-d40cdcd97091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79a7990-0e5d-408d-ad10-30bd787d3649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53be9c1c-5179-414d-841b-c56df9373f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe21606a-dab9-4dbd-9aeb-a04bcd0f8842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4722c6b-d54d-4a96-8b7d-6d7f165155e3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380911eb-5e5d-452b-bfeb-978225bc28bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2231df-517b-4130-903c-c46db7ae3d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d964014a-24e5-4fda-8d31-02cd826bd528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a31b7d66-e3a2-477b-a56c-465321ec2ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7c3ffe-edd0-41f1-a45f-5a7f7f26d739",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddc0dc7-da79-4251-a5b4-418307c50eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0eb443a-b8dc-4466-8689-6e8b98d6f1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db04bda-e164-4f17-8d0d-239b347d4c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "51cca4cd-4d65-4142-9f42-fa714a2f423a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833b4e0d-00a5-4d81-a665-56327e594ecb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387a9014-2d7e-4ddf-97bd-4fb5aac4154f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47577568-45e8-45ba-8f55-f8a1198e06bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b306fb6-cf60-4daf-99ab-9230d4bd3df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf290c0-f1da-4c5b-bd65-d1d741d5351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b684569b-9483-47f9-b281-c3c546cc2b01",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a991dc-faaf-4936-99d8-126e3210ff0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136888ce-27d9-4d7b-9c15-7b443630fd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa35bb6-a407-47cb-aacf-49705ec825ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c24363-de13-494d-ae51-a6c3048f09a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5581ea3c-f1e1-4096-b5cc-4074a3f4e98d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750e8d76-b418-4c8b-8962-c6d67f4212d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40278ac-0850-40e7-a4d5-cafb3eb142cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b359f8-2557-4c58-acf6-1ba786e7ac68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c6845f-6ce5-4963-bc36-f731545ce755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ca5f1d-e199-4770-87a0-feae1d72ab13",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c60d0c-bf21-4ccc-b9db-4dd3ac5883ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcdea96-dc50-4270-917c-1699be9d0258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000a27d1-4803-45ef-8686-3eb96a30cef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c0f417-2cf4-49a8-9ae1-1a172b3f9518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffbee2c-164c-4773-85f2-6b1f2aa6c85f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9c0bf8-7a6d-4fbb-8882-6cf107d9cb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be07912-e4ba-4f7d-b36d-d6893093a95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b725a261-5ef0-484b-a1a7-3e43f058e7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "84133384-f311-4cd8-8c52-4875fb9b4308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93166ce-6a4e-43f4-b5c7-bc2ae25f6113",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ca8b7a-344a-4f1b-8ea7-8b1e159b9a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36721c5c-dcfb-40b4-a078-03d3cd8e8327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2064b2-50ca-4872-9471-d74c66284b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "635929ba-0bc4-4490-8cf6-f5147fee6ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c114fa3d-83b8-4668-b4fc-6515ff9b5b79",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a952e8c-53bc-454c-b16b-a24a0617c288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18517ca-ff8b-400d-b6ce-3799ffba13b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f4379d-05dc-40f9-abc9-121e16fc9b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15bb576-d7e9-4b9b-99d6-d591fdf78ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2f787d-2fbf-4b0d-8ac7-b6bd0697d775",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71682d90-166d-48a4-ac7c-8dffa49f41a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d861b9d-3e1c-4c5e-bbdf-90300cc0a49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e863844b-a7f0-4192-ac11-64fbdc4d9f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b94bc2a5-7ea6-4ea3-9dac-f1c8bbe0da37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e18b341-206b-4a09-9088-ef4af169640f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a320c67-11d0-49d7-be3c-c0cfd1bde5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37762c7e-4f3a-45ac-8343-7844c7b1a8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81f88c2-a171-4158-81bf-705d2aff995d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c34d2a9-b87e-4911-bc3d-2ec3642a047b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf9ec35-60e1-4163-9910-0e8b85336f79",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40555c83-ed60-4a7b-a8ff-bafc5f11788d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd1eb31-6192-411e-ae66-0a32ea44943c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f237440-31eb-4856-8a55-a9eaed3e1590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4662f381-95b1-4513-b16b-3640806d5c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb548d9-d6b6-4c62-a6ee-527690671fc2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff083f0d-613c-40a9-8af8-7ad42a1a326f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae5bc2d-2489-4c79-b6c1-4882b6d3e30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535f9bda-28c6-47a3-bee8-336178fad906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0711b6-3cdb-4f51-a028-cf52d22fcee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083633b5-38d4-4e3d-8c9f-25824cb1ad1c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f728d7-8f0e-4d44-aa61-5c7903889873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18058a5b-dc28-43cd-99ab-13560697fe36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6c2985-fb01-4c09-bb89-f86b5efdaf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8265c1d-1717-4425-a915-36778364bf57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3792344-30e9-4d40-b40c-c1a9beae035a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a93094-5e78-4e04-b4a7-169f33f50e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02b0b37-65ad-4f24-b6c2-4e69670be3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae20edb-9d25-4187-8708-5debb887dedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bec376c6-4e20-4492-8873-31bcd8842156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c4fc87-fa66-429c-b60d-f10ec1456a13",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83da35bb-179e-411b-be08-724acf4a51a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ea718f-34e3-4d62-a708-0411ebec335f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cfb6aa-e271-4ab1-879d-764c2c792907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc9c739-f1dc-4744-aa98-17fa21002571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1604a97c-f1bc-46f5-a152-f6ce6cdc476e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfe4e01-c288-4b7d-8caa-fc6e220a4592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f5bc51-c5d6-424f-9c66-5e2c13372c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5187c8e1-0fa6-4635-8916-3e0012abfd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39326571-6e50-442e-80de-e95c7037c0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112d2913-49d8-4358-87ac-d82cf4b856d6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716c4629-7ec2-4b55-b42f-4cebacbe90b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec156a6-828a-4bfa-9791-3b384d80e655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f04c33-ea97-45c1-9b14-7114c6b5a52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6ccce3-9f87-4206-b75a-89eab613f4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a060ed05-fff6-451b-b90e-d96634deb0a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd5fa1e-c87b-4918-9e9a-40604220556d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487d24d8-6986-4b96-a449-9ce786948898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647328de-0b90-4d94-8781-42e37e9202f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde43175-2c02-4307-b6db-1a57966c66d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994fe0a6-f2a9-47f7-9a98-71a3356f3368",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0e56db-c947-4b14-b535-bac95bc2dde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77893af-db9b-4107-b021-8628cb170933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a42797-41f1-4bd6-855d-6e277858ed96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d677181-cbe4-4fc5-bde3-b743383e47d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f555d438-5a38-4a76-a851-2a6d93387ad9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556b91f6-22a1-4517-9e95-dc6eeebef88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b44993-4932-443b-8b0e-c589d411ec53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfa2652-cda4-4832-9544-7fd421f14769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f8abb4-2398-461d-abd9-34f2042b38dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfc98ea-f506-47ec-8451-29856f120b81",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f301507-0dbf-4cce-a77c-67d2a745ee6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc2bc54-6ad3-47ab-a180-ff9fabac2d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b711c1-dfa5-42c0-b6a1-f7cac845e009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8bf5bc-2854-4707-a5a2-7c8a414e8abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875786da-0854-4932-9abb-c15e3bdff132",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd60326-02c3-4574-bd85-c7984aca275b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6318ea9-ba7e-4eec-bbbd-0e80d63cd4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e92069d-cdfd-49d1-b6ad-185d046a3938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f02a03da-0fe9-4e80-a447-d8c1b6f7f146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa049503-b688-4c52-a19a-9aabd12ebca9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f25f1de-43a9-4614-8689-1c50d87c44d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9688e8-f957-493a-889e-f8271af54864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893f5211-28a7-43a1-90ef-11c49f37715c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e03c645-4747-421b-96f4-6bc9ca022ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19429e5d-28a9-447a-b955-5876e4edf046",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2802ad43-46cf-4906-a8c3-1038ea8dce11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7290fdd-9815-45cc-8286-8713edb4cd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66091de5-3e3c-45d0-b17c-818067a8876e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf640237-5cf9-4134-8cc7-199105674bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30825325-459c-44e5-900f-bc4b461c4434",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075fad62-4263-4e3b-9105-81e6c11b8d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c03f5ee-aeb7-4e97-8c2c-b9d876b700d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7384e1e3-d2d0-409c-a35c-f13a6c95dd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef8b7af-a95c-41f3-8195-564191f08536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d320fa9b-2cef-4f15-a325-343bf6273653",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c5d47b-1c7e-4ce3-836a-272b04804e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce6a057-d094-43a7-b32e-115299b756ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0749a9-a532-41d3-94e5-ab1e16bf5865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7dc532-df54-4add-9f89-abecb230435b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d9e162-ca90-47a1-a6f6-b4942dfa30a3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393d43c2-74ad-4a02-a4a8-a87d01be08e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5bfb93-67f6-4066-b089-4f26f01b3e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb9e8df-c276-4c91-9cc2-6ea86de4eceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7fb191-e8b8-413e-9b2a-86b9ad70dcf2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "81587d36-650d-450a-be49-f422a5376108",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1336eeab-1c59-4eee-95c3-b208a4e19acf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5c2f29-cdeb-438b-b473-b6d23b463206",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "61a56d03-83f8-4b43-9990-989589c32932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5906ce-8801-425d-bf58-e90a5a741455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11187c70-3b5b-4d02-938b-9288ed6949d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3eb7bbc-bcd1-4576-ace5-2a40f441dd76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5458d10f-0d04-474c-833c-61509e39b946"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc7fc517-16d1-48ec-b67a-a70d1db68b45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "772e38b8-98a5-4f58-956c-8b4738a3d63d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f3a615f-d608-4fc1-b23f-b210bd9abaca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c370c0a-07fd-48d9-bc22-1f63936e1426"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90631104-a813-4317-a03d-29295be4a3f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02a11463-8810-4ccf-96e0-70893a690e2f"
            }
          }
        ]
      },
      {
        "id": "ab093933-1fde-4417-8676-2836a262ec96",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3a834deb-e0ca-413d-b369-bf25dfc870dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8317976a-a6db-4c14-9497-2d2a822fc505",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "445139a6-1bbf-481c-811f-88684c271dc2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bd1df9-4a36-4b87-ac1d-8abab265487e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23c4886-ed2d-48f7-aa15-85966fd940e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8746f643-4ee2-4ed8-8cee-eb9663b48387",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2859d786-a5cb-48e3-9146-9a7c96531f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5b0b6e-fc9e-4dfc-804e-580077b014d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36e991e-7917-4317-b2be-cf5e5ab04596",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168a211b-da0f-41e5-ad8d-9a417c76501f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd823e09-62c1-4f69-b69d-8c6f9bbaa8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c622809-6de9-4ecb-a788-5f75beae5b8f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804af30d-3457-466c-89b3-a82c3cbfc196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26be6ca-4724-4210-804b-8630df23f599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091b5b9c-a8cf-42b7-9c08-c2335b71d30c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d0deb8-14e4-4239-b505-7b32aaecb4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d456bb3-f2ce-4116-8578-8b2be270af05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac8c3a6-aa32-4a1d-b50c-2c5045c02b50",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582bf9b4-addf-484a-89b6-b8811a0c9f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3674ba-bfcd-42dc-8625-f9a7765c9e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de42e948-d43f-47f4-a91e-c6cfa0825aea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c695ec85-ba0b-437a-9ebe-5139ca519ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1de8d0-9bdf-40dc-95aa-bcac80a8e89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980b3672-c540-4b00-9c26-d0baa81a4aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb61fed1-2ab2-4d98-a78b-d091f5be8288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7541c3c6-b3ca-4be0-8a50-b194bad960db",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10deeb8f-2d90-45a4-8aa8-836807ee3dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeaa4ac7-5bee-4ff5-a3f1-e0f3ef345504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6d336a-8778-4c2a-a7ff-7f60d30dce2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac302b7-4117-4fd5-a7c2-93580b963c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f278b59b-b8f3-4249-8463-52f537caa510",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656c4158-5088-49bf-ab83-22ee27c86ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df2eecb-0571-4ab1-81e4-4453a0f57ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed27f6b6-e14d-404d-850e-1f5fa87c4a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3315c5f-d4d9-4365-a76a-afe6e2830ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee62ffa-85f9-4300-a713-2ff9e3c2076f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80809715-0904-4141-b053-18327adca799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ba309a-b7ac-4816-8747-8054d90fcc8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6b38ee-824f-44d5-ab03-63a5e10a42a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d8abb9-2973-4742-8d19-8a69ea315bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b366f8c3-d34a-4e91-8add-989cdafb1ca3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d9fa30-c74d-40ee-9ffb-d329d2114fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c999c7-8449-455a-9bb4-a27b9922a9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd371f3-87a9-45bd-b314-ac8af38714b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f25f32-a694-4205-8f39-78f27f8568f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73acb4fb-3189-4f6b-acde-c1724051bb59",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248d9fcf-7c30-4ca9-81e5-fdea17e737e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf32f1c-4625-44a0-bb94-4d8f49807c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d74b641-72cc-4925-9ef6-d189c5c92953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e145a0a-096a-432c-bfd5-fc337daa9787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2959d3-ab4e-4366-ac06-2a5256a92bd0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bede3e-f3d8-4d82-9afb-5fa59602e42a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5708beb8-33b7-418a-ad13-eb3a40267263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d3ce5c-2fba-4512-9c94-b6a41066f556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723c75ea-5420-4e9e-a365-568580310a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e90b02-d7a6-4a93-acb8-70bc5c09329a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5800f8e0-6ccf-475e-a9eb-e48688d9834c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6123610e-814f-48e5-9831-d65e3e8db1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71cab6a-70ee-46da-bb7c-76b16d7b6b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c911c099-8ae8-4bd5-bfa9-d191d39cb9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8602ca12-a1c3-4783-85e6-1b0477f56ace",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a093a517-9f61-4777-b233-aaddb602ff06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bdc966b-b0ca-40f5-9bd9-0b75090952de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e36f40d-e837-4f7c-ace4-a37c05125e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd5ddb9-089a-454e-9b77-5281e072c406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696ed54d-890c-424b-91b7-2e8528e3ed96",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c15eb1-044e-4a99-8117-34f4c776de47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca47b05-834e-447f-8fea-01e5837bd09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8b6809-27b3-4f14-a5f6-298d5b97e574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e087f95-527e-46f1-9b26-8f7639d5c9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646d5a4a-2ce5-47b7-aea2-fdc93aa4879d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ee2842-2445-4966-9988-d35bf38e9dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d828265-7364-4e8c-aeb0-4ed1c64bf705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a29e93-c3c9-480b-b4d8-02a25d286583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cb76f1-be06-4ef8-b0f7-4b3e3382ad3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca0e1f5-2f37-447a-9051-c7de4a0cc565",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8cebd1-2e67-4911-b432-acd56d745c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635c7a39-2614-4632-8247-b878fc17fe55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eea87a-3e43-478f-a2bd-9a1b3a403ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74d16ce-26dd-4065-9011-e4e3b4f67860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d3baa3-acaa-4be8-ba2a-92808b2de278",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5801d0-12dd-41ac-958c-f343c5ef39ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4666de-c372-4f9a-b8b2-0ccca8241e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e021710a-efef-4144-8d55-1fb51dee55e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbbb0c1-7451-4013-8a65-46c988a559c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64d9b90-a955-43ea-8934-0c8f221bfb1f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5772d3e6-88be-4487-b4fe-2d3fb540aba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1289a454-989b-4ead-950e-63adad129be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fc16a3-6cb7-4daf-b597-136454126a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9ae3f6-9710-4397-913a-9db7aed52457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7690b03-d6ba-44d2-81a0-15ffdf17b9b8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1348c94-0c09-41f1-888e-67e6d7c0aa2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471941c4-ec10-4ee6-bd3d-687beb5053ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fe28d9-f70d-49ec-9085-61ddd9548491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb49460-1428-4d54-a92a-c4a4bdf3b82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412e9f60-6b2b-42d8-bb87-0789a98ac88a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12601886-9baf-465c-82aa-97834d391c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3308b19d-8c59-4fc6-8904-31e7324b52df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc9718b-4bd5-4439-bae6-ddd8484f19b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866ca682-c0bb-4385-adef-b0f9c8f46455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe56c11-5f40-473e-bbbd-ceb94f7fb77d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e888792-2866-41f9-b011-bedd2b6b2d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0421f783-dae9-48d1-a545-1662b95ef408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cf86ff-e62f-4c25-be0a-91039561fffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38214239-b34f-45a3-8b47-a4f5ceb195c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e747c2e6-7bb5-4241-b083-bb4384c94e65",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be96d20-41a3-45d9-b448-6fed861260e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bff853ad-ab52-47ee-9fab-3d2470db8ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9198e80-a527-4614-999c-a754cd0a3246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54fd107-fb6b-4835-8d1d-47fcdd7b4397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4db44f-0a15-4d5e-9efc-ccf0946f785c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8201b1-d9a6-49a7-98fc-d79824b7397b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9d77f2b-519e-4ee2-ba57-5032bbcdd702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8f218f-64e7-47ce-a368-1996ac8bf11c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d0e57b-3151-450e-866a-da60250e7e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02135adf-5999-4d76-b005-c6188ec4c22a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4aa202-8d56-42c6-a629-14ec36dfe73a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6728f0cb-4a46-483d-8c28-d6d6a778cbff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcb924f-deb9-4e60-8181-c7bb84cbb253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f0de82-338d-44af-95bc-30c65d740517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc23ba1a-e1ef-423e-b4e5-a212aedb3fe9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050a6124-29a3-421d-9a8e-a54b45efa411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f20adb4-6a15-4034-823f-ab5452249c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8003c269-f88d-4ff0-b320-9e7c3a6dafdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b823adc6-19a3-4950-8a17-00b0919261c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1779cbb8-e65c-4f5d-af2e-8c4ddb05b087",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e505fa-1cf1-4354-b56b-3ac885c77208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da34e77d-dbd0-466c-9c66-eca699f10c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dab06f2-2cb4-4837-8cfd-0ccf577d3065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d45bbdf-a8c1-4eb9-a20d-447fee425e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c142282-c164-4883-b79c-1b452cf3f85e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2536b9d7-7da8-4e76-8f2a-ca375bf81e95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92c7c52f-a91c-4292-b478-a94429326acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb5ec4f-a70b-4479-a66b-576e23774441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6e4700-0ef5-4fb2-b16a-4aaad46ce7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7af38e-1add-423a-b051-2911c83f72be",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ff0b9c-711b-480e-a66c-9aa2ce812ed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c655537-1c3a-4ade-b12b-5df8bc015df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5703e526-4c52-42d8-8f80-2ac562dc4bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf127e1-7a7c-4576-8972-5a5aab5e270b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e999bb-7d19-46f7-b713-3c07daa5e13a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1765966-0eb2-4cbc-9ab1-00f8f47c3ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f38dd20b-8816-4349-8d0e-35dc0c0f826d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4af7b1-bb55-4e0c-8be9-929ec3462b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c20c0ef-65d2-4ca8-813a-fed70c1b70d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0629b9-93be-4de0-9f90-605f500f0c4b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6feb11d-735c-4f4f-896a-a2fae4114ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea354c5-ff86-4849-8fd6-0e6356fd79cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8728aaa-7ef1-426a-8c5a-d72d30a18745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe67ec3-0863-4d12-b900-13f65de7ef46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821e8238-6f1f-40af-8684-827b47296229",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e7aa25-2ca8-48ca-8f11-8645afecd968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58796543-ae2a-4a85-83e0-1c51cd91ae2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ce5359-4e79-4ef7-acf7-4c6ab591b4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1079efb4-15c0-4086-9de5-984e87795ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d2df42-746c-4789-b385-bf882b628d38",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e36faf-0404-489f-8193-73dff3a07a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4cba1ba-f52d-4724-b212-2e638869d61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "889738b9-d661-4e67-b6e4-58214e0db4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b80ac9e-2927-4fef-8fcf-3712882b4bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9041d07-383d-4e55-8c22-62b53b63ebe6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a777502-d828-43da-9ded-bd14d802a4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1eec06d-08d9-475d-8cb7-5211254c805e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f7e354-a445-4275-9ea0-5580736ee37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044ddcd5-e8c1-4ad1-b853-2ebe5dd290a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc61cb97-1075-4275-bd10-f90c8612cf90",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8edbc1-0f45-4493-995c-ac622969a871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9cf7cc-2272-43f7-934d-4a569e69c805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03a451b-8ace-41f2-abb1-4ae7e13c54bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b838ee-115a-4026-a010-10155b8b27b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e35264-c8a3-4bfd-b782-e3873ad40dbf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6c91b7-5e76-4479-bc47-a80cc3b9d2b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba2d2c9-82db-4dac-9d29-3b29e0f88073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa957c4d-9c60-4003-8cbc-6e88c406dcd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c41080-1da4-467b-855f-1fb4f82831c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5ee177-1374-4199-9cd7-798de86a75ce",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92646fb-7635-4b25-97ac-757ae0b2d3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e454ef-f186-4e06-a5b0-a22f431481f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fb7af7-1608-4f64-98b0-88ee3c08e5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da8612a-cb10-4c03-ba52-82ef62d24cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02cbae4-f375-486e-94db-581e36d6d0e2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af711dd1-b67e-4819-b91e-6e437b0591bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771d35a4-7453-4c06-ae60-daf583f5e452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654490be-b0ef-41e6-bc75-8c4ce50f04da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47dfa0b1-7be7-4377-90db-5cd8a7691689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d98555-2eb4-48de-a919-9de0f53749fd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9418243-c6b5-4223-bc0b-c43e36b0aeb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485dbacf-26ba-4b12-bb02-02aee5e38db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8386e367-b27a-40b3-b014-f09806f18545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ee56c9-4416-4fc4-b00f-92f49977c35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366ca5d5-fdf7-40fe-a9e8-799ec2f88d73",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a94656-24d7-4e4b-bd19-380320b17360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0517362a-8648-41a7-a329-111380b8c60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e817dc5-9149-4c33-9150-9db75f976c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab80174-96a3-4e13-9dd1-ca7467924eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db39efac-4446-4f6a-bce2-770288e60da6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9fef4f-749d-497e-98fc-c19fe79c1d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27df056a-128f-47d7-b0ac-91e19872d6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11439bb-271c-452b-a668-47b452a3c69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9799da-d3f0-4207-9198-1260aee8e3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c16fc20-2374-4b54-bb67-19a5b0b32792",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92209f4b-173c-4fc9-8ccc-faa59115ab2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdd042a-1e82-43c1-9a77-29ad48c33907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f63816a-f82d-4dc0-875a-f99a5c23b958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484b57ce-694e-4b9c-99bb-ac6d6d01cc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5d5a9f-d76e-4eb5-926a-35d5bac959a8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0606f490-c685-4cc1-badb-ea32077feac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d6d544-cc09-4ce1-a0a1-178b98f7d041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2a4324-2419-40fc-9c1e-b47bfb89c678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11e1d6b-fb0a-4cfb-9d16-d7fc64915a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5506711e-7405-475b-bb5b-fa631116221f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12552f67-408f-43e2-91d4-1f43e42205c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833cb881-24d3-4015-a987-4f9d1d62af1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ebc474-b4c6-4db8-84f9-33ea4e61a8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0ce582-6dca-4f5a-a98f-b9b70c4b8ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdb0c2c-4752-48d7-a0eb-dd8aee31cca1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11d59fc-d79e-4b1e-a808-34355905d907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4af085-04af-4aa0-9bae-c40488d12a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55baa80-3a32-47ea-bb3b-449d6cb9508d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b410e7d-c422-490c-a128-db9a71ccc92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c87aea-f034-4c6d-8c4b-4d6e4d34ab69",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a7d5c7-b09b-43fa-ad94-116105d0bd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a294e4-d263-4afa-a179-56704535dadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a748226c-4295-4d7a-a29f-c4c37a19b1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1f99f1-0562-4ecf-a4ca-f0790691fdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a6dba0-a5d3-47d0-a945-563c3bd9706c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9948ee-31ed-4591-9932-68fc0f8a5c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59fcea6b-56df-47e1-9686-501e74ef12e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba49651-efbc-42c7-bc8d-fd50d4eca158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f11ab4e-d07a-45ca-82de-892eb361bb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566cb006-40bf-4337-8ca2-171903d9fdd9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0746a30-e0df-4823-ac6f-c0e81d21a734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb0fcb8-43d4-4575-90a4-371d43ceb2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7a29dd-f8f6-4f15-bef3-f3ceab84b71f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd25f65-ccb0-4ce9-a268-f31eb4ae759e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9b2a98-eaa2-4f49-8d46-ac548c071082",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72df4615-63e5-4f8a-897c-b1f7bc319fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04786fd-495f-4a71-80aa-fc594455ac74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a4d97f-ece7-43cd-9e40-78b1bab35a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f23c0c-5c34-4af2-a8a5-f7e541b9f160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855cacc3-2b9f-4ace-bb05-86a85be45caf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a921a02-a52b-4131-858c-b496bf3b3678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cd5ef5-07aa-46d2-b06e-efa64204e31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22a7562-89cd-401d-a4d7-0f9b3b6d80bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e510c2d-79ce-4e38-8cf9-c3c6bb406fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce246f85-ac64-481d-9d82-d18c1a527640",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c631190a-3ef7-423d-aa3b-b404e7b52bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c2f163-10d7-424b-8401-5bb0dc56e009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed7c2d6-7f32-499a-ace8-a62a667787c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35ff403-5903-4a5a-b445-2222aa332e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31224a03-43c8-436e-bbde-e580f0520a0e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7361c8ee-32f2-4cf1-bc74-51626eecf050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87f3483-71b6-4ced-8560-81bb6a5936eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35ab21b-552c-484e-a38e-17224f7bb9a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bb596c-f225-44c4-be3d-4072c67c0722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103659cb-9cfa-46b4-be70-3b06df705d98",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e390ae-d0b1-4ed7-ace4-d4a6295677e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21053a1-b687-41ef-9048-2b904f95f16a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d92197e-1730-4314-b25d-27471ecb7c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85361b66-cb55-4521-aa00-2b1ac3cb807e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13bd26c-7ce2-4dac-9883-e59d01c3ad66",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ffb7f6-cd47-41ba-abae-7882d146d833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67210c86-271a-4707-9838-9bbfaa34cc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f73745-a4a0-4c7d-b3ab-68b325e381d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9e1e8e-f64a-4d4e-b56f-d904f6295106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8436e2b3-6a5a-4d22-94c1-8f052c598838",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1430657a-3486-4ecb-8f0c-257b0887649b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e27d24f-755f-4e05-a7b0-b34e46199f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faa113c-f5cb-4aa7-9089-69684a77b3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c799300-57f3-4f13-afcd-da2306613802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc05340-c747-4cdb-9860-ce421ebcc376",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9f3928-4261-4524-ad96-638fc5816bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70593ad-e761-442c-b16f-f202f0d96941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f91d9eb-471e-45db-923b-9c58df2a82e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667c80b1-1c65-479a-b6b4-34125793592d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5fbf5f-69f7-4e85-bc01-c1e2f8f37d65",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6679149e-2c50-49e7-8e49-42ac30cfb938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f57cd8-83cb-4479-9e7c-cfe3737383f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700e1770-543c-446e-b836-725c9d4781ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63823a9-d76b-4ae2-98cb-13cb05710fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56d3b73-dd7e-4d36-9985-ec736b173115",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ac4992-95c0-4b2e-8b3a-7e702729e106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb7493e-c4fd-40cc-8886-8df72dfb414c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6792ec6-004f-44a5-a5cd-723ee3b590d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b615c10-138f-4981-9268-eb47634f0ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca22f47-d23b-4579-b293-a7993b9ea315",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6974ba34-950d-4cd7-ae53-485ab388ccd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3e3e0c-d78d-4eba-92ab-eef6e4869820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa8a3b7-27b3-48d1-abc4-f42dc9352048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ebcd61-3d89-4772-9d3b-c4c94aeefcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f4249f-209d-4f72-9166-f693e156a654",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4650e572-2d82-4571-81c7-600247fe13bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41617010-d31c-4b9e-b5bc-f8ec2a91da52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb72905-8b12-4d87-b5a7-2aee50210027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7119e2-8dd5-437f-b4cf-a1bc4c51d2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29f007e-5f46-47c3-ae51-4e3e81e8def5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88ef649-cbd4-47f1-a948-a22f34eab4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535ee14e-1fe1-4d48-a232-d0366a7b93a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719669fa-69fa-401e-9e41-a791022975a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27a9657-b5f4-4b51-a8de-def898224e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5bda7c-64b2-4d55-a722-e160ed291da8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a82b09f-5748-463f-beb4-0580e4619c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f379a8-2b51-47fa-acb9-043b91247618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d458eab5-7629-4279-a1b5-a1fd85cc7e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677acaff-8773-42ad-8049-c84a6fac759c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4867e1-b85e-4d3a-92af-6cdecdde1c19",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa822964-b740-4bdb-b120-aabfc36514b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ad7b11-2980-4d48-a7e3-dc0530d9bfde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357d1599-24c7-4221-9371-974dc7595190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d490cd-ad40-4a96-ac7b-5755a41548fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9666a60a-672a-42b8-b84b-83ce2a82392c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b1be4b-4963-4080-97ef-32d94c25c8eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6fc89b-8f8d-442a-a37c-023294185485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30250b1d-0a72-4ed7-b427-2996f612a531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab01b4b-c746-42b9-82ba-e6c2d5ad736f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df20e1f-633c-4c55-8f8d-86dc2f2933dd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a129f9-55c6-4415-996a-e5450392dead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2da244db-b3c4-42ae-9460-264117b154fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2ba39e-dcf5-43bf-9489-d01b458a990d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3470b69-cb0f-4286-95ec-5651177d6952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562a4d5b-62d3-4c00-867e-4fed85a2d874",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893f0cb3-2e79-4127-83a5-2fc68b2960f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67f9f20-c1ef-4d28-8090-14050f4a40b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68663f69-6250-4d82-92a9-62bed49cc30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776dd01f-91bf-43e0-a8f5-b23946b7e4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa594e20-e440-4df8-972d-18d27b04603a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe747fa-ab77-433d-ad8d-a8c59d872b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1c33763-d326-4d8c-bbd0-6414bafa6940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d5665c-835f-4a56-9dea-625947b0adc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced072de-115c-498d-8145-efc26fd6ca00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e015760c-3147-45d0-a09b-b464da32fa33",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56029ba0-d5a9-4c5a-832d-4ecc3596b620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68171b90-dc95-4c3d-838c-5901796d998f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38aeafb-bd5c-4c9f-84c4-6a402aeab65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb03bbcb-6ffe-4c08-9e9a-8b05566debbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1777990d-1f7b-49f7-9bfb-a314f74ecee1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc39338-c492-446e-9788-117776f4fd7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b068771-1b14-4b41-8adf-7b4bd1a10eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703f7267-723f-4410-9177-98907f16df8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcb7833-5839-4ff0-9106-8e77ea1c0a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e8f64b-85e1-40dc-8699-50f4bbaa6e49",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1500a4a-27b9-410d-9f1f-5d5a156e246d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30dbce38-25ea-4d74-9b69-4b1192de40dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656260f8-982a-4a12-b302-bf284a7750ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bcc70b-dbcb-4a59-998f-822f676a3f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156858c7-2b40-4d49-9b0c-0beefb14d486",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af52261f-6394-4065-9084-f69a00a99cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae4ec07-3a9e-40ef-b19e-d5939f40ca8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ed18d6-6538-45be-850d-c1e7c755bc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ea59dc-0727-4229-826a-caad33ba7819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b4469a-fcf6-4b76-89e9-3458a941f959",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e30159-7982-497f-9ec7-fa2f899b77e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8be2059-8ce0-4b1e-94d7-9982606e17e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd614a0-2c0b-4325-a93b-2977456389e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a96559-30da-4239-a43c-1b03187835a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2496ecba-0094-4ef3-a000-2f38a0d2a969",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637c545b-7859-4a46-bed8-c0719b1db350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e14a8a4-b54b-4996-93dd-b86a1aada186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584e7a06-ed7e-4b98-afbf-c415bcd22801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22d6337-61ff-4308-a070-14325aeecd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da310937-5333-4ac7-aebf-4fbb5e3f5208",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa77d1d-9347-46e5-95c0-f2af4ccdff4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9460daf7-c2cc-483c-a6ea-92fc4dfecf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e244215f-7984-4f52-8654-f5c405d4bec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9b5f89-5f16-4f74-8d9a-2b2de01593b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b05d9e-fe80-4d6b-a8f8-cbd5894e9d14",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a830809-5e50-450a-9af3-7007785bb630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70cc1c3-3727-4ce3-bcc5-847249cb4049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0466a0a9-d3cb-4e97-8c8c-1c45e33b34bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fd7edb-a262-481b-a382-0a42afbff89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d09931d-b1dc-45a1-a94f-b9fcdc843ff9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f09603-2c2e-41ca-9de6-cdceb2f8c55a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853e3960-caee-48f8-bcfa-6c540f8a3acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a375d1ef-bdd8-44ca-a29a-8ead2dd0cd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfebf18-fb6c-4f8b-a0c7-3527f0653336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c18790-c5ad-4e03-b8da-6b64022d4b03",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c268aca-6e3c-4bd2-bc86-1434f8ab8a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf52881d-66ad-47f0-9c1d-280aa7ee7787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ea5456-d765-4b38-be0b-1e10d334f214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb948c86-d2b1-4dd1-b65e-963949e58957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dd49ef-b386-43c4-9ab8-f39e750ca22e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749a3062-a4dd-4546-bd68-b6f74ad2b99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea21df6-9a2c-4219-a986-859e8d029b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72093ed-c82a-4e1c-af4f-8f842b0329f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970a6dea-8d4c-47bf-b6b0-df14892ca53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51155b56-0167-4e2a-b817-cdba42297193",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7cd221-1da0-4e9e-85b3-a7ad23435a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db5a0124-7f07-481a-b7f1-46303c1aa10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095f4a9a-64a0-49e0-9140-61e48bd909ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc8bcbe-1851-46d2-b5ed-20ad77e931a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04dbdcc-fb0e-43ef-adc7-0dd80ecb6b06",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf1ccf4-a586-4c42-871e-15bd2d91bfc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde8f726-03df-45fc-b7a5-35dde9201ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb22da77-63d5-44b0-a9e8-ffcc460017eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfe5bdf-9876-4949-ac91-75815208a915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e999b5-57d4-4aaa-ac07-1e944bd5b74f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bcaee2-34bc-4f68-87f7-86b8dcec5c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8afc4d34-d220-441b-b039-2e73ce1a0337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb6328c-b599-49e4-83f8-1e0a55123c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdec834-7718-4e8e-992f-4db9cf6d1257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa3d147-ffbd-4631-8793-83bf5e1f0002",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34bdfe4-63f3-414b-8c81-fdec881f7148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "905990bc-9963-4b93-8b0e-87fb5a44134f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5ea423-8a15-4b9f-85f9-891df55534d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69e11a5-b662-4b6f-b4d3-c4f85685f22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb6a189-1272-4d60-9de6-a5ac50d7cc38",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f474436-61aa-4f02-875d-37568ed6a165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a79032a-503f-425a-8d3f-dea8fead177f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96d02ec-66ac-4aaf-aace-2e5542e5d3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53022bcd-3bb8-4c42-968c-01fb571c7dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c87dae-7b17-4f97-bc1a-21411f353bc5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc41489-01a3-4dba-bba2-3345c4b6ae18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70f751f3-efe6-4b9e-a36e-c4697dfa2da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44054df4-6460-453d-a84b-611e40bbfd20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e980df0-8d37-4b4d-acb9-f875c785b1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7a77ec-5cfc-4c0c-8246-052874274948",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba391f1b-7c79-4ce7-a997-5609b1ed87c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4f894f1-abba-40d5-ab81-83e87852f971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7532cb82-7054-4c8f-8a72-7664d5b6bcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bc3b83-5d55-4afd-842d-8466cda5321c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a248c51f-c403-4be0-b729-c166d0c2b8b5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a717fb-5a7c-4204-832a-faf784481308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa40aea-5b61-4dab-9bd3-419b62556399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a013c5-00bf-4ead-a619-2ba0850e9d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de14e0d-144c-4d4c-8a85-34f02e8854c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1723b9-30ad-499f-8891-f5eea4ff5c81",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faca1ab-fe13-4c91-ad8e-27ac5d1cbbda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1fdbc26-b7aa-4eae-9806-fcdaf4d993c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb4d3cd-6706-4e8c-b405-7abb7896b995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066c4ac1-01be-45ca-b221-0218b414ff6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125739d1-17ba-4d27-9490-84c6ed3c2572",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ec0500-e30d-4a91-9bdf-a5311ea05de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc6542c-6cf8-4bc8-924d-992148043973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84b3efc-91e1-4506-898a-72282c8ee5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e10700a-ac2d-4237-a63c-81a3be239c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c2720a-779f-46eb-a441-1371e7eec51c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d99d57-8c00-40ad-8ef5-955c4dc9ff77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50eb461a-4082-4c79-b41c-3ad40176d6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da4e732-e0e8-436e-b078-725236f6a049",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73e4d84-977e-459a-975a-952260819307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5004cb4c-6095-4bf5-9ff7-72c9a55f3a7c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab36260-b2b1-4a98-9efa-6e11e6b092db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb7dbb78-fe43-4d82-89fe-ac36186dfee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a694dae-4592-44ea-91a2-4da35cd7b8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52856ae-798a-4599-aaad-6e583d8e68f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce6a599-3da9-4a7f-90ab-5552c4105174",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0afbe99-7b62-47f5-a7ec-6e5c6a183a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86d4723-0291-470e-8fe8-061d68500266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01e4233-18c5-4200-9206-ff5581d85bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145b28ec-8acd-4869-a62a-fa50d76ba0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73eb951a-dc3f-4b54-b558-2cdcded32c5d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df032df7-0c81-442e-a514-39581df8690a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0924bff-7274-4cd6-bea6-3c8d109c819e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43ac59d-5038-4c60-8217-a98ff74bd490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adeb4cd-73d2-470b-8cbf-7a95ee9181a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bfa059-d7de-44bd-8af2-71108f7f1a74",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef0ec37-7246-4797-8223-9e7ed8882baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e8c95db-5927-4a29-895d-b9285ffb49dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018ea841-c372-40d5-ae17-6e30e6a6fb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77be0e29-938c-4a84-bcb4-c9957ac49fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf47f85-c7e7-4102-8890-d3f367e7b199",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc724e78-25c0-4702-9277-7e4c04d24bf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "929e7248-4447-4dc5-b898-4b1f19e9577b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86bc902-1a41-4ea9-9601-84bea0b1bc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f014fc8-4188-40aa-8289-7ffc3c020c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a10b01-9318-464d-b063-4ebf6a33d87c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e55458a-47e7-40ae-8da0-5c6fe194647c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35bf7cab-5189-4092-9e5c-dbb302766b20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518245e2-3829-4b26-aa41-91ac632aa988",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b5e8a3-7db0-41cb-bc48-8222633621cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61855c9-23d7-4f4b-8da4-cb62c47159c5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9e5a2f-84e7-4fbe-8af7-db6386c6977b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef081827-0785-42ec-b22f-643379939c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630a5c8a-cd9a-421d-a102-ce9b5c9f3b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea45a75-f307-4936-a32c-27dc1c76fca6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f1de31b-b5b5-460d-88ee-fc6ebd2d9384",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6924aaf3-7fed-4ad5-81e7-1e5458a385e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9697c9a-1947-4d2c-b4c8-f56fe078437e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96e80776-ee7f-422b-9940-7d96fbb01928"
                    }
                  }
                ]
              },
              {
                "id": "45a37005-16ba-4ed3-9342-176ff9929880",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f50f53b0-ba6a-4624-9b23-c4ddcd8b9dca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93479ed-0a87-443b-b4cc-cb8ff71265c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b4dae64f-e528-479f-a48b-716b3b293738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab5a611-e68d-437d-a976-d0c286f6eb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffd8037b-4c38-4ce1-9756-f55905f18258"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c55f9d2f-4121-43ce-9d81-c5d4031b0275",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1649d56f-7c5e-46bc-8f42-9373f7fb34b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02edd6dd-dc12-4a6a-b23d-2933454a3ddb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ad2d1ab-de85-40bc-8c9b-936ca26fe1df"
                    }
                  }
                ]
              },
              {
                "id": "c5d39c39-2c76-4c2f-be96-480350747ede",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "04a79e0c-f06d-4578-910a-d6fd44cdbb1b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9997bf-39f0-4a93-af73-cb2e971cb850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "842008d5-0a6b-45f8-a1c7-bad5ff4e6e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f093e6a5-f0f0-4d5b-aa04-b8e55f83d11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a01a85-a40b-4eaa-ba0b-8218c3aab953"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "24afd27b-6605-4deb-bd52-579d465dd068",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4ff9d845-71e1-4b93-92d0-c597aa2e3975",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99c379a8-f140-45d2-800f-d1bf2f282487",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3dc8c0d1-aecc-445e-85cf-897705881c5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccad3fcb-1e8f-44b9-8610-1376f3a02bd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "661cfcfb-bf42-41cf-bbbb-dc515eb97edd"
                    }
                  }
                ]
              },
              {
                "id": "949a4be4-752e-437d-b87f-a9f9d286b980",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "062aec75-8304-4f3d-bae3-b4228dfdbee3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5b83b4c4-1e50-4c95-9c9c-6bd0ba6ad47e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00538589-40d4-4370-8c77-8a9cd115cdd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8317a78-b422-416d-be05-9be1fac707f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "412bfc2f-f611-4581-a23a-6446b3fd0db2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5bdc9a6e-a0b5-42f0-85aa-c8d0a2bac2e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c95b8f44-3830-42a1-a824-0df06f874074",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2687cfb5-b5c4-433b-ba0c-428c9aa75fb6"
            }
          }
        ]
      },
      {
        "id": "256a65ed-03a5-42c6-8eaa-c38ab72f407c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8fdc988c-2d87-4566-9c0c-5b64a0ef6d63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ba766fe-3915-46dd-9aec-76dd446745d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65ffefbd-6267-4142-b3ef-e750afa681a1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da176ee7-97a0-4839-a56b-902faa010be9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d6d11010-e88d-4d8a-9e8e-9d4a3eaa4460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff07dd2-ecb9-4f41-bc53-c9607c167796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b7f7ac6-aa81-4f8c-a945-acfccdbdcde9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4114e4e-8221-4f20-883d-2e888da05552",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55b3cdf5-b42c-4624-8304-62ea273470da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca5f611e-e2d5-4029-88d6-79f74bd634e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac0de161-e470-493c-981b-94cd274c1618"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bea362c6-cc7c-45c7-8655-eed7fa0b635c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bfac1388-a8f6-484c-b098-c7514e44a19e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "377080fd-60d4-47ac-bb33-9f5b745309fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3599107a-4515-4049-ba02-c04aa34fa665"
            }
          }
        ]
      },
      {
        "id": "4d2bf9ee-9558-4c95-aafc-cb4b9b738560",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bc0b87e6-72e4-46c2-96e8-53b2475d0d22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99505fe8-d805-426d-95a8-076cbe79f5ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b41ecbe-d97a-48d6-a528-300e96a53190",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8988ef-e5e8-4d91-b1c5-0ad0aa8c27c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3c30f53-d85d-48eb-8407-89b695a6a996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bcb15c-729d-471f-b382-b88dfdea96a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2758569-2da5-492a-b2a5-7fe63380dc2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6369cb0-4699-418d-a65f-7794fbfabac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b7f717a-a9ca-4e56-ba3f-c4261f3761fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b86b1d3-666e-45a2-a569-828c071b9eaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0231039c-6e69-41b0-be46-545458eda1fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fed181b-d15f-4abc-b9c7-2cb711bc1fba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "037076fa-169f-43a0-a49c-164207e5c509"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dfb016b4-d268-4376-ade4-7d31ac223478",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf437f8d-0123-4e70-a92f-b248e6c8cf6d"
            }
          }
        ]
      },
      {
        "id": "a67c8013-9ab1-4b91-afca-11a5b6a0fd50",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e763ab3b-aba7-43ea-b271-211674f462ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a39658f1-7585-4032-9c72-84d2b15fab58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27943a23-c844-49a0-954a-81e6b3d6cd69",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1b738a-1080-449b-be19-0b36c4220158",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e3102c4-5091-4c19-a67c-19a5f789503e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2758d377-efd9-4c8a-95f5-c5745febe5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c69a43b6-b55d-4200-ae2d-c058afef2cc1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16b54f49-4dee-4ceb-b822-a8c55a240ca0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ca7eebd-e199-40ab-9439-14cc5b154e0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "beffba3b-8742-4b95-9136-5f53ea866763",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "054c1fdf-bd1c-4990-b761-bd5d299e6bf9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63c4715b-abe3-450a-b56f-0b9126bc46ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5fa33c53-9f5d-463c-93a5-a660442bd738"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d88b1b0-fb45-4e41-b0f6-c87a6d0b3f29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d30c7b55-1a3b-4cdf-bafa-6d7ccedbe9eb"
            }
          }
        ]
      },
      {
        "id": "58ec4d91-f310-4c2b-a8dd-8a056a02f100",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "123bd879-1dfc-4497-868d-d83fcd9ef7b1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a02037d-c887-40cf-9367-e62424550f2c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a0b4c758-cfef-4516-a676-63ae79832241",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f62ca283-51db-43f8-8cfc-eb0991e45a58",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76b79a57-40ef-4272-9bf4-457281e0cc22",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 10.4140350877193,
      "responseMin": 2,
      "responseMax": 263,
      "responseSd": 26.01653616247759,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705624614571,
      "completed": 1705624626516
    },
    "executions": [
      {
        "id": "1d357d7d-2e5f-4168-b6c6-b5befeda682b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6db924f9-f683-49ae-baa3-4d12ac4acb51",
          "httpRequestId": "fce868a2-d679-46b4-a2fa-75e765ab9a57"
        },
        "item": {
          "id": "1d357d7d-2e5f-4168-b6c6-b5befeda682b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b113d021-e2fd-46d9-9ed9-c00911500e35",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "bfc62947-81fa-48aa-af4b-180cd64a1232",
        "cursor": {
          "ref": "24469074-5b06-4f81-bc67-3d7ea18a4d5c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4e422d02-f410-4e41-a873-aae36cbf1028"
        },
        "item": {
          "id": "bfc62947-81fa-48aa-af4b-180cd64a1232",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "76cf3d7b-2bd6-4acf-b549-53a8769925c3",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "70e0f93b-bdae-4c3c-ad93-627cdadf836f",
        "cursor": {
          "ref": "b2ffa8c9-b571-4807-b774-2df078ea5ab6",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0ce85f63-4069-4af3-a943-79fe3e1ba448"
        },
        "item": {
          "id": "70e0f93b-bdae-4c3c-ad93-627cdadf836f",
          "name": "did_json"
        },
        "response": {
          "id": "ae4ab48d-4efe-43dd-89b4-0350e8c6bad6",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bd4558-ff95-4fbf-9b4b-ee85c1426595",
        "cursor": {
          "ref": "80b486b4-e66d-45a5-a752-b38bd2c5840a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "db0c9315-cdaf-4760-9b00-a2dfb4a3fd34"
        },
        "item": {
          "id": "a3bd4558-ff95-4fbf-9b4b-ee85c1426595",
          "name": "did:invalid"
        },
        "response": {
          "id": "4b92140b-bc20-4770-b111-7cd100a78865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bd4558-ff95-4fbf-9b4b-ee85c1426595",
        "cursor": {
          "ref": "80b486b4-e66d-45a5-a752-b38bd2c5840a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "db0c9315-cdaf-4760-9b00-a2dfb4a3fd34"
        },
        "item": {
          "id": "a3bd4558-ff95-4fbf-9b4b-ee85c1426595",
          "name": "did:invalid"
        },
        "response": {
          "id": "4b92140b-bc20-4770-b111-7cd100a78865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5bca71-9fd5-4681-b134-419d83f7b5d1",
        "cursor": {
          "ref": "493a216c-ba0a-45a4-bb6e-a32865230141",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "68a37b44-3ec2-4b9c-812a-4a61790ce22b"
        },
        "item": {
          "id": "fc5bca71-9fd5-4681-b134-419d83f7b5d1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "343c1214-c2f9-4146-a1e1-07475535ab5f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc72d02e-a9b9-45cd-8065-3bc43d598e22",
        "cursor": {
          "ref": "dca336ca-6154-435e-9190-c35957498139",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2fd06784-569e-4585-9fc5-22cd4b3b9519"
        },
        "item": {
          "id": "dc72d02e-a9b9-45cd-8065-3bc43d598e22",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d5a19c0d-efdb-4fee-9a48-c742444ed2f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b53d533-12a9-426c-b2a5-4a78b680cbf4",
        "cursor": {
          "ref": "65b8f472-d171-4028-8bce-110cefe1e538",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "68b833e6-6adb-4333-9f78-15cd23dc2f87"
        },
        "item": {
          "id": "5b53d533-12a9-426c-b2a5-4a78b680cbf4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "22d6f951-4e8c-4fdc-a0c4-2e53b2a79ecd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74eb725-a6ea-4fb3-a10b-93fb07051bec",
        "cursor": {
          "ref": "1c94c41b-5334-4158-92f9-d6b8e4b9fb2a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "85104af8-d57d-4d05-9c6b-18be6253a603"
        },
        "item": {
          "id": "a74eb725-a6ea-4fb3-a10b-93fb07051bec",
          "name": "identifiers"
        },
        "response": {
          "id": "3b96b38b-697f-4c49-98c3-ac9a5dc2b794",
          "status": "OK",
          "code": 200,
          "responseTime": 197,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68f2f5a-f13f-48dc-b775-aa5cd67442e4",
        "cursor": {
          "ref": "04fa779d-b9d0-4c71-92b7-944006bd75aa",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "71e21daf-9c9a-4708-b9a3-d57cef0414cc"
        },
        "item": {
          "id": "b68f2f5a-f13f-48dc-b775-aa5cd67442e4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "68b5dac8-3e80-4d4f-9ac1-8837257104fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb346e8d-1a9c-40d4-88ff-58520c3c573b",
        "cursor": {
          "ref": "4c87dfee-e0a1-4a74-b342-b5d033d42157",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ea94f2bf-1103-4840-b92b-f0e4165d302e"
        },
        "item": {
          "id": "cb346e8d-1a9c-40d4-88ff-58520c3c573b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "02d9aa9f-0dfe-4a67-a052-887dc832b389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54e8a80-ca66-46c8-9613-4253353540c7",
        "cursor": {
          "ref": "a7dabeeb-5c63-4d12-94ac-ca2d311f1457",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "01ad5172-d250-43a5-a035-3b0ea52a93fc"
        },
        "item": {
          "id": "b54e8a80-ca66-46c8-9613-4253353540c7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "99b01740-ad50-41e1-bb45-923945617c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b4ff18-6012-4d69-b668-6a64782b906c",
        "cursor": {
          "ref": "e4556ebe-f466-4fff-b907-c0f1691e4427",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "feccee73-69c6-4126-9351-d95b088c46f6"
        },
        "item": {
          "id": "22b4ff18-6012-4d69-b668-6a64782b906c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "608d5e68-5f4d-471b-bf6e-2409e0f7899f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c1868d-da1d-4a40-8ec0-257f495ccc3c",
        "cursor": {
          "ref": "d1a5e818-2a9a-43d4-a242-68af8625751d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7c3b3e3b-5d02-49cc-856f-34b193f59b9d"
        },
        "item": {
          "id": "99c1868d-da1d-4a40-8ec0-257f495ccc3c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0cbe61e0-4991-450c-b84f-ed0ffca27554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1dfbe4-8d2d-4b5b-a2d0-161ba96eec87",
        "cursor": {
          "ref": "3f85d776-5742-40e8-88b9-572f6d9a223f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "13d0f704-b36d-4553-9b70-eab2494ecc38"
        },
        "item": {
          "id": "2a1dfbe4-8d2d-4b5b-a2d0-161ba96eec87",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b2cc56a0-8c0d-4580-bea1-c66e23e5f0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b5b519-53ef-4cd3-be32-8fce9e213a8f",
        "cursor": {
          "ref": "9818f38f-5329-448f-9740-7a0b746ef7b8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ff83855e-7272-421a-915c-72a20f00624a"
        },
        "item": {
          "id": "d6b5b519-53ef-4cd3-be32-8fce9e213a8f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9776630d-0433-446b-a008-acf9075ea7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f199b23-6d97-47e7-85cb-ab813a639ac8",
        "cursor": {
          "ref": "4ecdd7cb-3a62-4e42-9c73-c1812101b765",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a7c66a09-e074-4b42-ab8c-0ee6925421ed"
        },
        "item": {
          "id": "6f199b23-6d97-47e7-85cb-ab813a639ac8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cfe2363b-21af-4e13-a042-788a85c7be1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56155c42-f36e-43f5-b634-205233c153e8",
        "cursor": {
          "ref": "3b911e48-c73b-42f5-ae1a-31b24984903a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3e775e78-5c75-47a4-8441-bc37f4011628"
        },
        "item": {
          "id": "56155c42-f36e-43f5-b634-205233c153e8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e4b30fa1-d7d6-4fb0-b825-5e2478990e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d88939d-92f3-4cd4-bbb7-7b1f988668cc",
        "cursor": {
          "ref": "0ec426e8-1de7-46ad-b386-dc514fa2299b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "02443c42-b59a-4a9e-b675-b568538bfcce"
        },
        "item": {
          "id": "1d88939d-92f3-4cd4-bbb7-7b1f988668cc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "188bfb88-1c58-451f-9f2f-5466be4ffe07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bdb362-2881-4778-ac83-3010bf5d8535",
        "cursor": {
          "ref": "56a79873-f273-4b63-88db-6b25e503d654",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "18326b14-b595-4cea-800a-92ecd6c571f3"
        },
        "item": {
          "id": "29bdb362-2881-4778-ac83-3010bf5d8535",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0ce7f8e4-0184-4d42-87c9-15845d619774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c035333-27b8-478d-aeed-1c66234a3ae6",
        "cursor": {
          "ref": "1d5f10ad-5015-49b2-a662-5d9861f8afa6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "87cf6759-ad7c-469d-8af9-9c76c302c497"
        },
        "item": {
          "id": "9c035333-27b8-478d-aeed-1c66234a3ae6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "17cd8c84-fcb7-4e5b-b235-e712405d95c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d97cd76-784f-4180-88eb-4965dac026e9",
        "cursor": {
          "ref": "378489d7-3420-48ca-b437-c72d28d9c4bb",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0dcac936-66c6-4ab6-9403-7f265f36fe77"
        },
        "item": {
          "id": "3d97cd76-784f-4180-88eb-4965dac026e9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d4c22e87-b880-4afb-baa5-65801ca4cb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b529fbcf-a8a9-478b-986e-cbd82bed3784",
        "cursor": {
          "ref": "7bd09655-d972-4ded-8052-c7f43d021095",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ce1902cf-0e3a-4c1a-a070-babaf067b858"
        },
        "item": {
          "id": "b529fbcf-a8a9-478b-986e-cbd82bed3784",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f4eda741-cc29-40b4-a740-885f831e6e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b4f1ac-63b6-4fb3-b5f6-98b4e0ee02ec",
        "cursor": {
          "ref": "4bfb66d0-fe68-4e28-bf20-5d435debdac6",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a16c69c5-59dc-4739-b15c-fd06c0f11c45"
        },
        "item": {
          "id": "e7b4f1ac-63b6-4fb3-b5f6-98b4e0ee02ec",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fd07afda-66db-44bb-b338-a7410dba461c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfbc92c-b3c5-4614-bccc-1cd6c5f04020",
        "cursor": {
          "ref": "ab4d3fa7-397f-4fd1-8cf6-10e77d59455f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "47706252-1926-468d-a83a-55360a6d6111"
        },
        "item": {
          "id": "abfbc92c-b3c5-4614-bccc-1cd6c5f04020",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "524242dd-4581-4560-9556-93933dbc215d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d76e83-b1f9-49d4-9c0d-87dd751af657",
        "cursor": {
          "ref": "cdb0a44a-5046-4c42-9b5c-b213db3a121f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e8a28a5a-b392-435f-867c-99fa239c9686"
        },
        "item": {
          "id": "54d76e83-b1f9-49d4-9c0d-87dd751af657",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7f0a0800-de08-408a-b7be-a9da95f83f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb212123-5032-4d8b-9075-cee0d60edd0f",
        "cursor": {
          "ref": "877f3d2b-b006-44d2-8fda-3d1001948ce8",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "aa57f01a-b351-4542-aa4c-f22ecbd39367"
        },
        "item": {
          "id": "fb212123-5032-4d8b-9075-cee0d60edd0f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "338bb3b9-3886-4d54-aabb-40f2354b56cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3aaee68-241e-4639-8c82-da0e43818099",
        "cursor": {
          "ref": "d18d16db-3d97-4f7b-bf04-90ba479f0fbf",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b3499bcd-6dc9-4b3e-8ea0-3dbf7bc71e38"
        },
        "item": {
          "id": "c3aaee68-241e-4639-8c82-da0e43818099",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e003481f-895f-43a7-85e1-cc8520aecf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36afb09-e974-4278-aa45-70efb73edd4e",
        "cursor": {
          "ref": "12d91f64-a9fb-4d59-a769-5ccc336314fd",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cbdccb32-9426-4f7f-8661-36b014095a98"
        },
        "item": {
          "id": "c36afb09-e974-4278-aa45-70efb73edd4e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "759a84ff-88cc-468d-84e1-0fb9ea4b772e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a75fea2-b3b3-45bc-b8b3-95e7ab19e065",
        "cursor": {
          "ref": "8615cdea-0171-451d-8b0b-ac8992cc1b59",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ee2294a0-f86f-46a1-a72d-5db3485eaff9"
        },
        "item": {
          "id": "1a75fea2-b3b3-45bc-b8b3-95e7ab19e065",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d8918155-2142-4102-9837-92da5e0b377c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc760d6a-2b30-4e4f-8f3a-47a512be1652",
        "cursor": {
          "ref": "31fcdb9d-71a3-4b01-bcea-0f326f8bfae8",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5c43bb14-2c59-4cf7-a025-2803267bec08"
        },
        "item": {
          "id": "dc760d6a-2b30-4e4f-8f3a-47a512be1652",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3948e295-2531-4254-8291-fa029082ba68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2dab2e-9ac8-43bb-b13e-961d8a6e7ef4",
        "cursor": {
          "ref": "6e99169d-c393-46e0-a507-3ef8aca871e8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ecc4e4a9-b96a-4e41-90a2-5b411cb2bc82"
        },
        "item": {
          "id": "ff2dab2e-9ac8-43bb-b13e-961d8a6e7ef4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a57fcf8f-613a-49d9-8eb1-c48f7f7b7991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396912b1-94a2-446d-af7d-6d74ab5d4d5a",
        "cursor": {
          "ref": "c62f9569-5f63-4abe-b607-20300b2dac93",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7cadfa80-a487-40c8-8dff-4f0aebe44708"
        },
        "item": {
          "id": "396912b1-94a2-446d-af7d-6d74ab5d4d5a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ba177224-8062-4907-b5a0-209d35124fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00df1873-072c-4a15-8494-a37932253f4f",
        "cursor": {
          "ref": "c987dcb4-809b-4dd5-a2d4-261f46736896",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "027ff132-95ae-4139-880c-a94cb25452d0"
        },
        "item": {
          "id": "00df1873-072c-4a15-8494-a37932253f4f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3188466b-4353-4299-be38-0e021042d8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff537aca-f55e-4131-90ad-e0b2e4734f6a",
        "cursor": {
          "ref": "7be8ad33-cad6-49dd-9e2a-b97631e56789",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a03653b6-54c1-4ab4-bed7-d49e561ad2ed"
        },
        "item": {
          "id": "ff537aca-f55e-4131-90ad-e0b2e4734f6a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a6ca9930-1d5a-43af-8a99-86779bbe7287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecb3cdd-c7a1-4423-9bb4-a0ca9c9c8b30",
        "cursor": {
          "ref": "58ae2a14-e184-463e-903c-099793542cf4",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e2b9e9e9-04f6-4037-87e5-bb82024d77cd"
        },
        "item": {
          "id": "0ecb3cdd-c7a1-4423-9bb4-a0ca9c9c8b30",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f39fd44c-5cbe-4709-8b6a-b343d2f32ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222e61a2-d20d-4169-8f8a-3493e72d7e2a",
        "cursor": {
          "ref": "1b246922-7087-425e-a057-537f2ffb1e72",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "640b92fe-090b-42c3-b633-f3f5d1b2c9d5"
        },
        "item": {
          "id": "222e61a2-d20d-4169-8f8a-3493e72d7e2a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7b18bb28-fcef-49c7-88b4-4fb05aeb0f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6115b5ad-1748-44e0-bd7c-c9d4b68d4076",
        "cursor": {
          "ref": "7f625a3e-2ec6-40f1-939e-ac673ff04c47",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "def4ea69-4013-437f-8cff-5414a5e1a51d"
        },
        "item": {
          "id": "6115b5ad-1748-44e0-bd7c-c9d4b68d4076",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "69d8d14f-e9ca-4510-8221-68b11cb35e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f35db01-3142-4d50-9b4f-fe0712353a97",
        "cursor": {
          "ref": "4553c79b-6cbd-4c06-817d-0534ab0ec1a3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "572d0bbd-ffd6-45df-9e64-fa0953c2177f"
        },
        "item": {
          "id": "7f35db01-3142-4d50-9b4f-fe0712353a97",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f590f886-eca8-433d-81f2-7b7b9d9ed169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fea57cb-f2c2-43f1-b263-9ddc47c9e6f1",
        "cursor": {
          "ref": "c6e01c09-f997-48b8-b287-00d7e209bca8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "80b51921-6e21-4f92-aa65-750d6dc38e9b"
        },
        "item": {
          "id": "8fea57cb-f2c2-43f1-b263-9ddc47c9e6f1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f285403e-24ac-498c-b641-a17005df3925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478f8df5-ec2f-4a95-987e-bfebb377d460",
        "cursor": {
          "ref": "f56bf530-cc9d-4488-abc0-b7642626f261",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "915206e3-c1fc-4857-a945-2a3d33f2c122"
        },
        "item": {
          "id": "478f8df5-ec2f-4a95-987e-bfebb377d460",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "895066ae-8250-4da1-bf15-4a7e49de9089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa215003-31a1-4cb6-8474-c8479736690d",
        "cursor": {
          "ref": "e9e92867-fb04-42b6-a700-4eb383f93853",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6c6e730b-0651-4e2f-a262-08a8db2247cd"
        },
        "item": {
          "id": "aa215003-31a1-4cb6-8474-c8479736690d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dfd68cf6-eea1-42e9-86d3-380c61c79036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8195e85-38ab-4508-8916-798ca965d3ca",
        "cursor": {
          "ref": "5fed7c49-a888-4743-a6f9-529986f6d680",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9c9efdf3-c474-4543-8f92-305e517577da"
        },
        "item": {
          "id": "b8195e85-38ab-4508-8916-798ca965d3ca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b657114f-d011-4e47-a252-f1ee398e6644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee72fd77-62df-4ed2-ae1d-82d3299f2039",
        "cursor": {
          "ref": "bfe8371b-e129-43ba-9644-61e81ae71b34",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "24f7f996-0beb-4317-b8bb-dff6c3b9067a"
        },
        "item": {
          "id": "ee72fd77-62df-4ed2-ae1d-82d3299f2039",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a5677ba5-2aa3-4e23-85c4-332bb5682629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045d7d83-71c9-430c-add1-d2f8dd2cfdf3",
        "cursor": {
          "ref": "042a7931-794c-4c54-a0cf-aa51081e2022",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "97b8189c-52de-40e1-b25d-46f10939b724"
        },
        "item": {
          "id": "045d7d83-71c9-430c-add1-d2f8dd2cfdf3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dc788769-32fd-4731-9c37-0389b174f25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fb3ea3-c33d-4c9f-bba7-19454896a9fd",
        "cursor": {
          "ref": "003c66b0-7404-4b36-b921-45c3d99e3ba7",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9d33dd7e-151d-481b-8b54-54ba5d71b721"
        },
        "item": {
          "id": "e8fb3ea3-c33d-4c9f-bba7-19454896a9fd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "28e8a531-7af0-4ce5-9259-797622dc219c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5bf929-e2c0-4ef5-b181-a519b7d7d3ad",
        "cursor": {
          "ref": "feef5b1b-90ee-4b68-a697-e482674a2ba8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b23c52de-6a24-4c72-b2b7-2bcf15cddecc"
        },
        "item": {
          "id": "5f5bf929-e2c0-4ef5-b181-a519b7d7d3ad",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cdea5414-425b-4b0d-8c6f-82e0468f8f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc59cbb-48d3-459c-9dd7-855be85c5d0c",
        "cursor": {
          "ref": "5ff75bf9-0fb0-4bad-a396-22fdf0358a18",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bc24aec9-3639-4692-b5ba-5bfee63594a8"
        },
        "item": {
          "id": "2fc59cbb-48d3-459c-9dd7-855be85c5d0c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4a7e74c2-7d80-4da6-b8ff-77d42e1e1b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58041ed0-0f92-42ae-80da-dfa805ad4b9c",
        "cursor": {
          "ref": "467fe435-836d-47a5-b236-fbf881495fdd",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7086e1bf-5f22-4768-bfeb-73fdce51cc66"
        },
        "item": {
          "id": "58041ed0-0f92-42ae-80da-dfa805ad4b9c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f3637ed8-2f7e-425a-9ade-cecbf2d0e9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae41e263-e9f0-4f23-9318-e579fc790926",
        "cursor": {
          "ref": "f56f85e9-e95b-416d-af63-5e8c05238b7c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "954ed312-94da-447c-91ef-6321d8f24bbe"
        },
        "item": {
          "id": "ae41e263-e9f0-4f23-9318-e579fc790926",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "540b79e7-43c3-4f81-9313-bf9ab82dd7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7403edc4-6ca8-418f-8bda-33dc7159af5e",
        "cursor": {
          "ref": "8d0cfde0-9a47-40dc-8420-b9ae2bcc4f1c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5b136ac0-f128-43f8-b573-41afa949bfb6"
        },
        "item": {
          "id": "7403edc4-6ca8-418f-8bda-33dc7159af5e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "efcfb330-6354-4e08-a9b2-edf53e6c0a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d80c5ba-f343-4609-a85c-4205988c99d6",
        "cursor": {
          "ref": "b4ea5394-ac34-44bf-810b-ad7cb79353d3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ae3ade27-cd73-48b8-9df4-eacc67732cff"
        },
        "item": {
          "id": "9d80c5ba-f343-4609-a85c-4205988c99d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "010445fc-416d-4a67-aeb9-5babe3a6ef7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83409186-18f8-497e-8707-77b2656ca6cb",
        "cursor": {
          "ref": "16cbf67a-7c52-4082-a687-5f2fe33363a2",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ac87320-c7fa-4dee-959f-008ce7e6b19d"
        },
        "item": {
          "id": "83409186-18f8-497e-8707-77b2656ca6cb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c725367b-f703-43ba-ae45-0ab2aa4f9199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15bd437-0e61-4025-9140-a8f3ab27d11a",
        "cursor": {
          "ref": "16bcb18b-48b2-4b0f-ac52-2bbcc5142d19",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "aece67ac-aec2-4c06-b93e-27feb5d57a8a"
        },
        "item": {
          "id": "d15bd437-0e61-4025-9140-a8f3ab27d11a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c009338e-97a4-491b-bb10-c11487b3af33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b95838f-20f9-4c9c-a7d7-84ea3d93100a",
        "cursor": {
          "ref": "e78e54cf-e53f-4266-9641-f1f0a9c9f653",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c34aa9b4-fab7-487f-ad8b-d28bae2ccb48"
        },
        "item": {
          "id": "1b95838f-20f9-4c9c-a7d7-84ea3d93100a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0c91310f-c441-4b50-9dc3-ec68017c73ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea035ef9-8b84-43d6-9a79-70267e5f5ba8",
        "cursor": {
          "ref": "dacaf949-25f4-425e-800c-9f07af4e303a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d14854a7-e12d-415f-986a-1ec9e0aa56eb"
        },
        "item": {
          "id": "ea035ef9-8b84-43d6-9a79-70267e5f5ba8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cdc9918f-6c71-4330-874d-72a50112f8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeb25e7-8cb4-4a69-9104-ef6a1e4a28cc",
        "cursor": {
          "ref": "8a7196e3-39cb-4780-98a5-3f13c6b1b6d7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "27395038-ad7a-4043-9c19-c7c81932575c"
        },
        "item": {
          "id": "dbeb25e7-8cb4-4a69-9104-ef6a1e4a28cc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "01a3b1d3-df55-4f9d-a43d-07d85364e6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8284fc8b-f410-48fa-b786-95567d79d4fb",
        "cursor": {
          "ref": "691537be-6824-4827-ab9e-d5602791bf14",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a80ab391-f9bd-46fe-a823-3466bf519dea"
        },
        "item": {
          "id": "8284fc8b-f410-48fa-b786-95567d79d4fb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0eec34c1-da92-4a08-b210-e717ff7b563d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f726959-5d8a-4e5f-ad76-136f51295e41",
        "cursor": {
          "ref": "3adfa0be-7baf-44d7-8f9f-4e04efdea20d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "844b14e4-1a13-4b13-860e-7d1d72d06af1"
        },
        "item": {
          "id": "6f726959-5d8a-4e5f-ad76-136f51295e41",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "482e16ad-2d37-42e8-9668-8b3961768162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cf3719-6b0c-4afc-9791-2db80f61b172",
        "cursor": {
          "ref": "2294c97b-698c-445e-a6ac-18f9c2e69d58",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "37ad622a-34a5-4b4c-b3a6-c137abd2dc53"
        },
        "item": {
          "id": "85cf3719-6b0c-4afc-9791-2db80f61b172",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "688c4779-cd4b-48bd-b807-283347c9833d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc813d2a-dfc6-485f-83a7-7b212b2564c0",
        "cursor": {
          "ref": "7a59a863-f4ff-4e38-9115-829db3724fc3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9b7e968f-2ddc-4f0a-a914-de56b9b09f88"
        },
        "item": {
          "id": "bc813d2a-dfc6-485f-83a7-7b212b2564c0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "389f12ef-ec63-4d7a-8f2f-4dd522c38e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1423708-4b58-41dc-ab7d-bbca4304bc41",
        "cursor": {
          "ref": "ec6fc31f-c2de-498b-8a10-9bdf9a8d0337",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "16e136b9-b3a8-42dc-af1a-618b176c7171"
        },
        "item": {
          "id": "d1423708-4b58-41dc-ab7d-bbca4304bc41",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c2d7db56-d08a-4ad5-8499-cac7e0d00590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d315785-8da5-4f7d-985c-cef5c7476942",
        "cursor": {
          "ref": "9cdfda80-563a-487d-855e-3ab7923efa54",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "eaf1954b-0dd2-4333-9aa4-dbc11193254e"
        },
        "item": {
          "id": "4d315785-8da5-4f7d-985c-cef5c7476942",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "14eecb7a-0e44-4a30-9c6b-7d82f8cf113c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7be785-f6a6-437b-a23d-41f1ef954c8f",
        "cursor": {
          "ref": "11c8d131-ad99-4787-b696-3ed2865861f8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a33571c8-77f5-4b9f-b69c-38374670205e"
        },
        "item": {
          "id": "db7be785-f6a6-437b-a23d-41f1ef954c8f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dfeb470e-3901-4423-bd7f-6d0b4a764cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1b9dbe-fa1a-469d-b49c-59f39ccb9a83",
        "cursor": {
          "ref": "a4e77d6f-a94a-490e-b02c-0a9d946d69a8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "807650b0-56a1-4531-bdf3-ca10cdda97be"
        },
        "item": {
          "id": "1c1b9dbe-fa1a-469d-b49c-59f39ccb9a83",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "73bdafa4-8a22-4ac2-b32d-cd556ff65485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf0e836-080d-4d24-90e0-3fbd955c90b9",
        "cursor": {
          "ref": "2511ac81-add9-4a97-984c-28b3b16705f7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d213dbff-6379-44f3-8b62-c4a52428cf5d"
        },
        "item": {
          "id": "dbf0e836-080d-4d24-90e0-3fbd955c90b9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c9ebe27e-1901-48e7-bc98-79283a2f6ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea35e4f4-632b-4247-a824-62bc8cc47ee6",
        "cursor": {
          "ref": "c3def8ca-ad08-477b-a19b-fcd926b5ee53",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e65edd02-ed6a-4734-8111-98102908e3b5"
        },
        "item": {
          "id": "ea35e4f4-632b-4247-a824-62bc8cc47ee6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "34e535ca-07b7-4db9-acbb-a8f51a2ebad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ee234b-0a1b-4a44-943c-23ba605395c2",
        "cursor": {
          "ref": "ac5f5965-128a-497f-981b-0f2365d0ea87",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e627112e-a8e0-4249-a08a-d294ae3c8509"
        },
        "item": {
          "id": "70ee234b-0a1b-4a44-943c-23ba605395c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a408cbee-d84d-4ed4-8de2-aa3b0c7fa20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7284653-5925-4ddf-874a-26de9892dfbd",
        "cursor": {
          "ref": "5b761e32-e48d-4b74-bae8-9fae20c2c04d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fb6a1f29-3142-4399-b5b4-7227ecaa281a"
        },
        "item": {
          "id": "e7284653-5925-4ddf-874a-26de9892dfbd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "51df6084-01ce-400f-9990-bc50d1f32bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345d2a0d-544e-4985-b1b6-110d8778f2a6",
        "cursor": {
          "ref": "85125cd3-2e36-4d8f-903a-c09f4c723aaa",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4f79100c-e423-4abe-8c60-44f6663c7691"
        },
        "item": {
          "id": "345d2a0d-544e-4985-b1b6-110d8778f2a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b53f3f66-a9ad-4f8c-9567-b6b04b362f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b809e84b-3656-4e8d-bf5c-704e5ba06812",
        "cursor": {
          "ref": "6a3aae33-42a0-42b8-9e73-0cb61b7d6818",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "453cb74f-6bfb-49dc-8975-8490f825fc7e"
        },
        "item": {
          "id": "b809e84b-3656-4e8d-bf5c-704e5ba06812",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f7e436a1-c54f-4ba3-ad6b-e29984673c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d679857-796b-4dfc-8c9a-9a3137253313",
        "cursor": {
          "ref": "5b972f14-a1f3-46f8-9837-1d23aa4cd87d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "50ca0c18-82e1-4be8-bfe5-ede8311ee6c8"
        },
        "item": {
          "id": "8d679857-796b-4dfc-8c9a-9a3137253313",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "aab181a4-6b1e-4849-90be-f9c34a6c42f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca195485-8b13-4751-bd01-3b9020dbe9b2",
        "cursor": {
          "ref": "ed14be1d-dd52-4e5a-84a1-39fb0a2f042a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4972e377-ab8f-4649-a7fd-7ac400af2404"
        },
        "item": {
          "id": "ca195485-8b13-4751-bd01-3b9020dbe9b2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6ade04b1-0073-4c69-b5af-8e30c56ae240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8e91c0-0591-43ec-a87d-0c9b25003c0a",
        "cursor": {
          "ref": "2d86b54b-16e0-41d4-9dff-f7f2604da2fd",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "71a2eeb5-8bca-4b16-9f60-aaa6280289c5"
        },
        "item": {
          "id": "8a8e91c0-0591-43ec-a87d-0c9b25003c0a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "040acbc9-739e-4f35-b797-8d15b30b26e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d098516b-748a-46c7-b6d7-a8832a34a2e5",
        "cursor": {
          "ref": "871af5fb-0015-47b2-9c70-7ecfad541aab",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e2e8f5c2-e637-45f4-aba3-219bb64b4cb2"
        },
        "item": {
          "id": "d098516b-748a-46c7-b6d7-a8832a34a2e5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a6b3ac65-fa8c-4592-a24b-48c5122e4cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6b1a2d-c912-4a79-9c26-f3c9215ab63d",
        "cursor": {
          "ref": "43ee5823-0684-4683-872e-e7d8f4e41e55",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cd49b768-a483-430b-80c1-4a6c89bfe7b3"
        },
        "item": {
          "id": "dd6b1a2d-c912-4a79-9c26-f3c9215ab63d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "63d62517-2a57-4c2e-b3fd-dab71be6ac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7107ea-fc2b-4b7c-ab2b-a9a381ccff20",
        "cursor": {
          "ref": "1f6770e6-f231-4578-b145-1e6f54edb1c5",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cc8ef258-7097-464a-85e9-8d3b6740e7b7"
        },
        "item": {
          "id": "0f7107ea-fc2b-4b7c-ab2b-a9a381ccff20",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "80b8127e-1c95-444d-8736-00ac7370c5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2929007-7c73-4cb1-84aa-354b89905b58",
        "cursor": {
          "ref": "4c9066bd-960f-433b-a14c-0038989d0c68",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bdd96c20-85b5-4a81-bf60-44a823267d41"
        },
        "item": {
          "id": "d2929007-7c73-4cb1-84aa-354b89905b58",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c2b208b0-b719-4afe-9fa8-375f9b04f715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90cc2c6-2f9a-4738-8b9f-6dcf551c8f25",
        "cursor": {
          "ref": "1475d26d-04d5-4cb4-8c96-3153f652f459",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f458d66e-4666-44e8-92b0-f235e46b21e1"
        },
        "item": {
          "id": "f90cc2c6-2f9a-4738-8b9f-6dcf551c8f25",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a22a4d83-1213-488e-ae24-f1bda4131326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d63b322-154f-4eb0-a0d0-8aaf0379dc4c",
        "cursor": {
          "ref": "c44ca2bd-76b2-477f-9209-2dc06dd0bbfc",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "322a24b7-8a53-475e-89a1-910a5ac4d80d"
        },
        "item": {
          "id": "9d63b322-154f-4eb0-a0d0-8aaf0379dc4c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6682b71d-313d-4e19-8f93-b3c3b4dea145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7387bc23-7424-4a1c-9744-ec2c5b0579e1",
        "cursor": {
          "ref": "045524af-7cc8-4a3a-9159-c76c76693a3a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9b5afaf8-f1aa-4905-b763-bf9e41440278"
        },
        "item": {
          "id": "7387bc23-7424-4a1c-9744-ec2c5b0579e1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bdea028b-669b-4521-ac51-eabdbc57c9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac10870-0872-4857-9b7a-4261e700c55f",
        "cursor": {
          "ref": "01062ded-3a2e-40bb-94a0-aecb0d9865dc",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "816905f3-76d5-4698-a803-b756ece12098"
        },
        "item": {
          "id": "3ac10870-0872-4857-9b7a-4261e700c55f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "577ca923-527b-4896-b950-454a748a673a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56e295b-92a9-4ec7-b0aa-9bd17b78a7b7",
        "cursor": {
          "ref": "e49ad141-c6bb-4b08-84ac-99065cb66b3d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2014257d-b8fc-450e-8fc4-f87d1d67581c"
        },
        "item": {
          "id": "e56e295b-92a9-4ec7-b0aa-9bd17b78a7b7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "554db87f-e229-44e2-91a3-6f5654707ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24f7343-4c38-4989-b65a-034e2288f202",
        "cursor": {
          "ref": "f0dba0af-aa81-4b06-b9ce-ad90527f5655",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c7c12ab9-0ce7-4c32-945b-1d7f331db283"
        },
        "item": {
          "id": "f24f7343-4c38-4989-b65a-034e2288f202",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "aa20541a-c948-47fd-8fef-a0655919ca57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09eab4d-d22b-464c-8141-83f0a84cf66a",
        "cursor": {
          "ref": "200adbf8-7874-48fd-9b16-2244d09eb7a8",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9e43aca2-9ff0-43c6-b1e6-5b216e569274"
        },
        "item": {
          "id": "b09eab4d-d22b-464c-8141-83f0a84cf66a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "76bb9312-99b9-4388-bba4-b37819133342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c76f84-1eaa-4e1a-940a-3aea3a831a0b",
        "cursor": {
          "ref": "52d60805-6bf9-43a9-bd5d-e04dac387fe6",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0fffca63-ba5a-4e85-bad1-aa9e5d5806a2"
        },
        "item": {
          "id": "c4c76f84-1eaa-4e1a-940a-3aea3a831a0b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "edf7d91a-2300-4b7d-bc65-9d8b8cb9c5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d343045d-3dfa-4e62-beca-25b696495d5b",
        "cursor": {
          "ref": "e76c7d31-96b9-4e12-8f0f-0acad460fb27",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3ea83031-8712-4319-8a75-cd31ced761c1"
        },
        "item": {
          "id": "d343045d-3dfa-4e62-beca-25b696495d5b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "24a31992-68e7-4a81-aaeb-ecba81043480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1312c73-4c7b-45dc-87b4-73f4e666f783",
        "cursor": {
          "ref": "c62e63ab-7167-4281-a8c3-30ae66a418fe",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "19a39d82-f9e0-4e9a-9950-6cc242356402"
        },
        "item": {
          "id": "a1312c73-4c7b-45dc-87b4-73f4e666f783",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b380003f-adad-4c5a-8a9b-5c3d7700b901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40af2071-5a36-479d-aa38-757c87ed599a",
        "cursor": {
          "ref": "aaf70650-f7ee-4d28-8a41-25fb4ffa58c6",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "38d10190-7445-43d6-9541-197b19f2ee18"
        },
        "item": {
          "id": "40af2071-5a36-479d-aa38-757c87ed599a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1a18cce3-1b99-4da9-96c3-a51b31379183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cd6c7e-5778-4f12-a7bf-0fb6b60d31a7",
        "cursor": {
          "ref": "f1a4aabc-121e-46df-8d08-2b494265345c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a21bfae5-3c88-4b9b-8cc3-aae535764bc1"
        },
        "item": {
          "id": "05cd6c7e-5778-4f12-a7bf-0fb6b60d31a7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d7963c37-ada4-45ec-88f9-ed97f9174ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd30bd8-5c00-44d0-9f53-6bf8d4bdab44",
        "cursor": {
          "ref": "b5c4a7b1-bbef-4e51-a918-7539f40e5df7",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e7fcc76b-030d-4990-ab71-07dad3857b35"
        },
        "item": {
          "id": "3fd30bd8-5c00-44d0-9f53-6bf8d4bdab44",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d81a3d82-8cfd-4c1a-b47f-e6b48646874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4af6e2-b22e-4144-a7d6-851bc20e4892",
        "cursor": {
          "ref": "99c0da1e-6db9-4578-8799-114d24b58abe",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "89a451c0-1604-4f8f-b5b9-6c6e44b9dc0d"
        },
        "item": {
          "id": "dc4af6e2-b22e-4144-a7d6-851bc20e4892",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "41a69dbc-ad45-43da-8491-affb3e7b4f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5615b1d3-d6ce-4691-8537-3f1e0c0c7cb7",
        "cursor": {
          "ref": "5deb3a9e-17e2-4421-b140-46b28b2124bc",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bbd958e3-d17b-4ba3-b940-ab099d0758d0"
        },
        "item": {
          "id": "5615b1d3-d6ce-4691-8537-3f1e0c0c7cb7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "98e4e442-d88b-4b42-842f-d1f4d1ddb662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a389d7-2453-4d6e-91b4-8a255f956f22",
        "cursor": {
          "ref": "27ee4402-2977-4f3a-9f26-88e68c183f7b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b6aa5d3f-5060-4cce-bbd5-d94c378ae9bc"
        },
        "item": {
          "id": "72a389d7-2453-4d6e-91b4-8a255f956f22",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1dfdae7e-65c4-4346-a35a-d776cf42d2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd20508-49cf-4bfd-9117-6dda63ca4d4c",
        "cursor": {
          "ref": "bc651e65-3cf7-4810-b964-a6ba706760a4",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1cc30482-621e-4754-b494-9fd9cfb5efc6"
        },
        "item": {
          "id": "edd20508-49cf-4bfd-9117-6dda63ca4d4c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6ead6287-c40c-4c50-a9dc-73632c4d2f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca47e16-72fb-4967-ab86-939069ebbb15",
        "cursor": {
          "ref": "00e3660d-4531-4392-b72c-adb4b113221f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3904b208-488d-49dc-a45a-d40d5504f2b6"
        },
        "item": {
          "id": "1ca47e16-72fb-4967-ab86-939069ebbb15",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4ce84370-4569-463c-88fc-b0a28bff6145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaa3dcb-2caf-4ec6-ad71-a036727b1807",
        "cursor": {
          "ref": "6191892d-4de0-4fc1-91f4-74acc691717e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9b5717de-62ee-43e2-aabc-50cefb5518d7"
        },
        "item": {
          "id": "fbaa3dcb-2caf-4ec6-ad71-a036727b1807",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3a0913a1-93a1-4d22-832b-bccda44e4e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8419c60-afaf-44ea-a7e4-e9f0d5b49ac9",
        "cursor": {
          "ref": "3122fa63-f6bc-4f24-9996-bf80cb294e22",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2d5a2b31-6683-4e02-b23d-de4caead8ae7"
        },
        "item": {
          "id": "e8419c60-afaf-44ea-a7e4-e9f0d5b49ac9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e35712c4-bf46-4555-88a2-7cf9bf9236c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01758959-b6e0-4f53-9cdf-26fcc9a6783b",
        "cursor": {
          "ref": "6ca41752-f589-44fc-b4a2-a5d6142e80a1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "429825cd-fae4-417a-973b-a7fa20bc6450"
        },
        "item": {
          "id": "01758959-b6e0-4f53-9cdf-26fcc9a6783b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "375bb6ed-75cb-469e-b000-bfa365ecb536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9445a78b-eef9-4471-acf2-8f1dc82b24f0",
        "cursor": {
          "ref": "969bbf13-580a-4d3b-b785-8f331e560db3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c0b9f1d3-5b3a-4c7e-8cff-cc4b0a21c1bf"
        },
        "item": {
          "id": "9445a78b-eef9-4471-acf2-8f1dc82b24f0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4b085407-3bba-4fba-988a-9c124590e749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abff2dd1-84ca-4e04-ac8d-aaa4f2d1e813",
        "cursor": {
          "ref": "526a5f29-1963-46a8-89b1-b673f611822c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d77c6162-db6e-4471-89ab-aa859bd28732"
        },
        "item": {
          "id": "abff2dd1-84ca-4e04-ac8d-aaa4f2d1e813",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8b7bc056-e5cb-4669-9f25-22e7f32d6dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8bc910-b430-4944-8a72-c2f59f468ede",
        "cursor": {
          "ref": "dbb7cb9f-fa28-43bd-835b-798402502762",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "af12c022-a6c9-48e9-ba60-e1420815037d"
        },
        "item": {
          "id": "5f8bc910-b430-4944-8a72-c2f59f468ede",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "13ead317-5bd1-4177-8fe5-b789f1cca013",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c49b97b-3bff-4ff2-8053-3c1ea5084279",
        "cursor": {
          "ref": "32e8cf67-7275-4217-ae9f-cd1e99c12039",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "caac0dc4-1419-42f4-894d-ac0207c2da31"
        },
        "item": {
          "id": "1c49b97b-3bff-4ff2-8053-3c1ea5084279",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7dd17cd2-52c1-4f73-b396-709d856eb25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5f77e06d-2b52-469b-87b0-819e45e9c8d7",
        "cursor": {
          "ref": "79256c76-0aca-4e5c-9a6f-b3f7da6af293",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7e9d3086-2471-4537-bed8-b389d68bbd92"
        },
        "item": {
          "id": "5f77e06d-2b52-469b-87b0-819e45e9c8d7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0409e2ea-53cd-4fce-94b1-7fc1ca89a748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "201095e4-a0f5-46d7-bb18-60c904dc242c",
        "cursor": {
          "ref": "aecf8d67-2432-4684-9b50-4a9bec051151",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d4b092c3-60f5-42e9-8125-146f457f0b61"
        },
        "item": {
          "id": "201095e4-a0f5-46d7-bb18-60c904dc242c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5d83ed5c-c17b-435d-af97-5b2356b44f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4506ef9f-ff76-4417-a012-bb173126ca55",
        "cursor": {
          "ref": "6bd5b697-caad-4286-be40-bcc7bb1f6547",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7b48b2b5-8226-4315-8921-795e61063ee1"
        },
        "item": {
          "id": "4506ef9f-ff76-4417-a012-bb173126ca55",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "064e7dd8-8841-4cf0-b523-e84849fa3e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1ab37cbe-89a4-428d-bb28-b3f310e5296b",
        "cursor": {
          "ref": "282c1aa5-848d-405a-9ed9-8f86e1091b3e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d5bb863b-5548-4d72-a35d-136f1de2e3db"
        },
        "item": {
          "id": "1ab37cbe-89a4-428d-bb28-b3f310e5296b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "16302225-3887-496c-b3b5-cb0e91523b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e63272f7-3b62-4a26-aa98-83bb414d5f58",
        "cursor": {
          "ref": "95f0b390-67a7-4ad2-9b41-eb6675ef22d3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e0a13938-b466-4258-8db4-637e13afd5d7"
        },
        "item": {
          "id": "e63272f7-3b62-4a26-aa98-83bb414d5f58",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d37d0786-f2d4-4037-9d0c-8774d92b4bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ff5d7b06-6379-4840-96de-459f613965d5",
        "cursor": {
          "ref": "8499b624-c9c0-430d-b781-c862eabb6903",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b530849f-995f-4c4c-8bf2-1670c9ee29e0"
        },
        "item": {
          "id": "ff5d7b06-6379-4840-96de-459f613965d5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a99f0bf2-c4d6-4693-a49f-34c54a02be90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c1991138-5463-4368-ac3a-9b90356e96b1",
        "cursor": {
          "ref": "fada65f1-a861-453c-bb4e-8b1d391279d7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9b65218a-f6b6-4d5d-a96e-bc769b7b9da2"
        },
        "item": {
          "id": "c1991138-5463-4368-ac3a-9b90356e96b1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f454e4f3-3c07-4919-adfc-ce2039479072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b785d8-a6ae-41c6-b39c-fb9b1f3a5458",
        "cursor": {
          "ref": "5f2474e4-66cc-4595-9c8d-c2a1fccee11f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "80faf095-2209-4ab6-917b-acfa8c583aea"
        },
        "item": {
          "id": "45b785d8-a6ae-41c6-b39c-fb9b1f3a5458",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "031ccce3-be5e-4c9a-b361-489098c43411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e354059-a9fe-45c4-9f21-513696182091",
        "cursor": {
          "ref": "af5ac903-3832-4f89-ae20-42d4e2dab4c8",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7cf8b42a-665d-4d63-a67a-d49a1ce6edea"
        },
        "item": {
          "id": "1e354059-a9fe-45c4-9f21-513696182091",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6a6c97bb-108b-4f85-a9a7-3e3bbb2ed028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbf088e-587b-49cb-be3e-388977c6d571",
        "cursor": {
          "ref": "29ea41d3-d172-4b6d-8e4d-ac9d8db91b09",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8c68f88c-7e88-44a7-9dd0-5e07e23b8e1a"
        },
        "item": {
          "id": "3bbf088e-587b-49cb-be3e-388977c6d571",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ef6e8f9a-235e-4155-8283-9a85bf397229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f613224-cd4e-4f71-aa7b-b384f4a05a11",
        "cursor": {
          "ref": "c83f1a5d-57dd-4581-a99f-d21524802a9e",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1a308097-35ee-455f-86e9-5f842c2c38f4"
        },
        "item": {
          "id": "0f613224-cd4e-4f71-aa7b-b384f4a05a11",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "50c7363b-baa6-4e7f-bae5-64e1929afa8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b5b976-2fd3-436d-bea7-248910829391",
        "cursor": {
          "ref": "b7ab1221-8857-46b4-b642-23d3a37f8300",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6beac20f-5549-4f85-8db1-62ee3915cffd"
        },
        "item": {
          "id": "c6b5b976-2fd3-436d-bea7-248910829391",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "49313422-1ea4-49dd-b6c7-51c1d65fb806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad62358-ae7e-4570-a29b-e18d7e79eb6b",
        "cursor": {
          "ref": "927e721c-40ab-4516-98c4-8eaa60516755",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "482c02b8-c49a-44ca-953d-ee3f26636409"
        },
        "item": {
          "id": "4ad62358-ae7e-4570-a29b-e18d7e79eb6b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0a3c0b7b-060a-437d-8136-4e674bbfbe50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a5ab7e-e11e-4da8-9dd3-e7375887aa87",
        "cursor": {
          "ref": "e3ca746a-aad6-4f04-8aa7-a73ffc2bd07a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0b6b2550-60e0-41de-a7af-9eaf909287c4"
        },
        "item": {
          "id": "36a5ab7e-e11e-4da8-9dd3-e7375887aa87",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2402657e-b375-46dc-aada-979d62249116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5429711b-d41d-4083-9b51-e1c4c263d871",
        "cursor": {
          "ref": "112cbbb6-bef9-4346-bcda-583ae49d28ac",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a156bc11-ddfb-4092-85fa-092c16c3ec14"
        },
        "item": {
          "id": "5429711b-d41d-4083-9b51-e1c4c263d871",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1e18921c-0a53-499a-9fb0-c1baf7fd024b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c313b4-a483-41b4-ad8b-6af21002abca",
        "cursor": {
          "ref": "4d15b70c-9f10-4006-90ae-af42613a19b8",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a22efb43-2fdf-4af2-a4a2-ee2208e648ce"
        },
        "item": {
          "id": "91c313b4-a483-41b4-ad8b-6af21002abca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e362f7da-04ad-489c-bfb5-b9dab8da049d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa0dd3c-3af7-4b88-bb01-cbda87077f26",
        "cursor": {
          "ref": "3b39e12b-2ebc-4bf3-aa0b-9c701b2cc82a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a4148606-1694-49cd-b669-f410d6c4019f"
        },
        "item": {
          "id": "1fa0dd3c-3af7-4b88-bb01-cbda87077f26",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "37ff98a5-45f0-42b9-9105-ebbfdc316166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e5a17c-33a6-4411-803b-3bb08313dc93",
        "cursor": {
          "ref": "33878b68-67b3-4c82-9e0c-5feab19a64b3",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a207f22a-6b4e-40ff-b0f2-c9bab602f6a0"
        },
        "item": {
          "id": "e1e5a17c-33a6-4411-803b-3bb08313dc93",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e21b9195-1ac7-4d91-9464-dcae15d1c6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c888ec7-6041-4742-82ce-8d1555871070",
        "cursor": {
          "ref": "c9aa464b-55a4-4316-96b5-0a83f5a79567",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ee5604bc-c1ba-4955-90c3-954590e8facf"
        },
        "item": {
          "id": "6c888ec7-6041-4742-82ce-8d1555871070",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1e4666bb-9e49-4d79-a64c-aae73c3b9f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41eaf771-a2e7-4015-bd85-c99b7c699a28",
        "cursor": {
          "ref": "04b503ea-0b1e-44d3-a501-0424d93b4299",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "24e73248-2b69-42ef-90e8-bccda9f5cb2a"
        },
        "item": {
          "id": "41eaf771-a2e7-4015-bd85-c99b7c699a28",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3c6165ba-cbdf-42db-98bc-902d28c86ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13331047-6b6c-4c01-9ff0-bc9faa26f5a3",
        "cursor": {
          "ref": "537c6977-c96c-465b-bbf1-e68066d13667",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "63e01125-f28a-4ce0-8878-5ccd80635350"
        },
        "item": {
          "id": "13331047-6b6c-4c01-9ff0-bc9faa26f5a3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "be4f326f-6881-4a95-a654-79054812cc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c026b247-3adf-4b3e-aa3e-62d924d6ea5a",
        "cursor": {
          "ref": "46fab77a-2cf5-4876-bf75-855faf833d24",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2e386a41-0dd6-470d-9a12-00e6f53528ae"
        },
        "item": {
          "id": "c026b247-3adf-4b3e-aa3e-62d924d6ea5a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5dd05d15-83aa-4146-82a1-3ff3cf0119f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f40b01a-c9ce-4d91-89f8-37c44f8be5b5",
        "cursor": {
          "ref": "d689a2b4-356a-4663-8dd7-6d828c0b627c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ef45dbef-8a44-4171-890b-8bf943f7331c"
        },
        "item": {
          "id": "6f40b01a-c9ce-4d91-89f8-37c44f8be5b5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2f9f6a9d-6fc3-4e80-bc23-f92ca43127ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d910f6d4-1e99-43a5-98c5-0d96b2b5efa7",
        "cursor": {
          "ref": "227d7519-592b-4543-9295-0ae0eb82bd13",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "87c7c93d-7378-47e8-80e0-2d017116bedc"
        },
        "item": {
          "id": "d910f6d4-1e99-43a5-98c5-0d96b2b5efa7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f4156dee-cbd3-4562-a073-b4a4455fa5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6f2fbe-eb23-4e7e-8716-e6cbc02ef1c1",
        "cursor": {
          "ref": "b9eb9701-0bb2-40fc-8984-3256d624a0cc",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "16781d50-9d61-484b-b682-e3cdb7292c97"
        },
        "item": {
          "id": "bf6f2fbe-eb23-4e7e-8716-e6cbc02ef1c1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e08d0ccb-bdd8-48aa-a482-6d023e0c7f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be77742e-d13b-4301-ad43-e3b4ec8c8bc4",
        "cursor": {
          "ref": "e4401fdb-63df-49d3-bc35-c516f0305f44",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3d311d17-682d-4c44-92d3-c1932bf8b8ce"
        },
        "item": {
          "id": "be77742e-d13b-4301-ad43-e3b4ec8c8bc4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6aa48675-1c54-4381-b303-ee87906e6933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cb79e1-f478-43f8-aa98-31b42f0bf7e5",
        "cursor": {
          "ref": "77470e6d-e10b-460a-bf35-0aa6fd8fb60b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "018eec30-a03e-4aa4-800e-3891e9e7e0e9"
        },
        "item": {
          "id": "d4cb79e1-f478-43f8-aa98-31b42f0bf7e5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0d819bfb-164f-48f6-a344-c9d4cb76277a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b023c0-036b-4411-a87a-5333beb5370a",
        "cursor": {
          "ref": "3a6b23c0-b576-4fd1-979e-ab3fea89c3aa",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "db2cea9d-a2bc-4c1a-b9fa-029ee6d94f1d"
        },
        "item": {
          "id": "a2b023c0-036b-4411-a87a-5333beb5370a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aa23ee39-b3cb-4957-808c-c93173c58e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ed1985-7c5c-4720-b973-acd5a349b9ba",
        "cursor": {
          "ref": "8585fe8f-ece8-40b2-93b2-558188a427a9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e0f824ec-a507-4244-84d6-55918952e9f1"
        },
        "item": {
          "id": "99ed1985-7c5c-4720-b973-acd5a349b9ba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5277190d-4cb7-4ded-b5d3-b60c53aaca95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11ed075-9e19-4159-80d4-9326e9bb8d68",
        "cursor": {
          "ref": "cc32770b-38a8-498a-af62-2fc313b616ef",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b091ff03-d7a0-479b-b4eb-9529b623b7e0"
        },
        "item": {
          "id": "a11ed075-9e19-4159-80d4-9326e9bb8d68",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "88414a67-00bc-4c86-a92f-bdaa7de7c113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd93363b-9fee-4531-9f2f-e94b32764638",
        "cursor": {
          "ref": "b37c6da3-ca7b-46b0-be2e-b21e7c6b5535",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c180e03c-4a7d-4f86-918a-7e894b86f7d1"
        },
        "item": {
          "id": "bd93363b-9fee-4531-9f2f-e94b32764638",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6e717e1f-97a8-4d6a-9cc0-b40aac5d078d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3486a86-941a-49af-b443-2dd6847137b1",
        "cursor": {
          "ref": "60ca7d48-38c8-45fd-971a-2825c47f4d09",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "13a7c7e4-0b7a-4360-ae5c-f847897a255d"
        },
        "item": {
          "id": "f3486a86-941a-49af-b443-2dd6847137b1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "09105fbd-b63b-4731-86cf-0cf6e869afdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15aae81-9659-498b-81bc-0b427675b76e",
        "cursor": {
          "ref": "62fb0e30-2f85-4e36-bc3d-3e4f22ce55b4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "29567107-eeb0-424e-97db-06df2ae19d4c"
        },
        "item": {
          "id": "f15aae81-9659-498b-81bc-0b427675b76e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e70c98cb-90b8-40a1-907c-ac736f62993a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bffc806-4315-43a4-94dc-f56c9221c839",
        "cursor": {
          "ref": "75173591-a516-4fe6-babe-c53dda5503ad",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "06c81c8d-c4c7-406b-b50a-54c24e225023"
        },
        "item": {
          "id": "7bffc806-4315-43a4-94dc-f56c9221c839",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "79a39474-daf0-43c1-899c-791332175ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f2438a-288b-4111-8086-a98407a2deea",
        "cursor": {
          "ref": "95c42dbd-cc70-4ecd-a2e7-e13dc64a7d9c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "970f3780-db21-4bd1-af8a-e44e7a2a2075"
        },
        "item": {
          "id": "14f2438a-288b-4111-8086-a98407a2deea",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4b40bc5a-57dc-4a40-bd81-2f2b4694f0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb2dbd8-cdd5-403e-96d1-9bfd91513960",
        "cursor": {
          "ref": "5b753d80-0556-47d5-a49b-dc5f6a53add5",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "32356b7a-737b-401a-999a-38ac6620dcdc"
        },
        "item": {
          "id": "deb2dbd8-cdd5-403e-96d1-9bfd91513960",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "54d39f0f-816f-45df-a8c4-3cc7d03d984a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06ae134-7833-4cc2-9545-a9fe9a31c6d5",
        "cursor": {
          "ref": "804e323a-b0aa-4b87-8c25-5240b56c1d73",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "db3086d9-3e0f-4786-a733-4d7afae84330"
        },
        "item": {
          "id": "e06ae134-7833-4cc2-9545-a9fe9a31c6d5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb541513-78be-4fae-9578-6ce88d212adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3603b5-4983-4dc6-8b14-e247d1b436c4",
        "cursor": {
          "ref": "207f789e-80d6-4b46-8685-a06b58931a06",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b57aa7f3-6571-4df3-9fe8-dfc5e8039bb6"
        },
        "item": {
          "id": "cb3603b5-4983-4dc6-8b14-e247d1b436c4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ae0c016b-f823-40db-96bf-25b00d13b25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c819d5f-c913-4fd9-8f5b-47f602bce153",
        "cursor": {
          "ref": "6a392238-0534-4454-ad82-180c6a6f9643",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "63ab78b1-0121-4182-91b0-823e9da20857"
        },
        "item": {
          "id": "2c819d5f-c913-4fd9-8f5b-47f602bce153",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fd32348e-62ac-4217-9f57-9e32011ba386",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4527cb56-e501-4986-b6b1-f2ca8cdb2f9f",
        "cursor": {
          "ref": "ee194221-96ae-4489-a143-3574e64d8110",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "08011c08-78f4-4703-8fa0-c8bab942b5a0"
        },
        "item": {
          "id": "4527cb56-e501-4986-b6b1-f2ca8cdb2f9f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "420ae8ab-f7b5-4186-bed1-4cabaa0a9954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdaf8fa-a08c-4257-8b6f-bc85e145cf72",
        "cursor": {
          "ref": "d831850b-bf70-47bf-8a03-1738c7664175",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "85054996-e308-4e7d-a9c6-66f75e5e1986"
        },
        "item": {
          "id": "6bdaf8fa-a08c-4257-8b6f-bc85e145cf72",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e33151e7-8b0c-49b4-8ab1-3518f82b5937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f61bfee-9a28-4067-ab7d-0335fa2f199a",
        "cursor": {
          "ref": "cab88bb2-7c1d-47a4-a240-13ee05bb99f8",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "67d27f85-e01b-49bf-9827-691c78c6e61f"
        },
        "item": {
          "id": "6f61bfee-9a28-4067-ab7d-0335fa2f199a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "df553c4b-c156-45e4-8001-01468c9a8183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7a50ab-ba04-4b41-b65d-8b64742229bc",
        "cursor": {
          "ref": "728e9f82-7f13-40a7-87e3-efa93b6b9ec7",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c0494509-c779-4c22-b121-be25c17719cb"
        },
        "item": {
          "id": "cf7a50ab-ba04-4b41-b65d-8b64742229bc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a041c9fb-ceb9-4501-b1dd-1cf3d92aa156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be13b3f-f507-4410-b5b1-3afb3a9300ce",
        "cursor": {
          "ref": "be6d3c74-b8fd-4e44-98a2-42a14997feb0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0c9fd743-66f0-4bf8-a3c5-021e4fde1834"
        },
        "item": {
          "id": "5be13b3f-f507-4410-b5b1-3afb3a9300ce",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6da12bad-a6e9-478e-b8db-4f41355477ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa283aed-14be-4c9c-b750-7e2ee6823ba8",
        "cursor": {
          "ref": "ec00fce4-3637-4a52-ab1a-f4ecea08f26f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d145693b-6f2c-40b1-8109-288dba91b219"
        },
        "item": {
          "id": "fa283aed-14be-4c9c-b750-7e2ee6823ba8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "87147dde-079f-48e4-8dd5-f15fe28d436a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7c0c29-9f1a-47e1-bce2-8309b756ade8",
        "cursor": {
          "ref": "51ed56d7-5944-4176-b929-040da0fa4e38",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "40f60358-cf08-42db-a631-37aefcda12b9"
        },
        "item": {
          "id": "1c7c0c29-9f1a-47e1-bce2-8309b756ade8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "96113c56-af33-44e1-a23e-f2e1eabd86ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1162acde-a612-404e-8e8e-25000db0b9c0",
        "cursor": {
          "ref": "22500cfd-e72a-4e3a-b3e7-f758c913441a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ea3bda43-f81c-414a-8a0f-90c8592e2956"
        },
        "item": {
          "id": "1162acde-a612-404e-8e8e-25000db0b9c0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c5e58fb-fb38-47ad-92cf-137373c8fc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8e3b36-1221-463d-88f9-ba5dee6a5d34",
        "cursor": {
          "ref": "d0660439-bece-4d2a-9d09-9b24401aba27",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "903bf7b5-9893-4d00-a8f1-2a4bc0eb777f"
        },
        "item": {
          "id": "ba8e3b36-1221-463d-88f9-ba5dee6a5d34",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c5b4935f-1b86-418f-8e4f-d7176af28dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4722c6b-d54d-4a96-8b7d-6d7f165155e3",
        "cursor": {
          "ref": "b0745547-fcbf-4262-94a6-cf17f742085c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ce1eac77-151f-44f1-b62b-86ede52fea4f"
        },
        "item": {
          "id": "f4722c6b-d54d-4a96-8b7d-6d7f165155e3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "66bae097-5040-4e89-ba0c-597d35598e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7c3ffe-edd0-41f1-a45f-5a7f7f26d739",
        "cursor": {
          "ref": "78e44624-6fbc-457e-a48d-c44d23b0da8a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "37a29cc7-7cc0-42d1-9c90-93070ee11c85"
        },
        "item": {
          "id": "ea7c3ffe-edd0-41f1-a45f-5a7f7f26d739",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "24f849cd-c6bd-4a2f-9d93-16b63dfd8247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833b4e0d-00a5-4d81-a665-56327e594ecb",
        "cursor": {
          "ref": "b569fa05-8e66-4cda-9cbb-cf9503f243be",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0e268a56-203a-48f1-b775-18d97a19230d"
        },
        "item": {
          "id": "833b4e0d-00a5-4d81-a665-56327e594ecb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "494bdd25-0887-413c-bb9f-4311a2a22783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b684569b-9483-47f9-b281-c3c546cc2b01",
        "cursor": {
          "ref": "2a4bea8f-61a6-46c0-acb7-db1df45f5c5a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9006eab9-4f48-41d9-8bde-9b12c6ae22cf"
        },
        "item": {
          "id": "b684569b-9483-47f9-b281-c3c546cc2b01",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "118a87d8-6d02-4731-bf70-87380ee9fa29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5581ea3c-f1e1-4096-b5cc-4074a3f4e98d",
        "cursor": {
          "ref": "6b5684d3-d915-4f62-bc53-99ec10f67e2e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7690119a-3c18-4caa-8783-4c11088486d4"
        },
        "item": {
          "id": "5581ea3c-f1e1-4096-b5cc-4074a3f4e98d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "72e20317-ba9f-42bf-b2ca-2c4bbb4eddf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ca5f1d-e199-4770-87a0-feae1d72ab13",
        "cursor": {
          "ref": "4ad89425-ff6e-43cb-8b61-ec4c0abb6308",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "76998dee-3f01-4ba4-ade8-687fccebfb11"
        },
        "item": {
          "id": "71ca5f1d-e199-4770-87a0-feae1d72ab13",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9218342a-9fbf-4d30-b0a7-2ecb6cfb13a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffbee2c-164c-4773-85f2-6b1f2aa6c85f",
        "cursor": {
          "ref": "a1833c71-edfc-4d0f-a544-2241472a07fa",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e422359d-e2d7-453e-9c01-983e80718595"
        },
        "item": {
          "id": "3ffbee2c-164c-4773-85f2-6b1f2aa6c85f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "36f78f2b-e957-4d34-901e-0aebfd9127e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93166ce-6a4e-43f4-b5c7-bc2ae25f6113",
        "cursor": {
          "ref": "7bcb946f-9ced-42f3-a27b-3c04af275e93",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7849cf12-68ae-4c58-959a-88afeff5d267"
        },
        "item": {
          "id": "d93166ce-6a4e-43f4-b5c7-bc2ae25f6113",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "523119d2-1701-49cd-aeda-cd5f5e51371d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c114fa3d-83b8-4668-b4fc-6515ff9b5b79",
        "cursor": {
          "ref": "767f4b6c-bafd-45e4-9193-e6036a75b86a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3832bfaa-3acf-475a-ba17-4bae262820bb"
        },
        "item": {
          "id": "c114fa3d-83b8-4668-b4fc-6515ff9b5b79",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a27fc4e7-6350-407c-a095-960881f14850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2f787d-2fbf-4b0d-8ac7-b6bd0697d775",
        "cursor": {
          "ref": "e4380d58-dfe7-43f0-a420-c03619ae7c2b",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bb7d3c62-7624-47fb-b837-e91aa56be5cf"
        },
        "item": {
          "id": "4c2f787d-2fbf-4b0d-8ac7-b6bd0697d775",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5b4431c8-fcbc-44ca-91db-67c8a82dde2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e18b341-206b-4a09-9088-ef4af169640f",
        "cursor": {
          "ref": "02100df5-22bf-4354-ab69-44f96a1f6a00",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "75169272-bd87-49c2-a012-3945eaba2124"
        },
        "item": {
          "id": "3e18b341-206b-4a09-9088-ef4af169640f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "113bc0c3-6d63-4000-8445-e8309b08d71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf9ec35-60e1-4163-9910-0e8b85336f79",
        "cursor": {
          "ref": "e5ca565e-7464-4520-8a9f-fa0c54918cc5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7fbec704-d192-422f-9b02-d92a7543f197"
        },
        "item": {
          "id": "8bf9ec35-60e1-4163-9910-0e8b85336f79",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "91bb5a85-97eb-4725-8c50-bee6d2da6136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb548d9-d6b6-4c62-a6ee-527690671fc2",
        "cursor": {
          "ref": "2c8af892-d801-4ecd-a867-8c390938792c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dc289897-7736-4a07-9d70-6b1c088ce36c"
        },
        "item": {
          "id": "5cb548d9-d6b6-4c62-a6ee-527690671fc2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b7ff5a10-48a6-43a6-97c1-7c3e34ba3eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083633b5-38d4-4e3d-8c9f-25824cb1ad1c",
        "cursor": {
          "ref": "a08d397e-6d73-4bef-9dde-2efb9ba8dd25",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6c3d5a2d-6e24-491b-a8aa-07b1ede2f914"
        },
        "item": {
          "id": "083633b5-38d4-4e3d-8c9f-25824cb1ad1c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "27cbe749-07bc-422b-a56b-0228b07aae44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3792344-30e9-4d40-b40c-c1a9beae035a",
        "cursor": {
          "ref": "a017e569-a96e-482a-89ca-6d8cb3037799",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b5d1144a-102e-4c87-8dac-7707b4baea49"
        },
        "item": {
          "id": "f3792344-30e9-4d40-b40c-c1a9beae035a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "68689d5d-81d0-49a1-a22f-05488491b149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c4fc87-fa66-429c-b60d-f10ec1456a13",
        "cursor": {
          "ref": "c8b7bf62-75b4-43d7-9c8c-00b76c38f0ec",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3c0a0ea6-0e45-4976-81b4-1f8922cecb5d"
        },
        "item": {
          "id": "b2c4fc87-fa66-429c-b60d-f10ec1456a13",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d985f80f-89a9-4be5-9ef8-81f645f26cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1604a97c-f1bc-46f5-a152-f6ce6cdc476e",
        "cursor": {
          "ref": "f315c235-d727-4b6b-bfcd-3d676d02b698",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8f25f432-03b3-490f-be2b-a1de638aaec9"
        },
        "item": {
          "id": "1604a97c-f1bc-46f5-a152-f6ce6cdc476e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "89bc3e78-e20c-4de6-8993-31f78712fcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112d2913-49d8-4358-87ac-d82cf4b856d6",
        "cursor": {
          "ref": "ba837ed5-8524-4791-b31c-b7c9fbfb6409",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "14ff6a3c-cb0f-4d4b-95a8-d59688d57f08"
        },
        "item": {
          "id": "112d2913-49d8-4358-87ac-d82cf4b856d6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fd41fabe-a3c1-49e4-9dd5-3998475c3457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a060ed05-fff6-451b-b90e-d96634deb0a8",
        "cursor": {
          "ref": "af351cfc-4e17-46b7-ab41-e768ca80a554",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "66553aad-f6cb-44e0-ab8b-24a20ae667e2"
        },
        "item": {
          "id": "a060ed05-fff6-451b-b90e-d96634deb0a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d4292439-a6e7-4bde-89cc-6ea3169177c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994fe0a6-f2a9-47f7-9a98-71a3356f3368",
        "cursor": {
          "ref": "95684674-1f18-4e0d-9208-994b764362c0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "79e5ab11-4d8c-4b61-aef4-5f64fbeaf360"
        },
        "item": {
          "id": "994fe0a6-f2a9-47f7-9a98-71a3356f3368",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b02ef9f0-4526-4402-867a-b73a3a022553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f555d438-5a38-4a76-a851-2a6d93387ad9",
        "cursor": {
          "ref": "ebb0f1a8-7007-48ce-953a-c1ff3cd3bc44",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "af3268ac-4cde-4c72-9fa8-26544bf57cee"
        },
        "item": {
          "id": "f555d438-5a38-4a76-a851-2a6d93387ad9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9307d52d-78e4-41fe-9eb3-c963b006b38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfc98ea-f506-47ec-8451-29856f120b81",
        "cursor": {
          "ref": "1170488b-adfb-4c87-b641-dd5be2adcd0e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "86b66a8b-3d8c-4f2d-85dd-bb3fe31816fe"
        },
        "item": {
          "id": "3cfc98ea-f506-47ec-8451-29856f120b81",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "943b092b-aab7-47a6-9488-b5d6e2b9eb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875786da-0854-4932-9abb-c15e3bdff132",
        "cursor": {
          "ref": "3e3b3b26-d067-46a1-8394-3ac5b2d6cd3b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0dad17f7-c304-4c06-b9f2-7dc3598d3a90"
        },
        "item": {
          "id": "875786da-0854-4932-9abb-c15e3bdff132",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9c84cad2-dd1f-4c02-ae73-cf9145708fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa049503-b688-4c52-a19a-9aabd12ebca9",
        "cursor": {
          "ref": "90a52fc8-47f4-40d9-b58e-08635108da19",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2b0ca09d-b901-435b-bc94-81d29578e5d5"
        },
        "item": {
          "id": "aa049503-b688-4c52-a19a-9aabd12ebca9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "418163e5-7502-4c97-ae1b-0c30157a045d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19429e5d-28a9-447a-b955-5876e4edf046",
        "cursor": {
          "ref": "6e1c8c67-46ba-4edc-9fc7-5a4d6ae0a36d",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "85915687-bd05-4f21-9970-5d62e5503655"
        },
        "item": {
          "id": "19429e5d-28a9-447a-b955-5876e4edf046",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "97a8045e-ee47-40f8-8706-8d3c5676fd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30825325-459c-44e5-900f-bc4b461c4434",
        "cursor": {
          "ref": "59faf472-5c52-415c-83c6-d93a93c3f431",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0376881d-9678-42a9-b60e-1f2acfd1b525"
        },
        "item": {
          "id": "30825325-459c-44e5-900f-bc4b461c4434",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f894c06b-e6eb-463b-a24d-6cc201522683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d320fa9b-2cef-4f15-a325-343bf6273653",
        "cursor": {
          "ref": "726fe55c-dd0a-4983-b0fb-aa4e134c25c5",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "24e84a67-0f51-4a37-8a3d-4baf8a589ef3"
        },
        "item": {
          "id": "d320fa9b-2cef-4f15-a325-343bf6273653",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e127ffe7-f314-4cde-9ea2-bede53c858f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d9e162-ca90-47a1-a6f6-b4942dfa30a3",
        "cursor": {
          "ref": "cae8e256-efa1-47ca-b4d3-6df1b60165ea",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "43eb29c7-680c-44de-973f-828c19bbcda9"
        },
        "item": {
          "id": "22d9e162-ca90-47a1-a6f6-b4942dfa30a3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b1c49608-1a60-4e6a-96be-760e56334dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1336eeab-1c59-4eee-95c3-b208a4e19acf",
        "cursor": {
          "ref": "193c1bbb-b55e-46d6-8de0-c1afea1da1e3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bc3aae1d-00fb-4010-975a-ed6bb57d63a4"
        },
        "item": {
          "id": "1336eeab-1c59-4eee-95c3-b208a4e19acf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6a078261-74c9-46b8-b4b3-b60bf1033a9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445139a6-1bbf-481c-811f-88684c271dc2",
        "cursor": {
          "ref": "c81eaeff-1e1a-426d-968c-b331936cc29e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "92469e42-4d68-424b-a462-54f6fe165c5f"
        },
        "item": {
          "id": "445139a6-1bbf-481c-811f-88684c271dc2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "de90f422-d78b-45d9-b1d1-8e2d91325999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8746f643-4ee2-4ed8-8cee-eb9663b48387",
        "cursor": {
          "ref": "d674c072-bb62-4405-b07c-2143e44dfaa9",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9453725e-ebd4-4074-b175-3b2fd0a3fb4f"
        },
        "item": {
          "id": "8746f643-4ee2-4ed8-8cee-eb9663b48387",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c2d30278-d20f-4a7a-ac6b-bf6422d97aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36e991e-7917-4317-b2be-cf5e5ab04596",
        "cursor": {
          "ref": "3d3f5ec6-7155-46d5-ad6e-6f10f8490ee3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b546e2a9-27d6-435f-b8c8-4b10bed2b284"
        },
        "item": {
          "id": "b36e991e-7917-4317-b2be-cf5e5ab04596",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a8c91c1f-12c1-4e57-b773-5910371d4c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c622809-6de9-4ecb-a788-5f75beae5b8f",
        "cursor": {
          "ref": "61e276b8-6034-4830-b1b3-fce5d0b0a62f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3a817af6-ddb6-4011-a2a8-06d38af32d86"
        },
        "item": {
          "id": "2c622809-6de9-4ecb-a788-5f75beae5b8f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6b310585-8ced-4bb7-b1ae-fcaf8ba8603b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091b5b9c-a8cf-42b7-9c08-c2335b71d30c",
        "cursor": {
          "ref": "f58173c5-4eda-4b3d-aedb-4e244d3abf93",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3b7692cf-879f-4024-b2ec-3ad7af01fe08"
        },
        "item": {
          "id": "091b5b9c-a8cf-42b7-9c08-c2335b71d30c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "beaa3c28-2f1b-4ae1-96ad-b0b1be1f43e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac8c3a6-aa32-4a1d-b50c-2c5045c02b50",
        "cursor": {
          "ref": "4bd504e1-6445-4837-90d6-2c60961109b5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "86f3de64-cd7e-4f71-ac51-69ebbb73b141"
        },
        "item": {
          "id": "fac8c3a6-aa32-4a1d-b50c-2c5045c02b50",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4dc85b53-9827-4ddd-8ccb-8e15ccd8ee65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de42e948-d43f-47f4-a91e-c6cfa0825aea",
        "cursor": {
          "ref": "8465ea35-c29d-4cf3-95c7-bdfe0c7d37cc",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "338fbbe8-f9c1-49d8-944f-4d13b175b04b"
        },
        "item": {
          "id": "de42e948-d43f-47f4-a91e-c6cfa0825aea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e8dbbeda-13c8-4216-8353-85f20ab8025a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7541c3c6-b3ca-4be0-8a50-b194bad960db",
        "cursor": {
          "ref": "eda8b0f5-9b48-4fae-8ecc-5ac00c2e1bd3",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f43671e3-1768-4586-8481-c066f5a37ed4"
        },
        "item": {
          "id": "7541c3c6-b3ca-4be0-8a50-b194bad960db",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "71383031-9652-48d5-980b-81a88a98fa96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f278b59b-b8f3-4249-8463-52f537caa510",
        "cursor": {
          "ref": "7c74c50f-9019-49ab-92fb-95b3f75bea33",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "06e85eec-7bfe-458d-90c8-c03273078b52"
        },
        "item": {
          "id": "f278b59b-b8f3-4249-8463-52f537caa510",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1ce10d8f-6abc-465e-8248-d74992920949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee62ffa-85f9-4300-a713-2ff9e3c2076f",
        "cursor": {
          "ref": "bc8455c7-a88b-4047-8a8e-710bd8ae653f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0660da21-50d7-4bf6-a353-e4ba9aa19620"
        },
        "item": {
          "id": "aee62ffa-85f9-4300-a713-2ff9e3c2076f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4b4e0b41-97d1-403f-960f-c7d93e44d000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b366f8c3-d34a-4e91-8add-989cdafb1ca3",
        "cursor": {
          "ref": "35dd2102-666c-4132-a0e3-5e1e12bd1666",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d5e8dc84-f780-4a4a-a323-049527b03656"
        },
        "item": {
          "id": "b366f8c3-d34a-4e91-8add-989cdafb1ca3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "156db78e-ef8e-463e-a604-2b3d50ac8923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73acb4fb-3189-4f6b-acde-c1724051bb59",
        "cursor": {
          "ref": "ac269505-5c0b-42af-b7d8-23c0ecaceb9a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "40cb5e5c-691c-4973-a6f5-c05356c443b7"
        },
        "item": {
          "id": "73acb4fb-3189-4f6b-acde-c1724051bb59",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c2124b0e-e0bb-4a47-9591-f880e6c3d125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2959d3-ab4e-4366-ac06-2a5256a92bd0",
        "cursor": {
          "ref": "2132b651-0b97-414e-a083-1c6501268974",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eae9ebb3-3d9f-4688-bd9d-1bb50eaa53a5"
        },
        "item": {
          "id": "9c2959d3-ab4e-4366-ac06-2a5256a92bd0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8badf937-bbd5-4b61-982b-c99189b67ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e90b02-d7a6-4a93-acb8-70bc5c09329a",
        "cursor": {
          "ref": "03e1e379-fc66-4425-837c-9417251fe2ee",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b009a758-a7fe-4b81-aabf-5c7e4da32a2b"
        },
        "item": {
          "id": "b9e90b02-d7a6-4a93-acb8-70bc5c09329a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "19fdcfec-f350-4424-805d-7c2f95aef069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8602ca12-a1c3-4783-85e6-1b0477f56ace",
        "cursor": {
          "ref": "dbc6df3b-6291-4d5e-ae70-29dadd84c40b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "569b3cd7-3530-4ed5-b24e-d50d05b86f7a"
        },
        "item": {
          "id": "8602ca12-a1c3-4783-85e6-1b0477f56ace",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7e90f9aa-e25e-4146-afda-77beb096f272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696ed54d-890c-424b-91b7-2e8528e3ed96",
        "cursor": {
          "ref": "9a6c88a9-9283-4bc2-a97f-77d5154434d8",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "24e03fc5-f1a6-4a17-aacb-157705a6e444"
        },
        "item": {
          "id": "696ed54d-890c-424b-91b7-2e8528e3ed96",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7f3e2741-9b62-49e2-8547-d95ac8d7382f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646d5a4a-2ce5-47b7-aea2-fdc93aa4879d",
        "cursor": {
          "ref": "0954f464-b838-46e2-ae5c-32217a2b1cf7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5ee00f17-bf6a-4b82-822c-30b64ed070b6"
        },
        "item": {
          "id": "646d5a4a-2ce5-47b7-aea2-fdc93aa4879d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2c9ef884-170d-4d39-a74f-cc228e82f745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca0e1f5-2f37-447a-9051-c7de4a0cc565",
        "cursor": {
          "ref": "ad78e9cd-382e-4fa5-884a-944d812f6c69",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f748ba08-36ee-4510-8526-e533c395343f"
        },
        "item": {
          "id": "0ca0e1f5-2f37-447a-9051-c7de4a0cc565",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "23d34cda-5952-4121-91e9-0f4ecd749a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d3baa3-acaa-4be8-ba2a-92808b2de278",
        "cursor": {
          "ref": "cb84f7ac-d4a7-4447-8591-2095e10d1b46",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c8a1a30b-c974-4bf9-81c2-f9f5e257cae7"
        },
        "item": {
          "id": "07d3baa3-acaa-4be8-ba2a-92808b2de278",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bc3e0cdc-cc65-45e9-a4c5-3e4ea58f2d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64d9b90-a955-43ea-8934-0c8f221bfb1f",
        "cursor": {
          "ref": "94536a4c-9a83-4f1c-91c4-8b58db413a31",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "75a4e5b7-60e9-4fd6-8023-f3daf20678dc"
        },
        "item": {
          "id": "f64d9b90-a955-43ea-8934-0c8f221bfb1f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9b509a67-bc2c-4626-8aaa-440d12e5fb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7690b03-d6ba-44d2-81a0-15ffdf17b9b8",
        "cursor": {
          "ref": "f38e0a07-08e3-46da-a98e-03aaf3c2c77f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2a0989ae-23b1-44f3-aa9a-3a323dad4aa2"
        },
        "item": {
          "id": "f7690b03-d6ba-44d2-81a0-15ffdf17b9b8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "82cdf628-d31f-45f5-8c4b-1ee50d1faa24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412e9f60-6b2b-42d8-bb87-0789a98ac88a",
        "cursor": {
          "ref": "372986f7-86a8-46e2-a496-6168b855e5e0",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4942e997-c8d8-45ae-a868-d69cdb412b9c"
        },
        "item": {
          "id": "412e9f60-6b2b-42d8-bb87-0789a98ac88a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1fbaa26a-d1de-4a9b-9231-e385c9e148ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe56c11-5f40-473e-bbbd-ceb94f7fb77d",
        "cursor": {
          "ref": "7f0b1700-769d-4161-944f-a7e99bf87f9a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e0f74cd0-3954-4f6c-8402-69989e73f6cc"
        },
        "item": {
          "id": "efe56c11-5f40-473e-bbbd-ceb94f7fb77d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8e4ad697-bc5b-4e0a-a0af-596336990a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e747c2e6-7bb5-4241-b083-bb4384c94e65",
        "cursor": {
          "ref": "b24a9266-858a-4186-be8d-9701ae9219dc",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "703885db-eb48-40a8-b35c-5147a060915b"
        },
        "item": {
          "id": "e747c2e6-7bb5-4241-b083-bb4384c94e65",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f8a87e38-3bde-4d98-b508-7355a01dafe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4db44f-0a15-4d5e-9efc-ccf0946f785c",
        "cursor": {
          "ref": "529aaaf7-4f31-4cc7-b14b-660c4be59aae",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fd026985-510a-46d6-a09a-623c02bd8eea"
        },
        "item": {
          "id": "3e4db44f-0a15-4d5e-9efc-ccf0946f785c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d031291-dc11-4c42-8fcb-f3438f20d385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02135adf-5999-4d76-b005-c6188ec4c22a",
        "cursor": {
          "ref": "6840452b-26f6-46a7-85c8-32207ff1e9b2",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dcd0c3bc-bd8b-4dc3-aa46-36a033f5b86f"
        },
        "item": {
          "id": "02135adf-5999-4d76-b005-c6188ec4c22a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f770fe54-daad-4758-8a5d-d128c4aa66d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc23ba1a-e1ef-423e-b4e5-a212aedb3fe9",
        "cursor": {
          "ref": "40c856f0-402b-449e-bde8-6a39dd6270c6",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "73487ff4-b8be-452f-8ef4-2cf372e1900b"
        },
        "item": {
          "id": "cc23ba1a-e1ef-423e-b4e5-a212aedb3fe9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7ae50a82-e734-4995-974a-7f0cfb88723d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1779cbb8-e65c-4f5d-af2e-8c4ddb05b087",
        "cursor": {
          "ref": "54b8d540-3e3f-4de8-a817-d7e6e8823a4c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "64bde115-24cc-4d04-8984-94e8fe9fbd30"
        },
        "item": {
          "id": "1779cbb8-e65c-4f5d-af2e-8c4ddb05b087",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "17fd4c17-f280-4609-8386-85820aa35a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c142282-c164-4883-b79c-1b452cf3f85e",
        "cursor": {
          "ref": "8931ca94-1daf-420c-b98a-01b04ad8d4a2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b5407026-ab8c-49be-8fcb-940457721500"
        },
        "item": {
          "id": "2c142282-c164-4883-b79c-1b452cf3f85e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c2f8404e-6d30-4a5c-8910-67cbd70b42b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7af38e-1add-423a-b051-2911c83f72be",
        "cursor": {
          "ref": "73532229-a385-4a6e-a48f-b3e933a88016",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1bdb0381-d121-481d-8b63-ac60d61a4cfc"
        },
        "item": {
          "id": "cf7af38e-1add-423a-b051-2911c83f72be",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2d534839-ba12-4bdd-84a3-30cf411aaa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e999bb-7d19-46f7-b713-3c07daa5e13a",
        "cursor": {
          "ref": "0ec7e4b9-f62b-4c44-b846-2e71023a3b91",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3f03c279-c8a2-438f-b642-9ca7d072e078"
        },
        "item": {
          "id": "08e999bb-7d19-46f7-b713-3c07daa5e13a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0c4d9d28-5efa-4935-b732-a37d2f3b52c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0629b9-93be-4de0-9f90-605f500f0c4b",
        "cursor": {
          "ref": "30f5a407-4fdc-462c-91c1-5f1d352f3d02",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "38ee80d2-0728-4d1f-8450-630eee851829"
        },
        "item": {
          "id": "2e0629b9-93be-4de0-9f90-605f500f0c4b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e3357d35-70fb-4b11-a02e-79463351d88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821e8238-6f1f-40af-8684-827b47296229",
        "cursor": {
          "ref": "8dae3d7f-1f0b-4c10-ab43-a1078956aae1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a61d8014-e657-49d9-af7e-86159c2c8134"
        },
        "item": {
          "id": "821e8238-6f1f-40af-8684-827b47296229",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c4146a08-0acc-414d-bd17-7f88674e71b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d2df42-746c-4789-b385-bf882b628d38",
        "cursor": {
          "ref": "cdf93055-c1dd-4b75-b614-7cda4bb79984",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cfec0db4-f5ed-40c0-9eea-151420ac461a"
        },
        "item": {
          "id": "64d2df42-746c-4789-b385-bf882b628d38",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "35d8ecd6-dcf4-4efb-830a-113fb0df93a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9041d07-383d-4e55-8c22-62b53b63ebe6",
        "cursor": {
          "ref": "d269cdb1-cc66-416e-8f28-335daeb6ae3c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "155c7de3-a706-4cad-8f08-4fef1a3808c9"
        },
        "item": {
          "id": "f9041d07-383d-4e55-8c22-62b53b63ebe6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7b2266a6-1bb2-4d93-9129-b79027ea6093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc61cb97-1075-4275-bd10-f90c8612cf90",
        "cursor": {
          "ref": "dc41c0d1-3862-4ff5-b8b6-2e9b2d3866fb",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6bae811c-15ac-4df6-8da2-d79654852110"
        },
        "item": {
          "id": "bc61cb97-1075-4275-bd10-f90c8612cf90",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1100d588-6ff8-4c09-9817-0ca0519abade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e35264-c8a3-4bfd-b782-e3873ad40dbf",
        "cursor": {
          "ref": "6513cea5-d82a-46e2-a88f-98c76dae8cf2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "49fd381d-a5b7-4e5a-b694-c8e989570d0a"
        },
        "item": {
          "id": "30e35264-c8a3-4bfd-b782-e3873ad40dbf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6b63f12d-4fe9-47b6-9971-8314e2a992d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5ee177-1374-4199-9cd7-798de86a75ce",
        "cursor": {
          "ref": "451a6b1a-b056-402a-9d35-586a3bda572c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4005d041-7845-414e-b1a7-fa5ac869ddf7"
        },
        "item": {
          "id": "ef5ee177-1374-4199-9cd7-798de86a75ce",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "03c510db-27ec-4f6a-b500-dafa075ac7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02cbae4-f375-486e-94db-581e36d6d0e2",
        "cursor": {
          "ref": "1cff3aae-4de1-4d31-999e-d3b22a6d06bf",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4e5ac60a-bebf-404f-9227-e1f077526d40"
        },
        "item": {
          "id": "d02cbae4-f375-486e-94db-581e36d6d0e2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9a7730a0-d776-4741-abf7-2f3903326371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d98555-2eb4-48de-a919-9de0f53749fd",
        "cursor": {
          "ref": "cc54f9d5-a265-4bac-9c6c-3e96b2c9bc69",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7e2433ab-ada1-4dde-a783-3a818ca5b01e"
        },
        "item": {
          "id": "f2d98555-2eb4-48de-a919-9de0f53749fd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c1a6b402-7e4b-4896-9774-b37e0f1c7718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366ca5d5-fdf7-40fe-a9e8-799ec2f88d73",
        "cursor": {
          "ref": "eb5fe8b2-3431-43a5-bd35-fca8f02e5723",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "356002b7-c796-40f9-acc8-b3b9126d05df"
        },
        "item": {
          "id": "366ca5d5-fdf7-40fe-a9e8-799ec2f88d73",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6be93dba-b6a8-460e-9972-60e8eee2d056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db39efac-4446-4f6a-bce2-770288e60da6",
        "cursor": {
          "ref": "e6ba067e-6956-4db5-a37e-c1b87b954831",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "947e1280-1bc1-4523-8344-503ca70c2cad"
        },
        "item": {
          "id": "db39efac-4446-4f6a-bce2-770288e60da6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e574eb3f-7b63-4d08-a9dc-effd38761fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c16fc20-2374-4b54-bb67-19a5b0b32792",
        "cursor": {
          "ref": "a181481b-acbf-4f71-87a6-aab0ce826475",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bb132fbd-c3bf-413e-9ac6-276432b8235a"
        },
        "item": {
          "id": "9c16fc20-2374-4b54-bb67-19a5b0b32792",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "19d241b1-e1ac-40d8-851b-7cb6cbb2617c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5d5a9f-d76e-4eb5-926a-35d5bac959a8",
        "cursor": {
          "ref": "e1c7b3d9-31e6-4b88-a5a3-addce226e2d0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a8e0f1a1-d526-4670-a3bd-a97bab117c02"
        },
        "item": {
          "id": "fa5d5a9f-d76e-4eb5-926a-35d5bac959a8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4665367e-7b5a-4c42-a57e-bad21376999c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5506711e-7405-475b-bb5b-fa631116221f",
        "cursor": {
          "ref": "dfdf1dde-b61c-4640-9a03-59a7ecedd0fd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6a35c91c-a99b-4fc2-83dd-0b7e4a2d4d18"
        },
        "item": {
          "id": "5506711e-7405-475b-bb5b-fa631116221f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "29c3ea39-4d2d-4485-9fc0-8465c4285834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdb0c2c-4752-48d7-a0eb-dd8aee31cca1",
        "cursor": {
          "ref": "a237fbda-a01a-41a2-a426-c38a59181e0b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "aa048710-cbf4-4576-95d4-cfe3381b1f02"
        },
        "item": {
          "id": "bbdb0c2c-4752-48d7-a0eb-dd8aee31cca1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "defe9e0e-ec1b-4eaf-8390-188980d73467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c87aea-f034-4c6d-8c4b-4d6e4d34ab69",
        "cursor": {
          "ref": "b7865228-d18a-468f-a1a2-5a9c69eda153",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0363ad19-197d-4562-a04c-cb776e390035"
        },
        "item": {
          "id": "07c87aea-f034-4c6d-8c4b-4d6e4d34ab69",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "22cf4c5a-6613-4a23-aa9d-fce6dbdbf05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a6dba0-a5d3-47d0-a945-563c3bd9706c",
        "cursor": {
          "ref": "358497b1-e333-4351-96aa-b7f11d32da8f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "196ac931-5a8e-4cf8-949c-2096b40ead37"
        },
        "item": {
          "id": "10a6dba0-a5d3-47d0-a945-563c3bd9706c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "38328f47-7b70-40b9-8fa2-cdc913600459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566cb006-40bf-4337-8ca2-171903d9fdd9",
        "cursor": {
          "ref": "bef84fcf-6728-4799-8063-34845d9f0463",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0c54c1a8-b038-47ea-89cf-1e603a73d4ca"
        },
        "item": {
          "id": "566cb006-40bf-4337-8ca2-171903d9fdd9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4a0bddce-fd78-4bb2-89df-f1d9888ddf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9b2a98-eaa2-4f49-8d46-ac548c071082",
        "cursor": {
          "ref": "15edb52a-14ff-4219-b573-60a106a9ce7a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d8de149b-0d80-421e-a543-6416320ab8b5"
        },
        "item": {
          "id": "fa9b2a98-eaa2-4f49-8d46-ac548c071082",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9f797d82-ff57-4759-bbe8-11cdb32daaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855cacc3-2b9f-4ace-bb05-86a85be45caf",
        "cursor": {
          "ref": "4199f805-fd51-4bb9-bcc8-9211195382f1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ae8fcd98-4b7e-485e-8270-6764f6051acb"
        },
        "item": {
          "id": "855cacc3-2b9f-4ace-bb05-86a85be45caf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7886be9f-ac81-409d-bf92-91e884ceea4a",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "ce246f85-ac64-481d-9d82-d18c1a527640",
        "cursor": {
          "ref": "707d8c66-e8bc-49ef-ba01-08fa6290d548",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7cbd4451-025b-4118-b4d1-0734a0f95a42"
        },
        "item": {
          "id": "ce246f85-ac64-481d-9d82-d18c1a527640",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "70f3b23c-3fd3-4c57-8770-ec29b57e98df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31224a03-43c8-436e-bbde-e580f0520a0e",
        "cursor": {
          "ref": "fa64ca18-f89d-45cc-a3b7-826c3120d910",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8e65ecc7-11ba-40b0-8a1c-3f761d26dc95"
        },
        "item": {
          "id": "31224a03-43c8-436e-bbde-e580f0520a0e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fb72a395-5f3a-4da0-b6e7-a9c4c9b96da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103659cb-9cfa-46b4-be70-3b06df705d98",
        "cursor": {
          "ref": "8b4e1431-a32f-4d71-aeea-b91c7fccad0b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "54b1fb7c-6540-4a28-be05-8b531d87df87"
        },
        "item": {
          "id": "103659cb-9cfa-46b4-be70-3b06df705d98",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a14a90f6-7159-48e2-85da-2364552cddda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13bd26c-7ce2-4dac-9883-e59d01c3ad66",
        "cursor": {
          "ref": "8dfb060e-f360-43cd-8cb7-ffe1e65316f8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b202ff48-bead-49b7-8992-f01ee1da4640"
        },
        "item": {
          "id": "a13bd26c-7ce2-4dac-9883-e59d01c3ad66",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "03d3dadc-9460-443d-844b-66db3dd76f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8436e2b3-6a5a-4d22-94c1-8f052c598838",
        "cursor": {
          "ref": "89e8f6cc-ec81-4d4b-a791-38cd01405eb0",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6eed0144-d062-42ff-ac11-1558e6eeac30"
        },
        "item": {
          "id": "8436e2b3-6a5a-4d22-94c1-8f052c598838",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1b15b2cf-0216-45c7-8072-994acc197c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc05340-c747-4cdb-9860-ce421ebcc376",
        "cursor": {
          "ref": "7ec16935-b899-4dea-8c66-c17a2581977f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "20e48f65-de6b-4e1c-9397-1a14afdbb3fa"
        },
        "item": {
          "id": "dfc05340-c747-4cdb-9860-ce421ebcc376",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3a69c13d-031b-455a-ab36-5891a7d9798b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5fbf5f-69f7-4e85-bc01-c1e2f8f37d65",
        "cursor": {
          "ref": "a8cd8b57-77ec-4c41-90b8-2a5a06eff2e4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c6e873d8-379e-4843-a107-b2d139ca1535"
        },
        "item": {
          "id": "ed5fbf5f-69f7-4e85-bc01-c1e2f8f37d65",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cbe54809-641e-42dc-b5f0-d4663ed88952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56d3b73-dd7e-4d36-9985-ec736b173115",
        "cursor": {
          "ref": "ea08d1dc-fc78-4814-afe8-01b6c65485b9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c056745f-21a4-4465-bed6-5ab7c821913c"
        },
        "item": {
          "id": "c56d3b73-dd7e-4d36-9985-ec736b173115",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d8d7fddb-3342-4a29-a8ab-f74c3a45448d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca22f47-d23b-4579-b293-a7993b9ea315",
        "cursor": {
          "ref": "98076ed2-2398-4d5d-9f69-de63a219d31d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0341c9b8-8de2-439a-8e88-aa2021ed5e2b"
        },
        "item": {
          "id": "5ca22f47-d23b-4579-b293-a7993b9ea315",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f83832e3-74a3-491b-9f24-eca699266100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f4249f-209d-4f72-9166-f693e156a654",
        "cursor": {
          "ref": "c98373f2-76f7-4fe3-904b-9192d021f547",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "287bfc43-8f03-440f-ae07-01807b0e66b2"
        },
        "item": {
          "id": "66f4249f-209d-4f72-9166-f693e156a654",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8a564ae2-3a82-4e7c-b279-1289080e7e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29f007e-5f46-47c3-ae51-4e3e81e8def5",
        "cursor": {
          "ref": "e7e96658-3c81-4df8-bea8-81ff01cc01e1",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "827bd9b1-08e1-42bb-9f36-ab6bf7ad7111"
        },
        "item": {
          "id": "a29f007e-5f46-47c3-ae51-4e3e81e8def5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "644e2e55-96d7-484f-9ac3-a2ef3c90af26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5bda7c-64b2-4d55-a722-e160ed291da8",
        "cursor": {
          "ref": "48437e9c-0fb3-418e-8038-e298360800a4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eb2f30d5-a7e8-4489-82e5-980b8c4e293f"
        },
        "item": {
          "id": "4e5bda7c-64b2-4d55-a722-e160ed291da8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4270e803-76fb-47a4-aa7f-92356157e1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4867e1-b85e-4d3a-92af-6cdecdde1c19",
        "cursor": {
          "ref": "725b1d30-5fdf-476d-9397-b37cb30f5d19",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8fa41053-7cb3-471a-8f81-2fba0bd6da01"
        },
        "item": {
          "id": "8d4867e1-b85e-4d3a-92af-6cdecdde1c19",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e86971c1-46f6-4066-9b6d-a643d7f1779d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9666a60a-672a-42b8-b84b-83ce2a82392c",
        "cursor": {
          "ref": "7f60d2df-8328-44de-86c6-1613efc345f2",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0729a3a4-d03c-4bb9-a2a4-cd71d7add700"
        },
        "item": {
          "id": "9666a60a-672a-42b8-b84b-83ce2a82392c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b2cbff40-db13-4af0-acf3-5bddc38530e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df20e1f-633c-4c55-8f8d-86dc2f2933dd",
        "cursor": {
          "ref": "1d94fdd8-d546-4a96-b113-cd3aeebe1774",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "93f7791f-12bb-4efb-ab8f-c344d76ce88b"
        },
        "item": {
          "id": "2df20e1f-633c-4c55-8f8d-86dc2f2933dd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ce2eef8e-e8d4-4040-813b-d9f845f564b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562a4d5b-62d3-4c00-867e-4fed85a2d874",
        "cursor": {
          "ref": "5d16a369-7e83-4ca9-9249-826aa81f438b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "16dd4b8e-7096-4f5d-90cc-257fec21179d"
        },
        "item": {
          "id": "562a4d5b-62d3-4c00-867e-4fed85a2d874",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0e7d65bb-08a0-42ee-b75c-94a1de069ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa594e20-e440-4df8-972d-18d27b04603a",
        "cursor": {
          "ref": "b7146680-3512-4a45-bb16-2c261653accd",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5813fb51-f67e-4c76-8ed1-c27b73d9f52f"
        },
        "item": {
          "id": "fa594e20-e440-4df8-972d-18d27b04603a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6f48c7f7-bdd2-4c5d-aa23-08c855e91aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e015760c-3147-45d0-a09b-b464da32fa33",
        "cursor": {
          "ref": "187d7534-e068-4fe4-b86a-66b32bdf3cd8",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "464bf121-af0e-4070-be61-d0dfb2a89487"
        },
        "item": {
          "id": "e015760c-3147-45d0-a09b-b464da32fa33",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "86580971-e4b1-441b-99bb-6e3939ecef78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1777990d-1f7b-49f7-9bfb-a314f74ecee1",
        "cursor": {
          "ref": "9fbe650c-d4c8-44ea-91da-9e6a9410f545",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bda4dc20-6fac-48af-99d9-a7064fd94a79"
        },
        "item": {
          "id": "1777990d-1f7b-49f7-9bfb-a314f74ecee1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ee509847-9796-4ba1-bbab-9d6556b1bd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e8f64b-85e1-40dc-8699-50f4bbaa6e49",
        "cursor": {
          "ref": "ea12fd5c-8110-4211-bafa-817c451e5676",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d409a245-6df2-4719-9aeb-b1cb4727333e"
        },
        "item": {
          "id": "92e8f64b-85e1-40dc-8699-50f4bbaa6e49",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f93e54a4-ad4c-4097-82d0-c90bef51df2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156858c7-2b40-4d49-9b0c-0beefb14d486",
        "cursor": {
          "ref": "8321cd46-5423-493f-9d64-345b029a5332",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "eebf2b6f-881f-4d4b-9d0b-ed26d7ecb449"
        },
        "item": {
          "id": "156858c7-2b40-4d49-9b0c-0beefb14d486",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "340fe641-952b-43ec-a9af-4d35be7da51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b4469a-fcf6-4b76-89e9-3458a941f959",
        "cursor": {
          "ref": "74cb87e0-fc99-4091-922c-615d486b1568",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5a96d6d1-ec41-4196-bee2-f519aa4f8c30"
        },
        "item": {
          "id": "a3b4469a-fcf6-4b76-89e9-3458a941f959",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c43464a6-ca91-4349-9efc-95f6fd1278c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2496ecba-0094-4ef3-a000-2f38a0d2a969",
        "cursor": {
          "ref": "3a37120a-9286-4fc9-bc52-a970f2ea5258",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d6e3b906-d7e4-486a-9925-942d4242d649"
        },
        "item": {
          "id": "2496ecba-0094-4ef3-a000-2f38a0d2a969",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7b165bfd-81db-4839-a87b-c58f50954c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da310937-5333-4ac7-aebf-4fbb5e3f5208",
        "cursor": {
          "ref": "b61f6b90-c271-40e4-9540-157c8fd771fb",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e3010d2f-8def-41b8-b323-888520459fdb"
        },
        "item": {
          "id": "da310937-5333-4ac7-aebf-4fbb5e3f5208",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5b686ffd-3410-4f51-8cec-7161e8b514a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b05d9e-fe80-4d6b-a8f8-cbd5894e9d14",
        "cursor": {
          "ref": "c85094d8-615d-4caa-a8a0-08b0b7667277",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "20b39872-1f33-460f-b3ac-8326000decfd"
        },
        "item": {
          "id": "88b05d9e-fe80-4d6b-a8f8-cbd5894e9d14",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6fab9eea-e616-4cc2-8a7e-75753b171443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d09931d-b1dc-45a1-a94f-b9fcdc843ff9",
        "cursor": {
          "ref": "098ce8a0-a4d6-4a3c-b7a6-1846662e0462",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "94e6b744-0542-46bf-825b-449bca28fbf1"
        },
        "item": {
          "id": "2d09931d-b1dc-45a1-a94f-b9fcdc843ff9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d1968bd1-2041-4928-a422-7333d2b45984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c18790-c5ad-4e03-b8da-6b64022d4b03",
        "cursor": {
          "ref": "de90b86f-28fd-4ffc-bab7-caa03d34eb9e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d4cab65d-7c13-4f24-a6dc-468f14d98939"
        },
        "item": {
          "id": "b0c18790-c5ad-4e03-b8da-6b64022d4b03",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "23ef0b25-2b90-4a6c-9c89-9ccfa5daa8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dd49ef-b386-43c4-9ab8-f39e750ca22e",
        "cursor": {
          "ref": "c9865069-4aa4-46ae-bab9-30ca18fee76a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "bd04d0ae-3e2c-4396-9e5f-3cb131bf033e"
        },
        "item": {
          "id": "80dd49ef-b386-43c4-9ab8-f39e750ca22e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "eebfef65-d587-4488-80e7-4b314b118faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51155b56-0167-4e2a-b817-cdba42297193",
        "cursor": {
          "ref": "4474fbbc-b0c7-42bd-a75e-e190ae4ec209",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "50bc21d3-e94c-4981-824b-c66bd780fe07"
        },
        "item": {
          "id": "51155b56-0167-4e2a-b817-cdba42297193",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9e00f223-42de-4f1f-987d-1ccda642d023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04dbdcc-fb0e-43ef-adc7-0dd80ecb6b06",
        "cursor": {
          "ref": "1fbb2ab9-2591-4f19-9e97-91bada6e20a8",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d4040cd9-3a1e-4ecd-ad5b-b4029b58ee42"
        },
        "item": {
          "id": "f04dbdcc-fb0e-43ef-adc7-0dd80ecb6b06",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5fa02690-b5d2-4c94-867d-9dc616d026c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e999b5-57d4-4aaa-ac07-1e944bd5b74f",
        "cursor": {
          "ref": "5d00ccf6-0726-4203-9528-073363a1b3e0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e37465d2-299f-43a0-aebf-4fba665b53a1"
        },
        "item": {
          "id": "f3e999b5-57d4-4aaa-ac07-1e944bd5b74f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5886695e-ba01-41fc-b38e-b8e43555a63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa3d147-ffbd-4631-8793-83bf5e1f0002",
        "cursor": {
          "ref": "6d33fd4e-67ed-473e-894a-2cf77eda507f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4244ddab-a28a-4d26-9a0d-7cb911928074"
        },
        "item": {
          "id": "2aa3d147-ffbd-4631-8793-83bf5e1f0002",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3e93d384-ca0a-4bf2-a63a-a57449400357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb6a189-1272-4d60-9de6-a5ac50d7cc38",
        "cursor": {
          "ref": "fc1beb74-b540-42d7-a1ed-06149723d86d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "02d15e58-2995-4363-acdc-9a26b3c29ca5"
        },
        "item": {
          "id": "0cb6a189-1272-4d60-9de6-a5ac50d7cc38",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "04f5d46b-0648-4af1-9583-0afc330b0080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c87dae-7b17-4f97-bc1a-21411f353bc5",
        "cursor": {
          "ref": "d3845ed9-0660-4f52-8874-1eb2e315a48e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "85c7704b-64a9-41d3-a5db-851f27df8d90"
        },
        "item": {
          "id": "09c87dae-7b17-4f97-bc1a-21411f353bc5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ed92ea1a-ddf9-4490-a4c0-36351a3c0090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7a77ec-5cfc-4c0c-8246-052874274948",
        "cursor": {
          "ref": "d02befa4-f181-4067-b20a-455c87ba7487",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "17042816-be30-4dbc-b413-415f4dcba620"
        },
        "item": {
          "id": "5e7a77ec-5cfc-4c0c-8246-052874274948",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d544a82a-ffdc-49e0-a3af-32f76c55d6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a248c51f-c403-4be0-b729-c166d0c2b8b5",
        "cursor": {
          "ref": "edde1f1f-e834-4051-907b-1381504075bc",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5de2982c-22c7-41f5-b07e-3b7fcc895b1b"
        },
        "item": {
          "id": "a248c51f-c403-4be0-b729-c166d0c2b8b5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "849892f7-3f9b-4f07-9eeb-a196a203e429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1723b9-30ad-499f-8891-f5eea4ff5c81",
        "cursor": {
          "ref": "b86c4db8-d829-4cb6-8b85-7937f844a387",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "cdf2ae2e-974c-42bd-b442-b56728bc5fac"
        },
        "item": {
          "id": "1a1723b9-30ad-499f-8891-f5eea4ff5c81",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1a1bb835-f6c5-4c87-8d58-9d0d5546bf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125739d1-17ba-4d27-9490-84c6ed3c2572",
        "cursor": {
          "ref": "66c3f8df-aa76-4e4e-9205-fcfff53d5898",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3f1ce454-f53a-413d-adbc-cb335b29dcfa"
        },
        "item": {
          "id": "125739d1-17ba-4d27-9490-84c6ed3c2572",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c4c345f0-07b2-4bb0-8ff2-9c440f5cc418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c2720a-779f-46eb-a441-1371e7eec51c",
        "cursor": {
          "ref": "51f5ad67-ceea-4cf3-a4da-379804f72eb4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3367ef4e-2af7-42dd-9396-0c94c7d83342"
        },
        "item": {
          "id": "76c2720a-779f-46eb-a441-1371e7eec51c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4ae4ad24-910e-4c8f-a5e0-cac4e4093e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5004cb4c-6095-4bf5-9ff7-72c9a55f3a7c",
        "cursor": {
          "ref": "31a9a058-41fc-477b-95d1-8fddfff96694",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d678046d-65be-43a5-8cf5-728a699fd07d"
        },
        "item": {
          "id": "5004cb4c-6095-4bf5-9ff7-72c9a55f3a7c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "99a3f0df-82b3-4ddc-a1c4-a4b28f6e3a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce6a599-3da9-4a7f-90ab-5552c4105174",
        "cursor": {
          "ref": "4c9aa2ee-d337-4d5f-9d0e-bd9fd2ebd7ad",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "63cf1bcf-46a3-4418-aefc-ab1ce677a585"
        },
        "item": {
          "id": "cce6a599-3da9-4a7f-90ab-5552c4105174",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c0f8e6f9-f015-4319-a3c6-afb7459b4d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73eb951a-dc3f-4b54-b558-2cdcded32c5d",
        "cursor": {
          "ref": "ce8ded11-39be-445b-9900-b1dbf4ea8d69",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1b6fefa5-c7cd-4e02-acc0-9fd8404cb877"
        },
        "item": {
          "id": "73eb951a-dc3f-4b54-b558-2cdcded32c5d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aa0aacc3-91fc-4514-b97b-231d93a5b798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bfa059-d7de-44bd-8af2-71108f7f1a74",
        "cursor": {
          "ref": "de637a79-ae5b-4be6-ac9b-d6aef3168b66",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8e027566-c894-458b-b03d-695da035eddf"
        },
        "item": {
          "id": "65bfa059-d7de-44bd-8af2-71108f7f1a74",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "57f2a9c8-0533-4696-a2cb-a135f525f90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf47f85-c7e7-4102-8890-d3f367e7b199",
        "cursor": {
          "ref": "15f198da-feaa-4268-b8ae-be9609491618",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2f33213c-f4c7-4d20-96ab-b0a415942bdd"
        },
        "item": {
          "id": "fbf47f85-c7e7-4102-8890-d3f367e7b199",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7fb774ed-5e43-41cd-89ea-5cc5c6e771f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a10b01-9318-464d-b063-4ebf6a33d87c",
        "cursor": {
          "ref": "cdd703fe-7efd-401d-96bb-9ff0baa961cd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "99887aa1-df17-475a-b7a0-ccc50e59f145"
        },
        "item": {
          "id": "99a10b01-9318-464d-b063-4ebf6a33d87c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "911da205-7f94-471b-8271-851e413ef57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61855c9-23d7-4f4b-8da4-cb62c47159c5",
        "cursor": {
          "ref": "000f45ff-c2f2-480a-a3aa-938b7edfbfb3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "74567197-1c5c-4028-9673-f63b24550cce"
        },
        "item": {
          "id": "a61855c9-23d7-4f4b-8da4-cb62c47159c5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4a6f1f59-07a2-43eb-b002-32c8de44b5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50f53b0-ba6a-4624-9b23-c4ddcd8b9dca",
        "cursor": {
          "ref": "a890b2ad-f30d-43de-a729-7079cbe92d95",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "00bb62e2-6fa3-40a7-aa40-eed73e355ea7"
        },
        "item": {
          "id": "f50f53b0-ba6a-4624-9b23-c4ddcd8b9dca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c3c6666c-e524-4317-8b7f-234f539c4f07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a79e0c-f06d-4578-910a-d6fd44cdbb1b",
        "cursor": {
          "ref": "0a7c1484-20e6-43e3-b6fd-455bc208035d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "85264063-c9a7-485b-9166-7a9540438653"
        },
        "item": {
          "id": "04a79e0c-f06d-4578-910a-d6fd44cdbb1b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "71fb4ae5-ecba-4fcf-a3fe-901ee3d03255",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff9d845-71e1-4b93-92d0-c597aa2e3975",
        "cursor": {
          "ref": "1a6fdf01-012e-4bf8-87aa-535e00888582",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4d7a352b-699f-4797-aa5a-680826dfbcc1"
        },
        "item": {
          "id": "4ff9d845-71e1-4b93-92d0-c597aa2e3975",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0361b137-3d97-4351-8873-74bbc7f6322a",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "949a4be4-752e-437d-b87f-a9f9d286b980",
        "cursor": {
          "ref": "17b9a5e0-1d12-4c2c-a4a0-5364b761d1d5",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8eb0098e-1823-4417-a434-01a444fcbdeb"
        },
        "item": {
          "id": "949a4be4-752e-437d-b87f-a9f9d286b980",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "12a40b97-9808-4297-80dd-5fc880800389",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ffefbd-6267-4142-b3ef-e750afa681a1",
        "cursor": {
          "ref": "9d0eb19e-a7cf-41aa-a6a2-b25086d31826",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b2abfc24-52df-45c0-9851-d105530a91a1"
        },
        "item": {
          "id": "65ffefbd-6267-4142-b3ef-e750afa681a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6abb863b-a8ef-4667-82c3-512c1c453d68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ffefbd-6267-4142-b3ef-e750afa681a1",
        "cursor": {
          "ref": "9d0eb19e-a7cf-41aa-a6a2-b25086d31826",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b2abfc24-52df-45c0-9851-d105530a91a1"
        },
        "item": {
          "id": "65ffefbd-6267-4142-b3ef-e750afa681a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6abb863b-a8ef-4667-82c3-512c1c453d68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b41ecbe-d97a-48d6-a528-300e96a53190",
        "cursor": {
          "ref": "05b925a4-7e8a-4ea5-96c8-d370b4b2342e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "845f73c1-f449-4327-ae28-6a570ea2f717"
        },
        "item": {
          "id": "0b41ecbe-d97a-48d6-a528-300e96a53190",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8de1506b-154e-410a-a943-b1b3f8078364",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27943a23-c844-49a0-954a-81e6b3d6cd69",
        "cursor": {
          "ref": "7a08e331-55d5-4f1d-836a-12a46cf9acb7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1c0053c5-b989-4bca-865f-344bbbc4e9d4"
        },
        "item": {
          "id": "27943a23-c844-49a0-954a-81e6b3d6cd69",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "17f9598c-22c9-4d7c-9f43-a919ffb3c129",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}