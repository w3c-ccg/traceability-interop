{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1beb8b89-5753-46e8-91cc-3acca9ede772",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3be8a501-dec4-45fd-843b-55ee4b966d57",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d97a39fe-b081-4247-8600-c52d06ab32d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "07189dc9-fb0b-43e3-8dcd-c1ea87b6bedc"
                }
              }
            ]
          },
          {
            "id": "bfd17ef2-2d3a-438f-a6d7-26f806adb45b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6885addd-b983-4379-a8cc-19b66db92a5f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "029a625a-6bcc-46b1-bb21-d09ca03f0b88"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f17e6f16-3f5b-494d-a775-341a05b611cb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a0929efd-2097-4260-9598-c88bacda1f68",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a25b03f-45c9-4406-8678-0c17e6720326",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff62731f-8565-498a-9fd6-9d684b5aec4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "087ef752-7fc0-4269-ba13-8a3410e746cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7195fa2-367d-41e6-aa86-c7815bb93600",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2dffcc0-1826-4494-996d-3a5b57274fe1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d562abed-e04c-497b-bfa9-432f63b8f228",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14d1d2b1-f10a-4dd8-94c6-a950222e1e9d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95055ed1-ae39-4041-86dc-c9a2ff18cc63",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "884f38f4-703c-4114-ac20-d0f4b4dbdec9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4084aee1-2aec-41ec-9683-005ea9ae0ab8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecea5a38-ded9-4416-b7e5-898dfbd82793"
            }
          }
        ]
      },
      {
        "id": "3708c280-7991-4711-b17c-6e9e600c0ce3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "836960a0-8f56-4a40-9663-fd05bc3bfe5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1f48e59-e6f7-4422-b5fc-d95f143cbd08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f9b3dd0a-7d0a-4123-b32f-d80c8fb90edc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde2f631-35cc-46ae-9e4b-cccf54d602b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56f1177d-58b1-4af1-a8f0-a5ff9679a225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178800ad-ed54-427f-8a72-90fcbef45c46",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684f1da0-9c61-429e-816b-261f4c9a22bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61f70a38-c4d8-4f52-a126-0173fcc0a6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc938b4-3c9c-4bb1-9d34-0e81986b5e0d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53746977-c13d-498a-b292-d47f991b95b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddd1aecc-1fbb-4321-8439-7030143a6c7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "288eb931-d95d-4404-98d3-39074bf9e6b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "660281c4-5fec-4bf0-bc59-93b2d1f26f82",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e68396-1f7a-4015-84b3-872f3c571156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "927f3b1b-a7ae-42bb-a9ba-a5e4ea0312f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac40a19-1b52-41fa-9ca7-98dbff168ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c278e4-ed00-4994-b754-c797a6582969"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "21e287df-1072-401a-8bec-642a8187d9c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1808b5a7-2c21-4019-85f9-1cd70748a5df",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "477d6131-e16e-492a-b261-aa4960c81a6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "abbebee3-036b-4d44-9e82-1b70afc88b7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d1e8c2c-e21f-405c-a84e-81b14d9cba27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8c5d5a89-73b5-4521-96c7-9b0b3dd4ecc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7922c5b-7d86-400b-bbd4-0730d7c451d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b38eb24-29f2-45d7-90fe-0a3e7aa224e0"
            }
          }
        ]
      },
      {
        "id": "799739ff-c3ff-4360-b6e9-36075631ce9a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "827325fd-eb7e-45ce-9ad0-9e2dd59cc8d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a867f668-0f99-4277-b984-bbfe348b1780",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "421efd6c-40f7-4c0b-b102-2cd123dc046f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a227c5-0607-401a-abbe-eb39039404ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83114e15-8edd-402e-8a02-cb417ebaba81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc47449-f756-4e9e-a9ba-0e0d2e4c30f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c115f7f2-554d-475e-954c-368f10355ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6534c3e7-397e-4ee1-8e9b-b9f1fb1aa808",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84be8b09-6ef4-49ac-8039-b14fe0c8f272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8507d75d-0b18-4225-adc4-f339d85248fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7059142d-b823-4a3a-930f-d23786d43a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "730b2380-3503-4727-839e-6011e1d2e894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5da3b3-819e-4c8b-88a5-852f22f0a832",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eae2cb-ce9a-434e-ac28-c65e7b53a8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51c42b3-f1a5-43a7-aedf-3053f1f8673e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6f737b-1e78-4425-9868-6cc08149489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f79d0d8-f672-4494-91c7-3e631482c513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b48295-49c5-4a96-aeb5-5ae31b3e2250",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792e84bc-54a1-4704-b43d-f5b8541cc321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fd1842-b64f-4787-a135-c60d932f8d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb91a5a-209b-4e45-875f-07e2d517d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb645103-ae80-45d6-ae90-4ac5a157e523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176c3713-ca1d-4f05-a07f-b2d443c429be",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f57513-61e9-4e4b-98b0-5448199e0e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2bee2a-fa9a-451d-916e-6d7240ad99e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f3aa5e-9a02-41dd-9e51-190430475638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "420e4522-d7cd-4291-b152-c32edef5c8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbda4e74-e7ec-4bc4-af28-2c15f844545e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627f3c46-39ef-42f4-82f9-45d88a5046f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f1933c-ab53-440f-bc6c-cbb304a187c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e4f46c-b499-4956-8d0f-cb4e3cd39704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ff0b02f-4095-4a8d-b029-473fa2a80c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a425bd50-da16-4379-b17d-34622ba9c112",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84db6955-c12d-495a-9fb2-955769c26f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd88e54e-fa40-45cd-9682-64f85ced1f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c92dbc-8d14-4bd0-94da-807f981e16cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34e94d44-91f3-4f8e-84c7-e2e6dd134379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bfdb35-c0e9-4ab7-abee-909ab6eec5d9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecd7e5f-3f0e-4f3d-9129-7a2c7e315bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904b37d3-39e1-4ad2-8d80-0b3a89004d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcd5757-49ad-4bc5-85eb-ae560b2f07a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0eeda97e-de72-4b87-89a3-f89f2f3ef42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f976326-09c7-4f42-bdb8-70715d0662f0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07390836-6376-4c86-b4a5-0ea4d0601a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a4eee4-5924-4c85-a5a1-05321a19c49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73be9bd-bf6c-437b-87ce-ef7692e40f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4156960-f841-4506-8ba3-3699c4e82676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcee5033-efe8-4fe0-9616-86858580b008",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71257cd-ce3c-4d0c-ae22-b19d8cb00f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72db3bb3-e840-4845-a610-03777d7d0f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95f4f5d-7872-4535-92fc-24319e0c31da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d51cb2a0-9576-46a9-b9f1-9d77d7369c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907ecd0b-6148-46fc-b5ef-e3f8f75d46c9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55891b14-1817-4c03-a60e-395c5ad02904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066903f4-63c6-463e-af2c-9719d4c6a96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40613531-b922-42ac-b027-886ec4a7e1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d6d648f-a8bc-4e43-9392-c0ff6cab1e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfcc392-81dd-40dd-b38d-508956113e07",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd59918-5f56-4390-8e1f-e90eb2450552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88b31bc-03d5-4f2c-9cfc-6f15eb19f139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85fd3c7-56a9-4d04-8fbb-73f98747ce8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10fd8cc4-0519-411a-a93f-f946e352595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905ee01d-5399-462f-85c6-b4c963331c9c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f929d7c3-bbb5-41f1-a689-a5bec425f48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b35ee28-7b61-4c92-9ced-187e3320097a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f731a96-1552-4546-9bb6-82bf2c42ccd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de4442fd-48e6-472b-b62b-4788b5cac7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7d20e5-d4a3-48dc-8172-8df3fd9226d5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227d3a8f-ed58-4e57-9747-43a3cae4f397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddffa1f-2aa2-4aa7-8443-5b41334136bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56cd5e2-f1b1-4ac1-bca8-65537a5460f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4d82869-88e1-4663-8e35-15377e1c1703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f08686-9c0d-44de-9517-c436172f8f18",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67d224c-c95a-4f1e-b6b2-b5988b4644de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44755853-0657-4825-901e-24d2801b64cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0047e660-88d7-418b-a3f9-c9198d373fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8daef73-f6a3-4317-9cde-2a8412252aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f40786-4b3e-4399-a738-a3734fdf99fc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132e7197-67a5-4beb-b527-c760881e774e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f791a2-dfa2-491d-a047-c32ac61a1aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cab31d8-ea49-4448-9a4c-872a7ffbe296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31099580-5648-42b2-9f76-04c5240b9ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48cd99c-e192-4554-b233-0dabb9aa79fa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8f5da3-5ebb-4680-a581-50bdbe7775b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95edaf4-fc53-44f3-8c50-03f410d725c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86aae2a7-69d6-4d92-962b-9f6ea744bc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af43801c-5935-4c43-8fac-3216d994cfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbabc1f-e624-4e1e-ba4a-ba694f319c27",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2937378e-f454-432b-a3f6-372996bb3ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437fecc2-f111-4ba4-b188-30a9ee508807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c37752a-5496-4562-8fc5-5da2fb88b78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c49e32-cfdc-40d6-8d4e-9b9d2629fc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1aab4d-7247-4c70-bba1-0741ea303bb2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99630489-92e0-45ad-9a03-b4007888d7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865d8208-cd2c-4fb0-a042-eb6f57e2bfcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a54c80-f301-4fc7-8109-8cee49744771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb3d106-c81b-46cc-9559-70f973d898ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfe6d97-68cc-4de4-accf-540e875bf0d9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdad720-1f75-4fd2-a232-ccb3680a01b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b986e98-5fba-47cc-9250-56a3e7f78460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2915655-4c4c-4966-a9ed-783ccf1caa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0d1d28-abd6-48a9-b13e-93a452403c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0b4ca1-1c7b-43d3-80f9-b1932fe0e98b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1e4fa0-4d24-4273-bc4e-9733e22974e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91c67b9-a4b0-44af-960d-82a214afe957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5045d164-ae16-4af5-8128-3c42ffeec5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f333aa6-2ea9-4637-83cf-af87fe49f07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c86187-5f03-40a6-b680-e72bdc3139b2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74e6115-2f04-4ba4-9631-8618e9af44d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7f674a-4e34-4411-b487-8ebf3ee4d58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b531215-9c76-427e-a9c2-7f2327565873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf7f3c7-cfb1-4129-b95f-8aa319a02527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329a452d-612d-472f-a585-1fc6273ef15b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930d50d9-be50-42bb-81c8-2df99830a384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d430dfb4-1a8f-4af5-9c99-2102b8c5cc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fab817-56f8-4f93-9eeb-88debe2ab903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92d51899-7132-47cc-97cd-710570ff3edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2238c0ef-ec04-4843-9aa3-02d1cf19cefc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca947894-af48-4d0a-bc03-2c9a8a669b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd81615-c664-4083-84c9-989e63d47988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9995fec-d063-4375-aedd-bf2f900880ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "02d208b0-ef4c-4daa-84d8-8b93ebdbf8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fb1a74-887a-4c46-920b-d1cf8316e49c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4befc75-fa76-4aca-9894-58661feaeaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e073b1ac-f474-465f-8a46-4cd80a20cf71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa9276f-188b-4653-9336-27127a24a8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8613595c-caa6-444d-923f-b0a6a1913d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45be656f-0f81-4ec2-89fa-56b7efb31e84",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdad9f08-bec7-431d-833a-c70445d16199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c58c33-e0ed-421d-a691-f0410b9c39d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd52aa89-7985-482b-9527-ed3b361e1ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40878bd-eb5c-4906-8a54-1a4fd0c8942e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f108b20-1b06-4cd7-8431-79f285765bcf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bd1c00-61c4-44b9-82ce-75e8f8ab518a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf5cb6f-bac9-4360-bf05-8509d34b0fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50531d55-db24-4cde-9383-d7d7a43cd36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02588545-d0f5-4c96-a02b-4cda2283406b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67b30ca-d4e3-4727-9f84-0d8f679295e7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7cd261-8742-4930-8cf1-ddc3d2bf02b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bfd62c-a644-45db-8007-9f17b3d90c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a61e4c-f10d-492c-ac5e-49a8e084487d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1838136-a690-4be1-b4c2-6af7ab7e0aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c048470d-7666-4713-a9ce-f6f3b11e4d6f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b725cd7-84dd-4fbc-b0cf-495fb6dc6a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbf9ecb-3d48-4f95-a70f-94c9ac5fc773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014e188d-72c1-44a7-8fc4-35dcef21691a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b035084-99a1-4078-ae8e-0d5b11cd08d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a9e5cc-d8d4-4132-b95d-184d42150921",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392ab4c9-5917-40ca-96d4-da1bc6803708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b2c7c5-2dc7-4ee2-8112-47037d30db4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0ee096-9b6e-4f25-9106-cba3a98f040c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8718ba03-d674-44d5-9f0b-020778e47a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d9d92c-79c3-42a6-bc15-82ab1839d7ee",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f742b7b2-641d-4b9d-b77a-18cc416c81c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf36cad0-1c7f-4623-95ac-b476b0226b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7d52fc-84db-4cd1-9590-16c0980baa56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "916ad7e4-c43e-4bf3-94ef-e2ddf4fa9464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87a06de-0fcd-4a34-8f72-b53c722bf5b7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc1d111-c642-46c8-af34-7d4e60226d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44066847-ae4a-4231-8bc1-2b93cdd56d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccfabf9-a0c6-4119-b802-47a8f9bea12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b92240-f652-46ab-81df-67f0ba4e3dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a978b319-8411-4183-ac02-082c75678d21",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab825f0-6a35-4248-ba95-c316c72c217f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf586b1-c066-49e8-a7b6-151ec5179a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b68a1a4-a586-44d9-bd79-d82dba97ccf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1c7e64-979a-49e9-b348-8b778150127c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b187fb-6e21-47fa-923d-62df6f140a16",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd99a511-3810-428d-a978-ac5a6fe03ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb61e59-1b61-4d98-bcc9-e7b9e3110c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7167002a-bb45-4708-b234-d808dc620af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "300d2abe-e9d2-4753-be0b-2e113a97baa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e4802f-3cee-4085-a728-61f73c8130b2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d0d605-fed5-453e-a550-70a1b00f4a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86959eba-044c-4700-87a2-436befd9b73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25200df-bcf2-41b4-99a0-b5411269315b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "05bb9e92-bc97-42b0-a090-05aac8c8b59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3dd857-f780-4dfc-8e99-a82b3bda30dd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fcd532-23fd-42e8-9297-2662ad644a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dc7f18b-d6b2-43b8-a87b-3b672484f156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8994093e-8749-4830-83e6-06eee77b7893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8268ba-6d14-4d62-a435-19e9a90109cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5764cc0-42ed-490a-8e84-dce39f5045ad",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db278981-2340-44a3-a6ba-4ee711329faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef30135-37d0-4a0d-82b8-7daf81e79bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768fcf8a-ae24-4755-8c4d-dbe9c77a0981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6500d5d2-b226-4dff-9b5b-ae871bc13dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949d029a-b14c-4d96-ab08-4786f80a9431",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c5f78b-7d66-43de-a2bb-9ec4498c5502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b7f5cb-e348-4858-9f98-d2d91a22d562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51aeba23-3495-4237-8567-6adc56cf3d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d73e368-1e6b-4c28-9ba2-d4e1e451a355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9504f69c-7b80-45f3-8e8a-007c6b0bfc43",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7927820f-aa64-4c10-8aab-6b5aa60a7982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a1b320-c8f0-46bc-8943-e5a381ba41b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b161009-e0a3-4b6f-855b-17c99e3759e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7117d6-6be8-40ef-b308-5386ddee3b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddf82ac-b217-4fc2-aaff-1d2c2ecb9b5b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030f44d5-97aa-438a-9759-45caaa907ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32803f5-f77a-4609-9a24-557dc3178b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07ba4b1-c48a-433a-b539-527d7727dd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbd72b7-6b36-4951-993d-7b52f32d6de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683bd1c7-8a8c-4e78-809f-1ba97ddbfd6a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefdccaa-e6c5-41a5-9507-857839868ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722f581b-ae36-470e-9af3-520c70765fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfac8c1-b5c9-48fc-bf5f-aede8f41ac7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b74d3dbc-2194-44b8-90de-4235f7b0bdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a76537-aed8-4576-887e-81e87f0b8412",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e60aea-1dc0-4f25-af7c-ad165d746424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60690a4-6bfb-4094-9ecb-831dcbc2a88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31c7281-5f18-4be0-ac6c-150ccfb17d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1c81be4d-89dd-4989-a7fe-103dc2552a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78e1828-60c0-4a20-9fbc-fad9c69fa782",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed53ad-d2a3-47d4-a649-046761f8c52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9590e961-620b-4731-9910-e4af3bc33887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d105216b-9480-4e8d-8872-b9f426bd8774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "af10913c-6ac9-4d70-a32a-eae77cacfe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36185bd-79d7-4755-afb1-e504994a4951",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390107a2-589a-4910-8714-e34d952b64b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3125db-8a66-4b30-8902-0fd248dbe4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cbcc84-952e-471f-bdf6-3892f397a8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b64a49a6-4506-4987-9a7b-186ce296729f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d17dec4-bdb5-4ab5-9cf4-059148b65bb5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd4c39c-1b8d-45e2-bcbf-2c981c7b398c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62df41a-3990-412a-9093-94a8a2037b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbd8a28-5b11-471a-830a-9b6b2403560a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c194f3de-9f81-40f8-8697-e6e7f0778bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8e1565-28ba-4abb-9362-9bb1943331b5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772b1646-8de0-4b12-bd33-fafa92aa4904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446d3651-98e2-4f89-8bc1-7694cb6947d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a8e879-9179-4622-99be-7413e4a54261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9049de34-44b7-4bf5-81bc-836d55b10b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f593f9ac-c601-4b4f-9d85-20c192111dab",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1474d970-47d5-4186-bad8-a0f1b7a09c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d48b50-af9d-47c1-8b5b-b833b1101256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a15db8-2ba6-4eac-b535-3d65ef848613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9268d322-9001-4719-97b6-220bf6224665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301da9dd-f1ba-45d8-b330-f04e0899cdc4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7091f53c-a31e-441a-a9d6-35c2dc61db9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b37f09-372d-4457-b7f5-0827afd0b9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815573ca-69ab-4e4c-a769-6cbb6e3a31a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "691de913-8501-4d02-8756-30e95e313e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f814319c-8375-48a2-a964-f2a4f7bffe73",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b1e7ad-a7e8-4abc-bf7b-b5232f145edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1faeb31e-ad2b-4120-a0b5-cffeb46f0762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5130e5ed-b699-48a3-b11c-08b8c17a5bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "054a6fb9-7b7a-4ebc-9dc0-98ed4ac42a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cad2d16-df36-4d52-8e31-0b5a7a05ef3c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4520a6d0-ce49-42c3-9eb0-85f96d37f4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98be0cba-90ef-46c3-b6f6-cda357348467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c2ea7e-d2fd-4623-a3c1-93cb3890c537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc6c7f3-e109-46bf-b4a7-87f0ef197122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7f28c1-56af-4066-b5ab-ea2897625af4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fd4013-1754-45f1-a90e-00104221563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d069cc5d-a69c-4fbd-aa02-f67264454b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e02cb5-9f03-4c81-b16b-4221450055b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab72f89-c5f1-4511-9226-1ce07b945b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f4a7ed-a2ce-4b23-945c-a2402c3c22d0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b16b45-5dfd-4167-ace0-8e5b18ecbe30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06d7a7f-d316-4eed-8dfa-83e75ec344e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2befdb9d-77d6-4aee-aa9c-8ab62393bc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62278ba7-90e5-4f66-9779-0e9d6a6c1028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23890358-d972-4eb1-b222-fd9c7baabf0b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0e8ba3-45d7-4e71-ac65-a77d7826a94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba649112-de23-46a3-859f-6148ea414292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170f3382-1146-40df-a485-cffda531b3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6090eb02-9027-4400-918b-952621e40232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e835a40b-723d-48ac-8400-b5f32c1dc5c2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1b00d9-3349-47e5-a1d0-e21d453f5d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3609281-3546-4a9a-b672-198d322f21f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb7efc3-7830-429e-a554-b465a9e95c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7844f7c5-571e-433d-bc2a-f4d405a6a720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d926a7-78c2-4168-a17d-d42da7081a28",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5b8aac-8099-4911-bafc-ae790de4216e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c1b636-319d-438b-acf3-ee9a026e9f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafbcf91-bd3e-4140-b3e1-88ad6d581d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f220c86-8a3b-4732-95c2-e037cc5b024e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71982034-595a-4fba-932c-8bcec6613dd7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af366f2c-aab7-48d6-8392-4308f7cdbc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a9038e-8380-45d0-8a5c-0916a40a96eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5393362-d47d-4ee3-87fc-847c913a252a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3c24f5ec-0a12-4d14-b8cf-8b66d797fb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8de8f9-6a1f-4214-bcf4-297b15145148",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77d5866-b88d-4a4e-9323-6a86748a90ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba69a1dc-59dd-44b8-b5ea-39985ffdabfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6617b9-cbbd-4e1f-b0f8-296d5003e8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cc99f1-5feb-4823-b514-1243ce031079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ca9aa3-3c7a-40f3-840a-489347de39d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b2ddd1-ad4b-430c-a901-861d6427fca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4ce736-cc09-4d9f-a44e-e2e0190ee28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164ef17f-de8b-4913-a91b-d2192d1c06df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c69aa5-f884-4a26-a25a-e4e921ab884f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f49043-1fa7-4d99-bc73-297bb6b93ccf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aa77ff-7aa8-42b5-b3d8-49d73f1c7f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbef056-6cc7-4996-86a9-9722635e88f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c6fc41-7f9e-422f-a7a8-54f882898fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5040bd8-c848-4e27-9a35-49530d645725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43af11c3-3836-474e-954c-544d073b550d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7bb83f-bbf6-4382-8e10-13ac001048a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96264ed4-901b-418a-95cd-f150b5b6ca77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebce1b1-3e27-4d1e-958f-69df923d229d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c85aa98-28b6-4900-a022-c7d01a0bf434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2bbeca-c302-4ae9-93da-751d79bdfa00",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5727723c-767b-4214-985b-1fa0bb8151c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b855bd8-21f0-4385-8d06-bb7d1a0109b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def2c6c0-a682-468e-afa8-5ccc80053904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5b5cda-92d3-4708-8bc5-fbe19f41c2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0a6644-be60-4373-8d2a-f3595fa4a014",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c30bb1-3ded-459d-b59c-4ea6ab6d7324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6835abf4-0593-4be1-8c1c-e1cebb6f7aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006dac22-8405-41c6-8a0b-bf783eb4ead6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6ecad8-4a4e-4b29-93a9-fb3863b2675c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e52f274-414b-48f8-9c32-bb05ec3eac8e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966179bf-0e75-49b0-9a96-9773bec15afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5398a00-d578-4bdb-92f5-d6c8a0629d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184425ef-6118-4c11-8ae7-9df2cca08e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb76dac-b376-4e36-898d-a08a273b4823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ee432f-7c2f-4127-9492-4c13262bcdb0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2af21ca-895b-451c-a1d8-0b834834c62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6f96f0-df9b-4e9c-be8c-ee2f21b2d840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cfe83d-c193-4581-bb2a-aa3f5c6793a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "deb355f3-c513-48f7-804e-213993ecb8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b73edc-f940-4248-98cf-7cd087d05d18",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ae3309-043e-45ff-9a89-30bfa46864af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108d78e0-5e1d-431a-9f2c-fcdf606277c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cb276c-8a4c-45b2-b64d-86f843499d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a85d5be-9bd1-476c-aa33-51e81086361f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f69c78-5dd6-40ad-a871-d0189f44a95a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6c4276-3003-4680-8a1f-a2a8f12561bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92606ecd-cde9-40de-909e-44f90eeb0fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db75125-4d26-4e94-a441-3037a6419b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6d590c-8cbb-435d-ae4c-cf638e466d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c78c20-d055-49ab-8271-14cf62540903",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9396fb-1e25-459a-a5bd-de6e42d15990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6c171d-2ddc-4561-a3b4-26add60d1f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebafc42-74ef-4298-90b9-1e557dbcfb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b710cb-b8e1-4ac7-928d-ad14ee428247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babc7c6f-1b0f-4fe3-af35-557ca29840a1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a38beda-9bd5-446c-afdd-92214bd20543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac721af-e4fb-4d0e-9702-390d38960f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17878302-f277-40a8-8016-939254679490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c26829-aba5-4d4c-8fd1-3c3c3d77f002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be7860c-ea06-471a-8033-06619290bab6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3217349-0d69-493e-bd45-aad7667a14ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39913a93-dc48-41b4-a541-c5fb917d7800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720142ca-28b0-4549-a61a-32b25d85a45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f30631-ae70-41d2-9014-35ea0aef858f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b1e6fd-5c71-47c3-b273-a4089f4c686f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29baf265-7348-4cd0-b0b3-277e7cdee9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a55830-b896-47a0-b07a-fc7383645dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0223732a-c79e-47ac-8cd4-f9c0d6fa414c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f1567d-dcff-4805-b90e-2eded6a6a2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d874a2f3-28b7-4c06-bd24-b749b2c5fd10",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7946ad-90cb-4f93-b31d-91d49144779c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8722e3cd-fe41-4b17-ab08-6cf2aa20998b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcf6ce1-e6d6-4064-ad47-e780a60eb231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03eeeb19-b8cb-4a95-946e-a59719255e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3a1f33-5629-48d8-9507-2cc9e216739b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e23720-1b96-42ae-9276-9d5100beff22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4a1af4-36db-4ad5-8464-d5daab3fdd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b97f95-727e-4eac-8037-7e21dfe15409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17c12e25-7104-47bf-aeec-42b31123e675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126c98e4-78e8-4295-9f03-60aeb3ae0ee5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ec0cc2-3fad-4dab-8dcf-7cdfd83a8585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c235f4-3232-45b5-a1ed-5f87ef5d2737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bd1553-6cf4-4980-9c59-7decb12fa6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f37add6-5004-4ce8-b1d6-3e7252fad013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3a7b67-b204-4080-b69d-9992d5f496d3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c97b70-9631-4921-9f93-cf5ffe997dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37b1784-7d6f-491e-808e-3feb78e2827c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3e6dab-86a0-40cf-8cdd-918483c81707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2178d9d2-9462-4c1f-8d00-a29c8081e9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eceda8aa-3360-41ea-9889-ce83f7512f25",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9598c0-791e-4f34-b1df-7db0466105ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a8e766-db71-4af2-afdf-2a192ef57bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163ac394-a06b-4254-9724-5345387bb810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "739323f1-aabf-4f60-bc55-8de6b0f43091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09086777-8dc0-4910-913a-bf4d1a2dca5f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43685827-3015-4598-a5da-7a617bfd2c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b114016d-261f-4da7-86d8-0be3d831228e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d062675-1532-494c-98f2-d6e6f359cc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4dc315d-1cfa-477e-8dda-44420a8bc3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf5c91f-9ad4-4884-8e08-6962bcd462eb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628a5f9e-82ce-4b1f-a544-43896291d79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fa4dd8-bccd-4ec1-9d23-ea48505d8756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0d91e5-a13b-4bd8-abad-afa03bfa987c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8fd39f-de8c-417b-a8a6-5120b3efb330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21c6b15-23ff-46ff-9fe7-69b4f4454063",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116c960c-f4ec-47ce-bb8c-1e1aeba911c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ed3b03-5b08-4dbf-bf35-72abec6bec26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8951a0-faf5-48d9-9c3b-ed259c167123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbea7fa-1fd2-4c7c-be14-53093ad118ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7c5e20-5e72-40b2-9f9a-3a0844edefbe",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd281349-e993-4e45-9d41-c1b7f171a9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9adb51a-c83c-49fe-9d1a-d18eac952346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154b3967-6621-4634-811f-8a2db2b64a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cfcf03-18c5-44d7-b0ed-83ce2227624e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ba3148-7bee-4f86-bbbd-ea9e7829e490",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cebb248-9be5-4e90-83f0-fb9b7a2dd717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d02a37-531d-42ad-b001-70a59d0369d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83007954-1fb6-4725-a336-7a5b5244aac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43db9b0a-777b-4352-8010-3d886ebe92bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa1d646-f1cf-4f76-9db8-0dfb61f20499",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6e247e-9241-41ff-a64b-18c55c504a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f74e41-8469-4e98-94d1-4f28726b7f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8c35e2-24a5-4e4e-9445-40d870e88b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de95675-556b-441e-a15d-a8e9429d43a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ead14d-a3e6-472d-af9e-48597c12bdaa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b843c23-72f9-4286-b19b-eeb1c09a932f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69eb179-8b65-4b1e-9ea7-f39b82f777e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a44598-1714-4f14-ac5a-55ef7333a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97880c3e-7612-426b-9119-2a8350fae6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df615119-1359-42e7-a0b0-147f97fc2e70",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b47089-165d-4934-b4d8-7fea4cbbb670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79a0e23-4da0-4ac4-82d5-e46f275caa80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12daa61-0e53-44fb-bcba-c942a4333a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d916e41-751a-4922-af6d-e2bd3447ae79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac5dbe9-84a0-42fa-a185-f99f493b6e5c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36255b54-24ed-4a6c-a165-9e44bacb0822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600e7b6a-f095-42d7-9721-61eb336917d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176ca1de-6ba4-4370-8381-046182c810cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c53e03e4-0e2b-4f64-9652-d232d9c0ddbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566745a9-0f7a-47dd-a9a2-6e57b3118529",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc228116-be07-4bee-936c-ca0259ea8a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fdd3c7-5f52-47a8-abe3-fea56f82c6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae229b14-e5cb-4e1c-82c0-44b87f1e6403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7e5538-cbc7-4f1b-a609-f7e639276d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f21007b-15df-43d6-864f-3c9bd32ee365",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4616e1f4-571e-44bb-ad42-e99d8921b076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e7f7db-9ff7-4019-9d8a-d598a6ddb087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d1499e-e4df-44f4-9f66-6223e1a777ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54444b22-7231-4563-9d3c-48dc0f32cb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4191e6c1-8ab6-4c6c-bc97-411e363de874",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9623722c-e203-4a2b-a7ea-959123a0613b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44c6d69-97d0-4433-9e63-c11efa30cac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feea02a2-a8d4-4f43-b530-ce46a5323e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb56e199-4a77-46c4-9481-0c47cdcccb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717207a0-4ef7-4659-b44c-806abe963ec5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa1615e-b1b6-4e53-b425-68c4fb84fab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a84caa-b522-44bf-85b5-40004a4011c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e5108f-91dd-4853-8f8c-a7b9ca8a2192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5576bc-d101-42cf-98d6-4798608bdf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5968102-dda7-4b1b-93e6-cfe301fa729b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a82cdf-8176-46e9-a9d3-e95f3029e76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07184f2c-171b-44be-81af-10e16274e565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73144d93-e3ad-412d-9b20-2e64e070e9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "14d262c5-ac3c-4cc0-9492-5465dc026e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679bcea0-0457-4239-aa07-40bf95073168",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ba1ad2-da7e-43db-b8e7-e337dec30553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666c4df2-8762-463a-b812-6d8a34739a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce76b41c-146d-455f-9243-4965c7fe6c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3a2501-27aa-47b3-b11f-ee7c52c87782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9519823c-87d8-49dc-9af4-93e26b9bbf4e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d436f21d-7f00-4528-ae8b-dadec6d498fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8ea405-5475-4f31-bea0-bcd969b03b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b26458f-aaf7-44cd-918f-e49799c29697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a03dfefb-1090-493b-8c2f-54bc648f490e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c347e6-15a1-437b-9210-951277fb36a1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d30d2d-a7b9-442d-a241-ab99c9c9ce81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "12782e6c-947f-442a-a04d-093278add703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784d4047-838b-4343-b70c-ba88195896a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6167d97-40d0-4986-99d4-47278243f7d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d51591d8-60c1-434e-b77d-05b4406b0a24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e232125-765a-4d0a-af4f-a87b4906242b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2b5b3d-418d-435d-bbd4-7cc60e90a14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff4d35a6-71a5-42bb-a2e9-c00c1b7bcdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d5ce4e-a994-4f4c-b7b8-966c980fc634",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5be1a26-f295-4adf-adf3-ef8c0ecf784a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17582194-b8e8-4bca-8627-072c17e28d51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "261d0929-6870-4b00-b60b-2592919bd4ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e35d0b34-7053-47c4-8820-7198eb3b7429",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7f1a7dc-d82c-4c9d-831f-85c9a1ed3347"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "782cf566-3e21-4719-a1b9-19800372770d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2dc2d575-f5d8-4f3b-a7e4-d428e792aeb2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d08e9cc7-39d8-4bbf-a62c-4c280f4337a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d07cd2b-e670-42cd-a4da-6bd88962850d"
                }
              }
            ]
          },
          {
            "id": "71c74bd5-f5d5-47f6-90f2-4d5f03702448",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7da398fa-95a7-4764-8b61-d5dd08909a84",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54ac846b-27b7-4613-ac95-ddcd179a6f92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af1bc275-5b81-4a0f-9b38-0c3945251ca9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7169322-df33-4d38-97f1-332976a6c19e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd695e5a-56c3-4ed3-b43c-438528889a2c"
                    }
                  }
                ]
              },
              {
                "id": "3e588838-82d4-44ec-b015-25cbbe2c3c2b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e4f40b1-5d8d-471b-a907-87f6291ef733",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7378f33-5172-459e-8566-e01fc39fe70d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20665edf-414b-43a1-8923-a52872bb8790",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb3fd031-6804-434a-b54d-d942518ed959"
                    }
                  }
                ]
              },
              {
                "id": "75331095-84eb-48e1-954a-8012cea874a3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7b0e89b-7063-4e85-adfb-e5cd78b3d2c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbe624ac-cfaf-425f-a06a-6b28611d918a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f1da6bf-6451-4aa0-a128-ef635bb1142e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7a1df54-8941-4040-b2c1-55aedc9b2fd7"
                    }
                  }
                ]
              },
              {
                "id": "7254e044-fc06-41ff-a303-5dd76ee0373a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3b189e2-59d2-47c9-8c2c-b87ad1833e8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b37a10b3-5c97-4819-91bb-1eafeb1a19be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d44b243d-45c8-442d-b780-93dcbc6e8871",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8730b083-5a3e-4652-87fc-945793e4022f"
                    }
                  }
                ]
              },
              {
                "id": "5288c244-4b4d-4c2f-8575-1405fa25db9a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba4aa53b-2295-47bd-9042-e90e83483f7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1e5e022-2db0-45ee-9b34-cf6a0e737c19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe0239fb-6820-440d-a8d7-9a766623d7e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "512923c3-5455-4af4-a84a-807b3db5194a"
                    }
                  }
                ]
              },
              {
                "id": "aa70ceb1-e6f8-4a87-9cbb-2a32438e6370",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b858c331-7a99-43f6-875b-b73166b52a5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad8a9664-5c14-49b0-9320-96fb814ae289"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc3114d7-9dbb-4ca3-b141-9fd5482b2128",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "efe5bf0a-8c9b-4029-bdf1-b655cd5995b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b23d6fdd-610d-4e90-bf0b-85cf09178632",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e284438-2b5c-4975-b297-2e91c49576b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "72334c77-f689-4f97-b218-00bc1e191b6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49f33552-aec7-48e6-bdea-88ff4d4b121f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "695ff377-1620-4fc0-92b4-bb7e6b65068d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7401b8be-be7f-400c-8881-74f34b19fbe0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff26aa01-81e8-40c9-9fce-2c582d25772f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f24a244a-ccbe-4ec9-8fb7-e49b4008a59b"
            }
          }
        ]
      },
      {
        "id": "dd30371e-e630-4ae9-aa21-69613817b23c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "17b3ef4f-ac14-4eaa-be96-86c18ab95f40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b3be2f6-07a8-4c07-9348-8fbd6841403b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f1515afe-92af-44fd-ac3b-a60d0c7ce7bf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93604605-6a37-478f-ba98-535abb5d7dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbefc1c3-2bd6-4839-a2b6-17b0d14091e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f54170-56d6-4bce-9fc0-97d246fc15c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "484afbd2-398c-46ab-a4a2-250d3cc00305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b42793-0a82-4fdd-848a-bdf0dfed977f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e814a4-b301-43f9-a5b1-61199ffcacec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24916129-78ab-4652-9f8a-389b33637644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54151116-a873-401a-969f-186f00b985b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "268b8131-5684-4ba0-85d0-a1da22b12d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b261b0d-fa4b-4509-acdb-762112bb6328",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02da2bb-2b3d-4a70-9277-e457213ec0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887239d1-a78f-450f-b8b1-bb238ef7f78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c643bf-fa6e-4ecd-a9ad-95413c65198c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2233b4fc-6d65-41bf-a8e0-3c25ee89a578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bcdc79-f082-4258-871c-6c2282744b3e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7895e207-2f99-48c4-8d32-accb0d15ff6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef9f831-26e2-45b6-8352-8a56fbf6e7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8994321d-3219-46a2-86f3-28d5452ecb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ca14ba-abc8-4be6-bd75-0fae827a8e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675439bb-77bc-4e67-942b-7f95623ddaae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c758d80-4edf-4e04-9703-bf6c2e6c22a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ead1ed-ea32-46e8-823a-bd2d72a42afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf560385-831d-40be-8857-f68bb5aa6512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0cf72e-0a7a-40b5-b38c-6b63a6ff01c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8850b3f-1524-41ea-8b53-1c8f4343a773",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7ba0aa-dbab-4f27-b95e-7af4c1f87b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c51dd7-5c9d-49df-a385-04ff8b157f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644da381-4cbc-440e-a40f-85d03aaa856a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0290b287-4d6d-4dd6-97b6-066871420d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c66cc1-6c66-425f-9714-7daafc21ae68",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cb39cc-c2da-48ad-8091-234b219a066d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d28081b-01de-4d43-a8c7-7ea64970a4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeecd5c8-270d-44a1-8d08-f11c6ac7a2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0ab2a3-8142-4145-bb4f-a7e08630aa5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c069d347-86de-4554-813b-c71af4017113",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad313c39-9aa3-4f3d-99c5-0443124b8736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab2cd76-995d-4640-aa0a-f9e65dc9a529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2ee5e2-be14-4e37-9bb9-95f9013a49e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d43e11f-b42b-4480-ba64-03e9a57338a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a86b16a-ffda-47ca-8ad9-a51017168123",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97c1b48-c878-44cb-a0f7-0cb6e212c3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21182e66-f83b-4a1d-bca3-b4fb7190f1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd705067-2eaf-40c6-9768-ad2260469829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4ba9d1-c718-4654-b6e1-100f4e922198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61f0b8c-56f3-4943-8c32-8c29d0e116bb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb7c017-58ea-4e4a-a3e0-2676b6f8b047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b841cb0c-a6e1-4da9-a7ee-3e391d6859a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7b6ac7-fe9f-4600-a8ac-5ce058018c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02565fef-1d46-4884-a57e-9d9bebc28eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea6506c-9365-486b-a83c-5b5382a3d965",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614acb14-a0f4-40b7-bb83-854e0261a6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8de0fa0-417f-49f9-bcfb-4f9d2d452659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6548ba-77a7-4d4a-8668-8abcaaa30940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b41cb6db-977f-44f0-9984-f8b1ccdc9ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60644e52-98ec-4f0f-8746-3f78db4e1d2d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bb2d24-64cd-4de5-b7bd-eace3c98b94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f29fa15-4680-49dc-9006-ea69edb71001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d92446-f3b6-49b7-8360-e7597b1939b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "791be2c3-4a22-4caa-852e-d3c381fc722a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d68c54-3073-4f1a-9022-1237acd2fc3c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17d5510-30b0-49b6-8f95-8c3132003704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfed552-72a4-4b98-95cf-b019daeb6daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb7c25a-5a7b-4d94-82d0-1d430b710e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c17f78e9-a267-4b0e-adfd-1ac2fb310c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb90e71-6ccf-4de4-97fc-cd796d330a84",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357e2e11-4568-4103-8ee9-bad7cb4e6c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680aba4f-4ba7-43b7-a0b5-fa894bf25f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbcb3d8-cad8-4026-8b0b-6595e23d2dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "265ebfb7-6b80-4b36-b13a-c4263e46ac88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0ffffa-5a2c-47ce-9c4f-b85a345cf0ff",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ed396c-8505-4914-9b96-74618d434e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe678fd5-e4d3-42c1-8bea-0b31de4b0b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04a451a-0395-454d-b6ac-3ad31d383404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "79202758-aa4e-4e6a-8687-f969cf0bc54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcc7dbd-00ff-4303-95d2-12bb3ab34b35",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60eaaa39-4a5e-4457-8127-036fa034e4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedfa6e2-f3d6-4d83-a4dd-4cf1d546fb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c68a02d-ec97-436e-8408-705735d631b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2f6c46-1cbe-41a1-9c68-34d40a541af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dd6ac1-7f6d-4187-975f-4d4e25ee19cd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7216fe4a-e083-490e-935b-4fe71c1d7d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7851856d-71db-405b-8352-ba51095b64d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd5e251-c894-428b-adfe-53d4d232d18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f16e5d-f9d7-4815-a423-37e1691641b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3538ed2-8f6e-43df-94fe-e026b34e9e90",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11e34aa-37a1-457f-a39d-6c94826c850c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89185b1-d5d1-4e46-8605-dba9e9dd4419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65683953-fe8f-4942-b1ad-bba74b2d1f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d93f92b-5b44-48ec-9bd4-70c047faaf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db68bc4-6131-40a9-bc27-d493472ceefd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50997b37-c4e1-43ca-8ce3-1334d802ee3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb06656-1553-4d57-96b5-89b3b127d78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9d6341-61dd-4294-ab8e-938152569df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85df37ec-755b-4834-9795-6700e66f72e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d092ef4b-9be1-40c5-8673-64948caa2e6c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46afdeaa-04d6-4840-9dd7-87470de348cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6536d228-6f0c-422d-847c-c1c946069458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f46e31-7574-447c-93eb-d7497d8d16cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62015680-1fa9-416b-a7f9-b1d2d97497e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d776f01d-53c7-46f7-8880-5cb04bd20fcf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1583e9db-ef41-450d-8929-8df51e7e038d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2de5f88-2770-4103-afe3-dce333f76d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42cb0bf-2613-4bdf-8a63-c27143e6db53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc6084e-67db-4ad9-bbd4-9110c56f15b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d477ca22-feeb-421b-a4f8-394409fbd666",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5efc70-cb33-44ed-98c9-48194d2ae145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e25e728-800f-4346-83ba-fb464c5ae770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af29530e-8c97-470d-b480-6cb8bc42a264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f88d31af-f010-4e32-a97a-9f33683f477a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28a5dd6-d90c-43ff-a526-f6fbfa86e753",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1295c385-c397-4573-9e31-a42826719260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265a8f2c-44f6-4cc0-8e99-5aa5e1b2f58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d24942-bf46-4ceb-b389-ab3f084c7596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "436ed7ff-fde0-41a2-a82a-832abde993c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48aa40f-d2f1-443f-bd8a-a35219450fc4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d1880a-7889-4439-a001-ce359314b313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103f5afc-3a72-48d5-a888-95442f4f039c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d3d171-848a-44ae-a329-bb1d19cc1e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b045f578-6a3c-48ac-88a4-0aff873fa062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c2f83c-ea41-4362-bbec-f02d0d054cb5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c761bf82-1b88-4a8b-a66a-89a2f8658506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e073e07e-d8d3-4e22-84f3-a41f4d4042b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6643af-05db-4d2a-8ceb-9ef9e782a128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "441aa4fe-19c8-4d69-b046-fa17f4eadf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95e5f74-4a6b-4f82-9341-2cdfdad16b0c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf6fb87-7f3a-406d-adc3-8772b77cc592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14325443-ba69-48bd-a32f-782bb3b5574e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4407b05-d16e-4b36-9173-1685d516a6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb157cf-bc06-4196-b49a-61d03a6fffbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6862dc-b49b-442b-b04f-1723c684cd5a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5fb673-0789-4f26-8a5b-28910d366633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962d3177-6e59-4528-a55b-fe24aa256d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7137a46b-8e68-420d-a168-15bcb4de468f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9eb4824-45c0-471a-befa-2dea2340e3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1389a0e2-86af-4289-ae33-f8526f4fea18",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c937fa98-6960-4e8d-af59-debf29bff7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61cd272-4880-41f6-b2c0-e1565cda60d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5a40d3-26aa-4db9-b0c1-1c4741188bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef763f9c-e654-410d-b52a-a3e537ca0e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b56e7e-3911-4cd1-b24c-ecc3da1093be",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144eefa7-73fe-454b-b565-57a64aa8f18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd3f58a-326a-4fcf-b67b-0a91468a2f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8bfc0d-14f7-4d60-b2fb-f54677434737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00077fd1-794e-4a97-ac0b-a250774c26b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2e7a57-c0dd-4ffe-8a86-473eb8571ce7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565344e5-75b1-456b-a66d-ab236db8e0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811f95c8-0797-43eb-98ed-6ec3375f83bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27853c94-21b2-4e39-a3bd-c7b888eda773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0697f53-47b6-40db-a316-4b76508371be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a926ca-3648-48a7-beca-a2f453c0eae0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dc6f1c-db51-40d4-87fa-fd54587a511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef4dbf1-38fc-405a-988f-eebbf828a1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33132104-bc43-4193-8f98-97e721c37279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "690f827f-f404-4f23-b302-26f482ddd4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3160af88-5191-41e2-9a98-e3bc42e3f05b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f666f3e4-a4e9-4bde-852b-5ca8e1efcf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4d77f3-411d-4312-9d2c-c543356ef08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43a74a2-7ef6-4092-84f0-70a552994cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6708a166-bb09-49d7-8ea1-63ce22a7fe15"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1867fe4-cd93-4db9-8067-c9b0659121f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9ec94ae-ece5-45f7-8b30-687e53676d2d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbec1ce4-ce78-4a91-a598-4e3c65540579",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0adaee-95fa-4f38-b978-1daef65dbf74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daeb8a9b-b72a-410b-a397-44c15cf8f832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6122ba5-5722-4f98-b8a6-46d51c8daaba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3786373-8ec9-4d3e-bd32-e6720d79da9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b253b34b-1503-40b0-93c5-4d4fe784eb87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99bb4e6d-ff3e-4cd7-a9aa-19724ac518ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbb3088f-3e6a-4df2-8c77-95f9767f02b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9e7de22-48b2-4383-853f-a3b46582b045",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ef09519a-3268-4a2e-85a8-136d0d8a307f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a60ac05-8d22-4bcd-bd99-670616bc0361",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a331f5c9-9ab9-4429-9bc5-ed0096b12338"
            }
          }
        ]
      },
      {
        "id": "1c09e40f-c205-489a-a5f7-e8cd288aca39",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e08d8fc0-7f7c-4aea-8477-829f5366c9e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98ab9e3c-1794-4d8c-894d-028d82a81c9a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d276c0e-1b9b-44ca-a2a7-352720c5ad7b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e6bf67-e649-455f-8d26-b4c0d1ec438f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b5c024-dcb0-45d5-9c2c-a97606b37242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f610036-e7bb-4456-abfc-9bbb7b7642b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3add66-6df3-4da4-a22a-1c1fbd3991fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b631e0cd-f7dc-46c7-b409-f987459eae60",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38c1acc-3444-473c-92e7-4e1b431c589e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13b103a-09f5-4d81-bfcc-004dff694e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c441da-3902-4627-a8dd-0841a3e67887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b487d49-ffed-4a70-99f1-1b0d6841948a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d440551-4beb-445d-8998-7f960528a417",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6871f033-fc01-454d-b6a0-5849a72891f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbde3fba-24e1-4bf7-9275-8cd8d5adb294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ca4b4f-ed3f-419f-8eaf-d83912ccd8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8dbb43-cb8d-4fe4-bb04-4d7b2d3f388a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a0c481-d1a9-451c-b6e0-feb9338c9ab4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5e0708-2ee4-4afd-8897-c63b46d5d919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d299b365-46bc-4c3d-a656-07a04a156f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0ac419-a67a-4b5a-b856-b556beae9f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "647210a6-bdc0-45e3-ada5-8f641fefaef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae586ba-759f-4a6e-9652-dd338d762cdd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25b1de9-e9db-4a9e-833f-3a61b8ef2e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4ce4b7-3286-4c24-baba-d8da58a6e9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0221a8e-c1b7-411e-bec0-a8004a9aace4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e0e499-1881-489c-b953-d34e9e28ee0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978c8eb0-2709-4a75-820f-9b65f3caf546",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd6a414-3c61-4f91-a2c4-37ae86398308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71c05fd-4b5b-459d-b029-af7d6948f59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6ff29b-9a07-4079-922e-c306c6321a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f55dfd9-275d-477d-b500-6894c0c814be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647fd577-98e8-4df6-b57c-6c61f6798797",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ef79f7-c327-4788-82a2-3484b79b0088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac66daf-8817-4233-8a3d-b7611d33b797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e615e7-6a0d-454d-8c2b-799da526528e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3475b1d9-a2ab-4364-948d-a12e2005f73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a06e27-4c18-4e2d-91f0-a67c55452f67",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd948e3-e520-4aa7-99e6-b03d06faf97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da760fbe-c36d-4ee8-aa03-2dd4cecbedc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7930fefb-220c-430c-a348-e2258fb59703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a128074e-07fe-4a7c-b686-8bafca4feb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c0aebe-2dd5-44f7-af56-67935a894c07",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57243ae1-3ba5-4d05-8b67-549eb27f53f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dd4723-17e9-4d0e-a49d-e5c169cf1dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21502bb-87b3-442d-9d67-49868efe39db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2956379-6886-4f63-a7e4-a7f6973d9017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfd9deb-e24d-4b01-86ba-deaa4f88d60d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97632100-b4e9-4a78-b49d-36a36c8d25ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc53bccd-fd4c-4b3b-b638-5e589226f2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1b16da-c712-438c-9ff4-f67405e08ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe77800-bdfe-4af7-9e5f-b53917fa6d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f112a61a-ae64-4176-abfe-dad02e1b4eaa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cff7e2-a393-4c25-8e6d-0662b424a961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb1e3fa-3a8e-459e-915b-465a77e356ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5314c9c-ccdc-497b-af92-eee36f4b4d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "28da2d06-683f-4cba-9755-5fe0e09252e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ec4ce6-6482-4e2c-b59c-c117d6ec118c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a8b062-3550-450c-aafb-4fa620fb0f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51f0c0f-1812-47f5-b1b6-5394862fdd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110d1651-ef49-4afa-8868-2fde5263f432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4693b3bc-b3ec-4ffb-94b7-d37554852ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1077a25-6895-4bc7-a03e-ea285e8ac5f4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9faf6a-6709-4d1a-86de-e7397704d9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68928d4-1c2f-41d8-9983-2ca7a1d5d0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3067ff21-4a8b-4229-821b-651d2e0bc6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b08a0fb-738f-4949-b8d7-c33231b8f240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ebbcc6-44b1-4881-a703-23082f72e371",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6d4811-a52f-4f89-805e-4246d8e053b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39bd9942-a3d9-48e2-86f8-a15ccf5cbd52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3097afc-9883-43ba-8e1d-875fddeeb6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "96368353-c929-4278-b4de-28cc57fd1255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4711d024-a527-465c-a493-dddad0199ba6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fc711f-d79a-4612-b40d-7da82e41ae90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e0dd27-8b49-469f-9d67-bf41b4984fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6f28db-d0b8-4b46-81e4-e01ec357dfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "80e3d18a-aeb3-4013-9384-a066f10806cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1420a3b9-e66a-4788-b964-f37770a14e3a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4c6b9d-f1ff-4c5f-bcab-7b75520ab4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b655d60-4c1c-486d-8880-85fa6849be76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaec323-7de1-4eed-a6b9-8198cc38e028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee064c6f-b364-404e-89b7-b75aa506ad1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440ee193-7ede-49d2-99d2-5d8c6f8bc7d6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f818ff5d-0f3a-4eab-b0c9-6a7e451939c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267eee1d-06aa-46da-b6af-eb4f8cfd3de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5a7e16-a8df-4cc7-8324-3ef6ea0486a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14c8a1b-846c-418a-8f30-f1b328765169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6045b1ee-1de7-4b86-81e9-4e9bfd1765a8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82d3d8d-6c6a-4da9-9bdb-984f3aca976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ec3488-6d5d-447e-b8c2-d7bd3061fc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea67b39-9985-40c4-b787-034f29588951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a045450-ef4f-4ee3-b2cb-ebec82295613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0ddbc1-d39b-4f14-924a-fd717c8e5afa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e0a806-7d7e-4948-9d16-2a32d16a45ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16679cb7-63a1-425e-929e-43717e368235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efe5c4f-6dea-4e74-b56b-8f87e02b51ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee54c1b5-5b01-4699-8d36-e731536121f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a432719-2d38-4d9c-ac63-f23a0194b211",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac2639b-7a0e-4e73-a2ed-e23b82a48991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b41256c-06c1-4d4e-9014-b3480d16f3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff90615-4bf4-4aa2-a744-4473ff08ec96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68961137-d088-4ab4-8931-f76dd0376914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114cf2f0-bf34-4f0f-a734-0276c0c1e9c7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b35e02b-d752-4b95-8d38-ad8ef768af5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9bef1d-7873-4c59-9e7a-557804a77dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b59995-769e-48b1-a201-4fb10b0b4887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23620793-c5a7-4470-a7c9-d59a97578df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27a1258-0b1a-4d60-bf0f-0cfb1266c22a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796805f4-1a49-42af-8b0b-eb39f490e2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dfa8b9-4371-414a-a149-ab166712e94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d7999d-8fe7-431d-bfc2-67172e28088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd23bf8b-1c3c-4ccf-89a8-733bfebd6b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bbc627-8f3f-4776-83c4-253833d12ba7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be9eb3d-9fbd-4a77-92db-3537e5f7689f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03835fc6-f80d-409e-9db4-106a76039357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc3c176-7d8f-4968-9c8e-1eb5f7a68cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d00f65e-d351-4ae7-b3d0-3482f058dacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ec8541-ddb1-4259-bc28-c55343aafb59",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6f70bf-c5b4-4db9-8d24-efadba2696df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2de236-b5d5-4165-bdc5-133659c63faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848b79fa-5397-4d8d-b5b4-7149ea126c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "893f2c8c-fb12-4d41-98e1-e715993c9f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19540719-e3a1-4464-8707-50c1a1e4da14",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5834315e-c965-41fd-9004-5689445a389a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2026d0f5-375b-4062-8c0d-bbce0084d639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97bc165-dc23-4ec8-888e-b32e9d38056d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8d1c8b-a14e-4f3a-a5dc-d643800e4313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd01ec4-bccb-4cd9-b61b-6dcd8b50b18e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb565d03-ef37-40ab-a582-6c3f8727a620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf632db7-3595-46e4-b488-8543e67835a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a3a227-b663-4e76-8c3a-db1b13f05917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e474c43a-6809-4060-bcde-1283e0a5b9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daac5f4-35a5-4b05-b671-16d72361f1ea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712c524a-e3ff-44cb-82b6-63721b13d991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b7eba8-0094-40cd-8a15-1f507853dab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15435ba9-2344-4d6d-9faa-418c2c1fe212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "704fca0e-10ef-4db4-95f6-492caa2926c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf99e626-ad4a-4c77-9ca5-04eea42cd489",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2acca44-e352-4c2f-83c2-586535877642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3987d5-f86e-4e56-9953-ff46e3c7c282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97fd948-9b60-40fa-89fa-5b20579303df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5ded85-5a1f-4117-8cf7-f8399676c85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6347b919-fe97-42b9-abca-1ea87581069f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14344115-9a9c-47bc-8999-0ca3b5f32977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dede6672-aaf8-4c61-a4ae-67984cc3c66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5dc6be-eb34-4969-8199-40bc523df505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29993d86-abc5-4efb-9129-c26d2e8172f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae36e26-d8bf-4169-99d5-3c161419c7d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66c543b-20d9-4eee-ac47-d9d583dea620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2c4e0e-c9e9-4ee8-8e3c-e82bb9670bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e97474-39bf-45a1-9e22-3f971c76e4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e7b663-3527-4de4-8aa5-6ef58d262510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c4f9fb-e630-4216-96a9-196c173a94d3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9cc9b1-77f4-4c1d-9ecc-0e5f8ef374c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189c60ca-97e2-4a73-ae17-208860630278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34af298c-0ac6-4b31-bbfc-a08110c3a3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "853c219d-5c98-4a3e-b287-256df79eddd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3018ffee-46af-4820-8fd9-57ed210287ef",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975ac1ec-8ba4-4843-940a-4a6538badcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80db870f-caf9-4810-8c2b-87c5dcef74ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2985fe21-46d3-4a2c-8462-79cda36c562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8baa13d-cefc-4d00-898a-aecd9e381e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c904e9f5-7f3d-4664-8d8f-6b2943d59589",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27283eb8-acb7-47ca-bd4b-a8e820b81d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77927a92-540d-4ec8-a30c-5d9525bbc8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93d1017-6e3d-45b4-bc73-3c322d7d4bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c411f1-6427-47c8-ac47-bc192e5bf096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8b59f4-1777-47cd-93b9-e33fc39fd4de",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf53861e-0746-49cd-b42f-7d046124d9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba82d8ce-306f-4b22-91f7-ce07ebf24396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06fbddd-4e65-4b54-982a-5cc590aafc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed965768-884f-411c-bd3f-f9e3ff9419b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fc3f8f-2e45-43d8-bc4e-5c48cf3bf28a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a782de-f5bc-4beb-9461-7d20ec16e67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91887b5-3adb-45dc-aa78-9b75a19a72fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be385c3d-395c-45e0-a1ad-610a4c44723f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ca143d-1854-432d-a264-9135e09aa1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c549397-c630-458e-b5a2-87ba74cf9eed",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2d68d6-29d2-47c9-bbda-ad8f4c4df566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068ec6ba-6f9c-4029-9c59-c44393a6d2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7641e5-a858-4ff2-93c7-c3e43e5866ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "846d6d5f-e07a-42b3-86b5-de70f941b5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053b506d-b961-4741-b926-06c92d3a0702",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7c74cf-c748-42fc-9469-b192207c35d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c7f428-f423-4747-9f1d-b1188966140c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e780926a-dcac-4a77-90ce-b6513a180eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "415b970f-9968-4621-a11e-3cc6cea96a49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fde819c3-cf7b-4477-969e-802e3600d933",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e975e41-1d09-4581-9eb7-ac0d5b6278b0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad939faa-ea52-42bf-809e-955491014695",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3db409-4ef3-4c7e-949d-5b7b5b9c3027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8540c1-07bb-47ff-9e33-14ebd6037699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4b3cf0c-0c05-4431-9802-35f18f585807"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe06fcc7-c0f4-4f67-9139-ade494b9af6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f80e9a26-365c-41bd-a76e-05b4c541f22e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e3b9331-da52-41f5-8065-52447b583cee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6ea6890-9e42-4005-95a1-534dc4e6de99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17dda5e0-0e92-4440-b7d7-d02d17081324",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e547ac0c-e463-4af6-aa9d-fe9878fb5a39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9434959f-4632-4961-9af6-a2921ede337a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ca5ea6d-9f94-4301-8b14-c044eda110b6"
            }
          }
        ]
      },
      {
        "id": "3237be57-c321-4c87-82d7-0930c4796d2e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fcf0eeab-a9f8-4041-a4f8-a19b39fdf87b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd6d6538-a755-4c27-b321-30b31d92897e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b2f4440-f681-4655-b65a-5ee32cb260a1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5716b9-b6ed-4292-a5c3-b663262d1b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b896187-d88d-4db3-8a3b-e78f0d07d1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13940ba2-ca69-4e47-8fdd-5816dbc48355",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93855c94-89fa-4784-bd25-d4cfb137964a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38ead90-764e-44e7-8fc8-8ffe1c9c2f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c90a031-900c-4c02-840b-9983328c5bc5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104b04be-1f57-4c26-a28f-15211d087bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbc9fe6-b5cd-4ca3-893d-a5d5ff30037f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15f7c74-7ca6-48e6-a9c8-8db75acdb09f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006a3f03-9483-4dea-a9ba-5b1ac59fc5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbeed591-15aa-4873-a687-89657409ed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3abfed-d226-4a31-88cf-05074e2a1bfa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94412b19-fd8f-47a2-b762-1c8b8d77f389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de3cc88-f319-480a-aee1-e0480c15c6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788b6878-1a5b-4b4d-8a0e-8c6d31e81486",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa827da-e871-4dad-b467-046fc086b398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa1fd44-f0e6-4f96-9933-c46a320cc568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b33d01f-ae4d-471c-83d8-a049d9151ceb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72238856-bc41-4a5a-ac7a-e2eeb2f5bd96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4c2057-4a74-4c1d-ba29-481247edf72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb94f18e-f616-4621-b481-432c5f1e3e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd835c5-9c79-4e10-a7a7-0839d7292372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f03aad-f661-4744-a41d-c07aea0f30c6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea015ca0-47a2-45ef-8327-6ca5c6efbe44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c346391-7192-4db1-87fc-b0c8be5f2709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd2b5d9-3d09-44d7-be18-6f25a536e168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c625ea02-f1d4-4094-b7d7-480fe5c55f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413ad1e2-05e1-4364-b4c6-db1327c2a76a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22722b19-43f8-4ae9-9abd-48c47046a51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6016f2a8-dfa5-42ec-ab08-3cd60564103c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a1af40-eb6f-40a4-8bca-eb21abd96f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a58994b-5bf8-46e4-8546-12e673b72173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbe92f8-3946-4b8f-b80f-ba20f5c23ba9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb73cc6-951c-4af8-9f74-4259851ddbea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea7116c-4ff2-4270-9abf-ddbdec4615ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803ca4d0-926f-4a53-bacb-c1795f6e6834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac953bc7-b346-4069-83fa-25eed79bcfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ea1a9a-85b8-4e4e-8622-e32a6d439ee3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ddfbb3-ba25-4154-85f7-7bbdf7146d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caf3344-c3ec-4a73-80e2-ab7386d05498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10206cee-09be-473c-ab4c-4e3489cbf3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61ad16c-dddb-4153-bb82-371a4086013c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76cbb958-e7f8-4e48-98dd-7094041af399",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85321c5b-3cad-43d4-a8ff-bf9a0473c5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96a195f-2d76-4810-9c3a-20bf2210a566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef132acc-1415-410f-9d0b-d0a8fb4ec6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80c9d76-ad7f-4770-8c80-eb4b98b84976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f7d862-d994-426a-8896-e4c56eeed007",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a5b526-8ea6-4ec5-b94f-7471a6789cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de29ec7-e4be-495b-bdcc-264e553c45a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138caa9f-33b9-43df-b6c3-159b0661428d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db94b518-db8c-472c-8fca-76a7f4a288f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec0f806-dd9d-4cee-a475-de6d97cc7464",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d7e8a2-f661-43b5-b0d1-d67d2092a8e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "233c72a2-c600-407b-bee2-003a58601aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac042c33-86d1-4cd8-9f13-d197d87a31e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ef11d0-cb45-427d-bbd8-798f27cb4a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f7b968-64cc-4902-bf4a-d0e2d0b9689c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcc3209-8e91-4ca9-8b1c-ebdde25d3c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4c5b3d3-fe23-4def-88a8-a7062c2a5f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f729717-a8b5-4e9c-8b54-3c4dba0dfd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4646c7ed-6ad0-41bb-bc4e-c80e83ca801e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e4fa2f-f02d-444b-a717-3ec8b861b9d2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bd6179-8c09-4f74-bb6c-271075d738cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999b8bfc-3991-477b-bf17-732e1cb4dce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fda70b-5ad1-4df5-96a8-a1b56c1afecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66088fa-a4f1-4772-ac02-e593607688eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bd7c7d-68b0-4e4e-a9c6-414a0ce9e337",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6455f6fb-061d-44c0-95fc-146d6c492a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25b1a9a-5bfb-4268-adc2-81f587d225d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0ebd73-1639-4dda-ac01-6b67f6842593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239036c8-a4f3-4a93-9342-b9feb1ba1832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b395d284-99f3-4d77-be80-62f3e2caad91",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346d3a6c-406f-4ba2-9f5a-4f678daaed68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991b2722-50ab-4518-b089-89fcb16f41d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a4f663-1930-42bf-92fd-e72509c11906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b861b6b-a752-485d-823d-af0353a5d3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f7865a-8829-488d-9adc-1483b2b5a663",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e675b2-54a5-4654-b42a-aa37c374be9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7594296e-3376-43c3-9c3c-498b9877fbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c2403e-2653-4884-8491-b5fe4f34f8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa7e78c-02a5-46e3-a604-c55e19518599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1075a27-3c91-4dce-b1dd-3484826641cd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7297cb68-fba4-4246-8d31-e6f715d70bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69361e33-e2ee-411e-99ce-714c643c6677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8a906e-792b-4445-a8e0-d938e6e2d102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a3129b-b250-4d70-9735-3ba8eafcd366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77660ec-9fa1-44c1-bcf2-026d47855d02",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d4cc41-8b18-4575-8138-79d394795827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b84f6c-379a-4c21-a37d-3dd3b5994b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65d5ea2-3639-4646-b5d9-1eed2f43845e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6b432c-db55-4656-95a2-9df42965c177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376a47d6-0bcd-4b65-ae43-e10c96d75ad7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaf74b6-b6f0-4eee-9c89-365d422a0c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510ef727-ef13-45d9-b5eb-f5377994886c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39552362-cb2c-45ed-bcfb-d591f0b6f3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cbbd08-0ad9-45cd-b8f0-eede7bd0d54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff63f57c-fd22-47ab-b31f-464639d31202",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf16f8f-6d2a-48e0-a114-b3abe7a961ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49955db8-ccbc-48a9-9317-76f87f3ac5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ee1036-cdf9-4235-9398-cb4fa70557a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a99ab5-4a87-4c5e-adf9-a3f2bb8e394a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef2fb76-40ed-4984-9340-f0948e0a6211",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e1980a-acbe-4144-a2c5-55074afd96f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1272dfca-7a50-44cd-b43b-ed1f29f90b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60811984-59e1-4c9a-994a-9da1f5320fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40689b4c-0bdb-4183-96e6-7209cc1b247b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c10849-0935-46b2-8215-3f720a72be93",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f3e4b0-3888-44eb-88e1-030a62b9b8fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b975562c-5eed-4aec-839c-6c2817c06dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2758c5-cd73-41da-b1ec-aa9f108eb4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dda54e2-dabf-4dba-b342-3f30196ce1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d158b69-a9fe-43ff-8fd8-0a5c2fa6e738",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815ae6b4-2444-474b-98a3-3740a37a3b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca25c02-7ba2-404d-902c-e67f1b03e193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41230877-e0ad-4203-9fcd-aa61f0ee6c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc2b6c4-9d74-411c-8e76-d175dbd030ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522f275f-dcd5-473b-b876-4f95bfb7fc91",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de68fbdc-8bb3-48ef-b685-fe0117960b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806526c2-7316-420a-ad75-f8c6b94fe65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2a0f7a-81b8-4dd0-b7f5-49cc52bed954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b21cb50-4fb7-47b8-bb88-a8b515c8cf04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d070306b-6996-4764-b552-f9fae42784a6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a238cc16-69cc-4c52-868a-46ccbb8f2632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e55508-f24d-48fe-afba-f441c25791fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6a3b7a-6417-4bf1-ae75-fc351b9c7229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dd23ca-8ce9-401b-9047-1e0f90a640d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b34f88-b52d-4caa-aafe-999e1909ebfd",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483b0fc2-04bc-4c55-b6c7-988750856859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c717e2-4f65-49e7-b859-e7110bd9c462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e909ef-620d-4c16-88cb-ae039138745d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6c38e1-90ac-44ad-b529-8e0d3884212c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdfcd04-e8f3-4880-b58d-4c88d03671a1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f5898b-fe7b-403b-8c42-81c0ff567932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e60783-5a1c-40d0-88f7-2d4afdfa97e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4552f020-b597-4f87-9eb7-ee0ac06494ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8376ec5-13e7-479d-b753-281450179c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a4f133-dd5e-4b1b-8af4-0570893465e8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518bab3e-91cc-4c42-8a24-f5dfd1a46473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42467f7c-4d0a-482d-b650-ed4a9ad23430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b477bfd9-ac35-4638-a89f-3d637f3e2894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e859a9-d972-42f0-8773-ffa443ba171c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9d6abd-112b-4a81-ac62-b4c8ed27b908",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58bd4d3-420a-4bb2-a7f0-e72302916de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e56754c9-7300-4d3c-b542-570f9b85717f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0e3845-d1e5-4777-b25c-4f99f06f5e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f95d595-41a2-4d30-b1ae-9b97aa850503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681597e3-8a80-4557-9b0d-b2d9e11cf33a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dbba19-4d94-44f5-9f01-1a5b6424c961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36638ff5-0119-4be0-b7c2-00491d020e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3dd52e-4492-495a-94cd-caaf059861d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f856585-d4fa-4d07-ac41-6683521d75b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a599c19-3972-4456-924a-35689d2876ae",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c42e88-c25d-4f4c-8239-61495f2d952f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772df5c3-325d-4f4c-aaed-ae9c41b68c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8174d4-ed4b-48e0-b105-1efd21a4e61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9274260-e4dd-4bd1-9290-201497c9b004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa6d135-42bf-40d5-b2b3-3fbe47e3ba68",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83307f62-9e3f-4e1d-8dec-36cac00d14b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec32d4a9-1803-4572-84f0-e5e01f07d46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc7e4d8-3105-4a79-b7f6-48f553aeb166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb7e73f-f20a-4e3f-b02f-db4591625a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f05bb6-4f6c-49f4-bb49-7a847798c854",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28ee395-92e4-4b72-8b8c-19648e6f9d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52170083-fd74-442e-b187-80ccc04543d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc851f7-8722-47ad-b8fb-b6db73df4b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0e8f7e-abfd-4f2c-b9e9-374003dbbd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68476ec3-2fcf-445d-a9c6-8528f48df860",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e68443d-1515-4a95-aa38-b33e3707535d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e184c6-3ab3-4a2a-b7f6-49a111bb2a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518bcc02-17f1-44fd-bbe8-24d94f8c07d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1b7c25-8e08-4e8a-8e51-7dc1670472c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d105619-2ea6-445c-97b7-30b7bc895e60",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c949330a-6737-4665-a5dd-63e5e6523017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afe6206-34ee-4afa-92df-67f332406f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c128d01-348f-415d-b508-3edc4d0fbc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6af1f3-e705-41b9-9f6c-699b71846363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333f6fdb-f588-40d7-b37e-eeb20bd2df04",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8fc7b9-41aa-415c-ba5e-c7a4c975c3d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337df4f8-b1f6-4149-b791-caac562a47cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502436d2-d726-4422-abac-7f320c9fd270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e97e74-c32b-4caa-8ea4-351ab415c1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89515a69-4328-4c3b-aaa1-5608d96b125a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55fed62-4e9f-48b8-9aee-9a76336f74e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2cbb39-b4b7-43ee-9a1a-b9bf212d69f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80398e7-8bf5-4a4f-b504-382300108a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d3381d-571f-4db5-96e2-0ed59a9ab7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66027c2c-9f05-4030-ac31-1a4ecbad85c4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a949894c-8285-4f6b-98d3-ddfbdf85d6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49d521e-378b-4ad1-ad18-61267e0cbb5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e206978-d2e0-460b-8f7d-ba38156f6195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25691abd-010a-40ed-9fe1-b73380cf2d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b3c972-a710-4f72-afe2-6ed1f0faeb48",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936fe94c-5da4-40cd-acab-ac5141537216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be6029b-c424-42c5-a34d-6b2c070515f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3341c2-53c5-4e6f-8e15-39287024878c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b634eeaa-2f93-4837-8460-317b35327a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5765362c-fb3f-496c-b0ae-b092808de1f6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5873954a-fb0c-4944-be74-b58fa2c9cee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cde3ff-c81c-4b8c-92bf-70d7ec95c595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c78e5d5-fa4a-41f2-a846-ba2cf1a891aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1432e483-ed85-4fd1-b849-8064718f2bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6240432f-f991-447a-bf31-3e3d98852318",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b71bb0d-4eda-4762-9ce0-ca914b0b067b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d34bfe3-37fa-480b-a28d-d58348ba0707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a46bbf-3c1b-434f-9b6b-c21a604a8244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8686908c-9a86-4e3c-98f6-a03aafda7d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e7db23-4ead-49b8-9e71-68aa9cb979f7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3372ad-2a85-4bc5-bd29-748e62c966c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd5c00e-6a5e-4467-9f2f-d8d5c9bceebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b5daca-d29a-4526-ae56-a0e0ece3821b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b29c0b5-4cc0-4238-8f67-8dab9cdc1598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8084f45-6258-41d2-a25e-892611ff7885",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db736c23-95d8-434c-a3a9-9ad96dfae6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23a2021-06b9-4fb1-98e7-b7b9d552e351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee58309e-73f8-4444-8318-c5a26d06bbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadea242-2673-42f2-8efb-348e131f1866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023767d5-38fb-4ab1-ae57-c687a03ce0a6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cb219e-f48d-495b-89e9-ddf31713a93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8182434-7452-4679-9b98-ffcd07ac0c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f251f0-8046-4862-8962-204c093c8c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab2920a-64a4-408a-be30-9f184b43e7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3f3734-3cec-4bdc-8a08-b49ae3963851",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cbe1bf-548a-470e-a316-659fcee87928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e87d060-87d3-440c-9e29-f2c2ba015d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "650799f5-68be-4cd7-8680-169e4dcfe855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eacfcde-0f25-41d0-b6b3-53ff82c79ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59db84cc-b7ad-485b-81a8-3c8bd7fbeb74",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e760dd5-8a95-4be3-8689-e5c61a10db5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4ac1f8-5ddf-4b4c-9147-fc1d43692062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f285068-cf6e-42d6-804f-cde189762046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0ac565-812f-4d99-97d9-041145a3cccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a49e1d4-0317-42f5-9820-36e7dcb99060",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f407bc6f-71c6-4f26-8a89-3cb42bb2c90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a98bec-caeb-46e8-a8bb-a93b4dc7d25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387bfdce-6629-42b6-8b7d-dd6010b35777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6d39a1-6997-40a6-a528-459a3a200b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1d251c-57c6-49ab-8a1e-b7e3143eaf33",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f4c0a0-9b8b-4ea2-a723-83c5d9a7b995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c690ef-71a4-4702-94a8-c8f490a2ea6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41edb812-3429-4820-b21c-efdbfea4ba4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18eda1fb-2a04-40c7-8aea-391bba318758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371a8e30-e1ae-42ac-b678-97d7a2adc1f9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b44cdf-2c02-4140-be05-5a883f68b648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fac847-c328-476f-8cb2-022516dd5c32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22deed1c-f449-48e6-ab93-1cbb4cb65c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c6ef8e-4792-43ca-8c35-d09aaa0773e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3292a982-afbc-4535-bf08-b9e6beea9754",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61836fe8-97fc-415e-b2e4-2c8a320b25a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1a1ff2-7bfa-49e8-bdf6-49659a760e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63125b7-5e6e-4b31-871d-fc8f8a8e2baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a37bab-a095-4812-bec2-b46d34e7fc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f1842e-0d0a-4702-af6b-ca55e3087912",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10aa1c5b-1154-4c3c-b0c5-03e9d0073a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14801e7-3c90-4ed3-80bb-d7bdd0f59479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fd641b-3470-47d0-88a5-3a4db49ae9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba5a3d9-e766-4ae4-9f39-54452daffd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22302c8e-c20a-4136-bcbb-d07f5ddd9beb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88ef8b8-fa38-4169-add2-bca60bb2fdf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caee7d63-a751-40d3-b975-f87ec842a4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef52fd51-92fa-43c1-9799-adf8f6559672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51659fbc-d825-4ab7-ba2e-524d3b4ea438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f6cb5a-6de7-4df5-988c-f22e260ddbf0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bddbbb-c30c-4871-bd54-80c37b942e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730be77c-df7f-4161-af5f-d73d778edfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd8fca5-4336-4d2c-b60b-e8dc46583cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a01ebe-7194-47f7-a2d7-4bc6cee3485b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4676682c-532d-4201-b9fa-b467f24fbe13",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a9b647-9377-424d-8a9d-7fe2521d55b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ba4b4c-8172-43c9-8ef3-1b93ae9f9add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae8fa26-9d17-4ff9-bb57-4769b7b5b9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3dfa5e-9e9a-415f-bd25-2bec3ccb63f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9189480-e772-48bb-804c-4caee128920c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c4d177-9014-45ee-9767-df53558fd04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369e6ded-d661-44c4-8892-664d1e93a73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2882ca-7949-4ce8-9090-0ec7cfc4ff4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e98638-44da-40db-847d-1fbe78bf326c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf402ef0-8984-4d8a-a2bb-8a8db6e028fa",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39397882-0471-4a9f-b526-519047221e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62149dbc-99cd-48b7-9b85-b5108dabb093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa94c76d-eeec-4537-a480-24943c3cef29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441bcd1e-b154-4500-860b-c5792014bd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae31fda9-b842-4fc6-bb72-93495c43b41d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d429e860-80f6-4659-b22a-9a0de7fcbc2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a505d329-4f7e-4a7b-8f88-11852f18fa94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25fc69e-e9f5-4060-85a8-ea6643100df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76ed6f6-59d6-4ed1-b4d0-587517a56b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7d1d63-5a8c-4331-8de7-8522ad50f907",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb87088-44fc-4ad3-8ec2-bfe95a82eeec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf32d48-1f70-4349-8015-d7aee77b36a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba5ab38-c362-4973-b98d-1f51528bd41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4c62d3-0db0-43bb-9690-bcf2a3f4e5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39293078-bcfd-4e18-a8fb-3ee50ca2a38b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57bdf15-f218-4c20-a843-e390f6004233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a2d27a-d9ac-4a7c-87b3-06dd32c859ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218f8361-c541-4905-90c7-85968877e8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d6a31a-514f-4c91-a924-a7bcec17f96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91343a2-0e60-48f6-9e6a-0d0be09b2b74",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03c1d69-1526-4c56-a9d8-b11673c2d93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00aa920-f37a-48a0-810d-12ac9e3920a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ab5529-602a-47e2-aeb1-271ffb745475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6919658f-850c-4197-9913-941928cf8885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e2e65c-774f-4344-aa4e-c47111eabbb6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd3b4dd-8d6b-48c1-ab19-842cb4d1dadb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65ce35bc-213b-413c-b738-9448fd8235d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e5c99b-ee18-460a-b1c1-65fa9be65d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963a3cf9-033e-4ee7-a5c6-8d26f27481b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfddc27-d73d-4e75-b047-1796057d7161",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade09bbc-9d07-4e87-9be6-1ab43cf5df91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a02ec2-c64a-49fc-8305-89e562fe646c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae53abd0-417f-4599-9702-02baac74b1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe27fcb-7558-419e-bd96-93a0694805c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae33c49-a4ba-4d54-b92d-32eec6f623e0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95037e85-c5a1-4bad-b8f9-2214f5225777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18471b1d-6ce2-45fc-8d3b-a8966dc32946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f056b6-cb87-4547-9b88-eb0e24a02162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef78322c-6077-47bf-9e48-316b788e11e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17b2eb3-e40a-4788-91f6-4c87e996b502",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a80b132-301e-4f6e-b37d-9cd219864fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "602c6f1e-ac83-48fb-8004-468e63c1eada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2160a2be-db36-44de-8bf3-159c892480ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec86e21-7ebb-46f3-8fce-6d15f500fc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ae8d70-b995-4a29-8fcf-a4a8928109d0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202bd647-b4b7-4588-a4b6-c62b10951c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c20eb5b-500c-45bf-a6ef-6b330a424753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1090bb6e-96e2-44f2-a005-f4d1458a05ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a820c307-ba78-497e-bce4-1499f6aa04d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da453de7-f0ff-416c-a30a-96b32e3b1bc1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b48fdd-bebe-4d51-85f2-fa24c0c34eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c877d0-37ab-4a24-bc7b-838fc8186bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba06701a-c5e4-4be4-9eb3-460a04b937fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64475084-6f40-46b5-8f59-6c606f4b9723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06166bf0-adbf-424c-8c6c-97881346f5e2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a147e4-567c-4f1c-b617-9855393bb5cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ece4b0-3376-4562-b497-0ae9761348b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6228dd-ac6e-4d41-994e-a25cb856d8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab29da5-6961-477a-a387-3992d058d5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42fe11b-d08d-4507-906a-b749f11e45bd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8dd28d-8f68-4763-85c6-001d76ef0698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4b497b-7a87-4012-a7fd-df238ec1af6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1aa571-70e9-4d3b-adbd-ab95c2557d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3c72e5-0e5e-45cc-8161-d90b64ed90c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3ab3af-1c1b-46b6-8562-8a6f52edbead",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6f9f3e-a854-4ca4-af34-e0be7cf5c0ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d120a5b2-fb7d-4b90-9202-ab999f3df637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a471305-779c-40d1-ad72-fd62ab838bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4de6d38-63d8-4571-9f21-fa636de24073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8fd620-bfc1-4ab8-8e01-91f61fcb1682",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8378fb4-d234-444d-a0e9-3f155b663449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddac3c08-ce4b-4472-acd8-b01dc2dca295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0037368d-67a4-4b21-bfb5-92d94f31710a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3effb5e6-6ee5-4430-ad0e-d8ef2ab1966f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19705ad2-8202-46cf-bb69-d219efa57ea7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd06442-79a8-4869-abea-0688cc816471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2cd2718-1904-4782-b413-2eeba4b781f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ad9aec-ba53-45aa-ba34-ca1fef2d76fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbd9d42-a7a3-4391-90b4-4b1851ad7a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49ce0a8-2041-4094-834b-ea034cea657e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fb38fe-3713-40ad-8fb6-482b16791145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db00391d-4765-41df-b4d1-a6fbb30dd5e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721accf7-d46f-4d30-b85c-8fdd1f7ab450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ace756-f17d-4b80-a9d8-611fbac9197b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91e6f7b-59c9-4382-94b1-b0da509d7509",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff21b94c-a7c3-4658-8e9e-57bca9bf0b16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6988412b-b592-40c3-947a-3e8b801363a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b825f1e-1c46-4530-8562-ad753d1ca777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b8a998-0285-45a2-a1a3-ec64d8795fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11ad067-ba94-4cee-9c25-6924a5556e42",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce0baef-a392-479c-ab31-f6c323249fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4fd0de2-1031-4818-a74f-bad9211971bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaa4933-19b3-4429-a81c-b0d63e690a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63626bf-95f4-4cff-b12a-9b4c218bb733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a7ceac-d435-4b9c-8966-ab0c52700ab5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c7aeef-8f08-4931-8ae7-0e19b6512c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f4286f9-f154-4d7a-9689-4153fa8a7841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4a8f72-c669-4753-8bb0-c06af3f4fd2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306dc3cd-97dd-4350-b97b-80824779b96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e787b77-7a53-49ef-95f8-032a14f29a48",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c9addc-6312-4851-bb17-5264656cfd06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f5fd2b7-7132-47aa-b32e-c06d2f819f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e45861-97a7-4ee8-8335-9e0888a882b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a412492-9a72-45a2-8ae1-a44396afd677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b691094-8072-408c-a9bb-8d909b9728c1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51dde79-3c1b-4cf5-9ac4-0520fff4116e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38bc03ef-bc92-4a19-96b9-18cdc2633b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbc89e1-8589-4197-82b0-5a5a6d3e1829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa1296f-8ee8-4dc1-b993-9c48d35721b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf88de2-9d00-42e9-888b-baf079c36ac5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c914ba7d-010a-4c5b-a231-521fd4dd1b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc20aee-c7e3-4110-9c52-f59a2d0d1cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d956ffc7-486b-4780-b3df-565360c8d8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39b89e7-6242-4194-be79-01391f67662b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d4768c-ae73-486e-ba83-a04b27532fd7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7abe5b-20fa-4c90-83a3-77bffcc88dbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14629158-7621-46f8-9e36-a42660502c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2be280-f5f2-4b7a-9502-689c9334cfc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da34b27-2e92-4f16-a3dc-fcfc904ea8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a35e6e1-699e-4c3c-ad63-356e03f1a84d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af4c83e-61cc-41ce-812d-aaca1a4d142b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bfc56c3-072c-4e60-ae50-68a6db61c75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b228f46-c98d-474a-864e-5a02bfbce59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0e558a-3c9c-4161-a9ee-bd6390aca418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b0365c-f392-42e6-ad33-5337940c4c11",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407fcca5-2b61-4444-a3bd-ccaea928bcfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d4fef34-c6ef-4de5-8397-d1f3c2f022dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1700a178-adca-4859-aef4-f6aecd8e158e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed68efec-85d4-4bf5-b034-b0a06d7493f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97252c26-aec5-4fb6-8a65-8d2fdf24ccee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dbb0a1-2130-4b6e-b64e-2d66969903f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd43433-5517-4d39-851b-414a54897ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f03708-ff71-4eed-af94-03b3270f7abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacf0c26-b013-4520-ab84-6c6a77ac0fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a1d859-7a2c-4fc1-8a3a-4982cb2e831b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5097e1-6b2a-4e64-9cfd-b8f479868004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06aa818c-a0ad-47d6-bcbc-66bd996fde4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cd7d7c-e26c-4475-8f8b-80b6d346014c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a8a48e-fc11-4b3d-94b3-5916c8a85e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13072b3f-211b-4e34-85ee-8a9dc0928a8d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a1b6a3-cbf5-46a0-aab7-d277b4fd1974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be5ef819-8487-4bb5-852a-7f5ab200d03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d6c732-055f-438a-a543-fbbff59c8b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622187bd-a2ce-44db-9f0a-e0309d343e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d06c84-e6ca-4694-847e-69a505c01a35",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a00965-b85b-40c2-b35c-89454e286510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e41d6c5-3c7f-4fb3-8815-54788b7e7b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648738b4-1d8b-4692-9f96-6ffff82b1da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05aebbb5-4931-4351-9b2e-2e2d4389cbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3fbeca-918a-441c-98fb-a1c1b5a4756d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac869dd-aa3e-4619-97d9-01f27ea584ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f231da38-fa8f-4360-9251-f6a35ef45622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd78e59-8bf4-47d4-b06f-6a1e25303132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78775644-c670-4275-a5bd-f74af08fe219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b37b93e-b1b1-49b8-82d9-c856d90fabbd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45630d61-3caa-4ba3-9c89-5e79c3ce86ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30dd138e-9b05-4a53-a919-8793f6ccc733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b639be51-6816-4c45-bba7-b2df833399bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78240cc7-59bd-4896-992a-49e35279f269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2011f8a8-d14d-485d-94be-39ef5ded13fb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ecbd6b-3e4b-43a6-8dc8-5c7be33ef89a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c87ad77-b616-4a85-ad7f-7ee7ca465b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f061be-3638-4eac-8fd6-8a2eca158f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c36342-4144-4bf4-b430-e47a96a834a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5d53bb-a0d4-4bc3-8ffb-a5616bc2604b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea26e79-0d1c-4fd4-8493-31c1b2cb44e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f657f321-0f66-4934-b20a-fc4970418b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3855fc-4b2f-4a3e-8c32-b63ea0ea8ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1b44ec-65cf-4baa-ab29-3ddf5e9231b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd137587-c11c-419b-b3a0-fc6c2864eb70",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cd0151-0f86-4ab9-844c-c0633561e48f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3036ceb7-e10c-4721-865d-ada152e6d0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29af8c87-8412-4c72-9d3b-7c7bd970fd17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5f3dcd-fbdf-4bac-929d-dc00676b3779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adce78d1-876e-4263-8539-2422ba69bc64",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ebd2f9-2dc5-40b2-991f-5d8b56bdc41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b812c4-efb2-4b9c-bb78-1677e0e698c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7622031f-328a-4ddd-b1b5-c655b5f68d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd4ab57-ef30-4be6-8589-13071065c5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5d85a7-2983-481f-82ce-c624e4fa10b3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de6ada6-8a83-47b0-acf7-a01ca872d1cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0713598f-11c8-4adc-850c-3ef4feaef167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70779ce-d255-4f96-a6f8-66a2f89d8fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab7d599-0b4b-4550-9210-15b529e601fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cd9ae2-83be-4a38-b4e5-f6ebcc0ebf37",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141e3aa0-7898-4475-b5a8-4b3cb541ff7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457933cb-f533-4b48-84f3-e564a929467f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a985fe25-2ed0-4158-91cb-1666abe9c8aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19e6696-659a-4c11-8ad4-d7d5d99ad900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32c8c29-5f55-4e87-8322-63cc249873bb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8081e8f-4cdb-49fb-84ce-0cdfe9e66fdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "116d3302-c1e5-477e-b12a-7b9f85809bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a349c77b-4f09-499d-b5fb-9528801e8bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ff29c9-7af4-404b-b6a7-501c00104e77"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "780b3c76-b58b-45f0-9e21-ceda5cd9def7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "396f7aa9-6421-45cc-bd73-37bbdd624371"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21d688e6-c85b-47ba-9eed-cd06f9574f17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0cd33a24-59fb-40df-a53e-16cb5541f1a2"
                    }
                  }
                ]
              },
              {
                "id": "cf361396-a16d-49e4-bed8-0ae55bb5e9d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5f2e0a9-8fe8-43b9-bbf9-7fb808b8a46e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2301ba-78fa-4a24-8406-5ad4c296a6d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "717c24d3-9b04-43cb-bbef-a5cf7d2081f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d3fdfd-2289-4568-92df-85951d46030f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9133d71-7442-475e-8196-3e5b66823eae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b26deade-858a-4360-984e-622ef47d5b71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8bb2898-7644-453c-b538-ef6bc5abadac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92af823a-d1e6-465d-ba9d-93fb302a6ab4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45b0f564-79a1-485b-b040-ba4b0a16c6a8"
                    }
                  }
                ]
              },
              {
                "id": "60c213f1-376f-4b64-a717-28588232e809",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "29bb4a67-42af-4f48-ace6-338e5a92ed50",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83147f9-2968-45aa-adb2-68082fefc04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "aa349c4c-cc75-4fbf-9720-f52fcc9a8da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdce493a-815f-4275-be4f-dbdc216a1d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a208a08-fb0c-438a-9571-e21f99c3d3e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9b1219b9-bf03-4228-80d4-c3c9acb718d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "520f0a26-7903-4acd-bf67-aa35b6c34d4e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ca17664-ae96-4d35-82c4-d37329345cc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "832c422e-8dba-4c3f-ab86-aff67bef5068"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "420a5f0c-9818-47f7-9177-cea0c7b7daaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f566e2c3-ab85-42c7-a98a-fe07dd09ecfd"
                    }
                  }
                ]
              },
              {
                "id": "8f207fab-eae1-4c4c-a9b9-053be6909c50",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f3e6768-d592-401e-a352-2d478b2795ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b022b911-9e43-40c3-9674-d60958da3e10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c4d1971-c9b7-4af0-bbdc-8ad88baa9a2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "931f819c-dc3a-4639-ba5d-e960b00377c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fd6395e-8f7e-4973-ac3f-73368b438e20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "846006d3-1c3e-4409-b1ff-e38beee037f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50ecbb2a-417e-4d5e-a73e-52dad7dcaac1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50bcd04b-461d-498f-8a6d-760e4a28da20"
            }
          }
        ]
      },
      {
        "id": "7f9f3332-7bbe-46f3-b77a-94e70246104a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "efb0ae98-8305-4530-b707-b1ba63e72c8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a7daef3-cbb5-44fc-811e-0d57211ebeeb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f8f9d90-78c5-46b1-a1ad-26b1e1da5b8b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecf1a46-4e86-4803-b53d-b2b857bfcb98",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bcb53b57-12ab-4139-9272-3c8a18f20cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ab7140-df71-425b-a769-1cca88a50134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e5dc5a3-522d-464f-b1dc-e36fe50f3ae9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3492623-2504-4ef7-9b08-e9da90bef894",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5022317-4a35-4693-a4cb-b9700f69b9c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7ff7699-1bf0-4884-a88f-aac88e228590",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e00b178c-c880-4f4c-a686-39c047e7a58f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c5ae648-af1b-480a-8d0f-6ad5d081559c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4b655b6f-58db-44a0-8833-e9be16f0e75e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc50b5eb-896d-4b35-b254-d87d34046524",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1804835f-eb9f-4f8e-b36e-b5a53a0b62aa"
            }
          }
        ]
      },
      {
        "id": "98fcedf8-249a-441b-a9ea-8f2ccdb0c624",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1bb6555c-e9a9-426d-8045-4a34a28c5b97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cfa3a2b-fb81-4187-89ec-9e937a94e59b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b0faf03-af8d-4066-bcf7-d83c03326ec4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a324270-cc12-40ca-a802-526b426725eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "927352e3-21d9-47f5-b69d-4c215d09a25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479bfb1a-1844-4d53-9402-eef016c0dd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01e87966-b235-421c-a6e4-884fbf09558a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f9835aa-b065-45bf-addf-4f21b76d0c42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02c51fcd-a118-40f1-a4ef-b9af283d8721"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68df3684-fb2c-4110-8933-bcb7d2357cab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b03f0bd1-ad8b-4f9c-81e1-8b5187169aec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0cec6bfa-320a-42e0-871b-539d57cbb11b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4741246c-c750-4685-8fad-66338bff0c6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7b816c8-f958-40e6-bff1-be8e3a320aee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bd05e19-0f43-4343-a18c-a365f6d2de2e"
            }
          }
        ]
      },
      {
        "id": "f5ba0c0e-dc11-4d38-8930-0a4d2d06a843",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9314f5e4-ae4b-48ff-87ce-a28082370971",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f686993f-aec0-43c5-9f8b-df7cdcecac23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cca1a3f-2d91-4f76-b8c1-0ad9a18e695d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb33471-7b9e-4b40-9634-1b08c6f0b791",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfdccf38-3fe0-481e-8ec7-84e6ab821561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc7b985-b5b7-40b5-b81d-61ab21efaca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8b587f9-9df6-4b3b-b062-c53b978d2bdd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0168077b-a767-4bb0-b7be-4c0e80dccfa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "823b160c-0f22-4dc3-9c60-1ecb67f419da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce3eb899-45fe-470b-9d5a-46face4df532",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5467657e-1ac1-4f95-95e6-198cc290e979"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "320c8c67-7d7c-4825-a463-32cf6170c558",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a6e15c9-aab4-41b8-9b54-da76e67c256c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a5e4ba1-772d-4ace-aa8b-464999b35a9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "121ae2d8-3656-4760-9fff-e90c6d985c72"
            }
          }
        ]
      },
      {
        "id": "2e43649c-141f-4b29-ab89-9ca53d88f7eb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b9c270f-b121-4f7f-b4bd-2e0aafd22c73",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6ed8932-f2b6-40c1-9152-f60a71aeaf8a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f6b8fadd-3232-48b1-a69c-2914e91d5017",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e69e325-dd6c-4dcd-b5c1-c67a06dd0fe6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17aa9321-35c2-49c0-92d0-b70512ba2ef4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 328.73943661971816,
      "responseMin": 7,
      "responseMax": 6205,
      "responseSd": 785.3213407026855,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691541619822,
      "completed": 1691541728999
    },
    "executions": [
      {
        "id": "3be8a501-dec4-45fd-843b-55ee4b966d57",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "111b57d7-375e-4ca8-a0b9-eff9f602f0ac",
          "httpRequestId": "d991e313-8657-455a-ac85-cb6a025e60e0"
        },
        "item": {
          "id": "3be8a501-dec4-45fd-843b-55ee4b966d57",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "278c8ecf-73c2-4a3c-8aa9-a55893761b40",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "bfd17ef2-2d3a-438f-a6d7-26f806adb45b",
        "cursor": {
          "ref": "03245d73-1cbf-4bec-9d93-23b9dc51e256",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e10ac6bd-d19e-4e9c-98a6-e0849c4a7921"
        },
        "item": {
          "id": "bfd17ef2-2d3a-438f-a6d7-26f806adb45b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a6b9ebd3-bdc3-4f8e-afb9-ea5001c3afc4",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "8a25b03f-45c9-4406-8678-0c17e6720326",
        "cursor": {
          "ref": "8c9ed1a7-ebbe-48ba-8f6b-5296057a0586",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dd803ff1-291e-46ab-8784-b8db73dbfe02"
        },
        "item": {
          "id": "8a25b03f-45c9-4406-8678-0c17e6720326",
          "name": "did_json"
        },
        "response": {
          "id": "b7bb78d9-2a0b-402c-a046-ed6b3799568d",
          "status": "OK",
          "code": 200,
          "responseTime": 1211,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b3dd0a-7d0a-4123-b32f-d80c8fb90edc",
        "cursor": {
          "ref": "4369ef51-4084-45ad-b98b-335c9dbb81ec",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4048df55-2df1-4890-8da6-a901074040ed"
        },
        "item": {
          "id": "f9b3dd0a-7d0a-4123-b32f-d80c8fb90edc",
          "name": "did:invalid"
        },
        "response": {
          "id": "57107f51-2d0b-43e0-8fc7-0e8c1b25ffbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b3dd0a-7d0a-4123-b32f-d80c8fb90edc",
        "cursor": {
          "ref": "4369ef51-4084-45ad-b98b-335c9dbb81ec",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4048df55-2df1-4890-8da6-a901074040ed"
        },
        "item": {
          "id": "f9b3dd0a-7d0a-4123-b32f-d80c8fb90edc",
          "name": "did:invalid"
        },
        "response": {
          "id": "57107f51-2d0b-43e0-8fc7-0e8c1b25ffbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178800ad-ed54-427f-8a72-90fcbef45c46",
        "cursor": {
          "ref": "826d252a-f7ab-40aa-9a89-11de5f88f076",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ad489b94-de75-4c32-98e2-6acf5050768f"
        },
        "item": {
          "id": "178800ad-ed54-427f-8a72-90fcbef45c46",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ba2de96e-2489-4a15-9157-01e42ffc3b1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 337,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc938b4-3c9c-4bb1-9d34-0e81986b5e0d",
        "cursor": {
          "ref": "6e3345b5-fc26-4f51-9316-3729a04f6f98",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "15715025-a0bb-4865-9f77-9d258cef005e"
        },
        "item": {
          "id": "5dc938b4-3c9c-4bb1-9d34-0e81986b5e0d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1781302e-0c24-409d-a9a9-15e8aa1545e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 285,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660281c4-5fec-4bf0-bc59-93b2d1f26f82",
        "cursor": {
          "ref": "5c8d8ba3-a45e-419e-86ba-1c283ad9a8d2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "96166744-d374-4aae-a840-9fb0a539afb0"
        },
        "item": {
          "id": "660281c4-5fec-4bf0-bc59-93b2d1f26f82",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d3e6878b-1ae4-41b9-887b-8290537ec587",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1808b5a7-2c21-4019-85f9-1cd70748a5df",
        "cursor": {
          "ref": "fa8922cb-d745-4d71-9c05-1e27aff999e3",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "064a8c29-9ad7-4e67-ac2b-bb1cf513c717"
        },
        "item": {
          "id": "1808b5a7-2c21-4019-85f9-1cd70748a5df",
          "name": "identifiers"
        },
        "response": {
          "id": "aca28b3e-a41b-4517-990b-92f57d11b3a6",
          "status": "OK",
          "code": 200,
          "responseTime": 1209,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421efd6c-40f7-4c0b-b102-2cd123dc046f",
        "cursor": {
          "ref": "f2a21fc1-b630-401d-9982-a1111064a45f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f48d30d4-96ff-46ae-813b-c747c2186caf"
        },
        "item": {
          "id": "421efd6c-40f7-4c0b-b102-2cd123dc046f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ac9e47a8-925d-475d-9016-c1e3b5bea190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6534c3e7-397e-4ee1-8e9b-b9f1fb1aa808",
        "cursor": {
          "ref": "cc0b12bd-866d-4317-8a67-e273d037e8fd",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "172dd623-c8b9-4965-a7b7-cce095d4d4a1"
        },
        "item": {
          "id": "6534c3e7-397e-4ee1-8e9b-b9f1fb1aa808",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f713c105-c68a-4882-8ead-834a72a00f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5da3b3-819e-4c8b-88a5-852f22f0a832",
        "cursor": {
          "ref": "1324db1a-d2f9-4832-808d-34b661361b42",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "73059064-4dca-45dc-a699-781d07ab2605"
        },
        "item": {
          "id": "9b5da3b3-819e-4c8b-88a5-852f22f0a832",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3c3b39d4-f50f-498a-82fe-fe851d820ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b48295-49c5-4a96-aeb5-5ae31b3e2250",
        "cursor": {
          "ref": "a008d512-4382-489a-bf81-f35bdd484ede",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "93cd5318-4ef5-494e-99e6-83322a7a2997"
        },
        "item": {
          "id": "d7b48295-49c5-4a96-aeb5-5ae31b3e2250",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fcf6b413-9dbd-40cc-bcf3-113274ea3083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176c3713-ca1d-4f05-a07f-b2d443c429be",
        "cursor": {
          "ref": "47187c1e-ab15-43ab-aecc-eadb815fc358",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "22ba6caf-f131-4dd3-95a7-6f3cb2969a21"
        },
        "item": {
          "id": "176c3713-ca1d-4f05-a07f-b2d443c429be",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "247e7fb6-698d-423e-a315-78a32b60f63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbda4e74-e7ec-4bc4-af28-2c15f844545e",
        "cursor": {
          "ref": "48e6bf49-e6d3-496d-99b9-527d9487e477",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c8b9f130-e2a0-4b2d-8afa-1a7d4a2b5e7a"
        },
        "item": {
          "id": "bbda4e74-e7ec-4bc4-af28-2c15f844545e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a47dcf96-e869-4004-9181-1c5fd6377833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a425bd50-da16-4379-b17d-34622ba9c112",
        "cursor": {
          "ref": "32706c39-bd25-44ed-a98d-bd4f619aed11",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7a489ed8-9058-4179-a0b4-50898519aaa9"
        },
        "item": {
          "id": "a425bd50-da16-4379-b17d-34622ba9c112",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "103e8149-0d7b-4e0c-85fd-ed010e5c8a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bfdb35-c0e9-4ab7-abee-909ab6eec5d9",
        "cursor": {
          "ref": "8fd47857-c566-4856-85fd-b474be09ccc9",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3d962b18-560c-4c99-a8da-eb971524e879"
        },
        "item": {
          "id": "26bfdb35-c0e9-4ab7-abee-909ab6eec5d9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "246c9727-515a-4ad0-860b-0743ce5f3c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f976326-09c7-4f42-bdb8-70715d0662f0",
        "cursor": {
          "ref": "8d06476b-f370-4c84-90f3-56d9fb773d15",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "268be5de-a00c-4d2c-a128-38c14104f38c"
        },
        "item": {
          "id": "7f976326-09c7-4f42-bdb8-70715d0662f0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f0c134f9-6956-451e-b599-ef6bb48bc4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcee5033-efe8-4fe0-9616-86858580b008",
        "cursor": {
          "ref": "6d9ed7ab-f35a-4e6a-b63b-fa66f305043d",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "650fa3f3-3ac5-447d-8ee4-aae74f9dd0d2"
        },
        "item": {
          "id": "bcee5033-efe8-4fe0-9616-86858580b008",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a217eec4-650c-40ea-b928-503e94c64825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907ecd0b-6148-46fc-b5ef-e3f8f75d46c9",
        "cursor": {
          "ref": "8c3a779c-0465-4c4a-8aec-9f6f7a1b91c0",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "798041de-8006-4832-8ade-c98f1e73e9c9"
        },
        "item": {
          "id": "907ecd0b-6148-46fc-b5ef-e3f8f75d46c9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d9934826-14e8-42db-9994-661b5d2f84dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfcc392-81dd-40dd-b38d-508956113e07",
        "cursor": {
          "ref": "4af4f48f-c052-4877-a3aa-0f01fcbe8f7f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "08140aea-2334-42be-a8d4-80fd7fbb3913"
        },
        "item": {
          "id": "1cfcc392-81dd-40dd-b38d-508956113e07",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c43a200e-7d98-468c-9de9-2cd0c2b3524a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905ee01d-5399-462f-85c6-b4c963331c9c",
        "cursor": {
          "ref": "374bba8b-dac7-456f-8c9c-c7fd325b18f5",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ee1c2290-251d-43a7-bbdf-ed69f2794bea"
        },
        "item": {
          "id": "905ee01d-5399-462f-85c6-b4c963331c9c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "695946b0-c991-4e50-9129-6cd72c2fb071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7d20e5-d4a3-48dc-8172-8df3fd9226d5",
        "cursor": {
          "ref": "785d8fac-98ee-4a22-a0a8-cc79467f3578",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "071a9086-e8d5-4f45-8f11-e9887ed57454"
        },
        "item": {
          "id": "3c7d20e5-d4a3-48dc-8172-8df3fd9226d5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3900eeaa-a2da-46ca-b55a-4ec1a1745b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f08686-9c0d-44de-9517-c436172f8f18",
        "cursor": {
          "ref": "0402bf3c-57ef-4e26-a8fc-b2361f892fc6",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b41591bc-4987-4dda-8335-88b05f74faf1"
        },
        "item": {
          "id": "f3f08686-9c0d-44de-9517-c436172f8f18",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "723056f3-d0df-4307-86e6-8b9a0b9ec7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f40786-4b3e-4399-a738-a3734fdf99fc",
        "cursor": {
          "ref": "94d8f82e-e86c-467b-b0e2-2f3fa25747bb",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4100f0b5-0e4f-4264-926e-8d51f5c219b5"
        },
        "item": {
          "id": "10f40786-4b3e-4399-a738-a3734fdf99fc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "686a59fc-8019-452b-a767-a04cbd01da03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48cd99c-e192-4554-b233-0dabb9aa79fa",
        "cursor": {
          "ref": "be4218fc-eac8-47a5-b172-51eb78a197c7",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d42b4827-571c-4725-8318-dbb12384bfa2"
        },
        "item": {
          "id": "a48cd99c-e192-4554-b233-0dabb9aa79fa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "babc3f52-4f7c-4b77-99b6-4d365b426fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbabc1f-e624-4e1e-ba4a-ba694f319c27",
        "cursor": {
          "ref": "4333bae6-9d65-4084-890c-af8f7c206bb2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c6492ff9-6c97-4edb-aad9-1605b9bff11f"
        },
        "item": {
          "id": "8cbabc1f-e624-4e1e-ba4a-ba694f319c27",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a9dcdcad-52c1-4498-8f25-9a4d01d5e3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1aab4d-7247-4c70-bba1-0741ea303bb2",
        "cursor": {
          "ref": "6139fed9-493c-4968-982d-ce399b9cfa53",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ec7de937-1ca5-42df-aff0-a85b2b817598"
        },
        "item": {
          "id": "1f1aab4d-7247-4c70-bba1-0741ea303bb2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "722d3ad7-55d1-48dc-8b94-75a886669a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfe6d97-68cc-4de4-accf-540e875bf0d9",
        "cursor": {
          "ref": "08a06e98-ef36-4bf6-b784-394a95f0e2ee",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "05e180e7-629c-4f6f-810d-d9a5118d59a0"
        },
        "item": {
          "id": "4cfe6d97-68cc-4de4-accf-540e875bf0d9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6cd3ba91-800c-487c-8a38-905297a809c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0b4ca1-1c7b-43d3-80f9-b1932fe0e98b",
        "cursor": {
          "ref": "3c51bcd2-baca-447a-bfe5-552f35b7ba72",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0c3a6b01-832c-4040-a500-c8075c5a11d9"
        },
        "item": {
          "id": "df0b4ca1-1c7b-43d3-80f9-b1932fe0e98b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5e5f8f3f-896b-453c-ade2-21d0ccd1b5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c86187-5f03-40a6-b680-e72bdc3139b2",
        "cursor": {
          "ref": "4c1c040d-5bcc-410c-ac0d-12286395235e",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4cc2a4db-6a73-4c80-84d9-67f761870460"
        },
        "item": {
          "id": "18c86187-5f03-40a6-b680-e72bdc3139b2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3cf2e252-924c-4004-866e-a99db277ab91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329a452d-612d-472f-a585-1fc6273ef15b",
        "cursor": {
          "ref": "235c4fd5-e390-4437-8947-51b4671eecab",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "542654b9-bdb8-4ad1-b0e2-3ddf9c1644f5"
        },
        "item": {
          "id": "329a452d-612d-472f-a585-1fc6273ef15b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a91b9686-4212-440a-a09c-4fa7e547e905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2238c0ef-ec04-4843-9aa3-02d1cf19cefc",
        "cursor": {
          "ref": "d5090409-a7d3-4eed-ba9e-c70d59775ad3",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ebb4c951-6e8e-43ef-9076-22d771d5edcd"
        },
        "item": {
          "id": "2238c0ef-ec04-4843-9aa3-02d1cf19cefc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "64580cee-9d21-4a86-b386-cc13b7995bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fb1a74-887a-4c46-920b-d1cf8316e49c",
        "cursor": {
          "ref": "1ed8504f-2c0f-4a26-a553-87ec4f16da0f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6d70c6aa-ab2f-46a0-b42f-87b49e03434f"
        },
        "item": {
          "id": "64fb1a74-887a-4c46-920b-d1cf8316e49c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fbbd4794-c3a3-403a-bf5a-bd21ffa4a4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45be656f-0f81-4ec2-89fa-56b7efb31e84",
        "cursor": {
          "ref": "5ecedb09-1d23-4abd-b84f-d9320ce60d41",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3eb1254b-8ab6-466a-b8a7-a14be89672fb"
        },
        "item": {
          "id": "45be656f-0f81-4ec2-89fa-56b7efb31e84",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7e918c85-8b45-4683-bf45-eda98b814aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f108b20-1b06-4cd7-8431-79f285765bcf",
        "cursor": {
          "ref": "62232848-7722-40a2-b335-80e142bc1671",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b018164b-903f-4b14-ba9d-f2fc83412983"
        },
        "item": {
          "id": "5f108b20-1b06-4cd7-8431-79f285765bcf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3478232b-1b34-4a4d-8324-4d35c5675999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67b30ca-d4e3-4727-9f84-0d8f679295e7",
        "cursor": {
          "ref": "ccbce945-84c1-4453-8d19-bb2649e54995",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8c0c44bb-cd44-4ccc-9271-389671ebc9fc"
        },
        "item": {
          "id": "e67b30ca-d4e3-4727-9f84-0d8f679295e7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1c1e22b7-385d-49ad-ba77-73f6c79fbde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c048470d-7666-4713-a9ce-f6f3b11e4d6f",
        "cursor": {
          "ref": "13aa0ca2-4781-49ef-87f3-9c02f41aa509",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dc9b1b45-d12e-4a25-ab2c-f3dd226a4365"
        },
        "item": {
          "id": "c048470d-7666-4713-a9ce-f6f3b11e4d6f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fe8af8b6-4081-45af-90b8-27353aed674e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a9e5cc-d8d4-4132-b95d-184d42150921",
        "cursor": {
          "ref": "888b3b11-e722-4d10-866a-b3dd2151711f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f221f2e4-b528-4d57-8955-70939aad618a"
        },
        "item": {
          "id": "62a9e5cc-d8d4-4132-b95d-184d42150921",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e40d6160-c45f-40c7-aeaf-d521b242a4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d9d92c-79c3-42a6-bc15-82ab1839d7ee",
        "cursor": {
          "ref": "f2bd74da-9dcb-4f0f-8760-4e0539916201",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c1871c09-39ee-42b9-b637-49f1c3c3af08"
        },
        "item": {
          "id": "58d9d92c-79c3-42a6-bc15-82ab1839d7ee",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9c673954-de0c-4ff4-a405-08d5abb74f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87a06de-0fcd-4a34-8f72-b53c722bf5b7",
        "cursor": {
          "ref": "41033191-4d08-4242-ae8a-501987eca215",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "afe10e29-fb23-4b28-9328-ddb54a8f7186"
        },
        "item": {
          "id": "c87a06de-0fcd-4a34-8f72-b53c722bf5b7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8b744c43-4b0d-4508-bd9c-811004bad201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a978b319-8411-4183-ac02-082c75678d21",
        "cursor": {
          "ref": "d93ddfe3-1120-4ca1-aff2-5ce2c3f05bbb",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ca9f4e2b-d410-45f3-ba11-a9fc25e61d54"
        },
        "item": {
          "id": "a978b319-8411-4183-ac02-082c75678d21",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "38a6f529-2f92-4508-adf3-9c910b3d4cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b187fb-6e21-47fa-923d-62df6f140a16",
        "cursor": {
          "ref": "1ddb5039-20e1-4a87-a977-77f40d5ca549",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6563503b-34f4-4931-880f-95991fd8b92f"
        },
        "item": {
          "id": "d0b187fb-6e21-47fa-923d-62df6f140a16",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e62f596c-9028-4218-bd1f-50c844f7b018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e4802f-3cee-4085-a728-61f73c8130b2",
        "cursor": {
          "ref": "32c59ef0-54da-4c47-92f0-695824178d55",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ccda13b1-bf45-4897-b8a1-b50671b0fa19"
        },
        "item": {
          "id": "28e4802f-3cee-4085-a728-61f73c8130b2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c0d7d5e8-343b-4f83-81ff-063132fdb50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3dd857-f780-4dfc-8e99-a82b3bda30dd",
        "cursor": {
          "ref": "b1dd841e-29b8-4029-8516-e09963b07a99",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0d5c6efa-35aa-4eb6-a299-0e792a33faa8"
        },
        "item": {
          "id": "5f3dd857-f780-4dfc-8e99-a82b3bda30dd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5d1a002e-b6f6-4d54-8011-7648bee23c91",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 604,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5764cc0-42ed-490a-8e84-dce39f5045ad",
        "cursor": {
          "ref": "ed2cf2be-662c-4c17-ae76-006ff727c644",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b8eef6f5-a447-4277-8b85-df27fa9f7e90"
        },
        "item": {
          "id": "f5764cc0-42ed-490a-8e84-dce39f5045ad",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "021b7e7f-3c9b-49db-8beb-4d3982198ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949d029a-b14c-4d96-ab08-4786f80a9431",
        "cursor": {
          "ref": "eede4de4-4656-4b63-bb92-8e482c4bbd1a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b2e60478-7718-4c76-8be2-bcd5c15eccd9"
        },
        "item": {
          "id": "949d029a-b14c-4d96-ab08-4786f80a9431",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9551d403-84da-4323-a856-a8d861284fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9504f69c-7b80-45f3-8e8a-007c6b0bfc43",
        "cursor": {
          "ref": "ef9c844d-626d-41bf-bdd6-f18529789493",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0cb6339d-2add-4d97-b7c5-d5a058c359bf"
        },
        "item": {
          "id": "9504f69c-7b80-45f3-8e8a-007c6b0bfc43",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9cb342c1-dc6b-4894-92fa-76a569504f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddf82ac-b217-4fc2-aaff-1d2c2ecb9b5b",
        "cursor": {
          "ref": "237a39bb-a720-430e-8f50-2492ac9b30ac",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0e9c39fc-9495-4d24-a563-9f5c20eb5dd2"
        },
        "item": {
          "id": "3ddf82ac-b217-4fc2-aaff-1d2c2ecb9b5b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d00e7783-eee4-4f5f-8895-42c3abc15525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683bd1c7-8a8c-4e78-809f-1ba97ddbfd6a",
        "cursor": {
          "ref": "f76859d2-1954-4ac2-8c9f-cd4b9caedb2d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cb2c179b-3076-4ccb-9edc-4a165b5897eb"
        },
        "item": {
          "id": "683bd1c7-8a8c-4e78-809f-1ba97ddbfd6a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6946cc50-a8a9-47e4-ab43-fe127430e61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a76537-aed8-4576-887e-81e87f0b8412",
        "cursor": {
          "ref": "a5553e80-ba69-4455-b3d7-80eb91be12ad",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2d3d6f16-916b-4aa9-b0f0-3d542a3435dd"
        },
        "item": {
          "id": "76a76537-aed8-4576-887e-81e87f0b8412",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7cfe7f68-dd36-41a1-99f3-750ecdc8ceef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78e1828-60c0-4a20-9fbc-fad9c69fa782",
        "cursor": {
          "ref": "253d1ddc-46be-4ca3-8829-ad2619147895",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f987dfe8-688f-4b0c-ad02-77ae66951980"
        },
        "item": {
          "id": "a78e1828-60c0-4a20-9fbc-fad9c69fa782",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ce3593ac-34f8-4ebe-89e5-d955529b1e81",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 612,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36185bd-79d7-4755-afb1-e504994a4951",
        "cursor": {
          "ref": "c1b7a324-72eb-48c7-899f-814c0a5fcb8e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d47ef82f-eff5-4198-9705-7fa44fa9fb19"
        },
        "item": {
          "id": "c36185bd-79d7-4755-afb1-e504994a4951",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7d912034-ca9c-4bf8-9ab8-156148ca9ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d17dec4-bdb5-4ab5-9cf4-059148b65bb5",
        "cursor": {
          "ref": "3830e656-676e-42fb-bcef-f5006fdf6374",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7d0bf2fe-aafa-43cd-a73e-0a0e61afabaa"
        },
        "item": {
          "id": "5d17dec4-bdb5-4ab5-9cf4-059148b65bb5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3d327a56-c37b-4a5e-9ea5-0091fa906840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8e1565-28ba-4abb-9362-9bb1943331b5",
        "cursor": {
          "ref": "08dc67d9-73df-4efd-8e7e-7ea104d5b33d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "209e3a30-0e0b-4fd8-9e58-445ca819f053"
        },
        "item": {
          "id": "8a8e1565-28ba-4abb-9362-9bb1943331b5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d8fdade2-7f5c-4cca-a655-ea798a7a1194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f593f9ac-c601-4b4f-9d85-20c192111dab",
        "cursor": {
          "ref": "6b44f49e-42a5-4ac6-b4c8-a71aa425f0fa",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "65405cc5-6dbc-4257-823b-ccf9d22bb513"
        },
        "item": {
          "id": "f593f9ac-c601-4b4f-9d85-20c192111dab",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1c42debc-b2c4-4539-a8da-580ab5f55ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301da9dd-f1ba-45d8-b330-f04e0899cdc4",
        "cursor": {
          "ref": "167a5b91-92a3-48d8-a54b-ac67378a0364",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ac5e1b24-caa1-44b8-b10b-91935141a448"
        },
        "item": {
          "id": "301da9dd-f1ba-45d8-b330-f04e0899cdc4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2fcb574c-564f-4746-b27f-27879f8cfab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f814319c-8375-48a2-a964-f2a4f7bffe73",
        "cursor": {
          "ref": "e2f17762-2dfb-4a16-94f5-e78603b49f39",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2a2ce817-b60f-4b76-bd09-7fe36b2092ff"
        },
        "item": {
          "id": "f814319c-8375-48a2-a964-f2a4f7bffe73",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "599574bd-93ef-455b-a5ae-8b71a426554e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cad2d16-df36-4d52-8e31-0b5a7a05ef3c",
        "cursor": {
          "ref": "b4af122e-c82b-4cb8-a4cd-b4a9955787a7",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1c10a872-4feb-4387-886c-0b7de828b409"
        },
        "item": {
          "id": "7cad2d16-df36-4d52-8e31-0b5a7a05ef3c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "307d7a36-ea50-4737-a5ff-cf0989d80035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7f28c1-56af-4066-b5ab-ea2897625af4",
        "cursor": {
          "ref": "c046e19b-d021-45e6-a276-deeb84aee0f8",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d18d2157-d112-45e1-8296-132ec8f98208"
        },
        "item": {
          "id": "3a7f28c1-56af-4066-b5ab-ea2897625af4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "35d929f7-6114-41e8-acfa-68e6fbe860f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f4a7ed-a2ce-4b23-945c-a2402c3c22d0",
        "cursor": {
          "ref": "c7dfe2ca-39a6-4742-84b6-c0cc65e00907",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "412e3933-f0ec-42f5-b397-49a8428ec886"
        },
        "item": {
          "id": "96f4a7ed-a2ce-4b23-945c-a2402c3c22d0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "beb71bdd-e8e0-4b7a-abf0-191cdde2f172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23890358-d972-4eb1-b222-fd9c7baabf0b",
        "cursor": {
          "ref": "baae32c4-25e8-4eba-a0bb-390eb8c552d1",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "167ead8b-f10f-433c-80eb-7c9de8ec233b"
        },
        "item": {
          "id": "23890358-d972-4eb1-b222-fd9c7baabf0b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e6b0574a-675a-41bb-bd53-bd656e499d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e835a40b-723d-48ac-8400-b5f32c1dc5c2",
        "cursor": {
          "ref": "c8b31356-082d-4e52-b4de-81bb65be8716",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9b2f562b-d270-4f98-831c-8ea772caa028"
        },
        "item": {
          "id": "e835a40b-723d-48ac-8400-b5f32c1dc5c2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d2a96603-320d-4df4-8c22-ec05f0b24235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d926a7-78c2-4168-a17d-d42da7081a28",
        "cursor": {
          "ref": "36a02a7e-957c-42b4-8065-80d8a3d8f31a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "71a8602d-0268-47b9-aad4-e31778c51366"
        },
        "item": {
          "id": "e1d926a7-78c2-4168-a17d-d42da7081a28",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2784dbc8-1fbe-4a56-bcf6-c79846a83ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71982034-595a-4fba-932c-8bcec6613dd7",
        "cursor": {
          "ref": "6b1bb0a0-27a6-4ef5-9b9a-6b1313859874",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "24b825e2-93e9-415b-95e1-3e1e124220d3"
        },
        "item": {
          "id": "71982034-595a-4fba-932c-8bcec6613dd7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "341fbc5a-bf92-4feb-a638-7a07dd2a0887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8de8f9-6a1f-4214-bcf4-297b15145148",
        "cursor": {
          "ref": "8ac5ed61-2468-47ee-9b76-2a8d7eec7802",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ab2b8048-e4e7-4e29-b084-4a16e772f3ce"
        },
        "item": {
          "id": "2d8de8f9-6a1f-4214-bcf4-297b15145148",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c78f28a4-0cd2-4ace-b6c2-ef0e891a6dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ca9aa3-3c7a-40f3-840a-489347de39d3",
        "cursor": {
          "ref": "e8ac186c-37bb-4863-a3c1-b4ee839ae258",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aa572989-f4a3-41de-bf51-8cbadafe64d7"
        },
        "item": {
          "id": "82ca9aa3-3c7a-40f3-840a-489347de39d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "89093239-988b-473a-8250-4008a11083f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f49043-1fa7-4d99-bc73-297bb6b93ccf",
        "cursor": {
          "ref": "a1f60ea4-e0d1-4ba3-bacb-6a13311f9130",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b8511855-455c-4640-85b7-65dbd6858766"
        },
        "item": {
          "id": "36f49043-1fa7-4d99-bc73-297bb6b93ccf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ddaae4fc-2f68-4908-af77-9c93a2c718d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43af11c3-3836-474e-954c-544d073b550d",
        "cursor": {
          "ref": "e5f4d90c-b2ac-4885-957c-a6cab5ceb1f6",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7ce98d8d-5524-4fe5-bd46-51e225c55016"
        },
        "item": {
          "id": "43af11c3-3836-474e-954c-544d073b550d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "765b77e7-ddb0-4f49-a7e2-56269874c503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2bbeca-c302-4ae9-93da-751d79bdfa00",
        "cursor": {
          "ref": "992318cb-704e-43ef-aec1-be72d4cf51b3",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3077d373-c2fc-4403-920a-efb11e62eb83"
        },
        "item": {
          "id": "1e2bbeca-c302-4ae9-93da-751d79bdfa00",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27aa534e-774b-4e01-b542-1ac011b7c07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0a6644-be60-4373-8d2a-f3595fa4a014",
        "cursor": {
          "ref": "34028d47-4624-479c-bff7-cf8f6f4d3284",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "91c22399-2689-4833-8c1e-0bcd11685d7b"
        },
        "item": {
          "id": "2c0a6644-be60-4373-8d2a-f3595fa4a014",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7cb24774-ba76-44ce-808c-0d87ab03a493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e52f274-414b-48f8-9c32-bb05ec3eac8e",
        "cursor": {
          "ref": "a282800d-d6f1-4489-b10c-8a7a9b6fee46",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5a92313d-489b-4bf1-a4c0-c58c92c8dbaa"
        },
        "item": {
          "id": "0e52f274-414b-48f8-9c32-bb05ec3eac8e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bdf2d175-5ad2-4ff2-bb66-15f0d4e8372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ee432f-7c2f-4127-9492-4c13262bcdb0",
        "cursor": {
          "ref": "6ade2179-46fd-467d-9d1d-bd9e2e1f4bec",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3df5f208-30d2-424c-86b7-23814cbe1982"
        },
        "item": {
          "id": "b9ee432f-7c2f-4127-9492-4c13262bcdb0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d8ed155e-d4ed-4040-a28f-977c92d0a08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b73edc-f940-4248-98cf-7cd087d05d18",
        "cursor": {
          "ref": "b494e54e-bcbe-45ef-998c-7e3714e771a7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "62d63155-3cc7-4e7a-9128-b29e5170282c"
        },
        "item": {
          "id": "b5b73edc-f940-4248-98cf-7cd087d05d18",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b11c9e0e-cea8-45bf-a780-8244daa2b01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f69c78-5dd6-40ad-a871-d0189f44a95a",
        "cursor": {
          "ref": "4fb36441-744f-4b20-8a74-094b80782e13",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3aa2e7f2-7093-4f2e-bc11-39033e2b97d5"
        },
        "item": {
          "id": "a4f69c78-5dd6-40ad-a871-d0189f44a95a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab95e239-9882-45c0-8d96-7a6fe56730f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c78c20-d055-49ab-8271-14cf62540903",
        "cursor": {
          "ref": "e60d00a3-e1ea-4472-a7d4-81b21a0a2fcd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cd20c907-7605-4ce5-aee0-d8aa0ad6a42b"
        },
        "item": {
          "id": "43c78c20-d055-49ab-8271-14cf62540903",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "abbd53a6-8152-464e-ba3f-8fdd842381af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babc7c6f-1b0f-4fe3-af35-557ca29840a1",
        "cursor": {
          "ref": "f8f9b684-2c91-4341-b83d-2e5895fdf52b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f9986552-89f7-498f-989f-07ef67572c27"
        },
        "item": {
          "id": "babc7c6f-1b0f-4fe3-af35-557ca29840a1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b35558f7-c4c9-432a-8ab3-7d08326ea05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be7860c-ea06-471a-8033-06619290bab6",
        "cursor": {
          "ref": "e34f6602-48cc-400c-820b-864950cab230",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0ddff4d9-6337-44c6-a96d-3b7182eb1ce5"
        },
        "item": {
          "id": "3be7860c-ea06-471a-8033-06619290bab6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4a6b561a-f7e6-4fea-ac43-c110842e330f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b1e6fd-5c71-47c3-b273-a4089f4c686f",
        "cursor": {
          "ref": "3dca2fa7-f6a8-40d9-baa9-f0b0ecf2e015",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bbbb52bf-61fb-4727-81cb-4e96913fca1b"
        },
        "item": {
          "id": "11b1e6fd-5c71-47c3-b273-a4089f4c686f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0349db00-a03f-4536-bacf-c8124b5d9d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d874a2f3-28b7-4c06-bd24-b749b2c5fd10",
        "cursor": {
          "ref": "e9cd2583-7957-45e9-9a61-538aa73c354a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d935f933-e384-4058-b34b-6cfbb080eb3d"
        },
        "item": {
          "id": "d874a2f3-28b7-4c06-bd24-b749b2c5fd10",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e7166956-df09-4f3e-bba0-0f94f69c5f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3a1f33-5629-48d8-9507-2cc9e216739b",
        "cursor": {
          "ref": "05d2215d-23e5-480d-91f7-b9b2c3a3200b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2b2aa974-f3c5-48a3-9719-73ef3fea1800"
        },
        "item": {
          "id": "ec3a1f33-5629-48d8-9507-2cc9e216739b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "76c22aa9-7960-44c6-b56c-84001239113a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126c98e4-78e8-4295-9f03-60aeb3ae0ee5",
        "cursor": {
          "ref": "1da38dee-0368-4acb-94e6-9b4fa3d381aa",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7cb2349c-da02-4778-8173-7e769abe551b"
        },
        "item": {
          "id": "126c98e4-78e8-4295-9f03-60aeb3ae0ee5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9e6688c9-6755-4812-acdb-fde64fdff259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3a7b67-b204-4080-b69d-9992d5f496d3",
        "cursor": {
          "ref": "66794675-58ac-4b83-9a50-6ce7f128bb07",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "383bebd0-d67d-4b0a-a58f-bcce35f50d1e"
        },
        "item": {
          "id": "ea3a7b67-b204-4080-b69d-9992d5f496d3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f04fe27b-aa5b-4951-8070-ebe8f03d1b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eceda8aa-3360-41ea-9889-ce83f7512f25",
        "cursor": {
          "ref": "3a590134-b4cc-4a55-b7e6-59cd664bf478",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "943f02ec-df78-49af-9342-50096392eade"
        },
        "item": {
          "id": "eceda8aa-3360-41ea-9889-ce83f7512f25",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1456f6ce-f916-4576-94af-60372fc76ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09086777-8dc0-4910-913a-bf4d1a2dca5f",
        "cursor": {
          "ref": "f3417854-7a86-417a-a733-cb6d49576a92",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "976a0b0a-4f6d-4bd9-beed-6eef8693bcf0"
        },
        "item": {
          "id": "09086777-8dc0-4910-913a-bf4d1a2dca5f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f6297e20-4c33-45c6-b4f8-a5d4a3363d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf5c91f-9ad4-4884-8e08-6962bcd462eb",
        "cursor": {
          "ref": "e48fdd9e-60fa-4917-8f0e-06bcad94b04d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "00ac0039-89c0-4174-8ae0-93f4fdfc66c2"
        },
        "item": {
          "id": "fbf5c91f-9ad4-4884-8e08-6962bcd462eb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "06d1fd55-4a27-4b75-a628-a27e3e7adb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21c6b15-23ff-46ff-9fe7-69b4f4454063",
        "cursor": {
          "ref": "7b190834-46b9-4963-8aeb-9edf769720ea",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "89530d54-4e25-458d-9192-4769993b1413"
        },
        "item": {
          "id": "b21c6b15-23ff-46ff-9fe7-69b4f4454063",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b91cdfdc-2f5f-469d-a399-513fc6a1261f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7c5e20-5e72-40b2-9f9a-3a0844edefbe",
        "cursor": {
          "ref": "485f24b2-4345-445f-b794-5991e5a4c1c1",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3473631e-2e64-4e51-bb9d-f0ad59c3637e"
        },
        "item": {
          "id": "ed7c5e20-5e72-40b2-9f9a-3a0844edefbe",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ce882766-09e1-46c9-8f97-af802487ca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ba3148-7bee-4f86-bbbd-ea9e7829e490",
        "cursor": {
          "ref": "7baa03ae-b676-4feb-a7c0-9cb8c6c50e5c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "225470d8-aa7e-45f0-a694-7a716a39dbac"
        },
        "item": {
          "id": "95ba3148-7bee-4f86-bbbd-ea9e7829e490",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b14a3de4-72b8-44b7-98fa-67c95fd5fba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa1d646-f1cf-4f76-9db8-0dfb61f20499",
        "cursor": {
          "ref": "8df0e781-5bcf-4950-a6b7-2026640f94d7",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c52795ba-bfca-4501-92ff-14a423301503"
        },
        "item": {
          "id": "4fa1d646-f1cf-4f76-9db8-0dfb61f20499",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e69c52bb-1847-4895-aacb-9901e93ebf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ead14d-a3e6-472d-af9e-48597c12bdaa",
        "cursor": {
          "ref": "8ad05ece-76a9-4ae1-ad50-e0ea4098a53b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4802ff67-19d1-45d8-8398-be5ef47ca65a"
        },
        "item": {
          "id": "77ead14d-a3e6-472d-af9e-48597c12bdaa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "73ad7ebe-c0ae-4224-ac63-b7917f95ab3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df615119-1359-42e7-a0b0-147f97fc2e70",
        "cursor": {
          "ref": "0b875dbe-b77e-4241-b7e3-6e4f97ef1bb8",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6694c9a2-cc41-4e35-bad4-4514a6688ab1"
        },
        "item": {
          "id": "df615119-1359-42e7-a0b0-147f97fc2e70",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "180f1612-3188-4fa4-9711-91676a904f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac5dbe9-84a0-42fa-a185-f99f493b6e5c",
        "cursor": {
          "ref": "e35ab577-1e44-44f2-9f17-01dd6dc51b61",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b9ca0a0d-f5c5-4c24-947a-c04f03700e51"
        },
        "item": {
          "id": "9ac5dbe9-84a0-42fa-a185-f99f493b6e5c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8f5b1248-f0cf-4488-84ac-be04cb92346b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566745a9-0f7a-47dd-a9a2-6e57b3118529",
        "cursor": {
          "ref": "2e40535e-a97b-4fec-bd33-b7297938805c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d896757b-2df7-4715-b691-4675ea44431f"
        },
        "item": {
          "id": "566745a9-0f7a-47dd-a9a2-6e57b3118529",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "28f7a57c-573d-4335-9bea-3ad420898497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f21007b-15df-43d6-864f-3c9bd32ee365",
        "cursor": {
          "ref": "30eb4c53-9209-4f63-994f-029e8a67e55a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5f5eee10-2721-4cdb-bde4-53bd86766d0d"
        },
        "item": {
          "id": "7f21007b-15df-43d6-864f-3c9bd32ee365",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "162b3dfe-df22-400f-a2e6-faa12c2d76c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4191e6c1-8ab6-4c6c-bc97-411e363de874",
        "cursor": {
          "ref": "bc2dc425-98c8-4354-b1d2-780d0e8e2ae3",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "db320950-2c1c-499e-ab57-65aa5488e3ab"
        },
        "item": {
          "id": "4191e6c1-8ab6-4c6c-bc97-411e363de874",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a61d09f2-255e-490f-9344-316f687c04ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717207a0-4ef7-4659-b44c-806abe963ec5",
        "cursor": {
          "ref": "8f61fe97-e6ba-41e5-800e-471fa788a005",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "27513deb-2700-48b4-813c-1cbdb06a935a"
        },
        "item": {
          "id": "717207a0-4ef7-4659-b44c-806abe963ec5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "af5af591-3fa6-4b78-b06d-b9ec1708076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5968102-dda7-4b1b-93e6-cfe301fa729b",
        "cursor": {
          "ref": "f38363ff-2961-4788-a149-c4119543fa48",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "276bba3f-704d-4cde-a20e-0faa3fa16a04"
        },
        "item": {
          "id": "e5968102-dda7-4b1b-93e6-cfe301fa729b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "11b5c521-e570-48f5-9b67-5b8b15ebe696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679bcea0-0457-4239-aa07-40bf95073168",
        "cursor": {
          "ref": "cd397056-37eb-4fbe-91a2-5cbdd88ba115",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b075fc70-49fa-4586-a297-048929b4eb3d"
        },
        "item": {
          "id": "679bcea0-0457-4239-aa07-40bf95073168",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "de556e2a-e322-45b3-bc06-43f0b7e93430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9519823c-87d8-49dc-9af4-93e26b9bbf4e",
        "cursor": {
          "ref": "74a49aaa-066e-4bde-931e-dc33567f775a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7d552e5b-ddcc-4f49-ba23-ada334648948"
        },
        "item": {
          "id": "9519823c-87d8-49dc-9af4-93e26b9bbf4e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ab579348-4a16-4e43-9c35-04a78049dd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c347e6-15a1-437b-9210-951277fb36a1",
        "cursor": {
          "ref": "4fae7d70-d842-4ae9-aa1c-d1abb58d86e2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1eeebccd-de57-4b75-936b-d2bed5c1fa19"
        },
        "item": {
          "id": "11c347e6-15a1-437b-9210-951277fb36a1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "62bb540e-9725-416f-8eae-064322111935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e232125-765a-4d0a-af4f-a87b4906242b",
        "cursor": {
          "ref": "20780b7f-5fd6-4d00-a365-a0a4a6d9e616",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bc9bf68c-e999-4e72-a778-b7d2bf8179c7"
        },
        "item": {
          "id": "9e232125-765a-4d0a-af4f-a87b4906242b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "02031ca0-6d66-42b6-9647-b396eb60b985",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da398fa-95a7-4764-8b61-d5dd08909a84",
        "cursor": {
          "ref": "dd5da2be-6ae6-4fbc-b701-62f37847fd9e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1247dbbd-0798-4cfb-b3f3-991bbb36aabd"
        },
        "item": {
          "id": "7da398fa-95a7-4764-8b61-d5dd08909a84",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e3d3b3f1-375a-4358-8588-52965f9e5aa8",
          "status": "Created",
          "code": 201,
          "responseTime": 6205,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e588838-82d4-44ec-b015-25cbbe2c3c2b",
        "cursor": {
          "ref": "3de81934-045f-4fd6-8506-9332113b066a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "15b51525-3a6f-4bd4-997c-6dbc89839038"
        },
        "item": {
          "id": "3e588838-82d4-44ec-b015-25cbbe2c3c2b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ceec3b1d-df59-4e85-a6da-0afa0a841e31",
          "status": "Created",
          "code": 201,
          "responseTime": 6076,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "75331095-84eb-48e1-954a-8012cea874a3",
        "cursor": {
          "ref": "5a0c5190-e003-42c6-8849-3c05b1232203",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "493c3f19-78ea-4cd3-afc7-3a265bc2b8da"
        },
        "item": {
          "id": "75331095-84eb-48e1-954a-8012cea874a3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "733150fa-b31a-4c1a-8562-0d5e266fa40d",
          "status": "Created",
          "code": 201,
          "responseTime": 6168,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7254e044-fc06-41ff-a303-5dd76ee0373a",
        "cursor": {
          "ref": "2036d6b2-51cb-48ca-808c-6416f91939ad",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "558de28d-c781-4afe-a0fd-0c4c9acfbdd8"
        },
        "item": {
          "id": "7254e044-fc06-41ff-a303-5dd76ee0373a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "61c61cf2-f478-439c-b4f6-ca7ad512b1cc",
          "status": "Created",
          "code": 201,
          "responseTime": 5674,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5288c244-4b4d-4c2f-8575-1405fa25db9a",
        "cursor": {
          "ref": "b2cc47f5-1f17-4715-ada9-065525bf2236",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "caa63941-c8c9-4f5b-86bf-bb66a99ad6b3"
        },
        "item": {
          "id": "5288c244-4b4d-4c2f-8575-1405fa25db9a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "735ee021-d979-49ed-b057-b631858a2336",
          "status": "Created",
          "code": 201,
          "responseTime": 6084,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa70ceb1-e6f8-4a87-9cbb-2a32438e6370",
        "cursor": {
          "ref": "848cb916-6b90-4a52-ac7b-0669a187b89d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "16c9f21a-09cd-4886-b1fb-cba34be44c5a"
        },
        "item": {
          "id": "aa70ceb1-e6f8-4a87-9cbb-2a32438e6370",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4e270646-464e-49c5-b7ce-efc8795f2c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f1515afe-92af-44fd-ac3b-a60d0c7ce7bf",
        "cursor": {
          "ref": "10572446-daed-4777-8ab6-b7224d965e64",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3cd5e01c-2f74-4d44-8eb2-3402f53eb6d9"
        },
        "item": {
          "id": "f1515afe-92af-44fd-ac3b-a60d0c7ce7bf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "20865f2f-5c3c-47f5-aa82-c9aaf13f3ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b42793-0a82-4fdd-848a-bdf0dfed977f",
        "cursor": {
          "ref": "ed50f7a8-9096-4f53-a5a1-86ec9398cd13",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "325338b9-35c2-4faa-af97-9202e4267390"
        },
        "item": {
          "id": "02b42793-0a82-4fdd-848a-bdf0dfed977f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "005eec77-aa2b-4aae-b6a4-8788a90d5dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b261b0d-fa4b-4509-acdb-762112bb6328",
        "cursor": {
          "ref": "96b5a313-05db-4333-be4e-ab5b7b9981fe",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0dff7e56-c521-4b7e-850a-84e2d54c2b48"
        },
        "item": {
          "id": "0b261b0d-fa4b-4509-acdb-762112bb6328",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8849e768-ddd7-4414-a6a4-d19208ccaa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bcdc79-f082-4258-871c-6c2282744b3e",
        "cursor": {
          "ref": "6229c8cc-34cf-46b6-bbb0-43b3a4607107",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f3e346db-37bb-4af0-9e38-ad478e758092"
        },
        "item": {
          "id": "33bcdc79-f082-4258-871c-6c2282744b3e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "610f38c0-62e0-4a28-9769-4160f1f28f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675439bb-77bc-4e67-942b-7f95623ddaae",
        "cursor": {
          "ref": "e8c51e63-82ea-43a5-a6a8-52b452d95da7",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7254c117-4631-455e-b814-c02ae9fa19d6"
        },
        "item": {
          "id": "675439bb-77bc-4e67-942b-7f95623ddaae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1a3e7395-c5c0-444f-8fcf-b50ea8d65670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8850b3f-1524-41ea-8b53-1c8f4343a773",
        "cursor": {
          "ref": "94a03842-09f9-4d60-8af3-a5cccc991541",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6d9259c9-cc8d-4aee-82fb-d1980de7bc99"
        },
        "item": {
          "id": "b8850b3f-1524-41ea-8b53-1c8f4343a773",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1156a4fe-4c7a-43de-8948-702c5585aa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c66cc1-6c66-425f-9714-7daafc21ae68",
        "cursor": {
          "ref": "6ced7863-0eb2-4b99-bcf7-5c0d3c613ceb",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "37706310-20df-4ad6-9d4b-e549cd562cf5"
        },
        "item": {
          "id": "83c66cc1-6c66-425f-9714-7daafc21ae68",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "133252ae-7225-4904-a4bf-0edffc56b768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c069d347-86de-4554-813b-c71af4017113",
        "cursor": {
          "ref": "3e34a4af-ba91-41c0-b2a2-900b1a0ccb70",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ff4a1cf8-4ca0-418a-8257-2755a1ad8b9e"
        },
        "item": {
          "id": "c069d347-86de-4554-813b-c71af4017113",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9de901fc-2d91-4e02-a86a-3ee20c7e5560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a86b16a-ffda-47ca-8ad9-a51017168123",
        "cursor": {
          "ref": "82656aa5-55c2-4589-9fd7-45315e79a8e9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bcc4e411-bcdc-40e6-8d39-c38da4a2b3f3"
        },
        "item": {
          "id": "2a86b16a-ffda-47ca-8ad9-a51017168123",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ce714e37-4461-465c-8c7a-1304552a8a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61f0b8c-56f3-4943-8c32-8c29d0e116bb",
        "cursor": {
          "ref": "c650a769-78b4-42ec-8b98-a7894de99a50",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8d50ba5d-a380-4601-8cc9-e4c0f5869ac4"
        },
        "item": {
          "id": "f61f0b8c-56f3-4943-8c32-8c29d0e116bb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e0a0b7d6-570e-4b1b-b47e-d5fab73e1acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea6506c-9365-486b-a83c-5b5382a3d965",
        "cursor": {
          "ref": "64c8b66f-3a9f-472b-ae95-3ac9057c0715",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c04acf04-fd9f-42dd-b7c6-88ac1e8f1b17"
        },
        "item": {
          "id": "9ea6506c-9365-486b-a83c-5b5382a3d965",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "71a5dfea-a0f5-4ced-9f41-805d8a8bd092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60644e52-98ec-4f0f-8746-3f78db4e1d2d",
        "cursor": {
          "ref": "658b3478-44f8-4474-a7c1-f7716ad1a845",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cc285fc0-8db8-4b2b-81e8-ab3c536891f8"
        },
        "item": {
          "id": "60644e52-98ec-4f0f-8746-3f78db4e1d2d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dd84dde5-9e75-4853-a16c-1bec22f86b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d68c54-3073-4f1a-9022-1237acd2fc3c",
        "cursor": {
          "ref": "8aa012ea-637f-4766-8649-436b479eb105",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f88582b9-fd45-4896-afc1-592945d2012d"
        },
        "item": {
          "id": "83d68c54-3073-4f1a-9022-1237acd2fc3c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fff10546-c476-418f-a9d0-95b676183b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb90e71-6ccf-4de4-97fc-cd796d330a84",
        "cursor": {
          "ref": "ad116212-f751-4da0-9624-6ff1e0d48530",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bf42a364-9b4e-4247-92a6-7fa7b70ef16a"
        },
        "item": {
          "id": "4fb90e71-6ccf-4de4-97fc-cd796d330a84",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c1e90b3-0774-409b-9a26-f0afe5b0e6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0ffffa-5a2c-47ce-9c4f-b85a345cf0ff",
        "cursor": {
          "ref": "74cee5de-2641-415a-80d4-9dc29eaa8219",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7524969e-d162-4ec6-86d4-ace7b62b7cb1"
        },
        "item": {
          "id": "bd0ffffa-5a2c-47ce-9c4f-b85a345cf0ff",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "beb98a60-9e87-4ded-a486-ac3fe00cd6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcc7dbd-00ff-4303-95d2-12bb3ab34b35",
        "cursor": {
          "ref": "9b58b6ee-0dd2-40bb-94be-4a614a3c9974",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "59486fb8-426a-45ca-ae3c-994f28b25e20"
        },
        "item": {
          "id": "dbcc7dbd-00ff-4303-95d2-12bb3ab34b35",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fc817cab-0da4-466a-8c47-43eb409c80df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dd6ac1-7f6d-4187-975f-4d4e25ee19cd",
        "cursor": {
          "ref": "a7e224a2-c48e-4d4c-be68-d77bdfafc8e1",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c7fc5317-03b5-41b6-823d-e99961eae59c"
        },
        "item": {
          "id": "14dd6ac1-7f6d-4187-975f-4d4e25ee19cd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8875e650-e526-4a16-8397-aff7ed1c37d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3538ed2-8f6e-43df-94fe-e026b34e9e90",
        "cursor": {
          "ref": "b7ae6fb7-ef2a-44c8-806a-ce886083919a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5786b909-38d9-465a-b1bc-3dd722785465"
        },
        "item": {
          "id": "b3538ed2-8f6e-43df-94fe-e026b34e9e90",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a89d3149-0223-4d82-bcac-20155707a92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db68bc4-6131-40a9-bc27-d493472ceefd",
        "cursor": {
          "ref": "9b60277d-aade-40b0-b9ae-cd8fe8c30800",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "74b900b8-2769-4ad0-87a2-ed93b263c51d"
        },
        "item": {
          "id": "9db68bc4-6131-40a9-bc27-d493472ceefd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "06291797-4c86-49ca-bbd9-b5c52d78e4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d092ef4b-9be1-40c5-8673-64948caa2e6c",
        "cursor": {
          "ref": "ef93569c-4643-44ce-ae9a-1625968b8825",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2ab37bc6-4904-4b36-9304-1aaa77f5903d"
        },
        "item": {
          "id": "d092ef4b-9be1-40c5-8673-64948caa2e6c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "928314a1-855d-43c3-be1d-8c78a2b0de2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d776f01d-53c7-46f7-8880-5cb04bd20fcf",
        "cursor": {
          "ref": "501064e7-640e-4cd5-b88e-c59e4fa4e838",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "130dc95a-6d72-4abf-9447-54cc657263b2"
        },
        "item": {
          "id": "d776f01d-53c7-46f7-8880-5cb04bd20fcf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c3f79d8f-0ae8-465b-a28b-317fe4f0eadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d477ca22-feeb-421b-a4f8-394409fbd666",
        "cursor": {
          "ref": "4b8629dd-c3a8-4ce7-b3c0-db5ca35e2f4e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "927b033c-c66c-4911-b683-d50caf8306c3"
        },
        "item": {
          "id": "d477ca22-feeb-421b-a4f8-394409fbd666",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f673049-4b10-41c7-b86b-e43093eb81f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28a5dd6-d90c-43ff-a526-f6fbfa86e753",
        "cursor": {
          "ref": "620be884-761d-45d7-b523-bb73123603ec",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "049c2a95-e525-4d8a-8d05-96c087978b28"
        },
        "item": {
          "id": "a28a5dd6-d90c-43ff-a526-f6fbfa86e753",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a0a293f-1a23-43ca-a4c7-091442539618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48aa40f-d2f1-443f-bd8a-a35219450fc4",
        "cursor": {
          "ref": "aa4615c2-2ae9-42a5-a354-5bb99b77b507",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f669f639-ad38-4c7c-bdb0-4cbbf6d0e430"
        },
        "item": {
          "id": "a48aa40f-d2f1-443f-bd8a-a35219450fc4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aa2138d1-d4f3-4ed9-aa4c-b5ffdc622f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c2f83c-ea41-4362-bbec-f02d0d054cb5",
        "cursor": {
          "ref": "9e6c9f94-0c34-4cff-ab74-ee6a242db386",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2e0e0df8-22c4-49b5-b4fd-061a5f4642e7"
        },
        "item": {
          "id": "b8c2f83c-ea41-4362-bbec-f02d0d054cb5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "07507f29-b497-42aa-b78d-bf3c5412753e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95e5f74-4a6b-4f82-9341-2cdfdad16b0c",
        "cursor": {
          "ref": "95bf4e29-0bd2-4fe6-86f1-7c4a872e3545",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "451fe3e3-e719-4441-922f-9ccc00a83aa2"
        },
        "item": {
          "id": "e95e5f74-4a6b-4f82-9341-2cdfdad16b0c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e0575730-7ea8-4b56-9edb-d467a63d675a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6862dc-b49b-442b-b04f-1723c684cd5a",
        "cursor": {
          "ref": "ae14a983-f419-4f9c-856a-bb014404e318",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fb5f432a-8ee0-48e5-b550-2e17c789a518"
        },
        "item": {
          "id": "ab6862dc-b49b-442b-b04f-1723c684cd5a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b87453b7-8cd2-443d-ab33-20723ac499cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1389a0e2-86af-4289-ae33-f8526f4fea18",
        "cursor": {
          "ref": "23030d21-797b-4959-94fa-80b19bca8e44",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d34a33c7-bdd4-4184-927b-fa775c064e19"
        },
        "item": {
          "id": "1389a0e2-86af-4289-ae33-f8526f4fea18",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1a7df7c5-2a17-4b67-b636-69abb9c78c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b56e7e-3911-4cd1-b24c-ecc3da1093be",
        "cursor": {
          "ref": "8c28d7a6-8fa4-4ed0-9d6b-e58bb1084874",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a023c9f3-55d0-4e84-9231-7cc56c85f1fc"
        },
        "item": {
          "id": "81b56e7e-3911-4cd1-b24c-ecc3da1093be",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "24c3ff39-5980-4bf4-a444-c388209052b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2e7a57-c0dd-4ffe-8a86-473eb8571ce7",
        "cursor": {
          "ref": "2f4de979-18b6-4866-92c7-b0859ba277b7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d98155ad-7825-4db7-9fbc-4c1f81f5149b"
        },
        "item": {
          "id": "6d2e7a57-c0dd-4ffe-8a86-473eb8571ce7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "498fd89b-f18c-4bc7-bd59-3a47a5db0bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a926ca-3648-48a7-beca-a2f453c0eae0",
        "cursor": {
          "ref": "eb06de75-dc09-4449-8670-3a5a3d85c450",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "71f96faa-c3d3-414a-9167-2678be81339d"
        },
        "item": {
          "id": "43a926ca-3648-48a7-beca-a2f453c0eae0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0e08f0f9-2159-41e3-87e6-0d83dc501137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3160af88-5191-41e2-9a98-e3bc42e3f05b",
        "cursor": {
          "ref": "98f8a353-6891-493b-9966-623a6bfba8d6",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "48542a36-ef13-4072-b0be-05e70f8a17b3"
        },
        "item": {
          "id": "3160af88-5191-41e2-9a98-e3bc42e3f05b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7a26f69e-98b1-42dc-a71c-b2df9a6310e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ec94ae-ece5-45f7-8b30-687e53676d2d",
        "cursor": {
          "ref": "aa06b39e-0ee0-4542-b2a5-0f88dd23a7fd",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "44f5a6d4-08e4-43d0-93ca-1f5837b195b9"
        },
        "item": {
          "id": "d9ec94ae-ece5-45f7-8b30-687e53676d2d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "13a4838f-ff96-42bc-9afa-40503e905119",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d276c0e-1b9b-44ca-a2a7-352720c5ad7b",
        "cursor": {
          "ref": "d78f8694-3c76-4e3a-983d-0337036e28e4",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a1b2b048-594d-4041-b2d3-3d4b596ca874"
        },
        "item": {
          "id": "9d276c0e-1b9b-44ca-a2a7-352720c5ad7b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "76a0680c-9ebd-4863-b9b5-7be84a0c9256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b631e0cd-f7dc-46c7-b409-f987459eae60",
        "cursor": {
          "ref": "e01aa14a-b73c-4e79-83eb-6542bcdd9d01",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1ae18e69-e937-4270-b902-c40aafcd1e3c"
        },
        "item": {
          "id": "b631e0cd-f7dc-46c7-b409-f987459eae60",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c8488609-2e0d-4254-a51a-7390acadc049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d440551-4beb-445d-8998-7f960528a417",
        "cursor": {
          "ref": "030ec3fa-831e-4cb7-ab53-49f226102afa",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e087c13b-1db9-4b4e-82c6-ace63eb4367e"
        },
        "item": {
          "id": "1d440551-4beb-445d-8998-7f960528a417",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a69c1a1e-1e7b-4dcb-be19-cd8eeae35911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a0c481-d1a9-451c-b6e0-feb9338c9ab4",
        "cursor": {
          "ref": "7d5118fa-d93a-4ae9-9c7b-d8a293ca8890",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d790f7d7-d284-46ee-870b-95e3a2380290"
        },
        "item": {
          "id": "96a0c481-d1a9-451c-b6e0-feb9338c9ab4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "338e305b-fdb0-46f8-8b58-bb3e6015f1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae586ba-759f-4a6e-9652-dd338d762cdd",
        "cursor": {
          "ref": "690defaf-39b0-43d4-beef-f58fe692aba3",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f437b140-c770-4e37-9109-083b24805915"
        },
        "item": {
          "id": "aae586ba-759f-4a6e-9652-dd338d762cdd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "57f4e384-b39e-4afd-81b0-8cf4c9192c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978c8eb0-2709-4a75-820f-9b65f3caf546",
        "cursor": {
          "ref": "70d01973-8638-49bd-b125-f52a019f671f",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b5da99ff-6f16-4313-a817-4dde6832968d"
        },
        "item": {
          "id": "978c8eb0-2709-4a75-820f-9b65f3caf546",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a8fa9484-3489-4824-a084-885ad03d9385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647fd577-98e8-4df6-b57c-6c61f6798797",
        "cursor": {
          "ref": "e44a1b81-94e3-4e86-965e-ff6bfad1f819",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "afb38cf6-c47c-4c81-817c-8cffa400d8ab"
        },
        "item": {
          "id": "647fd577-98e8-4df6-b57c-6c61f6798797",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c3860510-2cfb-4052-b6ce-cc4ba7b3daae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a06e27-4c18-4e2d-91f0-a67c55452f67",
        "cursor": {
          "ref": "6af064ec-9d4c-40cf-ae26-c320c0692500",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "34d144de-6759-4176-ae70-498517ab581e"
        },
        "item": {
          "id": "a0a06e27-4c18-4e2d-91f0-a67c55452f67",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "529831ce-e778-46d8-9a47-eac194b8fa0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c0aebe-2dd5-44f7-af56-67935a894c07",
        "cursor": {
          "ref": "6b71090b-a4a5-413b-8be5-ec76e76b7b5e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "09d32ce9-d72d-445a-845f-e2a68912d1b3"
        },
        "item": {
          "id": "41c0aebe-2dd5-44f7-af56-67935a894c07",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "40256547-1c35-4827-9f9d-12591ea35e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfd9deb-e24d-4b01-86ba-deaa4f88d60d",
        "cursor": {
          "ref": "0a43b15f-37d7-4e81-9064-4235a9cde3d2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e11e94f2-6f1f-4f5f-afec-5c195d64bdff"
        },
        "item": {
          "id": "9cfd9deb-e24d-4b01-86ba-deaa4f88d60d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cf7418b3-a9a1-48b9-9eda-f9d214534a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f112a61a-ae64-4176-abfe-dad02e1b4eaa",
        "cursor": {
          "ref": "4b68b05e-d88c-4cda-9f59-5ea60c9af8f7",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5ff3b976-5d6f-455d-bb27-c8604b64f92b"
        },
        "item": {
          "id": "f112a61a-ae64-4176-abfe-dad02e1b4eaa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "75eb7454-b700-4d34-9df9-24644a960d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ec4ce6-6482-4e2c-b59c-c117d6ec118c",
        "cursor": {
          "ref": "72eb6343-745c-485e-b437-f1a5cf5ca452",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fd753a7f-f053-4e44-871e-c964065ecbd8"
        },
        "item": {
          "id": "e7ec4ce6-6482-4e2c-b59c-c117d6ec118c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c8683fd8-69b1-46c9-8da6-f6361ddf9bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1077a25-6895-4bc7-a03e-ea285e8ac5f4",
        "cursor": {
          "ref": "be36b899-60d4-4ea9-9a26-5d99d0478f96",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aea1d7df-4331-4cf2-984c-1beae41c0e17"
        },
        "item": {
          "id": "b1077a25-6895-4bc7-a03e-ea285e8ac5f4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f71fb1ed-d514-4a67-bd43-1b473945748e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ebbcc6-44b1-4881-a703-23082f72e371",
        "cursor": {
          "ref": "d5b6f87a-974b-42e7-bc27-682ed2654fc5",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "beb4c61f-ba68-4d53-ab05-b9729429dded"
        },
        "item": {
          "id": "87ebbcc6-44b1-4881-a703-23082f72e371",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e4535d73-21e8-4761-aee9-9a3eaa106f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4711d024-a527-465c-a493-dddad0199ba6",
        "cursor": {
          "ref": "42679590-c025-4120-9262-099ea02eeb12",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "75f18ce5-3785-4ec8-a35b-7606e3852190"
        },
        "item": {
          "id": "4711d024-a527-465c-a493-dddad0199ba6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1ec6ecc7-3b20-45f4-989e-3294fac5aae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1420a3b9-e66a-4788-b964-f37770a14e3a",
        "cursor": {
          "ref": "a802c322-4624-4293-b3f8-9ab70c63fe31",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "098ef6f1-7590-4c43-b77e-60ed4d1d13d0"
        },
        "item": {
          "id": "1420a3b9-e66a-4788-b964-f37770a14e3a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0af7a4df-3b8e-4a5a-8003-89f5fcf5024f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440ee193-7ede-49d2-99d2-5d8c6f8bc7d6",
        "cursor": {
          "ref": "d410ca12-743e-402b-9d28-a456b256af10",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e2bbb999-8274-44dd-83cb-0d51e1db97c6"
        },
        "item": {
          "id": "440ee193-7ede-49d2-99d2-5d8c6f8bc7d6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2fc96b72-2841-4bef-9784-b5f718076232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6045b1ee-1de7-4b86-81e9-4e9bfd1765a8",
        "cursor": {
          "ref": "a2c338b7-f3b2-44d1-a599-5534d3ba4337",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3410aa48-e10a-45b6-83fc-9542bac3b38e"
        },
        "item": {
          "id": "6045b1ee-1de7-4b86-81e9-4e9bfd1765a8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "76f3508f-970d-4e09-9da1-30ad2eaca9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0ddbc1-d39b-4f14-924a-fd717c8e5afa",
        "cursor": {
          "ref": "af926e4e-ceae-4d87-8d36-0f4cec209af6",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "74863669-372d-412f-b803-e246accf02b2"
        },
        "item": {
          "id": "ca0ddbc1-d39b-4f14-924a-fd717c8e5afa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ad7408be-1891-4bfe-bc34-8bc507a9e51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a432719-2d38-4d9c-ac63-f23a0194b211",
        "cursor": {
          "ref": "5fa1cf57-1038-4848-8b05-70183e2c6ac5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6d1c544b-f763-4148-9bcb-371608f60ad5"
        },
        "item": {
          "id": "1a432719-2d38-4d9c-ac63-f23a0194b211",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bc5930f4-a4db-4be3-aa04-5548c7c88301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114cf2f0-bf34-4f0f-a734-0276c0c1e9c7",
        "cursor": {
          "ref": "1dedca74-a7a3-4b50-8228-2780c1c3f798",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "05df70c8-2f66-4b59-b949-ff285975ca10"
        },
        "item": {
          "id": "114cf2f0-bf34-4f0f-a734-0276c0c1e9c7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0058d22e-88ed-44fb-acb7-8e3d7bf35f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27a1258-0b1a-4d60-bf0f-0cfb1266c22a",
        "cursor": {
          "ref": "9ab8bb24-4860-4360-bbdf-b8e0b1d002df",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1ce74d72-14f5-4482-b333-864b691918d4"
        },
        "item": {
          "id": "a27a1258-0b1a-4d60-bf0f-0cfb1266c22a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a9a19ada-11fa-43d4-912d-151586fb04c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bbc627-8f3f-4776-83c4-253833d12ba7",
        "cursor": {
          "ref": "70048652-6197-417b-be1a-bb3ed39c88c2",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "415d3846-c601-4b4d-85df-6d0f2c6af454"
        },
        "item": {
          "id": "95bbc627-8f3f-4776-83c4-253833d12ba7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "895e4f13-83c7-47c6-b9a0-6a6d3f9fbefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ec8541-ddb1-4259-bc28-c55343aafb59",
        "cursor": {
          "ref": "a6d72551-7704-4b61-88b9-ce99c8fc56a8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "714b74b2-622c-4858-ae28-212a90c03d21"
        },
        "item": {
          "id": "e2ec8541-ddb1-4259-bc28-c55343aafb59",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "751d599f-eff7-4e08-9c4d-463c42889ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19540719-e3a1-4464-8707-50c1a1e4da14",
        "cursor": {
          "ref": "78e71804-8ab4-4bc5-a99a-437282c627fc",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7af3967b-7119-4528-b782-4676f7daa759"
        },
        "item": {
          "id": "19540719-e3a1-4464-8707-50c1a1e4da14",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "54ae26f1-4332-4fc3-9aa6-63bc70f042a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd01ec4-bccb-4cd9-b61b-6dcd8b50b18e",
        "cursor": {
          "ref": "7606e9c5-fde0-4d0b-a267-195cfcd605f2",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "095e938a-a999-43b1-8990-c6d72f8016bd"
        },
        "item": {
          "id": "7cd01ec4-bccb-4cd9-b61b-6dcd8b50b18e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ed7afe86-bb73-4cc4-89ae-7d1306ff5229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daac5f4-35a5-4b05-b671-16d72361f1ea",
        "cursor": {
          "ref": "fc7cadd3-7187-41d3-b141-da9d62d3ce1b",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7db6786a-6721-4b43-8d77-ed49b2aa2042"
        },
        "item": {
          "id": "2daac5f4-35a5-4b05-b671-16d72361f1ea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d6fb5f34-1600-4800-85db-dd9b9b2e6e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf99e626-ad4a-4c77-9ca5-04eea42cd489",
        "cursor": {
          "ref": "a2bac6d5-293c-48e2-8d57-88fcf2ebe442",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "67c9ac61-3ba3-428b-9e38-9f4ab102b7bb"
        },
        "item": {
          "id": "cf99e626-ad4a-4c77-9ca5-04eea42cd489",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a586323d-caf8-4e7a-9de4-382f6f06f6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6347b919-fe97-42b9-abca-1ea87581069f",
        "cursor": {
          "ref": "e47a31b2-718e-4b16-ae1e-bf7801f7ab55",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3e95e1b1-aee3-412c-b346-090c512403ad"
        },
        "item": {
          "id": "6347b919-fe97-42b9-abca-1ea87581069f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d0c6c303-8dbf-472d-8bc1-65791dcf3e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae36e26-d8bf-4169-99d5-3c161419c7d2",
        "cursor": {
          "ref": "99ce188b-7abe-4e25-a6fb-420936240caa",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "82130844-427d-4691-868e-2db2d103bc67"
        },
        "item": {
          "id": "4ae36e26-d8bf-4169-99d5-3c161419c7d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "777f4a21-0132-4b14-bb51-1405e605fad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c4f9fb-e630-4216-96a9-196c173a94d3",
        "cursor": {
          "ref": "5a1ec109-ac62-4ba3-bdb4-d645a9ca3edc",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "12ab1c8e-cb99-4668-8403-d82aba747320"
        },
        "item": {
          "id": "e2c4f9fb-e630-4216-96a9-196c173a94d3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e5c3ff4f-318b-463d-991d-a1394b458249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3018ffee-46af-4820-8fd9-57ed210287ef",
        "cursor": {
          "ref": "a8e907bf-dc41-4c3c-a30e-68d28422c2da",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9bca655b-43ed-423b-8288-533ae1d3a4ea"
        },
        "item": {
          "id": "3018ffee-46af-4820-8fd9-57ed210287ef",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ad6b10db-bb98-44d4-b217-6872d0e8c00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c904e9f5-7f3d-4664-8d8f-6b2943d59589",
        "cursor": {
          "ref": "618b937d-1643-4dbb-8283-ef86be35a0d5",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e18478cd-13e1-4da7-bb5f-87cab1e6b94a"
        },
        "item": {
          "id": "c904e9f5-7f3d-4664-8d8f-6b2943d59589",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e8064bee-1a5b-48c0-9483-bbde1247e9f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8b59f4-1777-47cd-93b9-e33fc39fd4de",
        "cursor": {
          "ref": "97b492aa-b9b0-4f91-94ac-ca5bb564a254",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c408bac6-d82c-4a42-a8e5-afdc3e49bd58"
        },
        "item": {
          "id": "cb8b59f4-1777-47cd-93b9-e33fc39fd4de",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a37a75da-9411-40f0-9383-09f7f1b24820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fc3f8f-2e45-43d8-bc4e-5c48cf3bf28a",
        "cursor": {
          "ref": "62d3a8f8-be32-4d73-9ebd-0058a2fd8877",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f0850349-4138-4ff0-9fec-66ac24daf441"
        },
        "item": {
          "id": "b3fc3f8f-2e45-43d8-bc4e-5c48cf3bf28a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4282d56c-35b4-49b6-903b-47946cf1b0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c549397-c630-458e-b5a2-87ba74cf9eed",
        "cursor": {
          "ref": "e8a015ae-5ead-4110-b201-7c56852e7faa",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bfa10f2c-c665-4f32-87b7-777c00b228ec"
        },
        "item": {
          "id": "6c549397-c630-458e-b5a2-87ba74cf9eed",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e8d25874-4139-4c02-bb9e-6fd6fd5898c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053b506d-b961-4741-b926-06c92d3a0702",
        "cursor": {
          "ref": "21d901c6-b674-4a6d-9945-20dcdf5bfd9c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b3e209be-9b1f-41c9-a4c8-8e43c0b7baa4"
        },
        "item": {
          "id": "053b506d-b961-4741-b926-06c92d3a0702",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e1b92fe7-4d42-466a-9547-5b319c320ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e975e41-1d09-4581-9eb7-ac0d5b6278b0",
        "cursor": {
          "ref": "e3a34f27-b532-421d-96e6-40e4f07cb155",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "47a7f0b3-01e7-4a01-8637-b8f7f13e9acb"
        },
        "item": {
          "id": "1e975e41-1d09-4581-9eb7-ac0d5b6278b0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b30ac25d-6d63-4464-a51a-e1dc731719a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2f4440-f681-4655-b65a-5ee32cb260a1",
        "cursor": {
          "ref": "ac98039e-35d2-46a8-a78c-19ae6a7973a0",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ec88feb9-9e80-4a93-83b1-7c64c2e57c0c"
        },
        "item": {
          "id": "3b2f4440-f681-4655-b65a-5ee32cb260a1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "189f8e69-5062-4759-a608-9a22aa6172f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13940ba2-ca69-4e47-8fdd-5816dbc48355",
        "cursor": {
          "ref": "ad5658dc-50a5-4194-8890-7b75d7a63343",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bc6ada20-7fe0-4941-8731-2ef719a1ba4b"
        },
        "item": {
          "id": "13940ba2-ca69-4e47-8fdd-5816dbc48355",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e8861538-90d4-4cff-9602-ae268cf630d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c90a031-900c-4c02-840b-9983328c5bc5",
        "cursor": {
          "ref": "7a710688-c3f2-4bfe-a493-2cb24303de18",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c641055f-f29f-4f71-9402-f81178486cd6"
        },
        "item": {
          "id": "6c90a031-900c-4c02-840b-9983328c5bc5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9e0f299c-b6a7-4c53-a89c-f37b19cff90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15f7c74-7ca6-48e6-a9c8-8db75acdb09f",
        "cursor": {
          "ref": "1c73634e-94b9-478e-8a48-3b7c4fb00361",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "51c1600a-88aa-432b-9c19-5b5876abc0d3"
        },
        "item": {
          "id": "c15f7c74-7ca6-48e6-a9c8-8db75acdb09f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a48eb41f-0fa2-426e-a964-e558bc602104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3abfed-d226-4a31-88cf-05074e2a1bfa",
        "cursor": {
          "ref": "afb54198-c098-488b-8b43-5bcd6034ba99",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0991a1ab-06e3-41b0-bcbe-8af3910eb3af"
        },
        "item": {
          "id": "9e3abfed-d226-4a31-88cf-05074e2a1bfa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6af44b86-9ae0-47f2-8c29-d2a8cebc43c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788b6878-1a5b-4b4d-8a0e-8c6d31e81486",
        "cursor": {
          "ref": "027a4067-06ac-4035-8330-e98f3f6c35e2",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c61f906b-66e7-415b-8477-d2717c66a764"
        },
        "item": {
          "id": "788b6878-1a5b-4b4d-8a0e-8c6d31e81486",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eba3caf4-150f-49d4-b6c5-4b87826d0ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b33d01f-ae4d-471c-83d8-a049d9151ceb",
        "cursor": {
          "ref": "9dbe26ae-6e45-40ae-a98f-d40091f1ff23",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "edd7b536-de94-4fc0-b68b-f1f577eb8202"
        },
        "item": {
          "id": "9b33d01f-ae4d-471c-83d8-a049d9151ceb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c16c891a-fb52-477d-9d0a-9e6f44020ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f03aad-f661-4744-a41d-c07aea0f30c6",
        "cursor": {
          "ref": "12ee0d5c-6b2c-4310-919b-11fb47ec3be3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7997e8b0-24b1-4b5e-b170-33d9b209c700"
        },
        "item": {
          "id": "83f03aad-f661-4744-a41d-c07aea0f30c6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c704d889-2fc1-455f-9443-0f0d3a0711b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413ad1e2-05e1-4364-b4c6-db1327c2a76a",
        "cursor": {
          "ref": "10dba970-f1d1-448b-ace3-0fd72fdb8c68",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e7860fb5-8ba8-4503-9d5a-92fcf1114f62"
        },
        "item": {
          "id": "413ad1e2-05e1-4364-b4c6-db1327c2a76a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dfc14c39-9335-4e12-9535-f212e724a0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbe92f8-3946-4b8f-b80f-ba20f5c23ba9",
        "cursor": {
          "ref": "5809ada0-ac47-4a34-989b-17a761dd2a2d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0daf56f3-8121-4d35-a870-cdcd22ca6897"
        },
        "item": {
          "id": "adbe92f8-3946-4b8f-b80f-ba20f5c23ba9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aa463992-da65-4a3f-8df8-fbc7a2f3d9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ea1a9a-85b8-4e4e-8622-e32a6d439ee3",
        "cursor": {
          "ref": "30c5a787-9c62-40ce-9a35-8ddeb66ff17c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f763646d-5d7f-4d73-ba40-d67c7de7ecdd"
        },
        "item": {
          "id": "d7ea1a9a-85b8-4e4e-8622-e32a6d439ee3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "be1787ee-39a3-4934-9630-da46d2cc9c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cbb958-e7f8-4e48-98dd-7094041af399",
        "cursor": {
          "ref": "b35e5310-394f-42fe-9c05-52aaa5e20142",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "312353d8-2bfb-41cb-8581-8bd2c80c2fec"
        },
        "item": {
          "id": "76cbb958-e7f8-4e48-98dd-7094041af399",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "07fa970e-0e25-4752-81cf-70dd7f89bcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f7d862-d994-426a-8896-e4c56eeed007",
        "cursor": {
          "ref": "c831b313-647f-4f8a-9d70-48f04dae19ad",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a6f85b7d-e212-443e-8b90-21819bfa92d2"
        },
        "item": {
          "id": "92f7d862-d994-426a-8896-e4c56eeed007",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f537aa90-c009-4171-bf91-fce3c60fdb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec0f806-dd9d-4cee-a475-de6d97cc7464",
        "cursor": {
          "ref": "f996abcf-bce0-47a4-bd68-9b829a2ecc88",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e1ade946-8fb1-4725-a970-42bb24aec291"
        },
        "item": {
          "id": "dec0f806-dd9d-4cee-a475-de6d97cc7464",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "81725a1d-c50f-4d62-8459-757a251f2bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f7b968-64cc-4902-bf4a-d0e2d0b9689c",
        "cursor": {
          "ref": "299198f8-20e3-4efd-9842-c52ce7a41dfe",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "652bbded-ea68-49b4-ad51-f8266db6f4dd"
        },
        "item": {
          "id": "b1f7b968-64cc-4902-bf4a-d0e2d0b9689c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b5881931-31fc-478a-a42d-cbe8caee3eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e4fa2f-f02d-444b-a717-3ec8b861b9d2",
        "cursor": {
          "ref": "f5584115-7399-441b-b959-a77bf36831da",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "065f34a0-4724-4961-bd75-88c7ad3ae8f6"
        },
        "item": {
          "id": "87e4fa2f-f02d-444b-a717-3ec8b861b9d2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "085b1deb-444b-4962-8d71-c738d4511f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bd7c7d-68b0-4e4e-a9c6-414a0ce9e337",
        "cursor": {
          "ref": "08e64fdc-65ad-4dd6-b2ac-63c862f74460",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "37b3c512-210e-4f71-9c85-64c289f87e1c"
        },
        "item": {
          "id": "81bd7c7d-68b0-4e4e-a9c6-414a0ce9e337",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "31a4d6cd-e561-4c79-b38b-90db9a55cb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b395d284-99f3-4d77-be80-62f3e2caad91",
        "cursor": {
          "ref": "c3003a6b-d345-49bb-8056-30d0e2a07849",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "97c11974-1638-4c99-aa8b-a366a17eefd5"
        },
        "item": {
          "id": "b395d284-99f3-4d77-be80-62f3e2caad91",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "342c4228-14a4-4fb8-8fa8-5a5757aa8fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f7865a-8829-488d-9adc-1483b2b5a663",
        "cursor": {
          "ref": "bd21534f-03dd-4634-9d81-076f384837f4",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bca14422-5d87-40d7-8ff2-786390605622"
        },
        "item": {
          "id": "c9f7865a-8829-488d-9adc-1483b2b5a663",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4063dc9a-b0bf-4371-882e-524529de61b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1075a27-3c91-4dce-b1dd-3484826641cd",
        "cursor": {
          "ref": "0271b3eb-b375-4541-b75b-794eede8630a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eb28fdaf-e4de-4ebb-8bae-76dacac1912a"
        },
        "item": {
          "id": "a1075a27-3c91-4dce-b1dd-3484826641cd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "40ca270e-fc24-4d82-87e7-2855e3c3ec45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77660ec-9fa1-44c1-bcf2-026d47855d02",
        "cursor": {
          "ref": "8154d551-d9bc-49bf-8b4b-ffcc3c23787f",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0b679835-b88b-4983-afae-2522e9421f63"
        },
        "item": {
          "id": "b77660ec-9fa1-44c1-bcf2-026d47855d02",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "438590e6-6960-4594-920c-ab5ccff635f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376a47d6-0bcd-4b65-ae43-e10c96d75ad7",
        "cursor": {
          "ref": "37fe0ebe-f388-4708-bbc8-b2d07b12d708",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bb717a15-2e14-47f1-b9b9-9aedde3f8c59"
        },
        "item": {
          "id": "376a47d6-0bcd-4b65-ae43-e10c96d75ad7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3dc66f36-91ff-4cd2-b8bd-19cb6b23444d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff63f57c-fd22-47ab-b31f-464639d31202",
        "cursor": {
          "ref": "46d869b9-4089-43da-8858-a67e7b13b6f8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "44770f07-ea6d-491b-a563-9f3c10b690b8"
        },
        "item": {
          "id": "ff63f57c-fd22-47ab-b31f-464639d31202",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "311fe187-93c0-4e77-978e-c6a6b48b67d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef2fb76-40ed-4984-9340-f0948e0a6211",
        "cursor": {
          "ref": "a6af8565-dc84-46c7-9e3c-02c66298c79f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "71c2d138-e29c-48da-a86c-3847a4bc17fd"
        },
        "item": {
          "id": "0ef2fb76-40ed-4984-9340-f0948e0a6211",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6f6dd8d7-60b2-4560-b239-1e191851c3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c10849-0935-46b2-8215-3f720a72be93",
        "cursor": {
          "ref": "0a17e243-abf1-4cab-ac64-283a929d08e3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "35aef6ba-2b83-400f-83b4-b55b139f16d7"
        },
        "item": {
          "id": "11c10849-0935-46b2-8215-3f720a72be93",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7c414776-b702-4eec-b461-f5af5c07772c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d158b69-a9fe-43ff-8fd8-0a5c2fa6e738",
        "cursor": {
          "ref": "e9934d9c-2816-4beb-bb88-83d74a63acfb",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1d072167-a8e1-49ce-8af4-cc1449b30bb3"
        },
        "item": {
          "id": "7d158b69-a9fe-43ff-8fd8-0a5c2fa6e738",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "48f3cfa5-46cb-4d01-955f-68b8bc23a2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522f275f-dcd5-473b-b876-4f95bfb7fc91",
        "cursor": {
          "ref": "488cb23a-0ba6-47b2-aa38-dee73836b46b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "130fd96f-8249-4ac1-8c60-1ab1c7a8c45b"
        },
        "item": {
          "id": "522f275f-dcd5-473b-b876-4f95bfb7fc91",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bc03d9fe-e7ac-4c86-b0ae-937a4dedba19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d070306b-6996-4764-b552-f9fae42784a6",
        "cursor": {
          "ref": "522d3f5e-4e8c-4407-b91d-32767b8e3030",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7809b713-e53c-49c0-ace3-ee03a2ab2a37"
        },
        "item": {
          "id": "d070306b-6996-4764-b552-f9fae42784a6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "44652fb3-c651-4fa9-9f75-4939ef7253bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b34f88-b52d-4caa-aafe-999e1909ebfd",
        "cursor": {
          "ref": "43f92ac1-0c90-4648-842c-5da7050f67f9",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b9f12fad-330b-485f-b9c9-483dead8c11a"
        },
        "item": {
          "id": "d2b34f88-b52d-4caa-aafe-999e1909ebfd",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3e41bc44-b8e0-47db-852a-1033abf5a9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdfcd04-e8f3-4880-b58d-4c88d03671a1",
        "cursor": {
          "ref": "dc4ecfdc-1440-488d-9a9d-52b6f18ec904",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "27024b23-d460-40fe-a4a3-af59cd3f7bd8"
        },
        "item": {
          "id": "6cdfcd04-e8f3-4880-b58d-4c88d03671a1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bbda1671-2694-4e90-b0ef-598a75fcb1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a4f133-dd5e-4b1b-8af4-0570893465e8",
        "cursor": {
          "ref": "d07c3b23-f6d9-4b9b-88d0-8ba2066c3504",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "175038d5-1955-44ed-bed6-96fe473a29ee"
        },
        "item": {
          "id": "c5a4f133-dd5e-4b1b-8af4-0570893465e8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6979d1dc-2c72-4cda-9ee9-e7cc5dec352f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9d6abd-112b-4a81-ac62-b4c8ed27b908",
        "cursor": {
          "ref": "40269f1c-8f2d-4557-ae59-15812d6ccf4d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e18a5205-124f-4c17-884f-cc59578fdfaa"
        },
        "item": {
          "id": "8e9d6abd-112b-4a81-ac62-b4c8ed27b908",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "034b5021-f967-44c0-a1e5-f34dd85dfc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681597e3-8a80-4557-9b0d-b2d9e11cf33a",
        "cursor": {
          "ref": "86bd4ea3-c613-495f-a2cd-4d891e2a1d15",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7ebfe7f6-2638-4018-8ebe-617d7b99798a"
        },
        "item": {
          "id": "681597e3-8a80-4557-9b0d-b2d9e11cf33a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a2a0b6a9-b438-42de-87cc-647c7bf1150b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a599c19-3972-4456-924a-35689d2876ae",
        "cursor": {
          "ref": "298cbeb5-5dd4-4002-bbff-2cb7714b638a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6bd9c933-42e8-449c-84bc-cdf142c466a9"
        },
        "item": {
          "id": "0a599c19-3972-4456-924a-35689d2876ae",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a4606e89-7f63-494c-a8ab-2046b4f28a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa6d135-42bf-40d5-b2b3-3fbe47e3ba68",
        "cursor": {
          "ref": "4a3cf9ec-08be-4b2a-8276-4985df924404",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "38bfada5-d7aa-44b3-96bc-c72e61959b3c"
        },
        "item": {
          "id": "bfa6d135-42bf-40d5-b2b3-3fbe47e3ba68",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7998edfc-3867-41f2-8a95-0539d104b1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f05bb6-4f6c-49f4-bb49-7a847798c854",
        "cursor": {
          "ref": "bda1d77a-6c69-4801-b5fe-e65671fa32fb",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5da0a6ca-21a3-48a3-8541-d345deb65c6b"
        },
        "item": {
          "id": "e9f05bb6-4f6c-49f4-bb49-7a847798c854",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "38eb2158-c112-4d7e-a637-8f38be2e284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68476ec3-2fcf-445d-a9c6-8528f48df860",
        "cursor": {
          "ref": "8571af13-afad-48b4-b77e-8bffdb01554b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e407a62e-567b-4409-b001-4275f14cb38b"
        },
        "item": {
          "id": "68476ec3-2fcf-445d-a9c6-8528f48df860",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c878073f-b456-4119-8dc3-2e11650813f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d105619-2ea6-445c-97b7-30b7bc895e60",
        "cursor": {
          "ref": "f04142b2-fc9d-49ae-816f-e16fe6d3c479",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "235f68af-7edb-42e5-8012-fdc0671493d2"
        },
        "item": {
          "id": "4d105619-2ea6-445c-97b7-30b7bc895e60",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "43a54177-cfb7-4ab9-bf79-68e576baa488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333f6fdb-f588-40d7-b37e-eeb20bd2df04",
        "cursor": {
          "ref": "c52a0359-f894-47a4-82d1-ad3861d1a9b2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2e0e303c-a66d-41ab-bca1-4c926aa126c2"
        },
        "item": {
          "id": "333f6fdb-f588-40d7-b37e-eeb20bd2df04",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b015dcde-e029-4b16-b1bd-c4c3e7aa0dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89515a69-4328-4c3b-aaa1-5608d96b125a",
        "cursor": {
          "ref": "07b045a6-5c90-4ac7-8471-24c4031b61af",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f889e3f1-8c29-4ab4-8aa1-268b61bae795"
        },
        "item": {
          "id": "89515a69-4328-4c3b-aaa1-5608d96b125a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "88c071b9-0549-441b-b4e9-981e2c8f7cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66027c2c-9f05-4030-ac31-1a4ecbad85c4",
        "cursor": {
          "ref": "a9fe2f0e-cfa3-4313-9279-878c0fed3d63",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8debac8f-4af3-4c2f-873e-a86a9e9b677f"
        },
        "item": {
          "id": "66027c2c-9f05-4030-ac31-1a4ecbad85c4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "109b98ef-2f7d-43e6-aa91-7309c20c6bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b3c972-a710-4f72-afe2-6ed1f0faeb48",
        "cursor": {
          "ref": "aab57664-8269-4cb7-8969-3cf8ee451e2f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9e6292c9-2498-4ab4-a62f-40373d3a9911"
        },
        "item": {
          "id": "00b3c972-a710-4f72-afe2-6ed1f0faeb48",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "df065176-11e1-4cda-83cb-e90c6e8c962e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5765362c-fb3f-496c-b0ae-b092808de1f6",
        "cursor": {
          "ref": "3caab4d9-128d-4825-b303-e400e359bddc",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0395d95a-12c2-4614-9857-77cd243d077a"
        },
        "item": {
          "id": "5765362c-fb3f-496c-b0ae-b092808de1f6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "42382f02-cd00-4181-8863-0394c852c1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6240432f-f991-447a-bf31-3e3d98852318",
        "cursor": {
          "ref": "d8381f20-db77-4e40-81bf-080a0e428804",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "977af6b8-e76b-4498-97f0-12dafcfb7212"
        },
        "item": {
          "id": "6240432f-f991-447a-bf31-3e3d98852318",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fe918542-da9b-4f39-b8dd-dbe0f2f67885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e7db23-4ead-49b8-9e71-68aa9cb979f7",
        "cursor": {
          "ref": "931ee75f-71f6-469f-8d43-db9bb93fe170",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6c0341e6-58e2-4c2d-a1bc-8f4928cc52bd"
        },
        "item": {
          "id": "a9e7db23-4ead-49b8-9e71-68aa9cb979f7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "93b06286-303a-4975-ae8e-13bbe26e7707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8084f45-6258-41d2-a25e-892611ff7885",
        "cursor": {
          "ref": "765a3ed9-80c8-44d0-8a0c-d67f1cb89cbf",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "573a9abd-1a76-47f6-a87f-494ec79785a5"
        },
        "item": {
          "id": "f8084f45-6258-41d2-a25e-892611ff7885",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5e59336f-5bd8-44fd-8feb-b7ed98d54539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023767d5-38fb-4ab1-ae57-c687a03ce0a6",
        "cursor": {
          "ref": "aea16d7e-47b1-4c99-9fc3-31c09fd65298",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "94e5f6f9-7d30-4b02-af42-3f78e15ea19b"
        },
        "item": {
          "id": "023767d5-38fb-4ab1-ae57-c687a03ce0a6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f9bb8b13-fadc-4587-b561-7c004d9a51a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3f3734-3cec-4bdc-8a08-b49ae3963851",
        "cursor": {
          "ref": "ecb8a470-6233-4f4b-9967-39a4385f854b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "85f3e1ee-9140-4a41-828f-576e5f955019"
        },
        "item": {
          "id": "9a3f3734-3cec-4bdc-8a08-b49ae3963851",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "72f34a1b-20d1-4489-82c5-d734bdb56003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59db84cc-b7ad-485b-81a8-3c8bd7fbeb74",
        "cursor": {
          "ref": "e816045d-3215-4013-85a8-9e0b56ce511c",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7d88fa17-bd25-4fdc-88c0-f53de337cc51"
        },
        "item": {
          "id": "59db84cc-b7ad-485b-81a8-3c8bd7fbeb74",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f64d2c8e-d397-4d65-896e-ae0c614e73a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a49e1d4-0317-42f5-9820-36e7dcb99060",
        "cursor": {
          "ref": "e791aeb7-70a9-48e5-bbec-57c878f854f9",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b7b238c3-2458-4452-980f-d30311c459fd"
        },
        "item": {
          "id": "1a49e1d4-0317-42f5-9820-36e7dcb99060",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "069871c5-8695-40a1-b772-b6d9da51f665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1d251c-57c6-49ab-8a1e-b7e3143eaf33",
        "cursor": {
          "ref": "7221b740-33d7-4519-b925-2b5928b42c0d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bbe4f03b-5f1f-457a-a621-e6afe6b39094"
        },
        "item": {
          "id": "5d1d251c-57c6-49ab-8a1e-b7e3143eaf33",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b770eae3-03b4-4047-9383-01046a4e947b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371a8e30-e1ae-42ac-b678-97d7a2adc1f9",
        "cursor": {
          "ref": "451a87a6-38a9-455f-ae4b-478b4548f865",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2932e972-b738-408f-983f-9b5d72b926b1"
        },
        "item": {
          "id": "371a8e30-e1ae-42ac-b678-97d7a2adc1f9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ac5f9b83-4d53-4c80-8a72-44d25b2cc2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3292a982-afbc-4535-bf08-b9e6beea9754",
        "cursor": {
          "ref": "d45ffef4-172a-4709-a128-f626160c2fac",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a75e5588-49ad-4369-8fe9-d520789742fe"
        },
        "item": {
          "id": "3292a982-afbc-4535-bf08-b9e6beea9754",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e6d7083d-bb48-4de1-9c98-aca7537787b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f1842e-0d0a-4702-af6b-ca55e3087912",
        "cursor": {
          "ref": "42807ea6-0fc6-4be2-819f-8be4b3875232",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "97699e38-2813-4dc1-a11e-f0afc26606b1"
        },
        "item": {
          "id": "70f1842e-0d0a-4702-af6b-ca55e3087912",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e5dfb727-766b-4c03-8a6c-4dbd042873f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22302c8e-c20a-4136-bcbb-d07f5ddd9beb",
        "cursor": {
          "ref": "055baa02-8f03-450f-9e0f-13e3c91b2179",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a6460c2e-9011-4078-8185-f13bbb3694f6"
        },
        "item": {
          "id": "22302c8e-c20a-4136-bcbb-d07f5ddd9beb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "972ddba1-37fc-41bf-8e0a-02428af77ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f6cb5a-6de7-4df5-988c-f22e260ddbf0",
        "cursor": {
          "ref": "ea36cfcc-7d88-4b4d-aa9e-44dc6930df78",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a7e94307-6505-4649-866a-24314032031b"
        },
        "item": {
          "id": "e8f6cb5a-6de7-4df5-988c-f22e260ddbf0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d9be2a07-adb6-4902-a7a2-e65ed394593e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4676682c-532d-4201-b9fa-b467f24fbe13",
        "cursor": {
          "ref": "e00e1fd0-974e-4b6e-a75d-35055baf6189",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "54390203-d364-4311-b29b-63c0b9f40b62"
        },
        "item": {
          "id": "4676682c-532d-4201-b9fa-b467f24fbe13",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "252b1323-6e6c-4dbf-8b86-410f1343db55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9189480-e772-48bb-804c-4caee128920c",
        "cursor": {
          "ref": "471ec4df-8d4e-4db7-aff6-3fece89f4586",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "264ed16b-e591-44b4-a4a0-d885a3083590"
        },
        "item": {
          "id": "e9189480-e772-48bb-804c-4caee128920c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bfce0733-b16b-4788-9bf0-04b15855b0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf402ef0-8984-4d8a-a2bb-8a8db6e028fa",
        "cursor": {
          "ref": "33efd41f-9e00-4b47-a2a1-061b558cbd46",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "518248e8-e5fb-43e0-bf6e-7b3dd9ee2172"
        },
        "item": {
          "id": "cf402ef0-8984-4d8a-a2bb-8a8db6e028fa",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5caf9471-d311-4647-a373-ba754d712e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae31fda9-b842-4fc6-bb72-93495c43b41d",
        "cursor": {
          "ref": "a2c4ae17-11a4-4876-9411-a95b340f0be8",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8ed427c1-4dfc-49fb-9b94-ba51edea9a73"
        },
        "item": {
          "id": "ae31fda9-b842-4fc6-bb72-93495c43b41d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ac42dc99-6756-496b-921e-5cc7a669653c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7d1d63-5a8c-4331-8de7-8522ad50f907",
        "cursor": {
          "ref": "b6c12c70-fa89-4923-aa6d-86241e1c7714",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "05e232f9-b5a7-4abd-affd-81aeae9bb1f8"
        },
        "item": {
          "id": "ba7d1d63-5a8c-4331-8de7-8522ad50f907",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7319b4ec-335b-4e58-9949-284171cc03f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39293078-bcfd-4e18-a8fb-3ee50ca2a38b",
        "cursor": {
          "ref": "0b8ec1e2-9b81-4b54-b975-412987d51986",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7595e10e-9e62-4b1f-a500-f5f9ca68b31e"
        },
        "item": {
          "id": "39293078-bcfd-4e18-a8fb-3ee50ca2a38b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5f3dfb96-3d4b-49bf-9b9b-0847b11ee750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91343a2-0e60-48f6-9e6a-0d0be09b2b74",
        "cursor": {
          "ref": "8f553af2-43ad-4683-9181-9027d43310c2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5e80a5eb-c4b7-47e8-a95a-b7e5fcbbb107"
        },
        "item": {
          "id": "c91343a2-0e60-48f6-9e6a-0d0be09b2b74",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "87cf42b0-f90f-4ae1-bc50-a2c14e5c208f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e2e65c-774f-4344-aa4e-c47111eabbb6",
        "cursor": {
          "ref": "eb48120c-70a0-4b99-ad58-0316b8a8e7b1",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "72edc9bf-5a34-4cf2-bffa-b51dc3246899"
        },
        "item": {
          "id": "59e2e65c-774f-4344-aa4e-c47111eabbb6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1175fe0e-e2d9-4483-9e68-fb383a4942f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfddc27-d73d-4e75-b047-1796057d7161",
        "cursor": {
          "ref": "7035b5a9-a276-4633-a3be-f84764cddc4f",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c6a29fe1-19c0-4e43-8334-cf866adf32cf"
        },
        "item": {
          "id": "4dfddc27-d73d-4e75-b047-1796057d7161",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "102a1a6b-dbe4-47de-966e-fd0e032cb16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae33c49-a4ba-4d54-b92d-32eec6f623e0",
        "cursor": {
          "ref": "07c5a185-735d-4e25-b82c-6f4cb3a9d266",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c4a778e7-6291-47c2-b438-4d23bfcb0e0c"
        },
        "item": {
          "id": "eae33c49-a4ba-4d54-b92d-32eec6f623e0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "475bfff9-6f7f-4fd9-927f-b5459abbeaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17b2eb3-e40a-4788-91f6-4c87e996b502",
        "cursor": {
          "ref": "21b175dd-1338-4ea5-91ff-1fc23bb671e6",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "73cc767f-2cce-4e47-a491-659d31c54468"
        },
        "item": {
          "id": "c17b2eb3-e40a-4788-91f6-4c87e996b502",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dfb2f983-ffad-41b6-9c1f-e33c70e30b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ae8d70-b995-4a29-8fcf-a4a8928109d0",
        "cursor": {
          "ref": "02a41ac2-1f29-4442-a872-862721d2e293",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ecdd7078-6141-4735-b8bd-2c94690a7f82"
        },
        "item": {
          "id": "82ae8d70-b995-4a29-8fcf-a4a8928109d0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8691830f-c1df-496d-8380-002aa6e70be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da453de7-f0ff-416c-a30a-96b32e3b1bc1",
        "cursor": {
          "ref": "56cec6d4-c59a-4f71-b668-379261ba9fab",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "482167a6-41c6-4b21-b851-444c8191a7e6"
        },
        "item": {
          "id": "da453de7-f0ff-416c-a30a-96b32e3b1bc1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d7bd5a3d-33b1-416b-a136-b5fd5a27a7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06166bf0-adbf-424c-8c6c-97881346f5e2",
        "cursor": {
          "ref": "b5ff8761-7bad-45b3-815e-638ad833486d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b99adfdd-3ed8-46c9-b333-86155bfe79e9"
        },
        "item": {
          "id": "06166bf0-adbf-424c-8c6c-97881346f5e2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "499e1851-1f01-4ad6-8bd7-e4786d47518e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42fe11b-d08d-4507-906a-b749f11e45bd",
        "cursor": {
          "ref": "7f9fd5d8-3381-4cbf-9bb1-1f0b5abe316b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "adf226f7-9f6c-424c-bfce-ba2881d69709"
        },
        "item": {
          "id": "e42fe11b-d08d-4507-906a-b749f11e45bd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "230adbf0-ae4d-41f8-b5a9-909f9d2c38ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3ab3af-1c1b-46b6-8562-8a6f52edbead",
        "cursor": {
          "ref": "2ecca39a-0d4d-45b7-af28-46f07ca12cfa",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ee93cdc1-be07-4669-a1c0-1f7e397d6a56"
        },
        "item": {
          "id": "2b3ab3af-1c1b-46b6-8562-8a6f52edbead",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3af2704e-d1d4-4631-937b-d457e1260937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8fd620-bfc1-4ab8-8e01-91f61fcb1682",
        "cursor": {
          "ref": "a2c71353-b402-4983-ae29-26f4b936b65e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d515db3e-7512-4108-87dc-4cffc7e4c73a"
        },
        "item": {
          "id": "0e8fd620-bfc1-4ab8-8e01-91f61fcb1682",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "27340515-0ae0-4f88-8115-1a23483d17df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19705ad2-8202-46cf-bb69-d219efa57ea7",
        "cursor": {
          "ref": "a776ccee-9a62-4ded-b6a0-5236136395e0",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "fe08eb84-7a0d-4f17-a0ea-a70a2af248ec"
        },
        "item": {
          "id": "19705ad2-8202-46cf-bb69-d219efa57ea7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a518093c-40ab-4f02-8819-3afd76b86c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49ce0a8-2041-4094-834b-ea034cea657e",
        "cursor": {
          "ref": "2fffe4b2-18ac-4d35-a63e-ab4e44b0a2e7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0fad0f3c-8b6c-4ed1-9a04-fa54b9447a79"
        },
        "item": {
          "id": "f49ce0a8-2041-4094-834b-ea034cea657e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b8757cd1-e792-4773-b001-3eab9301fa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91e6f7b-59c9-4382-94b1-b0da509d7509",
        "cursor": {
          "ref": "43b45f2b-eef1-4784-876e-956a1670ab23",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0027c2af-9ee4-4c57-b602-186b191877e2"
        },
        "item": {
          "id": "f91e6f7b-59c9-4382-94b1-b0da509d7509",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ee522cd6-382e-4eab-a692-d40457f38424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11ad067-ba94-4cee-9c25-6924a5556e42",
        "cursor": {
          "ref": "81e18286-6e44-4893-b848-d806ce1b5d49",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "22d9ecab-9cce-4d37-a9e8-b65e140c5609"
        },
        "item": {
          "id": "b11ad067-ba94-4cee-9c25-6924a5556e42",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "217f34aa-7132-4a7b-9f10-1ac05545712b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a7ceac-d435-4b9c-8966-ab0c52700ab5",
        "cursor": {
          "ref": "2cf93a23-f6e1-4aaf-859b-757bcb680ed7",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "64e02d5e-f0c9-4bf5-8703-27532534b413"
        },
        "item": {
          "id": "23a7ceac-d435-4b9c-8966-ab0c52700ab5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "386d1550-b4d5-448a-819f-3ba5a3567e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e787b77-7a53-49ef-95f8-032a14f29a48",
        "cursor": {
          "ref": "a18a406a-94ad-4cda-9bd3-7a716b1dcfd4",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "53af0cd1-8dcb-41a2-9648-f2f477e15b3b"
        },
        "item": {
          "id": "1e787b77-7a53-49ef-95f8-032a14f29a48",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "22ed2a95-434a-455a-b428-d83ad4f1e29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b691094-8072-408c-a9bb-8d909b9728c1",
        "cursor": {
          "ref": "c46c93e6-c82e-4f80-90ef-489912ec87c0",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4bf96c7f-48de-42fe-93b7-a074d79ba966"
        },
        "item": {
          "id": "8b691094-8072-408c-a9bb-8d909b9728c1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "87c4356d-62da-4578-954b-753a72eb5458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf88de2-9d00-42e9-888b-baf079c36ac5",
        "cursor": {
          "ref": "29071be5-c606-4786-8e58-a8cd8dfa8400",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4b169e99-5e29-48e0-a686-2794158ca3f6"
        },
        "item": {
          "id": "daf88de2-9d00-42e9-888b-baf079c36ac5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7795da7b-9895-4603-b4b5-a78f3dacba43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d4768c-ae73-486e-ba83-a04b27532fd7",
        "cursor": {
          "ref": "a7cc58c1-19e1-4f9c-8616-991526e3bf4a",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e3b8cf8b-4a37-4240-b3cd-836144b2c832"
        },
        "item": {
          "id": "93d4768c-ae73-486e-ba83-a04b27532fd7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "34b5507b-bdbf-4f74-a768-a47b8d8551f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a35e6e1-699e-4c3c-ad63-356e03f1a84d",
        "cursor": {
          "ref": "598da0ef-6ccf-455c-9ba7-928182cce416",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f3e778b5-5ff4-4912-8b0b-a7cef4f1ae3f"
        },
        "item": {
          "id": "6a35e6e1-699e-4c3c-ad63-356e03f1a84d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3e398ec5-f692-420f-8949-25b05ecb52f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b0365c-f392-42e6-ad33-5337940c4c11",
        "cursor": {
          "ref": "a7310deb-cf1e-4819-90d3-406cbd24f29b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c2858095-9269-46ee-9c71-ac4b1d37c592"
        },
        "item": {
          "id": "27b0365c-f392-42e6-ad33-5337940c4c11",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e4af1808-3623-46a8-8ae2-a7c26e5313ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97252c26-aec5-4fb6-8a65-8d2fdf24ccee",
        "cursor": {
          "ref": "905c42c8-0db2-42b1-b09c-2a0341acc29c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1622fc92-d6a5-4195-8e3a-64909e951bc3"
        },
        "item": {
          "id": "97252c26-aec5-4fb6-8a65-8d2fdf24ccee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "32ab93e3-6a5e-48f6-b0d2-d7bb00370bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a1d859-7a2c-4fc1-8a3a-4982cb2e831b",
        "cursor": {
          "ref": "3a71290f-911f-4475-9aa4-e743d4f15508",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ce247e75-f4a1-41b2-80c9-1e6455bda939"
        },
        "item": {
          "id": "f4a1d859-7a2c-4fc1-8a3a-4982cb2e831b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1c868d46-43a6-416c-847b-c765038ac23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13072b3f-211b-4e34-85ee-8a9dc0928a8d",
        "cursor": {
          "ref": "a115ebea-aa9b-4862-bb8e-970de0bc3705",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7b037359-9563-4774-b585-186f12601510"
        },
        "item": {
          "id": "13072b3f-211b-4e34-85ee-8a9dc0928a8d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f3cce4a8-8f60-4688-81ec-92d643a873da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d06c84-e6ca-4694-847e-69a505c01a35",
        "cursor": {
          "ref": "f5a0f0ee-2e2a-4952-91b0-822f905488c7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6eeaab68-a2b5-4676-bb8a-42458f90bb02"
        },
        "item": {
          "id": "03d06c84-e6ca-4694-847e-69a505c01a35",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "970aa05b-a2c4-40b1-8da1-7ef5d9933f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3fbeca-918a-441c-98fb-a1c1b5a4756d",
        "cursor": {
          "ref": "1a3478a3-b973-4551-804d-4db58c5be2f4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "526e77fd-b063-49dd-b2c8-e5a4cb1cc8e8"
        },
        "item": {
          "id": "4d3fbeca-918a-441c-98fb-a1c1b5a4756d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a32857c7-a18a-44e1-b869-5e2a442d4c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b37b93e-b1b1-49b8-82d9-c856d90fabbd",
        "cursor": {
          "ref": "a11852bf-f5e1-4553-9cb2-92c51c1219e2",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "01aa182e-ae77-48ad-8bef-37aad6c534fe"
        },
        "item": {
          "id": "5b37b93e-b1b1-49b8-82d9-c856d90fabbd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "031c605a-4595-40e1-980e-3bfdaa2ac9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2011f8a8-d14d-485d-94be-39ef5ded13fb",
        "cursor": {
          "ref": "946aa4f4-a446-432d-8670-9819e9516a43",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c6cc2b02-b6f1-45c5-a76a-9669ffd44859"
        },
        "item": {
          "id": "2011f8a8-d14d-485d-94be-39ef5ded13fb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f4199e30-7201-4de5-8756-9c59b4ec0406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5d53bb-a0d4-4bc3-8ffb-a5616bc2604b",
        "cursor": {
          "ref": "aebfd87b-b573-47d2-a24d-0b512c76610d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "53c09209-6386-4784-96cb-1dfb5569b06b"
        },
        "item": {
          "id": "ef5d53bb-a0d4-4bc3-8ffb-a5616bc2604b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "72060eb4-0731-4d0f-beb9-dde52cdd6960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd137587-c11c-419b-b3a0-fc6c2864eb70",
        "cursor": {
          "ref": "0aa9a406-39f7-414a-9dcd-afe90d9c3932",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0d1d728d-da88-410c-9018-6244158725ad"
        },
        "item": {
          "id": "fd137587-c11c-419b-b3a0-fc6c2864eb70",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "29d3b7d7-e39c-4b5c-ab7e-3b769da1daa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adce78d1-876e-4263-8539-2422ba69bc64",
        "cursor": {
          "ref": "6ad33d63-89f4-4f9c-b271-d7e19e2c3439",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b68b96d1-7f72-46f3-ad97-01d01bd103cd"
        },
        "item": {
          "id": "adce78d1-876e-4263-8539-2422ba69bc64",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6972fce8-6294-4039-9b89-dc55291100c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5d85a7-2983-481f-82ce-c624e4fa10b3",
        "cursor": {
          "ref": "2caa5ff4-42f7-4c3f-9790-4ff1b31e48e5",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7d1f1bbc-2459-4a62-a288-7c1b227483fb"
        },
        "item": {
          "id": "7b5d85a7-2983-481f-82ce-c624e4fa10b3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c5e561ba-2663-4c2d-80d8-15a600d73a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cd9ae2-83be-4a38-b4e5-f6ebcc0ebf37",
        "cursor": {
          "ref": "d1c070e6-33ee-4c9b-97f7-8d5d6c47b7e5",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "11e7a930-2270-4eda-a08e-4a40c5b695dd"
        },
        "item": {
          "id": "54cd9ae2-83be-4a38-b4e5-f6ebcc0ebf37",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "754f70e0-60ef-4ee2-87e5-8acb8313d352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32c8c29-5f55-4e87-8322-63cc249873bb",
        "cursor": {
          "ref": "9541a941-e9df-4eeb-9e48-75880cee11c3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ad8351bf-dd04-4209-a58f-6bb7a84c5d38"
        },
        "item": {
          "id": "e32c8c29-5f55-4e87-8322-63cc249873bb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0a1641a6-a33d-45ed-9c9e-f7419988a766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f2e0a9-8fe8-43b9-bbf9-7fb808b8a46e",
        "cursor": {
          "ref": "1cb9129a-9cbc-4c5f-a680-b45451331897",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "19e8b2ac-4291-472f-a0a9-6f823fb6ff1f"
        },
        "item": {
          "id": "f5f2e0a9-8fe8-43b9-bbf9-7fb808b8a46e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9cd03798-e5db-4965-93ca-123c635a38bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bb4a67-42af-4f48-ace6-338e5a92ed50",
        "cursor": {
          "ref": "31a6886f-fb4c-4f97-ad85-bfadd9b62cfd",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3230273c-8426-4257-a904-3169fc09132c"
        },
        "item": {
          "id": "29bb4a67-42af-4f48-ace6-338e5a92ed50",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "65a8e3c4-850c-4657-a323-55a8c5352ab9",
          "status": "OK",
          "code": 200,
          "responseTime": 142,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "520f0a26-7903-4acd-bf67-aa35b6c34d4e",
        "cursor": {
          "ref": "3141a95d-833a-40bb-a4e4-0990065e5f31",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dc51508e-1b5e-4058-8fec-580cee27b852"
        },
        "item": {
          "id": "520f0a26-7903-4acd-bf67-aa35b6c34d4e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8000f757-cd8b-4550-831e-5ff5339c68be",
          "status": "OK",
          "code": 200,
          "responseTime": 1675,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f207fab-eae1-4c4c-a9b9-053be6909c50",
        "cursor": {
          "ref": "18aa26f9-876c-4cbe-b07e-dff4b5bd184b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3171abc8-5a1c-4091-9337-397bf74db118"
        },
        "item": {
          "id": "8f207fab-eae1-4c4c-a9b9-053be6909c50",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "088568b8-55b4-4631-b1c0-5f0c36fbc614",
          "status": "OK",
          "code": 200,
          "responseTime": 1361,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8f9d90-78c5-46b1-a1ad-26b1e1da5b8b",
        "cursor": {
          "ref": "3c43db32-ac06-40c4-be96-e39fd6633164",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "898f6e88-6326-4c26-9032-b59f6801cd14"
        },
        "item": {
          "id": "1f8f9d90-78c5-46b1-a1ad-26b1e1da5b8b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d2f3b136-8f9a-480d-ab03-f48765a4ed46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8f9d90-78c5-46b1-a1ad-26b1e1da5b8b",
        "cursor": {
          "ref": "3c43db32-ac06-40c4-be96-e39fd6633164",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "898f6e88-6326-4c26-9032-b59f6801cd14"
        },
        "item": {
          "id": "1f8f9d90-78c5-46b1-a1ad-26b1e1da5b8b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d2f3b136-8f9a-480d-ab03-f48765a4ed46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0faf03-af8d-4066-bcf7-d83c03326ec4",
        "cursor": {
          "ref": "36152c5a-fb57-4f7c-bfa0-154ecad49bf4",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "376f5482-badb-417a-94a8-817a7fdb7041"
        },
        "item": {
          "id": "1b0faf03-af8d-4066-bcf7-d83c03326ec4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c226e54f-79ac-4f75-8714-0d7dd0c08868",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cca1a3f-2d91-4f76-b8c1-0ad9a18e695d",
        "cursor": {
          "ref": "8b65078b-3e7f-458d-952f-2def9b3d13b9",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "00072041-51a9-4071-af8a-788239aebb16"
        },
        "item": {
          "id": "3cca1a3f-2d91-4f76-b8c1-0ad9a18e695d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "487760d2-3a01-4c17-b63b-fd8547017202",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}