{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "781b80e7-75d9-433c-aa27-89d1f5d9707f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d16e289d-f5ad-4993-9945-7c49b5b26d24",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d1ca0cc-8163-4bc8-b2af-ba06dea6b548",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3554d4e6-cdd6-41d7-9417-cf6e78817cc2"
                }
              }
            ]
          },
          {
            "id": "82c6902e-0a8d-45a0-b39e-cabe797de70f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71a98ddc-ee15-4cfe-8a27-ac1d3f3b689b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "73a276e4-aca3-42bb-b0c0-0e8f9254e44e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ff0290a8-6336-422c-a84d-6527400b2a3f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "307234d6-8a02-46ff-9e14-d85394b26f95",
            "name": "Positive Testing",
            "item": [
              {
                "id": "825636d2-6532-4b98-a789-63b0667943bd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63c977a0-5c33-4269-94ef-9413209a81ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5de30bec-62ce-48c7-b4ab-fe3262015098"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c661d38f-2967-41af-a64c-e78e41c71897",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b93f78e8-dbed-4d91-b125-e1754c04604a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a67917da-72b3-4cea-a30c-1b549e612a09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b231708-9041-4de7-936a-281fb36d1ead"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9c2e2a1-96cc-4f06-8e45-a0301e0d2ac2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9a31e054-5412-4b1e-8c98-318861de45cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c68d261c-ab72-47f3-9be0-e7c21dc63488",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "029c0e2f-c57a-42c9-9dfc-9cf292c85752"
            }
          }
        ]
      },
      {
        "id": "a8982cc1-b118-4e1d-b4d7-aca948400011",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ad6d4349-93ed-4aca-b787-910710f84ad9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ea45533-74ef-4323-b89a-0e38e6bd53af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05669b9b-aeeb-4e95-9671-01cf370d8380",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f143bad-65a2-48d1-871d-920b42001f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e25b633b-6463-48fa-b127-2614300809df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985abc9a-44ca-4bc5-a698-8ece3a1a7126",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f00059-7048-4cd5-9e5f-2d024a376c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc657627-fac0-4604-8aa2-0ce49e2125d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc69c01d-8bbe-479c-a046-b3fa634a00c1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b4e4d0-1e35-4c4e-8f83-1270b0f9a35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e277255-269c-4468-88e9-c74c5668c8e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "315cc524-1fbe-4dba-b643-829c1dfa4aa1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61492465-7687-417c-9fb7-798d38a0882b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bde923f-2800-468e-b14f-8e7b8b383c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed3496b2-0a90-4709-a52c-0412efea0219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32202231-86e9-4147-a31e-c9b7ee986fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a503b7a-0f9b-4dc1-a444-d03ca3a58b62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f5a24dad-c190-4a5e-bb61-e99a145c4d68",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05853eac-9d31-42e7-92ac-d1620eda8f69",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2a41c62-8f99-4d76-8353-fb7e4c2ba5ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3edc234f-fc5d-44a8-acf2-265bf019fa6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b37f2c5-d728-4f0a-90cd-131abaab0a3a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4d82ab66-4262-4bb8-86c6-58ac7ec8eb00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff17e44e-be6a-43b7-8442-489d880a007c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f734c256-95f8-437c-bd1a-46a39c8494ff"
            }
          }
        ]
      },
      {
        "id": "1917a276-895e-4f18-b64e-57985b2d059f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9d76cac6-a340-41ef-80e5-ec913de98f5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbf914c4-45ac-43ee-a4ae-61cba04c436e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9a74af64-0936-4959-9461-a1104900164d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e1ba01-135b-464b-9e1e-fd8c28778495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfc357c-20d5-4f8d-aeb5-c568e177c2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd90547-bdcd-4e15-b8da-77f54f7981ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dea8555-d670-4b25-884d-416787797da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02e4542-b35f-47f7-8f62-dba756634e1b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46472fcc-8956-43f8-9da3-cc180f853674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ed2268-077b-4134-a100-db4ea9fecab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57347309-7777-4329-afd7-f0b0909c7ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f919392-5e4c-4f22-b42b-c99bb853ed69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf42301b-b616-4383-9bbd-4d04a13b5be7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9baf1699-41c1-4b78-87e4-5875f5407351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90772abd-8dc2-4c60-9399-3bfb4530750d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c1baab-e7bf-45e4-b403-4befb6f0ec34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12639766-0e8c-4621-ae37-eeacfcb686d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c479f758-b2e5-40ef-913a-4002c2357036",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014e9504-f602-4bd6-ada4-9d6637bc45b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2343c3d-c5f6-4556-9dba-02297716a98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e733f2-755b-4a96-a857-a5bf162dfaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "445bb458-3a66-47d5-8ea6-70e9e261ff24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782c07af-0eb2-4ae2-90c5-d6fab31487de",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542f0860-03b3-4bdd-b732-0fc38b4571fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a42658-63ec-4a69-969f-53ee7582a948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed38c9a-9b3c-47c9-a4dc-9dab51edc86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acbb5a65-2933-4ac8-b24c-15f32cc72907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6649970-0a8b-4fd2-8e6f-8a898fbac906",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5528933a-f097-490a-95cd-dcaec160ac5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd85536-34d6-4a12-a019-616e2deed6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aca20b4-3405-4484-8e1b-e1c7593c7de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "334f5f6a-85e0-4d5b-877e-9430bc9f0fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28c378b-3d98-4c6f-9316-b3219d96b80b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe1ca1c-39b4-4da1-98c5-0563ba98d760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26c4ba4-3631-42ef-9993-54adfcad49ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2366ce35-c477-4f52-99fa-f5aa33b9bca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0305543b-942e-488c-be54-657c0b4bd951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf6d200-7127-475f-b58e-d61240e6c946",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e90af3-3272-4faa-b1d8-30d0a560b346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f33aa9-3347-42f9-982c-b2e1d4a70cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8e2172-5e2a-4f19-8871-6a3baab9cd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c7390b7-593c-421d-bcfd-d38f62a1bfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e3d3c6-b871-4405-b7d2-95eb008fbc7c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1868fa88-2de9-4318-9ebd-5ccdea03caa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2e8ea2-0925-4b68-96c2-4ffd8df210de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1c02c3-f08f-4a1e-b4cb-51b42a6f0656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20f401b7-83ef-46c3-ba7e-7b542e83b06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb5cc6b-5132-4419-8ce8-bb4dc5d5966e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050dd6e1-e326-44f5-bf6e-1a5ef856c036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d50442-e725-4d2f-ae2c-686fcf19de61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de0403c-40f7-4176-9ad1-1ad6586a23a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "773d1e0e-b198-45d0-a384-211e83134c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a87f42a-9c17-4ac0-b10b-b879a6f25f2a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af305a0-c80b-4173-9e24-2e1688e80d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7e8147-ca7b-4f26-8f2e-05bc89a2c928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d51cd36-d22c-47b6-a247-77110f0186cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dbd3d6f-8dff-4ce6-9831-f168c7471922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f507f64-ee55-4980-b0a5-ec5208158273",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13474d01-4668-4982-b83e-226962eb11bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4a30a9-bbfd-41b6-b345-cf50e29387e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fb7a35-e1e6-4d4e-9b53-8442617772a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b385877-3610-4a67-b283-717de323c343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7154d99-4f97-421f-8b78-e0ff94be04ed",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731ca956-c125-4ff9-b6da-d661093c5aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80df3bf4-685f-4bb4-9fe9-52f10aecb2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92560568-4acc-4a6b-8bc7-9799f290bdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "314a7b06-cfb8-4b3f-a3ad-a3894a009f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44b1938-bce5-40f4-a796-72c1cae0a132",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b66923c-c48a-4af2-9c26-d4be1bc82e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68c2535-066e-43f1-bb4a-1a735aa3c199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3d01e8-a065-46b2-a849-a8157a5969d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b953a094-ca7f-4c24-aa98-00a499ca9261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec651ea8-3f05-4b2b-835e-96766b2899e2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b491f8-73e7-4309-a28d-0185a822df9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338a497d-be93-4581-843c-3474e77b2c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd42cd7-e00e-4539-a0ba-6500fd5a5c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22cd31a7-dfbd-43ca-b243-5c3eafa7e3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205c8926-579c-4618-a2c1-09239c86c179",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6b283c-8358-441d-828f-967ccdcc0a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99f1808-907a-4672-83c3-a3dbd8918a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b3364a-0deb-47f6-b7b0-a6d58992e660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60374cbe-fcb2-4e89-8e24-712c30af24fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea29b0b-d0e6-4d3a-95ac-c140a879b3dd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f584f5b-accb-437b-8607-c3b0a507a9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ca4d52-f80c-4902-9192-de2fb63afa35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b61ff6d-b875-491c-abce-7a79f7047125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d4fc109-ba24-4ac9-98d3-d21663d7c808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554aff42-c463-45b6-a7c3-176f1a452cf3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6daf4f-ddf2-4c76-adfb-24be1b536a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59c2aa0-8b82-4959-b120-fa8789d2280c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5186a7f1-fa45-4379-843b-653073d78374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "47bf328a-05b8-4454-b1e2-9814511eb761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bb9647-2c6d-477a-a593-5f26765c830c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30014b3b-a206-4660-a3eb-0f9042c1ae46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1306dfd8-6903-4f80-8ef0-a511d7348c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40a4c4b-bb27-4056-9206-5cf3afa1e0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa989d1e-3645-4888-9b95-cd07d1d7a150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468f975c-0751-4f4e-8b82-1649fe1d068b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7be32e-1b4e-4c91-8194-a7670e3b9897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a346a8e0-c66b-4070-84c3-8478c1afee97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a225e10c-c733-4916-980e-b9526c6168d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e37e8f-0c3a-4813-9c43-6858b606d313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7667639-ece2-437d-90d7-0e9c0a3337e9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0355f5-641a-458f-83c9-683ff83abbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ac7268-9092-4d64-99c1-914f0105e924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad6622f-ce51-49b6-afe1-8167d1196bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de4cf21d-8611-43c0-ba56-ff748d9a246e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149f0732-9cb8-4624-9665-82ccd7750c0d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495b5e44-28b6-42fc-bf15-2ef12f8b8efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13dcc87-ad94-4105-b2d9-2d033ad9eedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcccf00-1275-4a20-93b7-990747799a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b36893fb-e8b9-4d63-bfc3-e72a80d6d497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc84e66-3073-4e17-b189-ed6130a7ed4e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1430a5-c013-4379-87fc-cb79e5308f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7811cb8b-accf-4afa-91dd-7446426f3dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a231ce37-2034-4dfa-b3cb-4c3683722f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a98ba346-46e5-4d9d-a51d-7f2973170d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b48e758-5e4b-40b4-b7a1-49195398f169",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0c2865-210b-4aa9-9b81-2306d15dfbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb4e86a-f245-42e9-8ca0-d126c8bb5383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d723651a-beb4-4b1f-bb22-b883271631b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1a8057-72c3-4f48-a8c1-b74054167c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3f8f60-4605-438d-a4df-e83641d473bc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3833e237-acad-4f70-ade4-c3a04fc7fb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd75971-51d7-432c-a062-a23ca464c9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccce60d4-3f53-4b72-add8-4ab3184e4ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11d1af4e-4918-49f4-8ef6-fd0e8ffdc554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4caa0e0-de82-432f-a5a5-ff0024edc84c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf67f164-ba0f-4737-b1a4-ec593c7a7db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a291c56-13a7-4c4a-bf68-6a254906c065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b12cbe-b39c-4d6b-bd3f-30ccc95a9831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c861951-cf62-4df5-a437-a50e8f34cdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc1f58f-6cfd-4500-94ae-916183f35e48",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4935322b-da4b-4a60-8cc4-9176f4be365f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f5113d-cddb-4720-8db1-74f9bc30d00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8203db-e60d-444a-a0aa-666357c0c2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7429a98b-be08-4c70-ba5b-c688a2fd98ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ff5f18-c000-468b-a4da-262e846ccbac",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1528b7-9e09-460d-8715-270b81715a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2252abc3-8ab9-474e-88fb-5cfea5fde336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a7ba44-6ea9-4c9f-b22b-924bf78ef9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9e37a7-6cb7-4ca2-98a3-fb1a5a8a5ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e337057c-5ba6-4417-b588-df9fd5d22c69",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8b1c90-2d75-4777-8160-8c10b048eacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c19b7a-57db-43d9-b2cd-df1fbdc3118e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b06efa-bd65-4420-8320-4ef526fe147e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7a2f69-e2c1-4573-bb9f-9cf63a3ed010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ae618c-f112-40be-92ad-81a7e139d72d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d8c788-4da3-4389-b646-5dcb0653069c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a756a91-31e5-40e7-b414-6d6969d4ff00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ad6cb6-0a1e-4d88-b39f-77405a3cc62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f29c5c33-db84-4162-a364-f4bb5d44ae05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a88daf5-5398-44e6-8df2-4b44afccdc27",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae6bf55-38cb-4755-94df-15e9ffcd7ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69223086-b2a6-47ff-abd2-e41a31785db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931d9e59-3ffc-438f-997e-9d7521dbb78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6816f71a-a212-4920-943e-335783a52f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b070231f-1c8c-4fcb-864e-aaae0bcbbfb2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3b5f88-589b-4e68-b860-fc7d1789ac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748ce771-116b-41ee-b953-0a291a584f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bd983c-7774-4056-b7f0-cd1b6a36d08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eeb5e72-c12c-43d4-9cd9-779a1363bc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c930e865-2cfe-4588-8ff6-747cebc89c77",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129ab9cf-91fb-4a2a-b77c-10158738d3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35040b0-0315-4482-a619-52f422c714b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dfdb1f-4771-4581-9275-2a416328e4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1532e299-fe7b-41c1-b4af-3a4c9271444f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9423e2d-a3ca-4293-9ea0-0a86de679ac7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e218dc3-79b4-4818-a75f-1b341d554e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be98fab-bbfc-4957-bf15-e587c430f2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2563b30f-30a7-468f-a200-ee3b23159c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "203bc35a-7b65-4973-8ffd-1b0e05e05984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f5300e-79e6-45f5-bdec-f65126ea28c0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1b3a7a-17ff-4c29-83de-f102e61382c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e40129-b9ba-4744-b682-7db296294d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0469b62b-604d-4f5f-a62c-499c55273daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "899a2f84-087e-408c-a4fb-4509a89b426d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b134c1a3-5601-4ff8-9b93-506e31e3c8e8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c678c236-b523-4432-85d7-44248fdca12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ec8bd22-94a1-4470-ab91-c267ea0111ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bf399b-326e-41c3-9c6d-479ab443ac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "132cebb4-ef26-478e-857d-afe4ebcc20d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864bad96-b3e7-4780-a46f-1c20e7cbbbcd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34649a4-5eaf-445e-baf1-9e4b6942dc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2cd8cc-f0f9-4731-ae11-6a1ccb64af16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93fc62e-5da3-4005-aa02-991a14599eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8755142e-19ec-4d93-88ea-5216f4eb8219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e5488b-daf6-422a-ab03-fd558965b972",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6751fbe-607c-4ddc-97db-c1d732a35633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c79c09d-9dcd-47ac-a2bf-8a037000bb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f553a787-a60a-4f4a-9a05-5a3654feccde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0da41d7b-2d60-404d-b6d6-fa24594af16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4430fefa-3ebb-4f37-84f8-3de9204cf4b3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a427511-f751-4f3f-923a-7d0bc3ebe794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f66c75-18e6-432b-8704-4ec6da6e3d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440fa021-6a1b-4f25-bf49-c94148ae9bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff78119a-1c4c-484e-82f9-8a8a3729e280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263d3334-0902-4fd0-aac6-3e229a273798",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5995f7-e9d1-4ae3-b830-7d5eb8134b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef9555e-3b69-4525-a56c-447fa86e8116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe93eca6-5025-4466-aa8b-92f06a753abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7d4405-b308-4a78-82c1-d3f1fea4bbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4583d6-a969-48d7-9f25-0ea7b3e41356",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f56ef4-cfe8-4d09-a969-f917ca500204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255063fa-af36-4ddd-b8f0-2fcea5979583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d806bd-7753-4ca0-8f34-158799182fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "14125298-2e86-436c-9672-e578901d0757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1c2c8e-892e-4cbd-902b-c58254adcb5d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492cde58-3a5c-4923-b48e-e87e5cd4cc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b630264-f9bd-4b48-b192-49e4bd837494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee09b7e-7a79-4c70-b0ca-664d6cb7e850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "64cb49af-3b16-45ae-9226-77b104118daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a51113-fc6d-4dc7-b965-33302f7f04c7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a62e0e-7a65-4687-a0b5-d4b672762248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1b8776-d8e2-466d-8564-f91703c97d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d119289b-7afa-4c39-a4ae-dbe1da6c52d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a29083b-1353-4229-85cc-21ba78516af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1edd987-9839-460a-b564-5fd4896e65a8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c902d593-2bc7-4302-babe-fa7b5f19f52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa67d28-7426-4bbf-89c4-aa944ca04e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4ee063-f42f-4354-a2d5-f5ef23388c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2db393b-ae7c-472f-bae8-a571406f167d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb69137-29ab-4c8e-9f5b-69e428693837",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b616de40-f6b3-430c-81b0-bc1a4dbae60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71379cdb-0f85-4eb1-b12e-32bd5187df94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b15938-27ed-4129-83f3-aa9f5456db99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a0bf56-91c8-4c4f-9c6f-aca076c348fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508663f8-0006-4784-90bb-9657d53e5c08",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1741bab6-c012-4d3d-b5e2-b67aa6e322d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460f6587-b16d-4bf7-b22f-dbe2aaa59c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d0b3d1-1d87-4ef3-90bd-3423d6cce286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "806305c3-0dc1-444b-b2e3-8b610aa9409b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b725727-edcf-4cc4-b140-dbe696392427",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb18621-c5a8-4bd2-afb1-a2a1ce308f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fac213-fe2f-44ee-9ee2-530353fb4e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f409fe09-952b-465a-8a5e-77815cdec58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a07ba5e-cf6a-46d4-ac45-1414755d2df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2496c5-b7c9-4ec9-95f7-5da1cbd88215",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e95c599-54dc-4db5-970f-334bc1b3d25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8535c532-94aa-441c-a9a8-cec6368f4ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff30d881-f0b1-4647-ba50-cb0ba0adaafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16322c7f-f9bb-4330-bf80-8d2b86742b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466a943b-837f-462c-a3e4-43f6a7aaf283",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecc7b9f-ba18-4429-9e14-faafcd7ac984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab039f11-3ee4-42cd-a4a1-558be23bd199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27817438-0b99-4cbc-8211-7a50a95e3107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "116a00b4-344e-4044-90de-b9961cf42bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c2e788-d5ac-45ed-8bd5-94f74e455525",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5953a8-cb9a-4f63-91cd-8d118e24b25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d822963-7b24-456f-9081-7e8dfee92fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a08aaf4-df54-47b9-a937-2df043ba4dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "958dba04-1fa2-4161-af11-a6ad6f07e25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f97409-cc90-4b8c-9027-62a8c6b058c9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c99ffc-400b-4edd-a6ec-4bcb5f90380a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83718980-470c-4e95-bf22-55b472c4ff87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f948b86b-4c3f-4a56-8f9c-7f083d7c480d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a734293-b3f9-43c4-b387-171b85f03ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fa2047-ad55-438b-90bc-7dc5e65a5c08",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905cd5f2-2ad8-4fb4-be44-3ebe9d5a2e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac6ee77-4e5f-43ba-9aa3-9c8bc8ab2dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7794211-cf04-4675-99a4-5b8b2d24cf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5086969b-3e0d-4fac-8310-0ca381db16cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7003cccb-6f6c-4bdd-89b2-52cfcaf9ae09",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13338d94-cc63-4351-a0f0-42634bad1aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1318ab3-39b1-4ccb-a2ac-10f2e15a872c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095de80d-0800-4c92-b7a6-187809491dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "402a4258-e5fe-4428-8a23-cd62efa27a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd670397-6ce6-4884-b1ff-56c10b5f75a2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6f5354-3e67-4148-97b3-2fb209cde38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e813e1-6dc7-4ff4-818b-c5277ccc20bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdad8a0c-891e-445a-9d37-6fedb959c50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7efae58f-d0f2-4c58-a67f-2e66c69bd704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4717d0-8d85-4e29-9ce8-277f20ee918b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9aaff7-db7b-4a36-87a2-86d7d3e8644d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d59aa15-a463-470c-83ef-65b84fee6e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a8723c-145a-4631-b9b5-27ac13e132dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9d2fb6-fd5d-4413-8d78-6ee085486db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c8693f-459d-4b19-9455-d15002bf9fad",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fee553a-9784-4947-9afd-e3d7136e1b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c68de43-5259-4038-8947-fd3cf20cbde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fde416-e7bc-4b40-82fe-f1372d38d3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0631d4c4-fe04-43f6-ae02-4ee1fa8ca657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34e8413-edfe-4991-af16-4fabd0530d31",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9266023-e921-4c03-8fda-66aeb2d04415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdbcdd6-5763-4887-975d-0ecb73f7bb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55b3672-be74-411b-a7d0-ecd25bd8883d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2838e6ed-df51-4687-b58f-2f2087620dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee0f822-9d07-41b4-ae11-0bf52d84b2e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d0e59e-06d0-4264-a4d0-76cda97fb91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fda74f-3632-4c6a-a00d-7f2beaa10701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb517a6-54c6-4ac9-a998-e0e1c45f6204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7664a8-52a6-4ebb-8924-b18ec974d71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c0bb9e-4d77-4f89-b55f-8f360d149558",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e2d010-1565-443c-854c-a89ba2c4b70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdc07bf-e71a-46b0-92c3-872cf79a6ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17552e0e-68c8-4738-9543-87aa9ca6ab11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b054e173-b7f4-4301-a0f0-0bc34fd238aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3798880-8789-4b11-ad28-1bd2431f556a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bce64c9-ed05-48ef-ad37-87443e0656f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905356f1-a7bb-4d00-ac7f-30f76e6037c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30be4098-bf56-4738-8f78-37bbbe88aafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c028da2-b970-41b2-a676-8d0ead6f5774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3268f0-7f1f-407c-b09a-241c5fe10a86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ca65ef-f9c4-48be-b06f-eb870f1ee804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b5672d-d872-4179-9e57-42705795c1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a8d3ed-6327-4be1-aa3a-ce22cf5f5b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "873ff4f2-e723-4d36-92de-84623e8e0df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ef914f-0b32-4b7b-bae2-8e1785f53a1d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3a53ea-b553-4824-9b4f-f2145c6fb8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa5df70-6273-46df-a1b7-55095b4790db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffa4cd6-a93a-4bf4-9352-a2f59ca84088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "152f431d-dbb3-41fc-a32e-0fd099c240e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f236e51-111a-4c2b-9478-a47d269f40bb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0139d2-7c94-450a-87b0-04a8a17f371b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4573822c-3113-460a-b33a-6bfd9506afc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fc24b9-45b2-480f-aa91-cc8835182056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce68afc8-43e6-420a-84f1-e7c8ecf4e1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51eb2d38-ee12-4430-b70e-a15538df3cac",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a3a45d-0785-4ebe-a221-218cbeab7fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c92a97e-60ed-48a2-b85e-acdb591bc432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b985d073-d956-4e20-8888-804d0d42adec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d542c33-dd6c-4a90-87d2-3ac138f3aad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e43063a-6c2d-461f-8479-f0a1925003c8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9eb5aea-02ef-44a3-a891-27b3f7371191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a82cb0-b69d-421f-a32f-ab9417036bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dee571-e14e-46a7-be1c-c826e7146bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f1d96e-d214-4689-8d4a-8c27cf1dd81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46be0105-e7c8-404d-a0da-79f9ca75203a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a79050-eab9-48ba-9043-aba8561e762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82852d01-caeb-40a9-9fc2-dcaee07a0c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020301ad-97a7-46fa-a831-2c91dd4bc6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e23008a-5a5a-498a-b5c7-47b9770c22ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b716ab34-9265-4195-919b-dfaf30408a13",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb5d3ad-b09c-448c-acaf-80eb86d8c929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bbcf44-9599-4cc8-a837-3099e0540b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bb6e4c-04ed-444d-9f56-11de2fb7c0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "048e8859-4cbc-421e-91bd-15ed060ff97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f6035c-a391-4068-9852-ae652157426c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40717b7-b950-4c92-8d08-4e96731261be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92a9b28-d4f1-49b8-8614-ca9c2d2ff44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc15f6fe-016f-4163-8d18-ca2614ed6969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "984393ae-35c1-43ad-b6cb-9159d47231b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775371fb-6543-48a8-bc68-3baed1dbf0de",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf340f63-0b6e-47b0-b83b-449156db98c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e449348-7690-4695-80d5-ef53220a83e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd101ca2-854d-4824-974f-c875a2352261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e5ed3d-7797-4fd8-aeae-5d15dd3b5c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bdaffe-d39b-4e96-86da-5a4333b23799",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5edb12f-2189-4552-aff7-05651550473c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22caf45-2549-4527-b115-5cb24bcd9e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca326d7d-a7b0-4a28-9948-c1a8232a276c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70bc8182-9821-4eb1-901b-e0a845384142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a366fb91-c7fa-4313-8efb-8d74618b5f19",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7fd334-0dc8-484b-83cb-e06ab9141d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59df785-31d8-4747-a751-68cc65ff9b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2c7461-7d22-4a09-b40c-c872122d7c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59e9db50-9279-4b85-b691-e8beca9cbed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d3283b-a6e7-4353-9bf2-b81538661326",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6390f0-7d41-4483-9608-7607c583049c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec846c5-ff32-42a3-837a-6d9532e728bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68d4a73-6feb-4589-b462-dfde621dcaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1feb7ca-f1dc-41a7-ac02-8a4960586555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcd1425-14ef-4d25-8803-9041b3b58e55",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c45f79-5267-4110-b6bb-e504335ed0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180770ef-b0dc-486d-9cbf-ac6f094ca5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a90e6c0-ca35-4cea-b715-2f3c6b466fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c51b97-5916-4ba7-a459-2beeee881cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d550e02-9645-4b4f-9c6b-c25a029b9f6c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab33992-2057-46a9-888f-9663c59650e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5632070a-338b-41d4-b7ef-2bcb6c85b242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc816313-f127-4978-9a24-e6de48a4329c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a258de8a-b81b-4044-b629-f13ef9d6c607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4db9a4-0aca-4e47-8732-eab2ed45f019",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9559abe0-9243-4fe3-8af5-471682bd65c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd989f12-99a8-4664-bcbc-2b479a6e251c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c414b42c-ce77-48c5-b48f-51a01107e20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5b59af-eeaa-45d2-b5be-bc1cfac20d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94ecd5c-d2f4-46c4-8407-789c6562b06f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de6638b-f534-4653-8370-5768ba920b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1677eca6-c6f4-4d37-8f44-3ec3b68dbb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d60c1f-5604-4677-bfb1-bf5ff96ba140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2356c670-589d-49e9-8f95-2b6e0b7693db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcb0cf9-1a1d-4ff1-9fa1-498debed26ac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aa0ddc-0fce-4fec-8442-54adde06d256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399adb87-ad90-4b7e-a431-bbe9d627fa88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393bfeae-9e46-4169-9640-f19ca0759a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4df24593-2005-4c5c-8ecb-840530167ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca0b302-06d3-47a4-962a-6d766fc6ccdb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4093bcc9-243a-4c7e-9ec0-5ba384d07b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060322c0-d437-400d-bb5b-e4cc55cbb7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17758080-2bb8-4c65-b7de-2668f225d540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02622f6-75fa-4706-8ca0-ee47f0498cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd4b350-14da-44fb-9f44-e81526b98f5b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16048f31-6325-448d-875d-7d9c1242127a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1812d426-d6f1-4f2c-8765-99f4b431686b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6164ec-a128-421f-bb82-1148001fc791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "952c78f3-d513-40fe-9d29-c14de18ea823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dacc420-3d3d-490e-ac4d-f528d3faca33",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84621484-7fe2-4dfc-a6d3-01d03c9cf8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fb4f98-c970-436c-bb5e-33fb84e03f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7148cde3-4120-470f-9650-d23af605646b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd4f04e-1a3b-444f-acc9-100290fcf22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8bb662-2617-48df-8d5a-b953c9cb31cb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03b4ad3-6300-4b81-897c-7f0c21ef720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "864e386d-d2df-4449-8184-377153862a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc26131f-ac64-4fc6-a657-acc154d7ee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c558ed69-39b6-4b86-9640-9cbc7a98a4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3934e981-420e-4907-a1fc-03e4fabb5016",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f98eb8-7fa2-436f-b5a5-8842e01bafff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9eb66c-17b7-47b2-a2f1-d54fcaf494f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0e7d58-20e2-4259-9fe4-ac07a00be591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4e0269-60bb-4bd9-8434-88c42156a20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81db701d-85c3-472a-88b5-f87c39c0909e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ba8567-20d5-4183-aa5c-b4578e10e0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337da0a1-274c-44cd-b2c2-5c3783eb32ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ebb23a-f1be-4c75-b668-0209e7e39472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3998e8c-9215-4065-88dc-d17e67007eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ebf33e-262d-4410-b951-0847f0fe50f0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c621e1-6afc-436c-82a4-f3b4b5ad23e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6253497-6d6f-463f-8088-2975bad0d71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dd4ad8-b510-4ad1-98fd-e02792beaff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3eb730-76ab-4f13-b4f7-ebac16574553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52e347c-8161-4cb0-81d5-1be6b421a9be",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ba684d-a48b-464b-aaf5-ac18da3bcc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a33a170-c1ba-496a-a231-e94893e3d93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e423c5-20a8-459a-856f-089d5464484e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c07c6b50-f435-44d8-9f56-4e3fc9b916fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d68c254-3b95-44a6-9ef0-f868a78774c0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cef5b7-af9c-43ce-bdfc-a31f3fd3fe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19f6a13-7efb-4453-aaff-68e10777f18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff7119b-0ea9-42d5-a92a-36da7f3d136e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32dd817c-afd7-4154-91df-c53969ccffe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1955d34-a60c-4c66-b61a-5dc76c5e972c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580c3a3e-62c7-4c33-8bc4-679e0e87029c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06e0f8c-7336-4fa7-a925-0982eafc071c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eecc993-5022-4161-a5b2-1af47d98d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1dae6bb-fb6e-4ef3-819c-618fb24547c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef4d073-a503-4a3b-9e37-900605957e3b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308ab58a-5e32-4bd7-9005-20f3ea0f0648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1580f75b-8396-44e3-98ce-f6b43a3a534c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f88a86d-4309-4fec-a716-3d28313e4e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "feb244e5-f84d-498c-9459-89db73bc8998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228bc6d1-7b6f-4b81-8a75-0a6cfcf5d57f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbf4c9d-b79d-4c02-beed-43bf8b09d86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5b2373-cabd-41f4-91b3-4aa464c04a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76094edd-a192-47fb-93d9-49beec526585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "78fbae3b-5688-4af9-bff8-be9fe4a77b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ee7724-c9e4-40f7-b2d1-3655730e0f66",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d869da-1e02-4199-9383-cdad742f0f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35b2155-8d3f-4e43-b061-78a7fcff4415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307d73c1-fd87-4def-836b-557566a79c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5207ee8a-aa31-4303-b434-1501377c0720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f9286b-cf4d-4b2b-84d8-e5014cce2c59",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53cfb56-2cd6-4e86-8b33-a0fb7d55c6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c860c0-b5cf-4540-b2b5-2c2b150b8e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a16897-b76b-4c0d-a6de-48a8d43757a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c953fe7-aac3-4fd0-a604-e6968e86833c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9435bd-64bb-427a-a350-57e38311499d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea7140d-91b6-4225-986d-08641ba34ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e56770de-306a-42dd-894e-a35be2d8faf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7d6923-05d4-4f41-b764-9f4c8c2c8e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2605e38-a707-4b72-905c-0da36ca37e8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "01087bff-7d31-4d94-8666-97a7d3ba3eb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d1dcd8e-2851-490f-a698-91aabc4ebe81",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0b18b8-e664-47c5-9b6b-fc815546d7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0b7c9d7-2162-4c6a-aa8a-d7148c5a1113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bcca3b-6ad1-460b-8c0e-92b6f720b7cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77322eaa-773e-45fb-9bce-078da94c16d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd22b56f-b12d-4b98-8b8f-fb8275b61f98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29013307-69e0-489e-b2f8-609568ca3d88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6e2ce3a-75e5-41e8-8c91-a4d970575acb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b221bfe-882f-4ec8-88e4-e5538c823dc0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4b95a47-f59e-4bd2-8481-e729c52ad764",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b70c8c0-46ea-493b-aa27-03fed2939f8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e82df1f3-1b1f-49bd-bbf6-e6de38b92d8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f0e3292-543c-46bd-96f1-6fdce3284f87"
                }
              }
            ]
          },
          {
            "id": "dde7f3e6-04b8-409e-902a-03e3e64020da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef2357dc-7e45-4dae-b225-7575e5764db3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8190b4ef-8487-408e-a20a-16ad7392cc70",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff51b36-1a95-418e-8299-1a2dfc5b9c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0812bf94-0be9-483c-ba5d-10bea58cdbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d08974-7369-456c-9fb0-4e4fe80b294d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0f9558-8e93-4437-9116-524799b2b45e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d04f3b86-c24f-4eb0-8fc7-8b4e9ec6d2b1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2faba834-4cfe-45f6-89b9-a2070557813e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fada7996-26cf-4bba-99b6-6f244a8f6919"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a31b0134-c24c-4a7c-980d-b9800eeda887",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "45aeccf0-3de4-4805-a2fb-dabac4c38e2d"
                    }
                  }
                ]
              },
              {
                "id": "bcfdff91-0ecc-4738-8933-f9ea03cfc845",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ab0ede3-ab1b-498a-9a8d-7ea00a1a3a10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "caa1eb7a-50b7-4e17-a2c5-00e265fa348a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b66ec74-d072-4dd6-9b9e-ea8ef5b94125",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b6e31c2-bc15-4ede-b03e-3350fbf7a6d0"
                    }
                  }
                ]
              },
              {
                "id": "63f738fd-e3a5-46d3-91ef-6f4b7cd06d8a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed249492-a25f-4cfe-8ecc-d4d5df544ffe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf22fff6-39ee-4c48-b315-93b1074c212b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "550ae6f5-ccb8-42f5-a782-960babeb2bfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4086d5d9-45fe-4a0a-b4d1-eb142498a96e"
                    }
                  }
                ]
              },
              {
                "id": "58a50fb8-fd05-4cbd-b43b-c8933479cd8f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0245fae9-1526-4658-ad53-fa07532a0b3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4a23277-708e-42ea-94a4-583df3fff65f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed0de421-af2c-4dc6-bca1-7f99db0ecf44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "39503e11-78c7-4cb0-a256-972936a4f8e0"
                    }
                  }
                ]
              },
              {
                "id": "732338be-ea63-4e03-b2ad-371727126d6a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00dc4ead-d9dc-4980-b392-1e5c7f3a1e8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f604b1e-10fd-4afb-941c-b80d457c195f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5789a938-1b10-44c6-bacf-cfa82a2e78e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ebea33be-b18a-4d7d-a9e4-642481977d16"
                    }
                  }
                ]
              },
              {
                "id": "7ba7e55f-3b61-44c3-a1f3-11184f2ed6cd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3231b0d0-de47-4978-b8ed-66cf95c84164",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17355eb0-2e47-45d1-b9a0-c8a20e7d06bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab7d46d2-1171-4d38-a94f-d9f73e388df8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c038c03c-067d-4e4e-b5fa-03e877d52ff6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d0ff4ff-a3fe-478f-9b30-6a927a7405e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c1ac5cd-91e4-4a97-bf79-e1bc65a4890a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ab6b27b5-8dd3-4fe0-8fb0-275571601b1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91b740bb-89ca-4f47-985d-c7420832595c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3850c629-7328-4797-94c5-16371f4a1459",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d8b428ed-9204-4588-be93-a6e2f5f15c9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8678e82-f019-4c5e-b3bf-c07017b38815",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d16b1347-6203-4183-8728-2844158fefcc"
            }
          }
        ]
      },
      {
        "id": "5eab6090-caeb-4b9c-8e45-40e3cf0463af",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "18e36a9c-7284-4048-b285-7b3c059e4216",
            "name": "Negative Testing",
            "item": [
              {
                "id": "243f667f-6b6d-4e47-ab97-4889d3b692be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a5217cc0-5395-400f-a413-eedd88b4d12c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c50bbc-4a90-41c7-9989-48a7fec5b60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af179ae8-8752-4ecf-be9c-03e30adcf30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9b7866-4fe3-4b7f-be57-b24df0eb68fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd3f693-3467-443d-9589-95a179f0e7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff13a02-0386-43c4-8597-878d43f8bb0f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15d56c2-0a28-4527-ace2-59b4227027ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5592d09f-b145-4113-8903-ceb61ba6c6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229116ee-212b-4b9f-a204-03b062567870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7904c1f3-ec98-4382-875f-ac5551f4b5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ef4ffa-b56f-4645-b35d-b3e8d2e570d0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c75bff-541b-4f42-bfe5-e7322ddfb961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2f46fc-e5b6-4fb4-80b3-bc85395dac3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd93015a-a1f3-4096-9c0a-c5454601b921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec6c409-4aec-4da5-8d10-03da6cc8c96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24022524-27f5-4bcd-91ff-7cacf29078d4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aec7d41-b06d-4fe7-a423-a50e8cd1284e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea1dec1-b153-49bb-8c78-83883ef7bd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13282abf-33b1-498d-82fc-419fde28464e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "597633fc-5e00-4d0a-a18e-5f2b2a3783c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cfe43f-80f6-4d65-9b67-b887d683f26f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e53e70-8a97-4c9f-a1f1-dd83b674cf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfdafa1-4695-4a6f-a5f9-3ceea330232e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f8cd13-dc53-4219-b50d-b7fab2046e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6a306e-9536-445a-a324-f0ab1f7d1c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f4b5a9-663c-4e1e-a17f-1ff43321af7d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e29d3a-f08d-45aa-9b98-27e18da0a693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d800526-7788-41d0-ba4a-273fa92991c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421b0b95-801f-4e9d-958c-9054386d6008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d90c21-9725-45d7-83be-8950273c773f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbd1861-eb8d-4def-8f95-17c087f174cc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6010fe81-8a35-4439-bc15-2accae9a132a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893846f0-b2ae-434b-a45c-a0782717fcfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00769a9-9be0-4118-9abf-e5fba91948ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eedec24-7ad8-4438-ac14-f409d8d86597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fed2cb3-3e4b-492a-9cdf-0cf66b2ee396",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c7735a-0297-4376-8c97-a03d0e1dfa64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7b95fa-e629-4c3c-bdbf-16fc0c462efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf29605-76cf-4e2d-9612-93470ea56a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4cf7fc-352e-4cae-8ce7-5273d6725754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f0b634-20f2-487b-9d3f-9771fe0f9209",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d04d74-0e77-45d1-a363-326b229c087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce79cdc1-3535-4974-ab34-e55266b1047b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7041e8b-f4a9-4cb7-ae2c-5388b92e8591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e1679e-1637-4a70-a690-c0c59aaa9f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cf7c1b-1421-4620-a66f-daba295ba657",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfffc9d3-e53d-4139-9a71-0239f1bea5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb581ba-f5d3-49e3-8885-e9c2f3f0efc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e383850-f704-43d1-9863-d9360e9490a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9e66ed-c48f-43d2-8c93-40371fb77c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c021f56f-16cd-465a-8271-8fc31db3272a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75da33c-a923-42ab-9550-c87dbf955243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f99d21d-3175-4efb-87df-172761af6fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37805e18-b11b-4103-9aa6-2526a1d4305c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "155255ef-276f-4348-8648-a29bd92a52df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a9938b-290a-48d9-8590-c0200ad2c067",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4228ff-bc0e-45c9-9c56-5aaee5b944e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86c5ed0-0e8b-434d-a3c8-9f2fe545766f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c69d67-d1a7-442b-ab0d-e92bdc6cd7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33e26faa-c031-4857-9c12-7cc967773fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed177dcf-dfbf-4f43-9bd0-05f8dde3d3d7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a05201-84ca-4a11-9a83-de0fa7cb8374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540edd64-e51f-46d9-8be0-a830e2ef39e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2296effa-1bdc-46e2-b1f3-6470ec4775bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d968f89-4b11-49c6-b39a-a2137377c735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd78aa69-506b-4a90-b93c-3abc0ef05fc3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f070b15-1ac9-4bd4-93db-3025b12d9292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28da696-c015-407f-a254-aee32142e6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b3b7d0-1144-4e40-8258-3e5e825ed351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "974531f5-b7c8-4a60-af44-15583ed03957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be7cd2e-b930-48af-bfb2-f3924f074c7d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2bd0cc-55fd-413b-b463-71c8f0a5b7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a13574-6610-449a-95e1-9725d417ebb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e02bd5-0f1a-498e-9470-fdf69f81aafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdebeea2-f510-49de-ad2d-2e90a50d1faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bb5364-fe4c-4a31-99e1-8ede1d192f3b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbc8bf3-68f4-4098-8732-549d502aa6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86420ab-e5f8-4aee-ba76-d421409d2b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a52a3-fd62-41c9-a265-dec53d9935af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "182dd26a-b498-46a8-bc3e-9f778e1a1224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c6a1ea-6cf1-4c4b-825b-8a1512dd3058",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6979811-7187-437c-905f-0319bb0f05b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9b8a14-248d-4059-95a4-2a5941d99fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172088b4-0760-47c8-8a33-ccd70b2d7bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8684c1a7-4d45-466f-ac9e-465e2b6f4adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5876a717-384f-428c-94f9-c43ec2c7c355",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b501c860-3183-4c72-9547-8a1ce9cdb919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cfbc7e-cc6f-40a0-b6bf-da6e954d9b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02140b97-afa8-424e-8e69-d380c28e7223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99484c6-234c-4721-bad0-8153fe885977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348885c4-ddaa-4d51-9513-7832ad3207ce",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a1e972-4ac2-4392-94e0-ff5695492873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36d5b6d-3f77-4bf8-96bf-9d04cfea31f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931c1edd-f2d9-4fe5-a496-b5537e4e73a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98a8625b-dd2c-4615-9ead-7ec39c737bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0cf7aa-a6d8-4b3e-b7c3-8c75e28e0b51",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bc41b9-c98f-4e2c-b92d-c182b308b5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0860178e-42e1-4675-9f24-e358f9a7e2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5b4e66-4755-45da-b9e0-276793d8924f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ada7bb6-3dd3-4da4-99e4-407b6f5b4da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dced5d-dbdb-4fa2-bf0c-98a39bad36a8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809b5f2f-598e-4656-84c2-d878370e467d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f035a9b-95e9-43d6-a777-b280af1024e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b827522-e75d-47aa-9256-c7e5fbfb9e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb30661-f532-4863-964a-f597f45c601d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c114f7-8aa6-4ff6-bdb1-6306963dcc32",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b8f0bf-ee75-428b-a2dd-e99f30a35f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13733308-8b6f-4a1f-994d-371d5ddc9ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459342df-b7f0-426d-b0b1-ab26f7c7368c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e01673-7321-4fd6-b7e0-968445932b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73d4e47-6167-4f37-8f34-f1e4987117a4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0ed2d3-09d3-46e7-b00b-2772ad57b05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1f531e-e40b-41eb-9a10-3748b78e1539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bcada5-fab5-4aca-aae2-852b595f9d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1acc749-cb87-481b-8aa6-bfdd301c6dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6698f06d-b40b-4f18-a3ce-ff6cdcca89f2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eaf6fb-af95-4751-959c-b97f2efc0dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3865ee-59fc-49ab-9ba8-59a500bbf20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6522e46-d209-4001-af90-7e30b3e63445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cb5393-9637-467e-a103-998804059690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5212f281-81e7-43e2-a274-0b79e513acd4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793d22aa-3d82-497a-be34-d590ddd1a183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784bd39d-d705-44f9-85ec-0ab069b3d300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e270458-dc33-461a-91f9-a369c00d65d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7803ecb-5555-4249-ae19-585593991db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5769a755-8a58-4f20-8e26-5dfaa3cf4641",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17f2d88-f829-42ce-b74a-584fa82bbe51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7238ecd3-9ecc-4a8b-8058-1a0ac4dda1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae71ba2-0bf3-4431-a896-28017ed47007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b879fd8-cae0-41e5-a299-7d2e7f3bd631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461a520c-5c08-4534-83fe-e9aa3654a7e2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cbd590-9f4e-423f-ad40-31150256a90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52c0499-ca2e-47eb-841c-908d731dd0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e579f4-4e72-457c-bb91-f28f26495761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20eba301-4dee-4000-9abf-793fcfa91947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe5d773-8ec4-46da-9559-d05f9c71ab14",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727a4fe6-11cb-4e14-9452-b9391247421d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b46bada-9989-46a7-bc95-37d8d19a1e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f26689d-a723-4b94-9fe2-e4f94744c3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7354eb6-1bd5-445a-bc4d-c35d12065e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2c819d-dcd2-42e6-bd9e-f63c62b05ffc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d238be5-ded3-4ef9-bb99-1f3fa3f2fa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ff145d-ecae-49d8-8512-ca3d8e2929dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c5d736-09e6-45ca-9b05-9e17507c0ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c18a52-39bb-46ee-9b77-4058932786cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef75b19f-627b-4e7a-8468-5ee268d9e6de",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2364acc1-92b8-4b9c-8857-82194842994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14375eb-15f3-431e-b6c4-b1934b10c0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acccfd11-7f7b-4412-83a4-e5d2c9745a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c41dbef-66e0-427c-a9f3-714115237e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58279f7c-6662-49c6-9f54-951bf8d07e10",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ff1c66-e347-4fa6-84ed-94d75ec109e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5e27d3-f47e-4182-b2e5-a81bee25bca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3360eb92-b8c9-4243-a304-f6a9f3640c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "424ebd38-577b-4fe3-9789-61e4982f0694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa19c4d7-6dd0-4460-9c16-0aaf85556462",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0202154d-5496-40bc-be15-00b55184db6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45dbf93a-7d06-4f77-8033-c457bd32d0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdbf195-ad29-4021-ba74-230a9cc93db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2aee4c1-fe29-4809-a41f-f59950ebf671"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "894fe5a1-cacf-49c7-83e2-81e701bd9426",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "914419a5-9c81-4fb0-bd6a-3c36452a1fe4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86165a6-719e-41f7-a3d5-c45d3176396a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a8cd858f-0692-40f7-b94b-65a7883015fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65f4078-1480-4484-a7fc-a35f73d066f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "775999e9-de9f-4161-bd7a-0ddc92ff381b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ccacb97-c75d-4c58-bd43-bc93c0b6ca6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26885dfc-d841-4cf9-805b-86959636c49a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc7d4902-53fe-4cba-b807-0a189aa65d99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c12df639-a3bb-42c6-80c8-f572ab6c4438"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16df5212-6fcf-4e4e-b90f-31fe5d11e266",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9285bcf5-7d30-4c26-9d11-fda45d48820b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b11d0caf-01d2-41a2-a533-d9864c1f0ede",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4da60dee-8828-4c9b-974d-f6e182530615"
            }
          }
        ]
      },
      {
        "id": "113156a9-878a-4bc9-8cf5-2bc85c48f945",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "80fcf6ce-f083-487c-aae1-23fbbca63483",
            "name": "Negative Testing",
            "item": [
              {
                "id": "325f9be8-90cc-4a67-b6e1-80d6183ba920",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79b946c2-4f50-451b-99c5-c9f4f489a983",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a027e11-210c-468e-a563-92d2a8b8a8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e98429-acde-465b-adef-d48c80d94249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddddcf29-6287-4427-9181-98eb967ba669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5ccfbc-e139-45a3-a170-2ecd34c6e3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030f1bfb-cccf-402a-ac25-d50b4b0b239a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec98a2b-5450-4cd5-b0f1-661afd280e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36632e87-585e-4559-ab73-8ac0c6914f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5881aed-3bab-4cca-81b4-1256303118a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47e7e172-db3b-4830-b826-a244c0d11d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ecc7f8-7525-4816-9a59-3e533abab093",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec3f472-2fb4-443b-9013-848529a4123d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7ef0f5-b4a1-43fe-9768-cac22f1e30ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8aabf3-ea26-4120-8303-b112993b2d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0e8256-c5b8-48d7-868e-8f2a6a969a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3654d54-9dff-49c5-b791-1572695dceb4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73228416-bba7-4565-892c-d03e075f39f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45e19ec-f07b-41b0-b781-bb4855b25e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecaece4-9611-4a44-8a1f-ed65bcc8d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9751c5-5cce-4f06-b050-cf9c1b300b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f2fd3a-d11c-4e75-be38-8baea31d5999",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c32d36-1548-4c7a-823e-4b10d244e653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65081fc4-402d-44f1-8572-440edf636423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea1020b-7dcc-4207-83d6-41fd2703a73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a056413c-28bd-4854-aeca-42316d320bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff97e234-d01b-43c6-a02e-4434b8250ac3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0929365-dd0e-4938-9dff-1d7b92d83726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50a191a-7f1e-453d-b7c1-decd4405f2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cbf425-c226-42b4-b95f-b90d515858ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96fba964-d66b-461f-9930-76296de6f649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61f4005-0468-4a30-a9cf-7e2f2cf496b7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d74b99b-d88d-433c-a3f7-9372e2c9048f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d23d488-4799-4a99-bf61-a21f4a4fcff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edb2b61-3e83-4b44-bf9a-b04a04e34130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c8bad0-4bb4-4034-9368-9576665d8ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e1e277-a1b0-4289-8294-830972830d0a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e12df2-ec2a-4a18-af76-740c8e736a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615453f8-c100-4b58-8a57-36b18e9f2b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4eca0e-e40d-4208-9dbd-a26fc8c89eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d61d08-13fc-4fc6-9861-ddfbcb55a208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b1c605-7f82-4ed3-8186-27d4fbd07d55",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679dca55-1e8e-44d9-912d-867006cbb6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d7306b-e81c-4c3c-99cf-e3b88152170a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524e6a4e-2a88-4770-a553-d28a598d8c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd62094b-88af-4efb-a786-a20dec44e59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf371ed-669e-44f0-86f5-e08b9e05c462",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39a3e57-d9c6-447b-8371-0097475505ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447fc54a-4d70-46d2-87b0-73f213162397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071edafa-36a3-485d-ad94-0ef5c44ba56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72cdf2c8-e35d-45d2-b58c-00dbc38aefb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80897a7-ed0d-45bd-9882-106a17c5fb98",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb96bef9-484a-4f38-baca-dda001a31e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebf51fd-88d0-4a1f-a0ea-a9d7ff58663b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172ab555-90f8-4d4c-99db-cd4e8fe0520e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8904b9e6-bb6d-4200-a5bd-06880dca73d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183a4172-dd66-40ca-bee3-087aa8b98618",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b500c6b-e9ea-40db-a68f-c5b2eb0f1df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785f78ac-de5a-4d80-9d77-0680ddf77c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54972a6-c4f0-407c-a126-f9c09bfc4788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4eeedcc-9f31-4571-b9c1-47634b9c53f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1171cd-f901-4766-a5e9-5063bd5739e9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ab9933-caa6-4154-ad7d-0c838697c9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e123333-4846-4a70-a3f7-621e834427ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61ff8a6-5717-4740-a17d-f50b141a6f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e40e4abe-7805-48d1-b4bb-a3e1f5318f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ea3024-c58a-493c-8d1d-864e938f84b7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeffde97-d774-48a7-9983-0c20d322a09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ca86c1-66e6-4eaf-b146-0725c2f23f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac45d5bd-32b2-4bc2-be6d-2c520aa8b271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "191d7be0-715e-4e2d-ab04-812a0e0d9627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685ddec7-5f35-4293-b75d-8cebb265395a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ad15db-ff7c-4d38-a84d-8caaab604755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c64e446-db04-49e0-b15c-3721abf17366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba39d83-7253-4966-9c79-faf968df14e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "75287a07-b4ad-4648-aca1-fe38d6344cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b37f958-a3c7-4f22-9773-2532d55e808f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145aed64-9d2a-4095-bf36-4e8ff74d4e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acea151-e429-44c0-8cfc-1c7c12197835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78e108b-2db6-453d-bc9a-405de7fe5994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4f191d-bf97-44ee-b35f-21b31faf474c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73724cf6-149e-410f-8bfc-57f9a3ec51a3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5318df89-052a-4431-8d98-791446b425a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4db973a-678b-41ce-b5c9-912d838a54e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0d7898-ef14-41a3-9f1a-a49de9b78141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5820ac9-bafc-4d7d-abdf-73d41d981c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b07c6d2-659b-4c4c-8cce-6c1d0d0a67f3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a31e36-2b1b-4d49-9377-cf94067887f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fc4133-44c6-4340-9f44-7d07e44b149d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddc5b0f-16d0-4c18-82ff-2e92eda4e59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "519eac14-37e9-4d75-83a8-b1f2783d5f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ccad59-1205-43b6-bd5d-715b84b3aa7e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9dc80a-81e2-4256-823c-0abe5c7814c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd98383-9d90-4410-9497-78765be85a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f392af5-330b-44f5-97a4-f5601d66abdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71dd0a9-c0de-4451-8b7d-4a5aea638b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b38f7b-3847-4c05-a0db-21a7d6feddf1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9d4530-2830-48a9-b223-f7ce930fbdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a91dca1-5240-41c4-9a1c-8a776e0244fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c8d750-5d4a-4e5b-85d7-93d7ce6863bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a6645c-a0bb-4475-9718-5d2c0c6cc1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117d3dbc-054e-46b1-bd2d-510031dfbde3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805b4c53-0510-49bf-8da7-646d9d3d2b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3504d7-7dbc-4609-8423-e7f4ed780e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db6ecdc-7863-4760-a939-b820499a7d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11250118-880a-42d0-9613-dc90c21bb405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef982ec-ebb6-4990-a3e9-eea9b16c5928",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba6441d-c196-4c0c-bfec-6e3d5139b7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176d3d7a-cd67-43a9-8f39-d4da7471c306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fa5fbe-b1eb-413d-b154-e5afd6a9e7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60b952d0-02b4-4506-aa26-b764160306d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f113d9-8a9e-440b-830f-948254ed55ad",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05c2552-4750-4649-aaa2-9107141e11cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835989a0-ee0e-4e46-aa08-59b606e791a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dab369-cbf0-4504-a118-6af98b91dbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "907fb0b1-0c11-41fd-9516-748123556fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c34a731-9dbc-4e8a-bde6-22f9942eaf57",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a38952-bf7f-4a8d-a2ce-d55f3bc8aaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53d53dc-f228-44ae-8929-e15a815ee79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0d12b6-7e69-41aa-ad5c-2f3b8a3ef76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a2a83d-1c65-42e2-852f-aa31d3b4cadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee23b3c2-d64f-4894-b4b8-95c2d5c26177",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd204b0-fc89-44b4-a208-bb3ff9c53a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da3df30-3dec-4408-9ebb-4af37a95bcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcd1017-6ef0-40ee-a6fe-efd661e44a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3048947-2186-4ffa-872b-5eeec619dd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4705b627-b423-4f27-8ca6-5958de6260b5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec78ed3-8d06-457c-bced-3cabffdc0435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6e8ca1-b054-4954-96e7-d4929fb24309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b78ae8-8818-4990-abfa-cfa14eab4991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0bb1de5-0076-4a31-8c3e-5f055c154460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29da984-4c48-4780-8fc8-565e26c0e2fc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b61e7b-8021-4de5-a4fc-09ac6080bd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d49ed75-ac9b-4c1f-a093-226a88639a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e43d07-78dd-4500-9fee-ca28c9c31d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b4ac819-a2b1-4473-882c-36fa8e10d9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807dc590-623e-4fbb-809d-6aa891c28e37",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3439b5-c837-4f57-984c-e68ea0ff1108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521429c0-86a4-4a56-abf6-0189e22ef2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d9cb89-91b1-4b0c-ac80-f22b95556481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a6c6b2-d118-49e5-83ac-d48db5bb122d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcf827a-cc80-4b5c-9d5c-88bf1e5ff0e8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dc0770-d609-47c6-853f-9937f8346c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d15a8a-8a04-449c-beb6-b920b8bc47a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786b33cd-27cd-48fd-9513-a494b4d966c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c12f775e-71c2-41ce-8fd8-99eb7e851484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c002fcfd-4f93-42af-9232-cae1faeb89dd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0a1511-a12d-4956-83fe-ad63c25730e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833a72c4-b8b1-4b4c-84f2-9793ae0ce6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1547cb7-7068-4cfd-9b12-c326f71b5fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a27df032-046b-445e-846d-935d96e03b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfadab3b-4701-4adf-b2ee-1f44c9589e18",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c263245e-2d8f-4683-8803-398613f38327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c307f1-08f1-4f97-aafa-75ce318ae937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b001ca-6726-4380-bf06-d974d2313ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76c76dc-de27-4201-afb6-f947d719d65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e9b070-15e3-4790-8c1e-7d0d76738c98",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9340b52b-0b5c-48d5-853c-150d8910baae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34e9fe8-e687-4f82-9f9e-e60d1ee1df00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af326cc-ca66-4b7b-b7c9-44dc8bd98fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb8da4a-2ff6-4c6b-a037-1a3d7688f187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8589b93-ec45-42dd-a0f1-c4eab06739e5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b87929-f65b-4f7f-8e63-375bbdaa3a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fa7d8d-94d9-4292-987f-a09d61b68a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a81b97-5601-4e38-93a1-2f7145591be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3726d071-b217-4c12-b93f-e26822b92756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d714cbd1-0baf-4734-ad7f-6042415cb02d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd0087b-c7f5-4cbe-962d-aa054e7afbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a621fd6a-231e-48a0-8798-37d7a4a3f95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449a3eb0-9e65-4d48-ad9d-1ef24aed33b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f958981-74e5-44a4-81d4-481d5439939d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba68610e-047b-45ec-994b-4b1be7a2aa92",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5779886c-e21f-44c2-bc42-96cf0e95434a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb748d7-268b-4b0a-ae87-c6da7a33d7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eab8704-ccfc-49a9-a947-095ef12a4557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6d0859-7936-4687-828d-00d6db61fdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b0fd59-df28-4184-9440-02e8ff49d2fb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843571cc-85b9-4b98-a0a1-8cfcf14d66bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8a6bf6-3733-4d47-9e68-d0f07c3e215e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d67b9f9-26f5-4663-86e0-f17a6884fec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0c1346-e7b8-4825-b109-2a4723e6af4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbca4a4-6f75-4b21-994a-90000160f665",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db78f67-2dc6-4b94-9dc8-fe43ae130065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5231bc6-56a4-4d77-a889-9d0a3df886fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad37e07-94e2-4deb-95a3-18e0ca5dabe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4227b9af-5c06-445e-927d-b937331ec943"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "59d9c6a8-89ee-4ddb-ae56-48afdd83df3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "324a7823-3ba9-4da1-b887-3f8dc4bbd9a1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92729454-b3e9-4c5d-ac23-d15683cb0737",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd7186d-7dd8-4333-840e-1c4b9d848159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b114c724-fa9f-4a2d-bba6-ffb52e46e0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d2e8f17-027b-4348-a734-6bf8016c4d41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "715e503b-8708-42ee-8349-4688ca4957d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eddd107e-40ed-4d5a-aea4-85ed1b2dcaa7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ef42057-5075-4180-b0f8-5d672d4c6996",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50547479-f153-4e31-841b-080f81ed5750"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd528891-fc23-49c8-8491-79b18547af82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67d5545e-1a20-4e46-b9d9-6ceff5064827"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1a4dade-90bf-4b19-9d8b-55a1e8c834b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da6f6690-eb6d-433c-89ef-043cc7488fe1"
            }
          }
        ]
      },
      {
        "id": "c543349b-2d90-4b48-9874-b6d1d3096b8a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c05cbeb2-d53c-4c0c-8032-7642a6f9dc08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b75738e-b0bb-434f-a03d-88963206d013",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e72e9a11-0855-43e8-af1b-40bc3f5bc90d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37926c4b-c6a6-483d-af22-fa114703b879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ab11c6-afc2-4cd5-a24a-14ce14b9be76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff5b5a1-6ce1-4a7a-9e9d-a4514fdf7a69",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751aee96-20b9-425b-b66d-60d9e9e87501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9152a218-41eb-45bd-8415-bc4f35924d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dd6f0a-d3c7-47cd-a9ca-dd9a22f8a3f7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad58a726-c8fb-4811-bcb4-eacff722036c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a883c33-f34a-4d13-9656-d491ab734912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca515595-3a3e-47b4-8a68-1404a71d5932",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0552c4d-f660-4cdd-942d-ed3d3d137a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce37f9be-b8d9-4a3d-9808-d19c34b7908a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d42b7e-3a8a-47f2-8ffd-f855958d85a4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05889d3c-f962-46ad-aa85-d4b3debb4697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47674c8-77a1-4be4-bb14-199d756510cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418251da-49d5-4f3a-b201-8fff292f5474",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a6eb9e-bffe-4324-ae21-6b6585e12a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8987321b-2ac8-42a2-b1a4-f789f0083e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598e2f9c-499d-484f-806e-3a141e7f9b54",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3cb2a3-b2c6-45ec-bb49-f2c7b3de7890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e893a21a-1d8c-4ed8-8743-9d7dcb30bb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e82fd1-b3ae-4412-a596-5a8122138568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0192b23a-77ea-4277-a446-9e4d250a3516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c006197-d590-4a04-b859-2582d402b957",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8b8073-e699-450e-a4e3-02da023d2fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69bf836e-843d-4d58-a5f1-38be6e911e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0b0f49-2580-429f-aaab-e74389096cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5448e2f6-5d67-420f-976f-c59629220d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131b411f-c1b4-44f7-8749-b4b73f8153ea",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3d20a3-7381-44d4-9337-e2f6eac079d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a61f5f9-44be-48d1-bbde-ef8120bc5d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bcfaf2-546d-4df3-a222-5b0d6a26137f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30b5ae5-bfe4-4b8b-9212-c21bd6ec9f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf07511-17a0-4204-97d8-008a8298456d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9072820-fa4e-4f09-8784-05b50561a53e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dcab3d5-fbdf-4554-aec6-7ce6fe102171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fabf56-effa-4a39-9fb4-73843e46aaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e9f329-65cc-4ac4-93d1-1565f18693ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d322a2b-f4cd-4522-8cc7-71288b13831c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7ef2c8-1429-416e-b028-20e44f27507b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a99987-6aac-4efe-a16e-ed000e1cf828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc322c7-b87f-4c7f-9d85-2f5a8427fb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19901550-e90d-4342-8f61-bc94d44457ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3c27ed-5869-41b2-ad8f-0521f2c44959",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9087786-bec9-4712-a457-ee22eeefe6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70efca55-370b-45e2-b19d-8880094aa993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c801d19-bf05-4d22-ab31-688a392b8b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c6b5b7-a22b-4ab5-a2b4-2373d2e76e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026cdde9-c3b7-4981-91a2-82e3ad15dc6b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6f1d18-37ac-4709-9ee4-395d801bd90e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df8eefe-270b-40bd-a5c9-c9dd6573192c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4307ceb7-66a3-4f5e-ab17-35b5d209cd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a9c6a4-9e7e-42db-8b68-bf6a9ebb8fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21dfbca-8717-4f38-82ea-e8df0edfa450",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885fc8ef-eafa-40d5-aef2-1ca022fb09cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7033f6d4-99da-4255-9027-52da3ac3276e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20172bd8-e84c-497f-9b01-5102404ca39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eed2a2a-260d-420e-a68f-b0b384730cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f1908f-e2ba-4d4c-9f42-91ca0994d03e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ee5985-aaa5-4f40-836a-2b5ef2fa5973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32e6b10-5789-4d0f-80da-6bf1eb8d3185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c7f43d-7a01-422e-994e-aa6ee191ff2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7fe82e-ce71-49ac-be3b-5b0510644a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a536511e-aead-4a5e-bef7-31ee34ff147a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4953ffff-d371-409e-95a8-1985a08eb267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda810df-4839-49cf-b631-a3986e3ee634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524e02c1-273b-4121-aa49-f78bff3bc8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6685dfc6-7d1a-4d05-b3e0-cbb2c4c6cce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693daa36-84f3-4b65-b84a-3e388e6b3da1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec28df25-4e8f-4850-89ff-1d97df75ec68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab2f064-7b2e-469b-a29a-8a12f0f8ef55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e3df55-7fca-4b53-9057-d16c79b3393e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a8fe7a-6796-4156-9a1d-c8a2f7982472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58693724-3397-41ba-ac75-6dbf62e00f44",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404c3097-8ac6-4183-92fd-ceb929086f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13068fe-b831-4a2a-abc1-a9bf58490767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a9e3a1-61dc-4991-9c1f-0e64e0769801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4eca289-f0e8-40f9-9d51-21ce2f189526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a3aa4b-8811-475f-a905-28dc054fa036",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c35b71a-33dd-45ce-acd9-907d625cdafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3184045-7b71-4613-8019-21ac3433baac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5557aa-9ee6-461b-a237-b1e11e5a01a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcb102d-7c34-4742-b94b-53be475ca404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46e8bc1-a274-4134-8904-1992859d016e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bad868-ee09-40b8-b72b-27007c9816b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c8302a-bdda-4ee4-91c2-dae6a344bd2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ad7f8c-a1b7-4d83-bd05-b6a40fd26eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22dbff6-d5ff-46e7-9b64-e870b25c0d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d3c1fe-8b5c-42b8-8d8f-2e04cd7c6f0f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0625c8-df27-4180-bfe7-f5035fc9fc44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66858a42-3984-4fde-a85c-2f43017a470c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6358844-b563-4159-8ee6-fac626fc8418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8c8b2a-a2d8-4e7a-b794-e7d7a0fc2d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3cc622-b1df-47cf-b8ee-316b4ff92170",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d5c7ef-8577-45c2-a092-fa2d00cbbb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9883edc-88cc-4100-b2d5-c505f1904cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d554419-1368-4fcf-8438-3649e9cd4ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f57913-f2b0-4649-aa79-5f209abb35b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fdfbe4-5e72-49bf-b0b1-1e06f54fe150",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26df9639-f003-489e-9a4e-0cabe5a0c244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55089a29-4cf7-401c-b907-37620d3e5bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ea0802-a61e-43d7-b033-72567f8c5e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb88c58a-178c-4958-979c-b90e8c67a129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b57050-8414-4f6f-a143-b757ddff7c15",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473b5ae2-58ec-4611-8a28-ffa29afbac1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dbad94b-645b-4c69-90c4-53257211e91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec5e9f0-b389-4b73-baee-0d806f25de6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd49ffa3-e768-4dbd-9156-b761867fa556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d067587-9fff-46ae-89ea-e98213ae77e0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4631a62c-380b-4252-b1d9-0f758272182e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9dabea-30f0-4ef3-93a6-2677a9fd94e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec86aeb7-7643-4413-9ee8-f958ba420c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903351ac-45b9-40c0-ac2a-9b4d03e1e3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4cabc6-dc5c-4acb-b8aa-4c9515101df1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa13055b-cc82-4db9-aa29-aef21f234d5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c9dd6f-cab9-49d1-b747-b6af1e568dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a0131b-faaf-47fd-a1b2-0a3c57d1b427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1764a26-839f-4aaa-a40b-0329622c985a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b84f9d-754c-4328-bc6e-76ca1417532d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7a3063-ddc0-48e7-9652-6395d1dbd475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497ea61f-9785-411a-b858-41ebe36a602e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cc9b92-e5df-4707-ba08-77a2f8531a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf43a85d-8de7-4b40-9f2a-e3abf5d97bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b6baa4-a7da-441b-a178-87e55aca9be6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbaee91-c2bf-4990-b740-cf884492a313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d620dfc-1c35-4815-b4a6-2046dbd9ffd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b5c180-e20b-4bc4-8ee7-8ca6105beabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1765aee7-f40b-4486-84e9-5257385963d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775d7940-db0b-431c-b6fd-b853cd2468b1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20657890-f6bb-492e-ae67-1911241aa9da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80108990-4d3c-4417-95ea-df5e834fbf08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0b811e-6381-4d4b-8da5-23bd3d10ffcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0d96f8-5462-4f59-a3f6-bfb38bc7001a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf17c2db-35ff-4327-a988-40001613aa22",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970a8e65-8077-4730-85f8-ec4e8e9210a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b70a177b-38db-4f8c-9b1f-00206f405476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb1d85c-8539-49a8-ae0f-5eea189ec8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1fc631-9385-43c0-9766-4b74c3cfd069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f540c4d-f474-4d95-ac0e-c5e7ec77dc27",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9fe158-2982-4c5a-823b-b224c176ff73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5e057e-f4f2-47df-ab37-31e0080ec9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168b7310-9ab8-4c6b-8b8c-51df4fe6f25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e714234-124d-4d8a-a2ba-448e099c6126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1490c650-b308-407e-92cc-4ab4628af2b2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6503fd50-133a-4179-b4ce-bf491112f126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7650604f-7a70-43a1-9ead-923279510dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce716f6-69e2-4582-9670-95fa997ab073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2a5cf2-af54-4ee5-b6b2-57cc48e608fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b977ad90-90b3-48bf-9456-7747999758c9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e8007a-50c6-48e6-96f1-0a7596844d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e66f98-c072-42db-9137-b66d68be29d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "352cd9ad-de43-4db0-bf11-ba9e9149e21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9baaddb-8e94-4f7c-be4d-9d43d65e7f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652df926-5492-4696-a5a5-c589ad990f06",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72f4195-8fb0-42fc-9819-e662dfc646c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aac1f644-1592-47ae-809b-8ee7673f4a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4a40fa-7183-43ed-8885-1fbbd6f14bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412a10c9-82a0-4797-8be0-602834a597bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03697f49-06ef-41e2-a995-5d9d6f84b5a6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48771305-040e-4755-bfcb-80636a48f593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6b95f9-c508-4a1d-8dc7-d4f4c7b8b9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547dc6d1-9ef2-4c0b-8e7a-aa4a4a75dfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321a1d01-93e5-437e-bb71-994a1c32ca3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1946d34e-0049-4867-9647-fb8759a202b8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a353217b-b579-4ccd-b939-dc0d019936e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e48f4b-902d-43f0-b9d9-d42608e57997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d944ea-ce6b-402a-b6bc-ee62afbc3219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b0a45b-7fa2-4788-a97f-61f56a59d59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ed7a5e-9f87-4540-81f7-7fb0c75e2cdb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e7269c-4c78-46d2-bb6b-5bba0dd0d2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b7f25a-639d-4963-8820-bb57e1874c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e0090d-ef3f-47d6-92f6-fcb82b453fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f88defe-d9d1-4add-97d1-f4a44f7444dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dc8f87-9bc9-4202-b9ef-91e563daa9ed",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abf4151-4e25-4302-be63-8bd18797a4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775b74e9-50bf-4c93-bd00-554b9078e92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ccf7d6-f9e0-4320-8e6f-6aca0e014d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d52a3d4-bcef-45e1-9b81-cc60ffbb231d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92277944-0302-42c2-8848-ec279d9c76f8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5544b640-baa1-4e02-8ad5-7d6935dfb78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f51e694-c170-46ab-86e8-31423484bd07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f5ded6-f872-4b4d-a73e-da9031d20902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98295bb2-a64a-4ec0-99cc-ae85e82886bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559d800d-cd0d-4554-9ba6-8608ccf1683e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da19ec7a-265d-419a-bfb2-d0a95a81b1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d97aa8-9c08-4dc9-8027-d592a616db51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329b7ca8-fac7-4631-916a-b0244c6cf61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671100a4-3a6f-4090-a309-98d9062a9d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04fcc57-ea01-4687-a32a-576ed04f805e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916d2135-8af2-4ffe-920d-a966eac45881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2d638e-f02b-4e52-a385-1203bd7acc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba939f4-e311-49af-871b-e6bbe64d1f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f84c500-cb80-4117-9224-77b33d413226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1025cf-570a-4dec-9589-8f241f4bc9fc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c5c7e1-dc16-4abf-accc-ab1efa0e7907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756e3080-9e02-42b1-a5c1-bbf3d6200018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fef416-7fb1-41bb-b568-a3f9fe42a507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6677068-11fb-4a78-b88a-fccc5178fec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf486fa-fcd9-4a1e-98e3-ddb99b3e3d59",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8af0871-6cd9-4197-8791-69f654d5d969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3eab817-c823-4f44-879e-5448b4c70d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93af381a-8c67-4c72-ba40-32c754e488f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afb295f-b08c-41ed-aff9-d181b35b2b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbb6661-98eb-4072-884a-88288ab38fd6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bf0af5-31f6-4acf-9a78-f34bff7d5a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431ed37c-cefe-4bd3-8706-e03015b1b57e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0190b595-2bab-4e66-9410-19a76151332b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387c12ca-bd6d-4571-b2d3-55a7c1ab97fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5bb4cc-f798-4c0a-a4d2-0182d438bb90",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb42dfb6-10c8-4745-8151-d85dd03441c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1e0378-ee63-4828-a56c-9df75e0852d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f7fc29-2fbf-486b-8e93-55dffe45e34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cee79a2-fd3b-48ee-bdd4-5ac3dba65d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cebf66-6ad7-4758-9b40-7099b5ef2437",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087bfb2b-756f-4dec-b5d0-74cf94f92285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f456424-d54a-4afe-9b18-cac6aab2ecc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98372da0-ab7a-4bc6-a0fe-7b8b79fa1746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6003c5-49a0-460e-bd6f-cb514012ef73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fb0e32-ec79-4e8f-8907-094444ee8377",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb96e982-c816-4dde-b8b4-0b7d3d3d3b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff5f419-2bc4-4956-8a1f-9e5dbf1330d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9492e6-bea9-4ee6-8f88-0b8648443936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93c0ac7-ef78-41ce-9637-4a2be69ee459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c60bfa8-15a0-4bc1-ac96-f4c854aaded1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a4c710-c707-4887-a923-a90d9241e40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0865de42-470e-457f-82dc-668b6324118c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1a5428-ff7d-4bb3-9a9e-e6b82cddefdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807d6a68-c9e4-4be1-a574-2abf7c8e81b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50654173-a12a-45f7-a9d6-13cd2639fe60",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defdefa0-646b-4820-9cdf-8ec82bd21323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce543c2-69af-4a7b-93fc-d328989cccda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d74ca0d-a233-4af4-9ff1-bb5aa467f145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ef8505-6c61-4f0d-af1d-00efa9b2dfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72b2e53-32e5-4f96-a7eb-fb995cdf1f8f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c02427f-f761-4bd0-838e-161b879e8bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428c6532-d807-41bd-819c-ba3b08994480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b70235-9038-4af9-a5fa-c1b607415ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2628f23-fa50-4d7a-865b-5c817d3553c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3966a268-c450-4a06-807b-9cbae53e2c88",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56785338-62bd-4d88-af5d-4d8a603a232c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2928937-c31a-45f1-8016-55da7b0e115e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533b63d8-c2ba-4e72-ac9f-401835229a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c12a24-70fc-44f6-811b-d52d9c623d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3de982f-06b3-4781-81a1-5085680cb178",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beabc62d-ac4e-4a23-b76b-2b6acb09f13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77b97c2-6df4-471a-9493-89056f10797b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae54522-10db-4358-bfc7-3c253b081c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326c842a-d902-4ffd-ab2f-18bf6cc950c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05e8454-f108-4353-a9b3-461c9d921423",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f7ac83-18b1-4072-a553-058f6c0b7531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46767039-e4ad-4443-add0-aab7233f2755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2494b6aa-b8bd-40aa-8681-b3f11e32ac91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595fdc43-3d5d-4f3b-b70a-a5e8212bd90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4fb287-c2a2-4b75-bee5-a97484447d2b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5631b096-daa7-4699-866d-dc1b1288b304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d0ecc7-b8a1-47be-9620-c3019933b621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b597f1-31ff-4bce-ab44-07e8a4fa0415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589da26f-fab0-4244-b35b-dfb25f9a3310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cb12f0-ae36-4a53-b177-cda99a1483c0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e58d6e-7f10-4f16-a279-be7dda3b4c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1de4611-7053-449c-a4ec-7c296e961fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dce845-d9c9-4ce2-9cae-32d3f4c746fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b7a25c-b782-45b2-828f-820cf4d284ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6cde02-acd6-4dfb-816f-bac03e550845",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d787b84-b512-4d38-b93f-3a55245e4886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa19bc4-1801-4a5f-b677-a5098d12bfb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c7ebd4-7dbb-4f3f-8ab2-71ac04f3dc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847790ed-6e93-4a18-b2dc-7b719e703580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85908621-aedb-4025-98f9-8649bc0f294b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98ddad8-1fa3-4c91-873c-754f149cca46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3f475b-1253-43ec-96bc-f60a2e276c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18fc996-ab63-4f81-99c5-99fca28bbde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69987fa5-0194-4431-9e08-a76605b96348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8af0a5c-36a8-4862-88bc-9f4b4e3fbfb4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73814efa-5f37-4f09-994e-642d12515ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6482649e-cbb3-4c7f-a6ac-82c8fc56bbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76490d7a-b8ad-4ebb-9665-cae765f66053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c09a4ef-5d5f-4bbe-9d57-e48887ef892f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c039de30-b661-4b26-926d-22b57d665015",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6575f285-aa0f-4b3d-b439-cbf06a554e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6786e94d-b162-4022-9e9c-114d2f31ed8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd7d033-89a9-4f38-9598-c809c8899f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc281ee-6ce9-4ca4-8e8b-4b3891311153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12345d42-d1e4-4252-a64d-05cff37abdbe",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d16c9c6-9634-428f-ba53-8251e861e6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e94abcb-5ff8-41f1-b27d-3f1f7ab201cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b70027-e998-4582-90ea-64507158e2c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd72ef7-c317-4fdc-873d-1d125163b741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f40322-ea64-4ff8-a5b6-291d3f06f2d3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e37b05-a9e2-486d-89c7-4717190ea484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bcb117a-4dcc-467c-ba50-47622fa3923e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d9b3c9-27ba-4255-9355-b7bd7f045343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd400cf-d401-4c2c-8a4a-b9506aa2eecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e4693e-79d3-4193-80a7-2496c502583d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0332e7c8-089e-4630-8052-bc28e11e9b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f18c97-0e52-4751-8c75-a8cdce58fa87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a99109-13d3-4b92-a928-7f0f47b4ca55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513799b0-9bf1-43cf-b292-40483fb60312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314e6482-0e54-4c0d-9ec6-166a3423a9f7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b769e1-ef22-44f9-9303-57fc7fab49ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0e6391-9c85-4308-9af6-68108b6c87f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d35ce8e-2e99-4e28-adad-ff66626d2f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f20df0-bbf1-4d0d-a8b0-db3cb42fcaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5cf7d0-380b-4a7c-84f6-95306b88a7b8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258c7e02-9c6d-46f1-b3d4-6f566b022181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a83501b-f53b-4e92-a903-8fc5b90c40af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a4ed3a-9810-46b7-8db8-59a198d8d0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc47fea0-b3d2-40cb-af56-cfa0816cf564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552377eb-b6c4-4bfb-baac-2e340ccb92c3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c019b9bd-033f-45fb-b02d-8be00d5a10ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "979967c0-a3b6-4e5b-94e9-fcf9b09d047e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ae0a38-874c-4ac3-bb86-ca6ba52f4be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a73023e-3456-4efc-bcef-1650a0a0d041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c666451-043e-4fe6-9afa-9d80616a6972",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0824e522-8aaf-42df-a478-5504088a73c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51b815fc-3236-40a7-bd02-ec33b5ca77aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d941f78-bbae-4218-9005-b7de78fd3b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cf6399-6d4f-4151-95d9-e34d9bec16d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0777f670-bb97-4100-8c9e-30a2ca9fd59e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6075b49e-651f-46c8-ba09-c830c3e402af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bbf05da-784f-4c2d-aad5-51b65b808ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a499c74-4077-49ce-81b3-13a7132c731c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e64df2-464f-44b4-9bd9-bac846c8b5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b047cf1-ff45-4de5-b6ea-2ce380658795",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fdb7d1-092a-4ca8-978a-db794c9dd647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e7865c-cedd-4397-b305-df46d8a2c91f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d084ce-aabd-435b-a221-504f01c82e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96467889-d004-4c71-9205-d109469d0283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7266823d-9a1d-44a4-9fda-47d2a0431a59",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001b9294-30cc-4835-8a1d-92ae8eb5e32d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d9dadf2-06f3-4cc0-92d5-658d279f51f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4a649c-9449-44f3-8b85-00c290ae16f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f313de4e-eace-43a6-bb6d-f46d7e021127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cde7181-6d96-4d14-a4ca-3dac3b4d60a2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd48471-a161-4361-9090-db7780ab4fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "413a3999-7099-42f1-9b25-d971b38e670c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204aa951-2eef-4a78-aa27-9ddbfa0c4c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c013ab6-f579-48f9-af31-e7e23a909930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de26efa-d64a-4b23-a05d-08f6cb102d6b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254b604d-2530-4165-ba07-172b18797fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76f0da0e-cbd4-40b2-b725-5208ef9fc55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c54ba1c-e332-417e-af99-d077d7e36855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068f63f0-c443-489e-8c65-f269d58c295e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eef1ac9-5581-4282-9a5c-1f7ec613b4de",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c753a640-9e79-4d0c-9794-343d4a365c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46a58ece-0b2b-45ae-aace-1ef7f3c2c589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb727d6-cd26-4211-81dd-0784d0b904df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5a9706-a8db-44c7-869c-096014696116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c099dfaf-0309-418e-81d6-1bcd67b1feb3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea0f7fe-5395-475e-ba59-a07c0cda450c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc0f060-227d-408d-8bf3-f409a96cada2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9876f680-dda6-428f-b1a7-4c4118019b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81037ccd-2f24-4906-adaa-a31cf42d5140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b6fe26-ec2b-4c62-942a-eadfe266775e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2052264f-6484-4042-8b65-6dd35f6dc72a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfa94b36-8ff0-4808-a77a-02cf28ef30e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "159139c2-7968-4210-b56f-98f85eb45c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fcb873-f61f-4d2c-a8eb-3d10cf8839a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225c5a36-c212-4cdf-b168-a29dec470737",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b3ee5d-ed4c-49b9-92ea-20dab35afb62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ccdcf5-468a-4289-97fc-310b2a210b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceade51b-4121-4e9b-9983-01f40d5f8b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135dcb08-5764-4e97-992a-ee9d714a571d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db177f46-d70f-42cf-b5fe-992e92bcf3f5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c7a919-650e-434c-b559-1733d1c66981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09bdb539-1aae-4ba9-823a-d93b74f0bc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9c9dcb-d765-4190-a825-bd7e0f0602bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa5f089-a7c9-4fb7-a3a6-dfbd520a7e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01809718-8232-4c56-b239-b738dd6d71df",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53a8c63-3c41-4992-8d8a-0be75274db67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c7850a-7060-4cbc-ba69-ef493cf80e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092fa09c-e209-41a1-a7b4-be69f1941c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6dca65-f364-4802-bde0-b6b6e7ca2b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f16ba5-4a50-4842-8d13-fb8cf9187ba9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b7fedf-3dd0-4513-894a-4a4a7efc3c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd6efb9-4aac-4054-8887-e9898502d8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64688e03-06c7-40ab-9a46-134e279bc83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d9b363-bbcd-4dce-9019-3cba435698f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07105dfc-fe07-442c-be85-cd1c5a29d06c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a4cdb4-a060-4678-8cdd-c38cdd8ff9f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08b8692-1c6e-4cb5-8a3f-49843aa7dc96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02316093-c6c5-44a5-937c-3ee06adffbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f053d17-2556-4fc7-be14-e2d78b55ccb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992d3e0a-3cdd-48c5-afe5-4abb8d1947fb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3abea1-a71f-4153-b9f5-63b36fa88875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca17d1c-6432-415d-a601-f02541d2b897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e439cfa-0ab5-455d-90b0-b5c51471a7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "761728c6-f63c-4eac-b928-596edf3ec171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aba31b-6719-420a-b443-f4584f08555a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57168ea3-3ea3-4431-a102-23f674788488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0855eb0-fd61-4f4c-91c5-664766f6a2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aebf663-a62f-491c-a07d-f583e9b9ea33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc53a372-4e72-4e05-bcea-c29c8bbbc474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8599bed-ab75-49ef-9838-3c0b4e0acdf6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddf4dd2-7c15-4573-8406-05020d7351ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bd03089-b055-4786-bf22-65396ddbed75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12df5bd-ba03-49a8-b15d-25a7168c8594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d032e4b-cd88-4ebf-8c44-7cff16a311d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e703e8-9d70-497c-b6e4-a4da3f582db5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b369d531-00cc-4474-9297-9deeb0b4734e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61567560-9c18-44b2-94f0-ac9caaaa881d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414d7698-a584-4e78-90e8-606ddcfeb425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b65a685-0417-418e-90e2-2bff139ca54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec83bf9-b42e-4a42-9bd1-d874e91e8738",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77614048-ac7c-40aa-961b-72352f3ca569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5afe2266-bcdc-4642-ab0b-a1804b72729f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc915b7-57da-425d-a663-8b9d1cff8246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6879994a-c65d-4210-b063-efb6a254d137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9919fa04-0b2a-4750-a776-0953c5a06715",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd22cf6-db12-46d3-829d-0755f26d74e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eaa52f4-398c-41e3-9e5a-de51552fed79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5345fd17-dca7-4d43-a566-8f50c7ca32cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e74e61-1404-4f54-9b45-81c08f7e3cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceddea24-c0dc-4bf7-bf55-a40e5cac26ac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb30216-8aef-43d9-83ad-7433551d70ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55408832-8f8e-4aea-aec9-c93d744a5e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10960378-1978-4ec2-9c67-1564ea18e710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25d7a44-3c46-47d6-b46a-ecfee9d888ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b88da6-4946-4eb9-87b7-93df2dbbe481",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0109aa-a38d-4c76-8a68-c8f9b94c20f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5203cf93-b4fa-4366-9380-bde41f5b65b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c50a592-4909-420c-a7aa-fea2223c4842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154556ca-9a1d-444f-8007-9d9308b401b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68665c7d-6e26-40b7-90aa-e9db49017ad0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd48d28-a2f0-4b62-ad9e-be0c399cdfaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a04a46-c919-4a02-ac7d-d6ad9a48329c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebc3340-856e-4277-85cc-f38b3f9a1f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3402e498-7d52-4b2f-9189-3e36cfd9b2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9350721e-b2df-4ca5-82b1-3fb9ffa18d73",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94672050-f143-42d3-a27f-962f6f6cddfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca60e54-334d-4762-a2d3-c681cd64ca42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c599cd-e05f-4bbb-875f-96a8361acb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c574b45-5635-447f-a563-3dc7f2b27594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e384f07-e5d4-440f-bf94-cd922f2d506f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb741f18-b057-4ec1-825c-8d308b46eb2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82b2c358-29d9-4d89-b794-57fc3c5b7596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8894f5d-50f9-4d01-b9ab-3296216c47ea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d16d50f-4f84-4eb9-a60b-e9b0168eab09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c02f89-f0e4-4f49-9b62-fed480fa103f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab9d1f4-5a12-4e51-8843-5e6572302eb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3724d743-a51a-43e0-890c-3bdb068453fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4138a8f-ca36-45a2-8b38-585f5fdb3625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5feda1a-99cd-477a-9ea3-1341064dd439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a52541-597f-48e5-98d0-0823e7f997e1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9c03f0-5c46-48ee-8013-1599ceeff14a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d38a03-54c8-4a0b-a4c0-f7b792afdcd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07b5e19-4685-4e79-b96b-63d475761d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9825e4-609e-496a-99fe-95422bf00ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128af1a5-62df-48f3-84a5-660a7c603258",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf99e9a-59d1-45fd-a98c-a0d1267787e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd7063ef-e0c5-47ff-a9e5-c241636cc849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3bd9f3-ae6a-4da3-8343-ee7e219c245d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e163f9df-88df-4d32-8220-8e25d4bc5ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c7cd65-5a45-4186-9f30-8b5b4fd38365",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82757a6d-fe05-4b30-bc47-26c327af9a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a765a39a-b521-4dc6-b377-43f32c2ec4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f38e6a-5004-441f-9d10-f9439e536947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce4c422-42bd-41d2-9da2-d20922e6bf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07672908-53d8-46b2-8f2d-01789b5a33f1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f9b946-fa23-4f45-bb44-47197b3bd29d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b10d06a-054f-4882-8f86-acf61140b6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7260bda0-df1d-4682-8cc5-bee48bbfe46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd54af70-2788-42bc-a033-9f8a73316d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af53c12e-4b53-4d30-8932-d4247f4606da",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8966a7b2-3019-4331-87b4-52236d125178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af43503-2a6f-4ecb-9501-a91696c91fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02588d54-9b0f-446f-be80-9146f8b4e449",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867cb6ef-00cb-4afc-80bf-e5d4cf193e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5895b946-b1a3-4a89-b2e4-32cc491481e5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d22cd61-d7f0-4ecf-9e95-22aeb1dd4643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c360f849-9835-4d2c-b315-91de9687979c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1205be3-df07-4874-9eea-917ffcd54f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff60258a-5d78-41e6-998d-c75d0924b0f1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1030b96f-b060-4fab-a6a5-9da8fcdef63d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "635a2cbb-6d42-4ce9-8282-5882a87eb2f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53dd8a3d-1653-480c-a1d0-908102cfaf02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc9ef2f5-f49a-408b-b484-4999fdab5d61"
                    }
                  }
                ]
              },
              {
                "id": "80549da8-96a3-499e-bf1e-4f7a2510079e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a53fdb4-bde1-4285-99af-54a7cca25e28",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cac6d0-7a32-451d-a757-3429418fbb4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5dbcad33-734e-43de-a129-f339a4f59b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6b6aed-d0fa-48a8-a094-68dc891152a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c22a562-011a-493c-98ae-9cda5b1ddd2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcb1f2f0-c218-4708-8319-32698b9f9330",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b179d7b2-7603-437f-9d79-ef4890b0eb28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4c77c92-0326-48fb-852d-c01cc41b69cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cf42901-4a9d-429e-bede-0d0acb307efb"
                    }
                  }
                ]
              },
              {
                "id": "8315b55c-efe6-4259-b2b8-094ca4ee16f1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a6c44550-67e4-4e3c-aac4-fa9266fdf7cc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f675ac-925e-45f2-af67-860def98ba9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "81aefd9a-68c9-44b7-bcd5-fa78476d901b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e886961e-a0aa-4c42-980e-145b1c4898a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc814ab5-67ad-4a52-8936-bea573d28429"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e6156afe-7868-4904-8528-eb3dacc1d511",
            "name": "Positive Testing",
            "item": [
              {
                "id": "24a4163c-6587-4214-83b9-70b29f111e9c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5795816c-ed85-4dd8-a96e-a601a715ced4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1a3963fc-f3cf-435c-b0fc-bda2cad75498"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d73c4bc5-6820-4801-aa57-a9a0b23e8e27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65e03a53-7d15-49e1-9d3a-4169db45f222"
                    }
                  }
                ]
              },
              {
                "id": "51d90fb5-3e95-4a3b-a598-f6fd91b5f3e7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a25cc1b-508b-4033-85dd-6748c8100f4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "794321c9-8322-48c4-82a4-cb22661e2233"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1befd5bb-251a-42b7-831f-3bb668605c0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c59febc-1274-426a-aef1-1470b659b9e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f46eeb3-4b24-467f-bcef-c57c73156686",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "86430651-e13e-4ad0-91cd-5be64a53c2a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afd7a930-f7bf-40ad-906d-4fbec1312bb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31377808-ef4b-4d80-870b-611d1a1c5cd7"
            }
          }
        ]
      },
      {
        "id": "23a755c1-f9cf-4e58-a0a0-ffa18993fb2a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0c55172b-c04d-4891-8a7a-374facf9a825",
            "name": "Negative Testing",
            "item": [
              {
                "id": "058f4499-eefe-4f6f-9a95-efe38600e798",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ee17fb2-c172-4cff-9f1f-95652fb4dd93",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc7216c-ac1b-4d69-8459-b22d2daeb290",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b1a63a91-8b9f-41af-8aa4-6b758cd41ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a79ba0e-4808-4d35-9a4a-2046c8962bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7da80354-bdc9-4c12-8f74-fada9694302a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01c3271f-e762-4702-997b-465efa81bde9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec3dc11f-c49e-4ef5-a107-4f847617aebe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc78a107-27ef-40fd-8a06-84b04538b7ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "014504d5-f39a-42ea-be94-c6d477929666"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a2d662f-5080-4be1-998e-b9c4a4c3175e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e30dfc45-ab0d-4c4a-9825-71681a119710"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67b4e8ed-1e2e-4873-8d14-2b8adf25e434",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "696672be-ee40-4b3c-8d8e-e32ffb856ee9"
            }
          }
        ]
      },
      {
        "id": "d9f9ef91-33f1-426a-bbc9-ab08beea2c6c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "368945a9-62ea-480b-9798-374c5fa30b8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1b9a714-ac46-4964-8778-ff5109838371",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "730b6f24-dddc-4c65-bbc0-f0040fb23dcd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16d3c92-fae6-4483-8330-3dcad79edc6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94027e7c-80b4-4105-8d93-57a9adfdee5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7429ce3d-b8d4-4683-8b5d-1a1796837970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1c8ecbd-012f-479e-9cf0-56fb3ff852d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b35884d-3b53-43d1-b5be-1da5383e188e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5d6204f-d61d-4334-a2b8-a46f45cc057d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c22ae0c5-b60c-4dd0-9110-2ce73a4e7f06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c9e392e-de21-41a6-9362-fa8ac1ca6b06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a75a975-1848-4e47-b7e6-35799f2e4c84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7ae22d2-4e8c-4329-8d55-41fa738e380c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fff46789-af00-49ec-b8aa-8c5efe80dd85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d355b81a-85c7-41a6-896a-9d9e89485cf2"
            }
          }
        ]
      },
      {
        "id": "0e3ee65d-f57a-4f67-bc46-fb804e9d54a1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0c12b297-bb70-4081-b12f-be971773d46b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d297c6f7-7fa7-48a9-9462-ed86125eb3e1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55c44c2f-7d87-4e1d-a5ed-3e8319d6ad20",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6ca96f-7dca-462a-9cc4-c27a2fd45dcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b8cb1b9-35d6-4ec3-93f9-2faed25354f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fabd99-80fb-47ed-8436-4c968b998fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1abbf51a-6e51-474b-9c90-16490ab8b66a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6c64edf-903c-48f8-a190-f36db17006b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90d83d49-ec16-4c30-aff7-a648e3089b37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9a85be0-1279-4ca7-b280-0466a17552d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b74eed0d-1ba1-4478-aa84-b13e9d213a18"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d68d9ec4-5a3e-45c2-8d73-66bf5a53520b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "02359111-1e30-4b10-8d91-95726667f277"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "152cb4bc-bb3e-45fb-b957-e12dd0760029",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4451726d-109b-46e2-9dee-9ab3272e776b"
            }
          }
        ]
      },
      {
        "id": "836214c9-7182-4c76-9270-dce501c0a877",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a03b63a7-61b6-4e70-aa2d-4d02b53e3939",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad7cd255-1bd6-4369-b823-a7eefbc0fa57",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "720897d8-1d86-4e37-9f4b-6819f3ae1f2d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2da9ba82-b1a4-48f9-9908-eea09b139485",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa161dbf-d48b-4158-b026-105a3b619577",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 237.46315789473675,
      "responseMin": 6,
      "responseMax": 8854,
      "responseSd": 1135.1642046196114,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700094940525,
      "completed": 1700095017646
    },
    "executions": [
      {
        "id": "d16e289d-f5ad-4993-9945-7c49b5b26d24",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b22e09cd-5a7c-446c-b25b-b902c0e19317",
          "httpRequestId": "cfe38e56-cb40-4d37-be3b-fec5a71d7a4b"
        },
        "item": {
          "id": "d16e289d-f5ad-4993-9945-7c49b5b26d24",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "35b7c037-94bc-4ff8-8939-e5b829dba61a",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "82c6902e-0a8d-45a0-b39e-cabe797de70f",
        "cursor": {
          "ref": "c09035b4-121b-4a92-b781-97c412e321d5",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f9c66fe9-bc47-4793-bd5c-a7e656f8522a"
        },
        "item": {
          "id": "82c6902e-0a8d-45a0-b39e-cabe797de70f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fc890e62-9e4c-440e-a71f-bacbafe37396",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "825636d2-6532-4b98-a789-63b0667943bd",
        "cursor": {
          "ref": "d382148a-86ee-40dc-85e6-049872faebb9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d002b443-35f9-4403-8eb5-a1d9f13a11c4"
        },
        "item": {
          "id": "825636d2-6532-4b98-a789-63b0667943bd",
          "name": "did_json"
        },
        "response": {
          "id": "0c52b343-6ee8-4a52-bd8d-9cdd627d01e6",
          "status": "OK",
          "code": 200,
          "responseTime": 1612,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05669b9b-aeeb-4e95-9671-01cf370d8380",
        "cursor": {
          "ref": "61632c84-f5c6-46d9-a782-8c11a477d825",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "026d13a4-c477-46dd-a0de-a16c9c63609f"
        },
        "item": {
          "id": "05669b9b-aeeb-4e95-9671-01cf370d8380",
          "name": "did:invalid"
        },
        "response": {
          "id": "89ddd676-6572-43f1-9593-7f9542725a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05669b9b-aeeb-4e95-9671-01cf370d8380",
        "cursor": {
          "ref": "61632c84-f5c6-46d9-a782-8c11a477d825",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "026d13a4-c477-46dd-a0de-a16c9c63609f"
        },
        "item": {
          "id": "05669b9b-aeeb-4e95-9671-01cf370d8380",
          "name": "did:invalid"
        },
        "response": {
          "id": "89ddd676-6572-43f1-9593-7f9542725a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985abc9a-44ca-4bc5-a698-8ece3a1a7126",
        "cursor": {
          "ref": "0b3b7c58-a6c9-438c-97f6-695afd5e18d5",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "aaf7ed2f-50b0-4c64-b1f3-b77665369db9"
        },
        "item": {
          "id": "985abc9a-44ca-4bc5-a698-8ece3a1a7126",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c4800b80-3039-409a-8465-02b4c6c1a072",
          "status": "Not Found",
          "code": 404,
          "responseTime": 111,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc69c01d-8bbe-479c-a046-b3fa634a00c1",
        "cursor": {
          "ref": "e9ca4d05-6326-4678-a196-64bed280d094",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b5e92950-7f55-46b1-bc96-dd3505a3b889"
        },
        "item": {
          "id": "cc69c01d-8bbe-479c-a046-b3fa634a00c1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fab70bcc-7d85-465e-9ead-54942e51aa0c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61492465-7687-417c-9fb7-798d38a0882b",
        "cursor": {
          "ref": "6c7537a4-e0ed-4783-bfeb-cf4312f9d458",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3c80e695-f1a7-47b2-842d-32d2c4c77751"
        },
        "item": {
          "id": "61492465-7687-417c-9fb7-798d38a0882b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "14191858-d05b-4bcb-8982-dc01099aa941",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05853eac-9d31-42e7-92ac-d1620eda8f69",
        "cursor": {
          "ref": "5833f763-da74-44af-853b-5e192bf623ba",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "88a8e392-360a-4de8-8224-0a1ceee3d9b1"
        },
        "item": {
          "id": "05853eac-9d31-42e7-92ac-d1620eda8f69",
          "name": "identifiers"
        },
        "response": {
          "id": "3bb67368-2882-4192-85e1-2a54f42ef838",
          "status": "OK",
          "code": 200,
          "responseTime": 1315,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a74af64-0936-4959-9461-a1104900164d",
        "cursor": {
          "ref": "b68aed07-d391-46d0-bda3-a5fe13b716ee",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b027c4f1-6f03-4759-a268-5527332d07f9"
        },
        "item": {
          "id": "9a74af64-0936-4959-9461-a1104900164d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8ef9010e-2747-4025-bc34-273628b15274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02e4542-b35f-47f7-8f62-dba756634e1b",
        "cursor": {
          "ref": "33bc2d7d-2acc-4b85-a53f-2bbb0684ecf6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a31935da-3a28-482b-8889-949bd7f43c3d"
        },
        "item": {
          "id": "b02e4542-b35f-47f7-8f62-dba756634e1b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8427f5e0-d7ae-4879-8daf-a26e336292ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf42301b-b616-4383-9bbd-4d04a13b5be7",
        "cursor": {
          "ref": "43af85e3-f335-459f-a744-84b57101e064",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "200cc17d-d4da-4778-b37d-628a8bfaccf2"
        },
        "item": {
          "id": "cf42301b-b616-4383-9bbd-4d04a13b5be7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ec7619a8-623a-425f-ba47-29519542de27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c479f758-b2e5-40ef-913a-4002c2357036",
        "cursor": {
          "ref": "88a28e87-cdef-4255-a4f5-0e0c7a7b4935",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3d80a06e-724e-4098-83cb-e4b4564cb279"
        },
        "item": {
          "id": "c479f758-b2e5-40ef-913a-4002c2357036",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c7cf0f2e-4d95-4baa-a547-94b380126685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782c07af-0eb2-4ae2-90c5-d6fab31487de",
        "cursor": {
          "ref": "583455ba-2263-4b7d-9e04-e3be17098952",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a62f8e4f-3d28-4ff4-95cb-70fe32131a74"
        },
        "item": {
          "id": "782c07af-0eb2-4ae2-90c5-d6fab31487de",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5a0eccb2-4325-4a89-aa1a-e01c02ef16e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6649970-0a8b-4fd2-8e6f-8a898fbac906",
        "cursor": {
          "ref": "f2de83e6-ea0e-4fa5-808b-0fc262689286",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ed6a3c9d-1225-48b9-b313-01b8048a1a38"
        },
        "item": {
          "id": "c6649970-0a8b-4fd2-8e6f-8a898fbac906",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "be08e4e9-7d8c-47f0-bd13-ca8de2b3935e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28c378b-3d98-4c6f-9316-b3219d96b80b",
        "cursor": {
          "ref": "2f7d7704-55ee-4092-87f2-658818456eb8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8d05ff01-c29f-419d-bee8-cd8c2f2c65f6"
        },
        "item": {
          "id": "e28c378b-3d98-4c6f-9316-b3219d96b80b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b0dad5be-c922-4cbf-98b7-c059744637ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf6d200-7127-475f-b58e-d61240e6c946",
        "cursor": {
          "ref": "8cc8fa59-1f96-47ce-ba89-344e12fd2706",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f9c58e9a-71f7-4f94-acb8-2373e357aace"
        },
        "item": {
          "id": "ecf6d200-7127-475f-b58e-d61240e6c946",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "857e7268-bd1a-4d8a-b599-30a7d70ae545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e3d3c6-b871-4405-b7d2-95eb008fbc7c",
        "cursor": {
          "ref": "cc940a18-1ff4-4cf7-b6d4-a97630378c08",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "73da52ef-84f0-42a0-b768-4b3db1f80b42"
        },
        "item": {
          "id": "18e3d3c6-b871-4405-b7d2-95eb008fbc7c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9307d16e-6562-4040-bb04-9ec14a93d20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb5cc6b-5132-4419-8ce8-bb4dc5d5966e",
        "cursor": {
          "ref": "f0d19993-4c48-4202-9f58-c1d8f4672f88",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9b38556f-3bc8-48a6-b79a-4f4daf8c2f9e"
        },
        "item": {
          "id": "aeb5cc6b-5132-4419-8ce8-bb4dc5d5966e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1b9a667c-04c7-42fb-ac94-74a1c3d3745c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a87f42a-9c17-4ac0-b10b-b879a6f25f2a",
        "cursor": {
          "ref": "3c5442ee-1e16-4f8f-b908-1c2d409fbdd1",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d94cdb4e-a3d5-44c9-bd75-a49af1a4c65b"
        },
        "item": {
          "id": "7a87f42a-9c17-4ac0-b10b-b879a6f25f2a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e10c8493-4c3c-4589-a5c3-86a3f8792681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f507f64-ee55-4980-b0a5-ec5208158273",
        "cursor": {
          "ref": "80980395-59d4-42a0-9003-23bc0f9c9a71",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9679c505-87fd-44a3-8cef-b6860ed515d9"
        },
        "item": {
          "id": "3f507f64-ee55-4980-b0a5-ec5208158273",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d24df11d-e52e-466c-82f0-9513aba40de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7154d99-4f97-421f-8b78-e0ff94be04ed",
        "cursor": {
          "ref": "e7897197-7620-4713-a6d9-17c3f6e43386",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "801900d2-a130-40d0-b22c-2483bf9add3a"
        },
        "item": {
          "id": "e7154d99-4f97-421f-8b78-e0ff94be04ed",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cbe2f1a5-aaee-49a4-8d17-6c0108055ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44b1938-bce5-40f4-a796-72c1cae0a132",
        "cursor": {
          "ref": "55761205-9b5c-4fcf-9e33-2654b00603ec",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "11eb8d31-4e70-4760-9e44-366bccab247a"
        },
        "item": {
          "id": "a44b1938-bce5-40f4-a796-72c1cae0a132",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "af1dc077-f2ac-43df-b605-f541b777eaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec651ea8-3f05-4b2b-835e-96766b2899e2",
        "cursor": {
          "ref": "97790b32-e303-4c2e-8086-85fef76837b3",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f31b914f-48d7-434a-b9a6-75e195bdc220"
        },
        "item": {
          "id": "ec651ea8-3f05-4b2b-835e-96766b2899e2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9f066297-16ce-4698-994a-08b5f3762b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205c8926-579c-4618-a2c1-09239c86c179",
        "cursor": {
          "ref": "2120b8a0-ee51-460a-9fbc-d5575a3a439e",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "259e5ac4-1ece-4199-9537-9d6e67aef70b"
        },
        "item": {
          "id": "205c8926-579c-4618-a2c1-09239c86c179",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2bf47d5a-107a-46ab-9eab-b155ce5bd131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea29b0b-d0e6-4d3a-95ac-c140a879b3dd",
        "cursor": {
          "ref": "f822cab1-783b-4b42-a075-ecabd8a8eafa",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fa87c46e-b6cd-4a08-8904-14c718b26ae9"
        },
        "item": {
          "id": "3ea29b0b-d0e6-4d3a-95ac-c140a879b3dd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "20297516-5a08-439c-9a27-5c51cd36e8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554aff42-c463-45b6-a7c3-176f1a452cf3",
        "cursor": {
          "ref": "de6f4747-a77f-489d-8c8f-3bc2cf56da57",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "83e43b43-f9e9-4f01-8c47-45363da074ed"
        },
        "item": {
          "id": "554aff42-c463-45b6-a7c3-176f1a452cf3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "aaf4dacd-bd32-4d2b-86bb-ddc45af16f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bb9647-2c6d-477a-a593-5f26765c830c",
        "cursor": {
          "ref": "ce2c4587-6632-4310-ae05-c113a3970f4e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "16db9b1c-4b9a-434a-a200-ef0eb47e4b82"
        },
        "item": {
          "id": "47bb9647-2c6d-477a-a593-5f26765c830c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e46ee8dc-8c28-4529-bb43-ae2c81611ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468f975c-0751-4f4e-8b82-1649fe1d068b",
        "cursor": {
          "ref": "08d36cc8-0f8e-4366-96dc-1b97941c1e71",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4679a080-ea96-4243-aac9-ad3df2ee7caf"
        },
        "item": {
          "id": "468f975c-0751-4f4e-8b82-1649fe1d068b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8262f095-e8dc-46dc-89a4-d661f3fe7aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7667639-ece2-437d-90d7-0e9c0a3337e9",
        "cursor": {
          "ref": "035ad570-3a3e-49e8-8b5a-08b1fb909e94",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1e8231ad-d152-4ba5-8db8-5f56c46a8665"
        },
        "item": {
          "id": "b7667639-ece2-437d-90d7-0e9c0a3337e9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "360a8e5f-bbfc-4438-a85b-9340c5c7294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149f0732-9cb8-4624-9665-82ccd7750c0d",
        "cursor": {
          "ref": "e26e8cd6-e5ad-4161-9291-fadc61bedee5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "289a9f9d-136c-47ad-8f26-4c8a6eb34781"
        },
        "item": {
          "id": "149f0732-9cb8-4624-9665-82ccd7750c0d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "93e911c0-1e1b-4945-a282-ac0e74b8fce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc84e66-3073-4e17-b189-ed6130a7ed4e",
        "cursor": {
          "ref": "1506ad02-1db0-4e42-bd05-0f29c2d04207",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "446b01dd-e76b-4c51-9606-a37bbc967cfc"
        },
        "item": {
          "id": "adc84e66-3073-4e17-b189-ed6130a7ed4e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "016c254c-0fae-42ff-ba57-357436aa7e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b48e758-5e4b-40b4-b7a1-49195398f169",
        "cursor": {
          "ref": "390d4ec9-484f-4486-81bc-2f80532f7ae0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7fa70465-24fb-49da-80d7-b801e29f4fef"
        },
        "item": {
          "id": "1b48e758-5e4b-40b4-b7a1-49195398f169",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "63164fbc-bab8-43ad-8ce5-edc6176317b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3f8f60-4605-438d-a4df-e83641d473bc",
        "cursor": {
          "ref": "9bc63ca5-54d8-40a9-8218-21ba48ec9674",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b21ce90a-9dd9-4c8d-bf80-5c399fb60f61"
        },
        "item": {
          "id": "dc3f8f60-4605-438d-a4df-e83641d473bc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4ff3d204-a610-4710-bb61-419c884c63c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4caa0e0-de82-432f-a5a5-ff0024edc84c",
        "cursor": {
          "ref": "576eace1-42d7-4344-a845-e5e8f41ce663",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6fd571e9-9bf1-41d9-954b-b2294fffc464"
        },
        "item": {
          "id": "e4caa0e0-de82-432f-a5a5-ff0024edc84c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "87602c91-e00d-4050-af7c-318fe9922c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc1f58f-6cfd-4500-94ae-916183f35e48",
        "cursor": {
          "ref": "bb1555f1-d2e1-4791-9ebf-63b675a488c2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "82d83f23-1a87-4a56-90ae-01cb9381f800"
        },
        "item": {
          "id": "8cc1f58f-6cfd-4500-94ae-916183f35e48",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1e10aeb2-3257-4143-9f28-9adb2e5f59f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ff5f18-c000-468b-a4da-262e846ccbac",
        "cursor": {
          "ref": "ba31e2ba-36a2-47de-bd52-9fcef3c476cf",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f1594dc7-fc36-4f09-8ea0-cfb1bb55b803"
        },
        "item": {
          "id": "98ff5f18-c000-468b-a4da-262e846ccbac",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "13e89041-869a-4619-92cd-08cc68fcbf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e337057c-5ba6-4417-b588-df9fd5d22c69",
        "cursor": {
          "ref": "cb2615cf-fda6-4645-9204-75da3f77be94",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9115654b-ef8b-44bc-9a7d-632bb18a0b2b"
        },
        "item": {
          "id": "e337057c-5ba6-4417-b588-df9fd5d22c69",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1488ad06-fe54-43c8-84fc-b31101282b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ae618c-f112-40be-92ad-81a7e139d72d",
        "cursor": {
          "ref": "4921f4dc-6b82-4108-b1bc-81db809c9f28",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "458902bb-51ff-4b4a-8a2e-cdabd949876f"
        },
        "item": {
          "id": "a9ae618c-f112-40be-92ad-81a7e139d72d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c1fe139a-6539-4422-91ef-09592608d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a88daf5-5398-44e6-8df2-4b44afccdc27",
        "cursor": {
          "ref": "96507218-c27b-4832-a9c5-7401f23ba6d6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0cc7ab30-2973-47f0-a9dc-df09c0df7958"
        },
        "item": {
          "id": "4a88daf5-5398-44e6-8df2-4b44afccdc27",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5b8513c2-d319-4dee-919f-5e8afa480f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b070231f-1c8c-4fcb-864e-aaae0bcbbfb2",
        "cursor": {
          "ref": "e491c9f6-b92b-4d03-82af-c44980a43893",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5f9e3037-93d0-47b2-a3c7-6d1757c029e0"
        },
        "item": {
          "id": "b070231f-1c8c-4fcb-864e-aaae0bcbbfb2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ae15c02a-f93a-47c6-9e21-85b80ace3c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c930e865-2cfe-4588-8ff6-747cebc89c77",
        "cursor": {
          "ref": "5f3dac3f-25cf-4fbe-914b-a4e79354bfb4",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bae560fa-353a-4bb4-89ed-3837c2ec2bdc"
        },
        "item": {
          "id": "c930e865-2cfe-4588-8ff6-747cebc89c77",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "18c68e5b-4640-4d3a-ad7d-3892e2a8732e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9423e2d-a3ca-4293-9ea0-0a86de679ac7",
        "cursor": {
          "ref": "046b3f91-4e50-43b3-8d78-eced96bf3040",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1b0e135b-593d-478c-a204-12c9856069ea"
        },
        "item": {
          "id": "a9423e2d-a3ca-4293-9ea0-0a86de679ac7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "31a5344a-8f0f-4327-8fb7-95956b6d536b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f5300e-79e6-45f5-bdec-f65126ea28c0",
        "cursor": {
          "ref": "0ba062f8-2cdb-46f0-b8bb-ad511b3162d3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "64d7f466-69dd-4961-85ea-8afa95c2dc54"
        },
        "item": {
          "id": "07f5300e-79e6-45f5-bdec-f65126ea28c0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c3c4e902-e81e-4214-98f0-4dfd660d3205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b134c1a3-5601-4ff8-9b93-506e31e3c8e8",
        "cursor": {
          "ref": "0590bb29-9e7e-4870-9aa1-244fadc121df",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f6e426c5-b1da-435b-b000-994de901fe99"
        },
        "item": {
          "id": "b134c1a3-5601-4ff8-9b93-506e31e3c8e8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e74c1397-780b-4fdc-9f96-6aa87ca1b288",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1451,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864bad96-b3e7-4780-a46f-1c20e7cbbbcd",
        "cursor": {
          "ref": "c3cfcf3c-0ba5-4305-9a4b-d7ebe79dd1e3",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a7bef238-3002-40f4-a6cd-3167fcc75246"
        },
        "item": {
          "id": "864bad96-b3e7-4780-a46f-1c20e7cbbbcd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bbf85574-53f9-45ba-97fe-a99ae44e7d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e5488b-daf6-422a-ab03-fd558965b972",
        "cursor": {
          "ref": "30a11aec-0862-497c-92c0-a60ee6d37d24",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2c9b382d-46e0-4298-8a77-c3caa2cbf014"
        },
        "item": {
          "id": "d5e5488b-daf6-422a-ab03-fd558965b972",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "35bb8f99-de54-41ef-b764-142870be4fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4430fefa-3ebb-4f37-84f8-3de9204cf4b3",
        "cursor": {
          "ref": "fc3b889f-9ace-44b9-a925-fed1c38cb92b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "52a1103a-8549-4d01-aa42-e353f08f648d"
        },
        "item": {
          "id": "4430fefa-3ebb-4f37-84f8-3de9204cf4b3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "27851943-7948-4306-9c77-5a28d7f9a012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263d3334-0902-4fd0-aac6-3e229a273798",
        "cursor": {
          "ref": "91ab2e22-847e-4832-bd8b-7d94ee6321c1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "abd85e03-727a-4118-aba7-4df48d9bd958"
        },
        "item": {
          "id": "263d3334-0902-4fd0-aac6-3e229a273798",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "301b627f-e225-46dd-ba24-029a0358593d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4583d6-a969-48d7-9f25-0ea7b3e41356",
        "cursor": {
          "ref": "1d6d9b61-8b47-48cb-bacb-4fd521e6f840",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "091f802c-2ed6-4a33-aac3-f41dbc9ce5ab"
        },
        "item": {
          "id": "3d4583d6-a969-48d7-9f25-0ea7b3e41356",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ebae0d03-95e8-457e-8d60-0a58ee2d68fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1c2c8e-892e-4cbd-902b-c58254adcb5d",
        "cursor": {
          "ref": "f24b749c-bc3e-491c-aae7-844e584d2b32",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a428fd3a-046b-4745-9a19-0f2028ed611b"
        },
        "item": {
          "id": "3a1c2c8e-892e-4cbd-902b-c58254adcb5d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6739b465-9f58-4894-bb55-5315023077fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a51113-fc6d-4dc7-b965-33302f7f04c7",
        "cursor": {
          "ref": "42a6e831-2ed6-4a9c-98bc-2143cf6997eb",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b7c41449-a601-44fa-ad75-400307b2da4f"
        },
        "item": {
          "id": "96a51113-fc6d-4dc7-b965-33302f7f04c7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f272f1e4-c444-48e1-bbd2-f934e543a192",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1445,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1edd987-9839-460a-b564-5fd4896e65a8",
        "cursor": {
          "ref": "8383724e-0abf-4f32-be6c-e01fe1c0819c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3f6c4c17-65f6-4801-82e2-6c427625077f"
        },
        "item": {
          "id": "f1edd987-9839-460a-b564-5fd4896e65a8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f8c4da57-f462-4f43-8cac-1aa6191365bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb69137-29ab-4c8e-9f5b-69e428693837",
        "cursor": {
          "ref": "ee22a394-8c0a-4cb0-acab-c70a8ea4cbfb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bcb5457b-f208-4d2e-8648-7ea17f121beb"
        },
        "item": {
          "id": "9eb69137-29ab-4c8e-9f5b-69e428693837",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "11b94026-edda-4ac2-9834-54e827590269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508663f8-0006-4784-90bb-9657d53e5c08",
        "cursor": {
          "ref": "2c611d57-cea8-479f-9aea-1d7c87ed5670",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "17ef1e3e-35b8-482f-90cd-fcf100b950c3"
        },
        "item": {
          "id": "508663f8-0006-4784-90bb-9657d53e5c08",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4002a559-675f-419b-8fc8-3f6c155db7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b725727-edcf-4cc4-b140-dbe696392427",
        "cursor": {
          "ref": "bb6a3e80-0cfd-4532-8247-a9f25dec6a3c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3173ad48-e140-4b65-a33b-269c3a759044"
        },
        "item": {
          "id": "4b725727-edcf-4cc4-b140-dbe696392427",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4ba3d8a0-b7b9-45cf-afe7-966a2f797f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2496c5-b7c9-4ec9-95f7-5da1cbd88215",
        "cursor": {
          "ref": "b5f0a61e-578b-4657-ab4a-5ba2ff535f15",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f523ef20-7f9a-4ae2-8eda-b5e1fdd90304"
        },
        "item": {
          "id": "bb2496c5-b7c9-4ec9-95f7-5da1cbd88215",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a4250c2e-bde3-4a65-a9e3-636f4ccaff25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466a943b-837f-462c-a3e4-43f6a7aaf283",
        "cursor": {
          "ref": "ac71b55c-7ef4-4f1f-8b0f-e75fe9cd9758",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aa91dad0-bc50-421a-84ea-b4fe813bc406"
        },
        "item": {
          "id": "466a943b-837f-462c-a3e4-43f6a7aaf283",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "acf981be-0de1-401c-8bd6-a1fac3d08527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c2e788-d5ac-45ed-8bd5-94f74e455525",
        "cursor": {
          "ref": "af4d0790-204c-4aca-b49e-4e4edc147dcc",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "33553dc0-010f-4ec0-81eb-6a1085bea9e9"
        },
        "item": {
          "id": "48c2e788-d5ac-45ed-8bd5-94f74e455525",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "168f7316-22ea-4486-9799-510b804c6662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f97409-cc90-4b8c-9027-62a8c6b058c9",
        "cursor": {
          "ref": "481cee98-08af-4b58-af25-21b0787999da",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "17bd2f9c-86b1-4025-980c-06697ca18df5"
        },
        "item": {
          "id": "f7f97409-cc90-4b8c-9027-62a8c6b058c9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b3128962-099c-4adf-a27b-154d53bc5683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fa2047-ad55-438b-90bc-7dc5e65a5c08",
        "cursor": {
          "ref": "00fdcec8-becf-4478-9773-e2c55f047477",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f489e905-13cd-4697-93c7-49a10ccc0614"
        },
        "item": {
          "id": "d5fa2047-ad55-438b-90bc-7dc5e65a5c08",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1404128a-a0ca-4c9f-9984-f6346d41a573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7003cccb-6f6c-4bdd-89b2-52cfcaf9ae09",
        "cursor": {
          "ref": "5331290e-8cab-42f5-86f7-245da0647fac",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "45fad6c2-dfcd-482c-8764-975567919883"
        },
        "item": {
          "id": "7003cccb-6f6c-4bdd-89b2-52cfcaf9ae09",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5f89944c-3cbe-45cf-a9df-7eacb6fdf7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd670397-6ce6-4884-b1ff-56c10b5f75a2",
        "cursor": {
          "ref": "abe45c5f-9db7-44a1-a5f3-e0627f067cb3",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9f4b2cf8-eac4-4587-a7bc-8dbf35687073"
        },
        "item": {
          "id": "bd670397-6ce6-4884-b1ff-56c10b5f75a2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cdd214ae-8942-4893-9bad-7630c2d89a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4717d0-8d85-4e29-9ce8-277f20ee918b",
        "cursor": {
          "ref": "fcac145b-9fb5-4987-9fc7-cc7382a47eae",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5f5fa809-d337-4126-97eb-e1c4a1e0fcb3"
        },
        "item": {
          "id": "ee4717d0-8d85-4e29-9ce8-277f20ee918b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b844f35e-1401-4d33-bb11-de770d04545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c8693f-459d-4b19-9455-d15002bf9fad",
        "cursor": {
          "ref": "2fe87b3a-325b-4a4f-a273-11e2244ede2c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "02cd8450-f947-4c36-8cf4-34647605347f"
        },
        "item": {
          "id": "38c8693f-459d-4b19-9455-d15002bf9fad",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "836b6c13-5178-4632-9aad-a512ae90b1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34e8413-edfe-4991-af16-4fabd0530d31",
        "cursor": {
          "ref": "7890c4f3-3967-4d80-957d-c503a08009b0",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c435bdb4-4c2f-44a6-a2d8-5cf311abef75"
        },
        "item": {
          "id": "e34e8413-edfe-4991-af16-4fabd0530d31",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "819f0210-d445-4e3a-8318-35842644dd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee0f822-9d07-41b4-ae11-0bf52d84b2e4",
        "cursor": {
          "ref": "ab951a87-083d-4f55-bb6a-66e8ad1ddd56",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "608808c6-b5b5-4696-a303-b0f85bdfe74d"
        },
        "item": {
          "id": "0ee0f822-9d07-41b4-ae11-0bf52d84b2e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5110e546-f99a-4173-a655-78d70acba670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c0bb9e-4d77-4f89-b55f-8f360d149558",
        "cursor": {
          "ref": "741b54eb-f46b-4add-bf15-4a15d7f8f052",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3a83bef4-eca7-49f3-8e48-3d8829235f86"
        },
        "item": {
          "id": "a1c0bb9e-4d77-4f89-b55f-8f360d149558",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "79fe413a-0ae8-44d8-8099-26b7e070eaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3798880-8789-4b11-ad28-1bd2431f556a",
        "cursor": {
          "ref": "7b564d55-8961-436b-ab3c-d654699b9edc",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5da50e7d-1f03-4e28-860a-7540c850f42c"
        },
        "item": {
          "id": "c3798880-8789-4b11-ad28-1bd2431f556a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "62c83609-a0de-4289-a7b5-684042a734e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3268f0-7f1f-407c-b09a-241c5fe10a86",
        "cursor": {
          "ref": "fe5e3f5e-c710-4d07-8f41-a9b83591f6ce",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dec4e417-a5a2-4299-8b17-6a138c965265"
        },
        "item": {
          "id": "db3268f0-7f1f-407c-b09a-241c5fe10a86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ddd02c44-e613-441c-9f56-d5e6912655a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ef914f-0b32-4b7b-bae2-8e1785f53a1d",
        "cursor": {
          "ref": "995f9229-141f-4c3d-8bd9-c9750fc87232",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "74154f00-cc6f-4ac7-a298-117cab6513a5"
        },
        "item": {
          "id": "e3ef914f-0b32-4b7b-bae2-8e1785f53a1d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cf872db6-a5ea-4cae-8a02-898c9f2603b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f236e51-111a-4c2b-9478-a47d269f40bb",
        "cursor": {
          "ref": "d21030a2-519a-4af7-bce2-c3ea96d6a701",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8edc47f8-0c6e-44f6-a491-b03192fd3ed9"
        },
        "item": {
          "id": "9f236e51-111a-4c2b-9478-a47d269f40bb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4e3371c7-35a1-4de1-ae98-da2c434a7fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51eb2d38-ee12-4430-b70e-a15538df3cac",
        "cursor": {
          "ref": "eb8eb540-b42b-47f0-82c0-bf96b5991ed6",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7e12025a-86e5-4572-a841-7f2420f7d97b"
        },
        "item": {
          "id": "51eb2d38-ee12-4430-b70e-a15538df3cac",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "54c56afb-2682-403f-9139-d7bcc8a9debd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e43063a-6c2d-461f-8479-f0a1925003c8",
        "cursor": {
          "ref": "d80d3b2d-4e3d-4dae-a70d-69c821881f79",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3bf98527-9a61-4aab-8231-164408023216"
        },
        "item": {
          "id": "9e43063a-6c2d-461f-8479-f0a1925003c8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b58b1d2d-8274-42c5-9460-d2c49f7c7d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46be0105-e7c8-404d-a0da-79f9ca75203a",
        "cursor": {
          "ref": "f6edcb52-a7c1-4a9f-b763-bf2ba3812e09",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "27549413-9c78-4c5d-bdcc-22a307c3a818"
        },
        "item": {
          "id": "46be0105-e7c8-404d-a0da-79f9ca75203a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4caf10b6-2e4d-4c44-8145-9011c7290278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b716ab34-9265-4195-919b-dfaf30408a13",
        "cursor": {
          "ref": "c8cb0bda-aa8b-4b3c-bb14-fef1e6bfb3be",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e14105a3-2690-481d-bda1-591c6ebcc65f"
        },
        "item": {
          "id": "b716ab34-9265-4195-919b-dfaf30408a13",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1b7f3884-1cd1-449f-9cb8-a1a44d17e60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f6035c-a391-4068-9852-ae652157426c",
        "cursor": {
          "ref": "9935874e-98e9-4e33-bd04-40f83dec2aad",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7f3e3e36-1105-442f-82dd-2f7e6a4ca5ea"
        },
        "item": {
          "id": "c8f6035c-a391-4068-9852-ae652157426c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "297785d0-eb91-444c-8d66-728569dae420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775371fb-6543-48a8-bc68-3baed1dbf0de",
        "cursor": {
          "ref": "eb41815d-7907-4be8-a787-0f6089bd15e6",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2385423c-141a-485b-bb34-5de4d9e5d1b7"
        },
        "item": {
          "id": "775371fb-6543-48a8-bc68-3baed1dbf0de",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7bbe0cc3-464e-467d-8dec-da24773f928e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bdaffe-d39b-4e96-86da-5a4333b23799",
        "cursor": {
          "ref": "50374982-07f8-45fc-8cb5-f6e45f3551e1",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ff0067b6-1939-49cc-be45-93a787ac9ab4"
        },
        "item": {
          "id": "19bdaffe-d39b-4e96-86da-5a4333b23799",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "293cf27a-06b1-47cc-b26e-a2d7b88bbb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a366fb91-c7fa-4313-8efb-8d74618b5f19",
        "cursor": {
          "ref": "b3bfc2a1-2ae7-4ebd-b3d9-04b5f0c8f227",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a8760123-3804-4c50-9429-48004089ccf9"
        },
        "item": {
          "id": "a366fb91-c7fa-4313-8efb-8d74618b5f19",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "269f23c9-d729-41f2-9d6a-0a25c68dcbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d3283b-a6e7-4353-9bf2-b81538661326",
        "cursor": {
          "ref": "03c455e0-8dd8-4eff-b6dc-0a2aa6649f26",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3548de48-057e-4561-881a-912169b5c7fc"
        },
        "item": {
          "id": "78d3283b-a6e7-4353-9bf2-b81538661326",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4e0bb443-2a03-48ce-ab66-e04aadd4bfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcd1425-14ef-4d25-8803-9041b3b58e55",
        "cursor": {
          "ref": "b231d6de-e00d-4484-abe2-51608b82c272",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "66672f51-8cf6-4a87-9922-f9f1ab0734eb"
        },
        "item": {
          "id": "cdcd1425-14ef-4d25-8803-9041b3b58e55",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b5ddd92a-ca8d-41f1-a333-484283486eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d550e02-9645-4b4f-9c6b-c25a029b9f6c",
        "cursor": {
          "ref": "e3ff8f90-0e88-42b1-bb02-24beeb936b09",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5b16bad1-4ad0-4b56-ad35-825d893c1ea7"
        },
        "item": {
          "id": "0d550e02-9645-4b4f-9c6b-c25a029b9f6c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "759b0417-aa8a-4f0c-a739-1f180b803d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4db9a4-0aca-4e47-8732-eab2ed45f019",
        "cursor": {
          "ref": "cfee1873-f235-4030-a16f-d276579d8e10",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d67f2a62-7643-40a6-b208-593cac1d6aa3"
        },
        "item": {
          "id": "fa4db9a4-0aca-4e47-8732-eab2ed45f019",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4fdd8238-84f5-440f-9d46-a6ce4f6eb761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94ecd5c-d2f4-46c4-8407-789c6562b06f",
        "cursor": {
          "ref": "bf5ace72-8bd2-4416-8e28-1bc5b7995089",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7e64f804-00ba-4b5f-b9ee-d5d7a931361e"
        },
        "item": {
          "id": "e94ecd5c-d2f4-46c4-8407-789c6562b06f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3b2b8158-0c1e-406b-b085-ea7b468519cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcb0cf9-1a1d-4ff1-9fa1-498debed26ac",
        "cursor": {
          "ref": "7aa1b607-79b7-4678-a698-790b7a8d8854",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "555cd4d3-6372-4c64-8f5a-f3c274b2de84"
        },
        "item": {
          "id": "bbcb0cf9-1a1d-4ff1-9fa1-498debed26ac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d578f02b-95b5-4e0f-b49e-a75a1c3f1299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca0b302-06d3-47a4-962a-6d766fc6ccdb",
        "cursor": {
          "ref": "99c9bdef-dd79-4066-93d0-b35abbb6a1da",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "264c9ba2-5df0-4204-a472-79a9badd5264"
        },
        "item": {
          "id": "3ca0b302-06d3-47a4-962a-6d766fc6ccdb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "119e1c87-eff2-42db-bcc2-df5dba0da7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd4b350-14da-44fb-9f44-e81526b98f5b",
        "cursor": {
          "ref": "fda200b2-3a86-4401-a77d-9f7314f30524",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "74dbd5f6-ab56-4256-ac32-be7a2288da23"
        },
        "item": {
          "id": "fcd4b350-14da-44fb-9f44-e81526b98f5b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "21f51055-4820-43d8-a6c4-95231db7b187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dacc420-3d3d-490e-ac4d-f528d3faca33",
        "cursor": {
          "ref": "cd52c245-662a-4cf8-ba89-c7a347015202",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f775a929-9eef-43fa-b51d-a42526fda982"
        },
        "item": {
          "id": "6dacc420-3d3d-490e-ac4d-f528d3faca33",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "849e8343-ca9f-413c-9b1d-976c2509afea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8bb662-2617-48df-8d5a-b953c9cb31cb",
        "cursor": {
          "ref": "f4fd7b51-06cb-40dd-85b4-5ee4044e1ca5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3d8c81ef-6a76-47cb-9849-77e159e208d1"
        },
        "item": {
          "id": "9d8bb662-2617-48df-8d5a-b953c9cb31cb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "77bf4cd9-2527-482c-9f7b-acf67334e3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3934e981-420e-4907-a1fc-03e4fabb5016",
        "cursor": {
          "ref": "12cc852c-0237-444c-9a30-007239351647",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6a9d762c-55b2-41e5-9e7e-2637f8ab1f82"
        },
        "item": {
          "id": "3934e981-420e-4907-a1fc-03e4fabb5016",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "600cbd80-581d-40ef-a9b5-4a2859b73cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81db701d-85c3-472a-88b5-f87c39c0909e",
        "cursor": {
          "ref": "c2243d44-1bc3-4ad0-8587-cee170262840",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "13925d55-695a-46f5-9be3-aaeb6b6f10d0"
        },
        "item": {
          "id": "81db701d-85c3-472a-88b5-f87c39c0909e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a1cb6a18-ddd4-4352-83b5-dde93ed613ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ebf33e-262d-4410-b951-0847f0fe50f0",
        "cursor": {
          "ref": "33044049-d85f-47ed-a15d-4db8f88ddd91",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1a9c76cd-ecfb-41b1-b45c-8dc81cd2a969"
        },
        "item": {
          "id": "33ebf33e-262d-4410-b951-0847f0fe50f0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "18d8fb1e-ace5-4850-98ff-f181810f256e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52e347c-8161-4cb0-81d5-1be6b421a9be",
        "cursor": {
          "ref": "87b1f1c0-4cc6-40aa-8ed7-f38ab9c2147c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "377a9279-2319-473a-a972-492ae499b337"
        },
        "item": {
          "id": "c52e347c-8161-4cb0-81d5-1be6b421a9be",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "59f479ba-9f91-44d6-8a3d-925afaf29a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d68c254-3b95-44a6-9ef0-f868a78774c0",
        "cursor": {
          "ref": "16e4aa1a-1c91-4433-88ea-b4358327de4a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "408e79af-840e-401b-8168-615219aa26b8"
        },
        "item": {
          "id": "9d68c254-3b95-44a6-9ef0-f868a78774c0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d11ae951-b3ad-44c3-8396-736215b6bd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1955d34-a60c-4c66-b61a-5dc76c5e972c",
        "cursor": {
          "ref": "eb9ad1b8-7637-4033-85d3-aba83ed38822",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2b1b91f3-b2f5-4e38-85f7-a517bf6540e8"
        },
        "item": {
          "id": "c1955d34-a60c-4c66-b61a-5dc76c5e972c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "95815307-8b16-4d68-989a-302a9f3192f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef4d073-a503-4a3b-9e37-900605957e3b",
        "cursor": {
          "ref": "ae8f2deb-d686-4750-b0a6-60439dae13b2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7bfefe61-ea5d-4570-a964-e0c90818c709"
        },
        "item": {
          "id": "cef4d073-a503-4a3b-9e37-900605957e3b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7bb7a502-488f-4252-b1ac-20fffae8e3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228bc6d1-7b6f-4b81-8a75-0a6cfcf5d57f",
        "cursor": {
          "ref": "0a4d01ff-8769-41ec-b707-5d293d11e256",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fb3dd8da-d604-43ba-a015-4f6aa862e71a"
        },
        "item": {
          "id": "228bc6d1-7b6f-4b81-8a75-0a6cfcf5d57f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e4722349-581e-4a42-8a8e-ea3c96d64463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ee7724-c9e4-40f7-b2d1-3655730e0f66",
        "cursor": {
          "ref": "ba76bec4-6f27-4f71-904b-0b47a64c53e4",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a7ca9085-851e-41f7-bc9d-0c032a7d93be"
        },
        "item": {
          "id": "54ee7724-c9e4-40f7-b2d1-3655730e0f66",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "02850df3-b95b-4311-a86a-0caee5283c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f9286b-cf4d-4b2b-84d8-e5014cce2c59",
        "cursor": {
          "ref": "76066666-c318-4e4e-a876-cc2b7f1f924c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fbe74a03-b05a-41ee-a158-19df831bfd9a"
        },
        "item": {
          "id": "b7f9286b-cf4d-4b2b-84d8-e5014cce2c59",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "83c1fdd5-d16c-40d6-a2bb-6eb84698cf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9435bd-64bb-427a-a350-57e38311499d",
        "cursor": {
          "ref": "578412f9-aaaa-463d-89dc-7884d9ccfb3c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "aaa2cdf6-9843-42d3-a167-b6a6a1fdad75"
        },
        "item": {
          "id": "fa9435bd-64bb-427a-a350-57e38311499d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "58f0b59d-af77-44b6-aaf5-6050ef76eea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1dcd8e-2851-490f-a698-91aabc4ebe81",
        "cursor": {
          "ref": "d72170e4-7571-4a68-9b88-7be33022fd19",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f74dac36-0ee4-4480-9bfe-23de638d9377"
        },
        "item": {
          "id": "1d1dcd8e-2851-490f-a698-91aabc4ebe81",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cc37bd98-283a-4a5f-bc4e-51c38c9a0490",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8190b4ef-8487-408e-a20a-16ad7392cc70",
        "cursor": {
          "ref": "244e6d48-590f-4f0d-b519-e968eb503338",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6e6bd94c-50c7-40e5-8e43-617a0e2cd394"
        },
        "item": {
          "id": "8190b4ef-8487-408e-a20a-16ad7392cc70",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7f86cb77-866f-4ab9-8157-6d387a724c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d04f3b86-c24f-4eb0-8fc7-8b4e9ec6d2b1",
        "cursor": {
          "ref": "90a20ed0-03e5-4ef6-8e27-bba312143ef6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ec7b8a14-0ecf-4804-b535-7ab3e1a785df"
        },
        "item": {
          "id": "d04f3b86-c24f-4eb0-8fc7-8b4e9ec6d2b1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bd25de94-94c1-4c8b-8a89-3219bc25eaea",
          "status": "Created",
          "code": 201,
          "responseTime": 8854,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfdff91-0ecc-4738-8933-f9ea03cfc845",
        "cursor": {
          "ref": "5be700d5-a55a-4aaf-9cdd-1a9074bfc473",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "049cc019-596d-4bd7-99f6-ee5b9ea32bcb"
        },
        "item": {
          "id": "bcfdff91-0ecc-4738-8933-f9ea03cfc845",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c8fad548-cc19-4aad-a3b3-ec6213b00d80",
          "status": "Created",
          "code": 201,
          "responseTime": 8397,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f738fd-e3a5-46d3-91ef-6f4b7cd06d8a",
        "cursor": {
          "ref": "426610d7-7540-416e-ba4c-b319c9df25ee",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cca69187-bee3-49cb-94ce-efda748dba90"
        },
        "item": {
          "id": "63f738fd-e3a5-46d3-91ef-6f4b7cd06d8a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c9a8d985-1895-40c5-b1ed-7b6240c9c674",
          "status": "Created",
          "code": 201,
          "responseTime": 8836,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a50fb8-fd05-4cbd-b43b-c8933479cd8f",
        "cursor": {
          "ref": "d657c9b2-820a-437e-af51-dcda68c30aa6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a84be9e4-24aa-485c-a49e-0e173879f6f6"
        },
        "item": {
          "id": "58a50fb8-fd05-4cbd-b43b-c8933479cd8f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "58fe62ed-2603-4e4e-9a23-57d01219aa04",
          "status": "Created",
          "code": 201,
          "responseTime": 8288,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "732338be-ea63-4e03-b2ad-371727126d6a",
        "cursor": {
          "ref": "7e2e5549-31a8-4f4e-b563-098f69f9ca27",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4b442919-d7f6-4cca-8189-0e95df1045f3"
        },
        "item": {
          "id": "732338be-ea63-4e03-b2ad-371727126d6a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c9623c42-5907-4b47-b000-1437f2d18f48",
          "status": "Created",
          "code": 201,
          "responseTime": 8519,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba7e55f-3b61-44c3-a1f3-11184f2ed6cd",
        "cursor": {
          "ref": "a66b42f1-a25d-465a-9a43-3ad139280906",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "abff5348-a5c2-410a-a10c-fa2d7bd1ebb9"
        },
        "item": {
          "id": "7ba7e55f-3b61-44c3-a1f3-11184f2ed6cd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6b70ecd3-c758-4c56-aafa-a424d9985f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a5217cc0-5395-400f-a413-eedd88b4d12c",
        "cursor": {
          "ref": "ea1bdfd4-15bb-47a2-9670-cbad33220f19",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b7cee1fa-6bc8-43cd-bb3f-43c8ada93ebc"
        },
        "item": {
          "id": "a5217cc0-5395-400f-a413-eedd88b4d12c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "408c6122-f229-4f93-a32d-6053f9fdb5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff13a02-0386-43c4-8597-878d43f8bb0f",
        "cursor": {
          "ref": "28203948-a94f-4f62-bd8e-5dc81c01a040",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5c7241c8-edf2-4692-882d-c5d819f553bc"
        },
        "item": {
          "id": "4ff13a02-0386-43c4-8597-878d43f8bb0f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3e5315b9-8ecb-4b72-8544-24a45ccab634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ef4ffa-b56f-4645-b35d-b3e8d2e570d0",
        "cursor": {
          "ref": "2123ae46-97f8-406f-ac05-812541873ddf",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "aaa4b4a1-ef0f-495b-a685-27f08c96c460"
        },
        "item": {
          "id": "81ef4ffa-b56f-4645-b35d-b3e8d2e570d0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a4e2942b-6ca6-4b4a-8422-df4f42b77792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24022524-27f5-4bcd-91ff-7cacf29078d4",
        "cursor": {
          "ref": "602a4ee6-fea7-4516-ade2-304f87f3afaa",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d9ad3f96-cd06-436a-80b0-e94e6b6a720f"
        },
        "item": {
          "id": "24022524-27f5-4bcd-91ff-7cacf29078d4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "684bf6e5-acab-418b-9904-86ce44d15df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cfe43f-80f6-4d65-9b67-b887d683f26f",
        "cursor": {
          "ref": "41d34c0d-3d80-43a8-bb13-517fa9f9a7fd",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cf3289ca-ccc9-492a-bff3-1d5d366a9b6b"
        },
        "item": {
          "id": "d4cfe43f-80f6-4d65-9b67-b887d683f26f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a86b00f5-d49a-4ff0-9786-001f70b6f8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f4b5a9-663c-4e1e-a17f-1ff43321af7d",
        "cursor": {
          "ref": "ac86a363-224a-4166-9bb8-84176462fe58",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "843abb4e-2e5c-4a0c-a00b-66b1552a5255"
        },
        "item": {
          "id": "57f4b5a9-663c-4e1e-a17f-1ff43321af7d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f1b2e6ab-00ac-4ba6-bc3f-158444f061d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbd1861-eb8d-4def-8f95-17c087f174cc",
        "cursor": {
          "ref": "9da6b38a-7a9e-43f1-99c0-b26b9752a759",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "317a9cd8-c6bc-4db5-9c83-cc1da1d5bec2"
        },
        "item": {
          "id": "5bbd1861-eb8d-4def-8f95-17c087f174cc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f2511aed-a871-4e3c-8b93-92727933a59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fed2cb3-3e4b-492a-9cdf-0cf66b2ee396",
        "cursor": {
          "ref": "a516d8a8-12a5-4864-8feb-5e14572e4ca3",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bffb8ed6-bbfd-46cb-864e-884ed42288c3"
        },
        "item": {
          "id": "0fed2cb3-3e4b-492a-9cdf-0cf66b2ee396",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "08952dac-42b0-4c81-976d-5fe8f58bb91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f0b634-20f2-487b-9d3f-9771fe0f9209",
        "cursor": {
          "ref": "caddc540-3c98-4a67-bf08-4b11a8631960",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "866a2b24-e617-4cbb-83ff-c9918fa8265a"
        },
        "item": {
          "id": "34f0b634-20f2-487b-9d3f-9771fe0f9209",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "25ae544b-88d5-45e6-90ea-07dbb1b77454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cf7c1b-1421-4620-a66f-daba295ba657",
        "cursor": {
          "ref": "3d5ec411-6c03-4183-9870-382b2014167c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a27713c7-9253-4ed5-8bbb-ca73275201ff"
        },
        "item": {
          "id": "88cf7c1b-1421-4620-a66f-daba295ba657",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9a42de54-8b4e-4a6a-9237-84b14eb37b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c021f56f-16cd-465a-8271-8fc31db3272a",
        "cursor": {
          "ref": "db40a623-fa7c-4ad0-875f-5f497bd85478",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d3c4e725-c348-44af-add7-7cf10f8dc588"
        },
        "item": {
          "id": "c021f56f-16cd-465a-8271-8fc31db3272a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "33281708-d368-49d5-9d9d-a2bb1d950c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a9938b-290a-48d9-8590-c0200ad2c067",
        "cursor": {
          "ref": "2edcffc0-7779-4b32-a295-4391faa8cba8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a8c044e1-56dc-4905-80cf-2043b979c322"
        },
        "item": {
          "id": "36a9938b-290a-48d9-8590-c0200ad2c067",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ef17ab72-bdb1-459d-a8e0-1f2470b28cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed177dcf-dfbf-4f43-9bd0-05f8dde3d3d7",
        "cursor": {
          "ref": "f992dfc5-e6f8-494d-99ee-9c6931cc295a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c409ccbb-e161-4f3d-870a-e0988b49d51d"
        },
        "item": {
          "id": "ed177dcf-dfbf-4f43-9bd0-05f8dde3d3d7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7c578ca9-aa26-461e-88dd-79f7e512e141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd78aa69-506b-4a90-b93c-3abc0ef05fc3",
        "cursor": {
          "ref": "55c2c3b7-6992-4d1a-b530-1e2cc3684fd8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bd8e8118-908a-444b-98be-e4d622473602"
        },
        "item": {
          "id": "cd78aa69-506b-4a90-b93c-3abc0ef05fc3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "80d25911-8b9c-415e-8b90-f1006a51f825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be7cd2e-b930-48af-bfb2-f3924f074c7d",
        "cursor": {
          "ref": "780e1a42-44b7-41e2-af80-90bd09319f12",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "43e85e6f-b891-4948-b12f-e4e1ba17d8a8"
        },
        "item": {
          "id": "5be7cd2e-b930-48af-bfb2-f3924f074c7d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "45fb9bce-ee9c-4600-9713-863e65246b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bb5364-fe4c-4a31-99e1-8ede1d192f3b",
        "cursor": {
          "ref": "689943ea-7060-43ba-92c1-b1350a2ca204",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6568e4a1-02ac-4775-95a5-56cb7bb4a063"
        },
        "item": {
          "id": "b2bb5364-fe4c-4a31-99e1-8ede1d192f3b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e4c431ea-96c0-46b5-9651-23a1ff037150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c6a1ea-6cf1-4c4b-825b-8a1512dd3058",
        "cursor": {
          "ref": "6461ced7-9a77-40e4-9514-fa1ade7de1a7",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "addeb836-8827-4c92-a9f6-899293be9de3"
        },
        "item": {
          "id": "56c6a1ea-6cf1-4c4b-825b-8a1512dd3058",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7155ad33-c463-41ea-9351-9af23eb33fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5876a717-384f-428c-94f9-c43ec2c7c355",
        "cursor": {
          "ref": "070006ef-fab1-49d8-bc4e-e4ff51805c41",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "18fe6398-338f-4e98-a0ad-c128edcb5a0f"
        },
        "item": {
          "id": "5876a717-384f-428c-94f9-c43ec2c7c355",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4d44d28f-be76-4ef7-bae8-26b3e5c8b48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348885c4-ddaa-4d51-9513-7832ad3207ce",
        "cursor": {
          "ref": "556b0e51-99ed-4c77-b4da-2c6228472a4f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0c3dea34-e1b0-4809-860d-0e6736e3e386"
        },
        "item": {
          "id": "348885c4-ddaa-4d51-9513-7832ad3207ce",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "91ba9413-e544-4c38-b3e2-9d3714cd0f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0cf7aa-a6d8-4b3e-b7c3-8c75e28e0b51",
        "cursor": {
          "ref": "7df3c3ac-0517-4436-9c1b-7f293c0136e3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b24d2d28-508d-4f0b-adc3-da3fa9a591d7"
        },
        "item": {
          "id": "5f0cf7aa-a6d8-4b3e-b7c3-8c75e28e0b51",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9a36a408-a307-4f9d-a3b0-163832dcfcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dced5d-dbdb-4fa2-bf0c-98a39bad36a8",
        "cursor": {
          "ref": "b5393361-3ddb-48fc-9fbd-dddb0dd5366d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "be21ba6f-b49c-46c2-8da1-e1a1fb79c0db"
        },
        "item": {
          "id": "f1dced5d-dbdb-4fa2-bf0c-98a39bad36a8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1b9a868d-b2cd-4f13-97f6-b1e054e9bea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c114f7-8aa6-4ff6-bdb1-6306963dcc32",
        "cursor": {
          "ref": "7d6ca092-d125-4002-88e2-7ad94e3539a9",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "003d5414-4a15-4f38-8342-16c2bb7319ad"
        },
        "item": {
          "id": "56c114f7-8aa6-4ff6-bdb1-6306963dcc32",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3adedf1f-d1f6-4736-a4ec-022fb8afc1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73d4e47-6167-4f37-8f34-f1e4987117a4",
        "cursor": {
          "ref": "6870785c-2432-4cb5-a63c-3f7c442557e5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "71aa2008-20ef-44bc-bc2f-b1205fcdf82a"
        },
        "item": {
          "id": "b73d4e47-6167-4f37-8f34-f1e4987117a4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d5c14ca6-b6d4-42b7-aa5b-476ed3fb13ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6698f06d-b40b-4f18-a3ce-ff6cdcca89f2",
        "cursor": {
          "ref": "56b271e9-ecfe-4e1e-89f4-4f42fe7ef4c0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5611e7e5-483f-476a-9aa8-0499f7612b25"
        },
        "item": {
          "id": "6698f06d-b40b-4f18-a3ce-ff6cdcca89f2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e4dfcc99-35b2-48ea-bacf-af4b02659885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5212f281-81e7-43e2-a274-0b79e513acd4",
        "cursor": {
          "ref": "f4d80120-e7da-4f5f-846e-5806c8e9628f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "85e21f92-997a-44b9-9d10-25a00b49fd9d"
        },
        "item": {
          "id": "5212f281-81e7-43e2-a274-0b79e513acd4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "72d75f40-62bb-499a-8565-e74c4088a35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5769a755-8a58-4f20-8e26-5dfaa3cf4641",
        "cursor": {
          "ref": "9d3c5cae-c688-452f-a2c2-397e821328be",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "35326718-5e74-4f8f-af35-346e16444543"
        },
        "item": {
          "id": "5769a755-8a58-4f20-8e26-5dfaa3cf4641",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b371e2c4-e962-47c6-b2a2-d21b1ca5c260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461a520c-5c08-4534-83fe-e9aa3654a7e2",
        "cursor": {
          "ref": "b372c666-f1b7-4b55-b24c-8c477c773f1e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fdec4e34-1769-4750-9e46-45ba6bb0ac18"
        },
        "item": {
          "id": "461a520c-5c08-4534-83fe-e9aa3654a7e2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ce5be2d6-7908-47be-b098-1668d071458f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe5d773-8ec4-46da-9559-d05f9c71ab14",
        "cursor": {
          "ref": "856819be-8ee1-407d-97e4-34e874fe27ce",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bc53e73c-0fa3-4527-b01d-f686fe0b7f18"
        },
        "item": {
          "id": "5fe5d773-8ec4-46da-9559-d05f9c71ab14",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11f45791-f832-4f17-9586-0d81818c5f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2c819d-dcd2-42e6-bd9e-f63c62b05ffc",
        "cursor": {
          "ref": "01910820-fe58-43c1-ba12-7fdb2cad91cc",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d4b21d77-58a0-49b4-908c-e2f10f18d87a"
        },
        "item": {
          "id": "ed2c819d-dcd2-42e6-bd9e-f63c62b05ffc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bbcc6e57-5b6e-4dfd-a5bf-a5794a45723d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef75b19f-627b-4e7a-8468-5ee268d9e6de",
        "cursor": {
          "ref": "961758cc-684f-4343-8a82-5e53852b839c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a12eaa4a-b102-4207-b78c-3f49404c3d0f"
        },
        "item": {
          "id": "ef75b19f-627b-4e7a-8468-5ee268d9e6de",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1639d68d-34dc-47c0-8551-6dbf6fecf9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58279f7c-6662-49c6-9f54-951bf8d07e10",
        "cursor": {
          "ref": "08a87654-9daa-4413-8e14-0fc291371967",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "10df5b64-c0e1-4b4a-98ca-b081fa1414dd"
        },
        "item": {
          "id": "58279f7c-6662-49c6-9f54-951bf8d07e10",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "91c5d378-895b-439c-b4a6-e6df8b5b784e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa19c4d7-6dd0-4460-9c16-0aaf85556462",
        "cursor": {
          "ref": "7fa71c60-aef2-489a-8081-56c75fba9388",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bc934eec-8552-4c3f-8f32-b55f43865569"
        },
        "item": {
          "id": "fa19c4d7-6dd0-4460-9c16-0aaf85556462",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6d4d6aba-c2e6-4f73-8e29-6ea74f1e3be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914419a5-9c81-4fb0-bd6a-3c36452a1fe4",
        "cursor": {
          "ref": "f2b0c963-fabc-4123-80c1-c4b021d11976",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "25c2e9db-aa1b-4132-a334-472fdbd7a74f"
        },
        "item": {
          "id": "914419a5-9c81-4fb0-bd6a-3c36452a1fe4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a5ac3f95-0a49-4493-9ed8-ace140eb4884",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b946c2-4f50-451b-99c5-c9f4f489a983",
        "cursor": {
          "ref": "bf6a6b3e-bb08-4cb3-976e-17837bd20204",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6d37f214-85d0-4706-a4a3-09c67130e493"
        },
        "item": {
          "id": "79b946c2-4f50-451b-99c5-c9f4f489a983",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d881faa7-b7a9-4b70-aba5-ad1ea2e29e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030f1bfb-cccf-402a-ac25-d50b4b0b239a",
        "cursor": {
          "ref": "407f38a6-8f22-4aa7-8268-b419ec960f2d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b4feb081-ffd6-4e55-9855-8d17aec6059d"
        },
        "item": {
          "id": "030f1bfb-cccf-402a-ac25-d50b4b0b239a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "37c24238-d537-4909-863c-352f2cc368c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ecc7f8-7525-4816-9a59-3e533abab093",
        "cursor": {
          "ref": "0bd3c42c-c1cf-4d01-8cac-9c2a3cc2fa2a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2957dc05-303d-4c46-a093-82405e6a00cd"
        },
        "item": {
          "id": "07ecc7f8-7525-4816-9a59-3e533abab093",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8b2cf193-2075-42f7-815a-82072a038eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3654d54-9dff-49c5-b791-1572695dceb4",
        "cursor": {
          "ref": "9016dcbb-a4dc-4184-952b-5d88d0caa2fb",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "77f9fbbc-bc2e-4923-9133-a2ee41b63696"
        },
        "item": {
          "id": "a3654d54-9dff-49c5-b791-1572695dceb4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6bc7ce0d-2686-42a6-b4bd-097d29e48ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f2fd3a-d11c-4e75-be38-8baea31d5999",
        "cursor": {
          "ref": "1e5998f3-6c6c-47e8-af0f-34d28b2cf2df",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4449566a-a124-41bb-88ec-8cc85f962dbd"
        },
        "item": {
          "id": "39f2fd3a-d11c-4e75-be38-8baea31d5999",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "90784a0c-5453-4e1c-81e4-640948d2acea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff97e234-d01b-43c6-a02e-4434b8250ac3",
        "cursor": {
          "ref": "4ee61333-e17e-4945-bb4f-3aa41d85207d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6b68bee2-0915-4dc2-82a8-fe79e63b7ed3"
        },
        "item": {
          "id": "ff97e234-d01b-43c6-a02e-4434b8250ac3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0e6fe17e-10b7-42b6-881e-c59f810bf6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61f4005-0468-4a30-a9cf-7e2f2cf496b7",
        "cursor": {
          "ref": "12121e52-2e49-4d57-98de-7f2460cbab17",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7afa9bf2-3f7f-4e97-ae2e-38053c09735d"
        },
        "item": {
          "id": "b61f4005-0468-4a30-a9cf-7e2f2cf496b7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2c62ef75-fd45-48ce-9913-f48509ec0711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e1e277-a1b0-4289-8294-830972830d0a",
        "cursor": {
          "ref": "e62743fa-04cb-4ae1-8ce0-6f896f11eff6",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c2f21a4d-10c9-436c-ad78-40e5d525bb62"
        },
        "item": {
          "id": "10e1e277-a1b0-4289-8294-830972830d0a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "733ec5bf-b223-4fa7-a208-a0b178cda529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b1c605-7f82-4ed3-8186-27d4fbd07d55",
        "cursor": {
          "ref": "f7988e92-bf65-4313-a05f-b94f1701ed2c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7b95a276-000c-4e38-8c82-c9ee89337cb9"
        },
        "item": {
          "id": "e7b1c605-7f82-4ed3-8186-27d4fbd07d55",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5c181a07-88df-487c-af42-327fcb8aa805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf371ed-669e-44f0-86f5-e08b9e05c462",
        "cursor": {
          "ref": "2b28e2c9-ff45-4ce4-8d3d-16d5c85dad29",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cd7a85f1-64d7-4a51-b4fe-e3006ffbbbd3"
        },
        "item": {
          "id": "eaf371ed-669e-44f0-86f5-e08b9e05c462",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f29e9f68-d9ef-431d-8ae4-27e4b99cf3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80897a7-ed0d-45bd-9882-106a17c5fb98",
        "cursor": {
          "ref": "4df9681d-19c4-4eaf-910a-6b3f445e65a9",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "14f68f10-f188-40e4-89d6-14efbfe16bbd"
        },
        "item": {
          "id": "b80897a7-ed0d-45bd-9882-106a17c5fb98",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6a402a1c-ae12-4975-9dca-e05f5c2ae683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183a4172-dd66-40ca-bee3-087aa8b98618",
        "cursor": {
          "ref": "e17964c4-7044-491a-a4e0-1516c51df5e5",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "51645adf-d4c5-4c27-9ccf-98fd81fcf4e7"
        },
        "item": {
          "id": "183a4172-dd66-40ca-bee3-087aa8b98618",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f9a959fe-4a82-4c7e-939a-80374bf8041c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1171cd-f901-4766-a5e9-5063bd5739e9",
        "cursor": {
          "ref": "c67f0885-2f79-4695-a1c6-f4a910db4409",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e46d8396-3202-406d-b433-ca47a716242c"
        },
        "item": {
          "id": "7e1171cd-f901-4766-a5e9-5063bd5739e9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "62b5d0da-d388-46c6-85c3-365973c9328f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ea3024-c58a-493c-8d1d-864e938f84b7",
        "cursor": {
          "ref": "84ea4e4f-3e22-4e3a-818a-13d8f0130379",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6bc804e5-0261-4c6c-bcfd-88e3669fa276"
        },
        "item": {
          "id": "40ea3024-c58a-493c-8d1d-864e938f84b7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "19c679ef-d08e-465e-913c-c1d87a9799e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685ddec7-5f35-4293-b75d-8cebb265395a",
        "cursor": {
          "ref": "b98e320c-6fc8-46e7-b850-64444e51f907",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f2e5a0b4-802f-44e5-80e6-f774891540a4"
        },
        "item": {
          "id": "685ddec7-5f35-4293-b75d-8cebb265395a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c9126b89-eaa9-4588-8aa3-df98d63cca1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b37f958-a3c7-4f22-9773-2532d55e808f",
        "cursor": {
          "ref": "c21754cf-e401-404b-b711-92161c21e59a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7ee46dfc-5f1c-47d9-a395-949c08cb8707"
        },
        "item": {
          "id": "7b37f958-a3c7-4f22-9773-2532d55e808f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a7759954-da81-43d1-8345-ac4fa54d5530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73724cf6-149e-410f-8bfc-57f9a3ec51a3",
        "cursor": {
          "ref": "cdcb1dff-4c5c-4bc4-adb8-d47f40c660fd",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "773898d2-92ec-4933-bb09-e91c000895c2"
        },
        "item": {
          "id": "73724cf6-149e-410f-8bfc-57f9a3ec51a3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bb16207a-b723-4c40-ac51-6cb5b1e22398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b07c6d2-659b-4c4c-8cce-6c1d0d0a67f3",
        "cursor": {
          "ref": "63da55bb-a761-41a0-861c-a310483db2ad",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ca8affeb-2269-417b-8994-46aee371a7c2"
        },
        "item": {
          "id": "2b07c6d2-659b-4c4c-8cce-6c1d0d0a67f3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a4600127-a402-49f3-bf7e-86c9cd502878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ccad59-1205-43b6-bd5d-715b84b3aa7e",
        "cursor": {
          "ref": "6f5c2980-4556-4323-b636-05965eed2157",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9799ff0b-5f9f-4941-a608-e0af55e65b67"
        },
        "item": {
          "id": "74ccad59-1205-43b6-bd5d-715b84b3aa7e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "560402c5-fff2-4aa3-aba5-70ea49b2b93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b38f7b-3847-4c05-a0db-21a7d6feddf1",
        "cursor": {
          "ref": "119c4945-fb57-486b-a169-0e1da7b316fb",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "adfc9c43-090c-4f2b-b3bd-3278474f745c"
        },
        "item": {
          "id": "88b38f7b-3847-4c05-a0db-21a7d6feddf1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "63f70b42-4c1a-40ef-b85c-84bad0e7bcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117d3dbc-054e-46b1-bd2d-510031dfbde3",
        "cursor": {
          "ref": "90909231-d272-4482-b0b9-2dbc967fe084",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "713f3099-713c-4887-9857-383259d32325"
        },
        "item": {
          "id": "117d3dbc-054e-46b1-bd2d-510031dfbde3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "98f2aad1-e5e7-4d10-b471-98892e39086d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef982ec-ebb6-4990-a3e9-eea9b16c5928",
        "cursor": {
          "ref": "e646aa6c-66fc-4958-855a-ec282f2aef33",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "67ed0d47-c84b-40e6-867a-1477c0099564"
        },
        "item": {
          "id": "6ef982ec-ebb6-4990-a3e9-eea9b16c5928",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "48296385-41c6-4df4-8b41-eaa434b38e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f113d9-8a9e-440b-830f-948254ed55ad",
        "cursor": {
          "ref": "4b0da0eb-41c2-4f24-9e3d-454f4c2e8852",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "302ba464-fb6b-433c-8a45-6b2d4ff611bf"
        },
        "item": {
          "id": "32f113d9-8a9e-440b-830f-948254ed55ad",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4ffb28fa-cea4-4a39-b652-137a24ae3d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c34a731-9dbc-4e8a-bde6-22f9942eaf57",
        "cursor": {
          "ref": "17466db5-5f12-4da7-9581-c201e7f2c90c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cc3e17de-7188-463d-8309-fba98db2784b"
        },
        "item": {
          "id": "5c34a731-9dbc-4e8a-bde6-22f9942eaf57",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "20d72d2e-f0d4-467a-97c7-c6e07342a23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee23b3c2-d64f-4894-b4b8-95c2d5c26177",
        "cursor": {
          "ref": "db4093c7-bc50-42f8-a779-32731da2de9f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f9d7b455-08a3-4eba-8641-e98bb9a57947"
        },
        "item": {
          "id": "ee23b3c2-d64f-4894-b4b8-95c2d5c26177",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1217e717-b35d-46ac-881d-6630a7f93de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4705b627-b423-4f27-8ca6-5958de6260b5",
        "cursor": {
          "ref": "57356400-696f-4892-96b4-ca5ff427dadf",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2cc3f30d-a4c0-407c-84eb-d4cbb2fa8bdb"
        },
        "item": {
          "id": "4705b627-b423-4f27-8ca6-5958de6260b5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b4763743-7903-48b9-b0d2-ba1e066409a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29da984-4c48-4780-8fc8-565e26c0e2fc",
        "cursor": {
          "ref": "a8309b99-cd6d-4573-8954-4227729d58f3",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8618b634-96c1-4a08-ab41-21909aec2f34"
        },
        "item": {
          "id": "d29da984-4c48-4780-8fc8-565e26c0e2fc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "03f1ecaf-09d9-48be-b282-411906614267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807dc590-623e-4fbb-809d-6aa891c28e37",
        "cursor": {
          "ref": "5e377d75-26b6-41f4-a1ca-526357fc5db1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a6790df1-f8e9-492a-9de4-90c0e0518f27"
        },
        "item": {
          "id": "807dc590-623e-4fbb-809d-6aa891c28e37",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a8fede03-edca-47c7-8b1c-a98969ed3c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcf827a-cc80-4b5c-9d5c-88bf1e5ff0e8",
        "cursor": {
          "ref": "02d33089-4ac7-46a5-8ba3-574c6f1ccaeb",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5439ca71-d74d-4f6e-bb78-3d3a2720e715"
        },
        "item": {
          "id": "2bcf827a-cc80-4b5c-9d5c-88bf1e5ff0e8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3310760b-bcad-483b-9a5c-513f511e26c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c002fcfd-4f93-42af-9232-cae1faeb89dd",
        "cursor": {
          "ref": "26c11925-5754-46cc-9097-61660a3ed2b1",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8f1d976d-4418-4ada-a2c8-58304b6bc806"
        },
        "item": {
          "id": "c002fcfd-4f93-42af-9232-cae1faeb89dd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "677bcab8-5ec3-47e4-b758-dd12ecf03dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfadab3b-4701-4adf-b2ee-1f44c9589e18",
        "cursor": {
          "ref": "d4ca0727-8c81-4625-8f0f-e92570aa8cab",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6c3be148-c6a4-45dd-8116-1fb706920655"
        },
        "item": {
          "id": "bfadab3b-4701-4adf-b2ee-1f44c9589e18",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fb6686b5-64cf-4aff-ab70-36ea3095fafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e9b070-15e3-4790-8c1e-7d0d76738c98",
        "cursor": {
          "ref": "8f820a14-8d33-4e6a-9e72-7e0b5a516842",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "96f0f5bb-6edf-487d-a03c-3c9010aceee5"
        },
        "item": {
          "id": "80e9b070-15e3-4790-8c1e-7d0d76738c98",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d4759ed4-aa78-4a95-bb56-335db46ceee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8589b93-ec45-42dd-a0f1-c4eab06739e5",
        "cursor": {
          "ref": "b1ec74de-255e-42f3-b0b6-6462f0ae9919",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5d903ab6-afc3-4e3c-9d4a-bae88d2e0654"
        },
        "item": {
          "id": "d8589b93-ec45-42dd-a0f1-c4eab06739e5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dc5fabd9-4c3f-4690-bbc0-5f2bf72f44a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d714cbd1-0baf-4734-ad7f-6042415cb02d",
        "cursor": {
          "ref": "e96a067e-472a-4711-8a3c-6635af0510bb",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "34d13737-b05b-4be2-9074-ad6470e687e1"
        },
        "item": {
          "id": "d714cbd1-0baf-4734-ad7f-6042415cb02d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "46a5867c-6855-45d4-b7f5-78a7080e6ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba68610e-047b-45ec-994b-4b1be7a2aa92",
        "cursor": {
          "ref": "97e97d20-768e-43ef-af49-7816f50cdce1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "675d0ac6-f969-49a9-b9bd-6d43181099fe"
        },
        "item": {
          "id": "ba68610e-047b-45ec-994b-4b1be7a2aa92",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "264ec1a5-6ad3-4c92-a85b-05a6bea7a953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b0fd59-df28-4184-9440-02e8ff49d2fb",
        "cursor": {
          "ref": "c1777550-60c9-4abc-9910-84012d14d632",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d7528ccb-0730-4631-92d2-6b9f2aec3f19"
        },
        "item": {
          "id": "21b0fd59-df28-4184-9440-02e8ff49d2fb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ad0d869a-b976-42f1-8e8c-8d12058f746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbca4a4-6f75-4b21-994a-90000160f665",
        "cursor": {
          "ref": "ee9a49ad-2475-482c-8183-d1b4d8a31531",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7c3e85c1-4634-42ab-a5c7-ed189f5693f3"
        },
        "item": {
          "id": "7cbca4a4-6f75-4b21-994a-90000160f665",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d73bb72d-6ce8-4227-9d47-39d18f930ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324a7823-3ba9-4da1-b887-3f8dc4bbd9a1",
        "cursor": {
          "ref": "fa9c8d12-7b5e-4519-9192-5c8e5a32b804",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ffe1a87b-8dcf-4fd5-8b70-11efeade8f25"
        },
        "item": {
          "id": "324a7823-3ba9-4da1-b887-3f8dc4bbd9a1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f962ef59-73b5-4825-9043-58d137c35b5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72e9a11-0855-43e8-af1b-40bc3f5bc90d",
        "cursor": {
          "ref": "9353bdeb-ba95-4235-91c4-0efa5f7cdba3",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "92f31b61-dfd6-452b-b400-b9de7cb00280"
        },
        "item": {
          "id": "e72e9a11-0855-43e8-af1b-40bc3f5bc90d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1acd1e54-7988-4f66-a6d9-1f3c9079b33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff5b5a1-6ce1-4a7a-9e9d-a4514fdf7a69",
        "cursor": {
          "ref": "15139423-1a29-4b5c-bb06-23d918e4ae32",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8a1c8582-f60b-4e8e-8d31-849040443b3c"
        },
        "item": {
          "id": "bff5b5a1-6ce1-4a7a-9e9d-a4514fdf7a69",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "25385842-5679-4b34-8e1e-67a2dbbd31c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dd6f0a-d3c7-47cd-a9ca-dd9a22f8a3f7",
        "cursor": {
          "ref": "29809795-e4a9-4465-88d1-fa67c05f537a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "52b3013a-10ba-4a23-b690-0bb0124b31b3"
        },
        "item": {
          "id": "c4dd6f0a-d3c7-47cd-a9ca-dd9a22f8a3f7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ed2c288c-c5ca-4805-843f-32ccbde01d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca515595-3a3e-47b4-8a68-1404a71d5932",
        "cursor": {
          "ref": "f4f613b1-b733-4f89-ab4d-eae3253c0fb3",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ad7bf1db-5d8e-4c5d-9654-f5532b3996da"
        },
        "item": {
          "id": "ca515595-3a3e-47b4-8a68-1404a71d5932",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e0951229-a0f0-4840-a527-3deed61af9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d42b7e-3a8a-47f2-8ffd-f855958d85a4",
        "cursor": {
          "ref": "4008e317-221b-44e7-9e8c-741ef4c8a24e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bc703181-51a3-4a36-91f5-cc7965d77911"
        },
        "item": {
          "id": "50d42b7e-3a8a-47f2-8ffd-f855958d85a4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "55f4e749-d99b-4e4a-89e7-a5fb6c86e4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418251da-49d5-4f3a-b201-8fff292f5474",
        "cursor": {
          "ref": "8a916203-1fb1-472a-8e5e-87aa381001b9",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c89ee4e6-23db-4756-96b6-f5754b7cba56"
        },
        "item": {
          "id": "418251da-49d5-4f3a-b201-8fff292f5474",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d47087c4-0aa8-4726-be92-5cc0af87b307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598e2f9c-499d-484f-806e-3a141e7f9b54",
        "cursor": {
          "ref": "8c0e9327-0e72-4a5f-b862-8a78dda0031d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a99b07ba-90ac-473d-bd3d-abc6a6fd35b3"
        },
        "item": {
          "id": "598e2f9c-499d-484f-806e-3a141e7f9b54",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d39817ef-1ba0-43a3-a436-cc6c1aadad3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c006197-d590-4a04-b859-2582d402b957",
        "cursor": {
          "ref": "bdfa772a-205f-435e-b455-be8c072f8f3f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8084d714-6e22-4d2a-9fac-6c8d9e7ee223"
        },
        "item": {
          "id": "7c006197-d590-4a04-b859-2582d402b957",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8e079cb0-0734-4c05-85be-c31611e7f150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131b411f-c1b4-44f7-8749-b4b73f8153ea",
        "cursor": {
          "ref": "ecfd3e90-237c-431f-bd22-5d65c1c06829",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1220c6e2-efe6-4c97-ad96-f0ce8aa25f9d"
        },
        "item": {
          "id": "131b411f-c1b4-44f7-8749-b4b73f8153ea",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "14bfde40-294e-4ef6-abba-fc2664b15dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf07511-17a0-4204-97d8-008a8298456d",
        "cursor": {
          "ref": "ca6ccbd8-7016-4b80-bf9d-09488fb18c7d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7ec37dda-5d15-4dc8-abc5-70fc3d0181f0"
        },
        "item": {
          "id": "ecf07511-17a0-4204-97d8-008a8298456d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1ae19870-8acd-43fd-9078-a33afc507d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d322a2b-f4cd-4522-8cc7-71288b13831c",
        "cursor": {
          "ref": "be596e52-b322-4e99-ac19-ca914a49a668",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a943b7eb-548b-49d5-9456-5f3060b0e443"
        },
        "item": {
          "id": "3d322a2b-f4cd-4522-8cc7-71288b13831c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "12600724-501c-4458-a2b7-75441f6263bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3c27ed-5869-41b2-ad8f-0521f2c44959",
        "cursor": {
          "ref": "7b56c4ca-1a44-4035-a951-4f2b196f1026",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cddb8145-e18e-4358-b0bf-4d32c9601846"
        },
        "item": {
          "id": "db3c27ed-5869-41b2-ad8f-0521f2c44959",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ba3f0335-d4c0-4503-bac6-9e4e89f311b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026cdde9-c3b7-4981-91a2-82e3ad15dc6b",
        "cursor": {
          "ref": "bf51972c-9d0a-4283-8d84-a1d5573300eb",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "35a34eeb-fc5a-41ce-bf3c-74da5a1046c8"
        },
        "item": {
          "id": "026cdde9-c3b7-4981-91a2-82e3ad15dc6b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dace71e3-45c3-45f0-aa33-658ad2e4e19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21dfbca-8717-4f38-82ea-e8df0edfa450",
        "cursor": {
          "ref": "2c2e1481-a76e-48d3-94a3-85e0faa4590a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ecc15f75-3606-4e85-b561-a7b0c85e840f"
        },
        "item": {
          "id": "d21dfbca-8717-4f38-82ea-e8df0edfa450",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f016e39e-9e8b-4440-828e-10567f24a605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f1908f-e2ba-4d4c-9f42-91ca0994d03e",
        "cursor": {
          "ref": "544236bc-aff8-4257-92f8-06fb7d8a1314",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9c3f54f0-4d86-4dde-b133-1c354c658b85"
        },
        "item": {
          "id": "90f1908f-e2ba-4d4c-9f42-91ca0994d03e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "57333602-0a53-43ac-8c38-a7dc8a9b66bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a536511e-aead-4a5e-bef7-31ee34ff147a",
        "cursor": {
          "ref": "f3fe9a8e-ae53-48bb-b16a-7fca500031e9",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "de3213b4-9d9b-4457-8a94-5911e9bd0ae3"
        },
        "item": {
          "id": "a536511e-aead-4a5e-bef7-31ee34ff147a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d2029f46-305b-4fdf-bf2c-4c5eb3ea8f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693daa36-84f3-4b65-b84a-3e388e6b3da1",
        "cursor": {
          "ref": "c00f661c-4560-4288-bb63-3e89c803af93",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ec485407-9d4e-4578-8656-660c030ebb10"
        },
        "item": {
          "id": "693daa36-84f3-4b65-b84a-3e388e6b3da1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "21a1a171-ca32-48d7-b63b-774961333dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58693724-3397-41ba-ac75-6dbf62e00f44",
        "cursor": {
          "ref": "8c71173e-8821-412c-bec1-5249dac56a42",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f8df9e64-96c2-4119-91b5-155c045a49cb"
        },
        "item": {
          "id": "58693724-3397-41ba-ac75-6dbf62e00f44",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a5ed4043-ba0f-42bb-868c-d5ac110cd2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a3aa4b-8811-475f-a905-28dc054fa036",
        "cursor": {
          "ref": "83dfc33c-5d82-4546-8257-4cf417ac216a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2dd64474-a530-40cc-91cc-1fea0ba51098"
        },
        "item": {
          "id": "73a3aa4b-8811-475f-a905-28dc054fa036",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ef10cc4f-0a21-4a00-bf88-b3f126b36c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46e8bc1-a274-4134-8904-1992859d016e",
        "cursor": {
          "ref": "1960ff65-f3d0-4976-acee-c1b3d18d8218",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "91ed77ad-7926-45a2-bf15-172beaa80fcf"
        },
        "item": {
          "id": "e46e8bc1-a274-4134-8904-1992859d016e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b86bb69a-a449-45fa-abf7-cdc3b9b9fe1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d3c1fe-8b5c-42b8-8d8f-2e04cd7c6f0f",
        "cursor": {
          "ref": "b72cba0e-baca-4af4-97b0-ea8b3214013b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e1c30d98-f529-46c2-9fc2-566fba605d80"
        },
        "item": {
          "id": "b3d3c1fe-8b5c-42b8-8d8f-2e04cd7c6f0f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1c937f11-c2a1-4cdd-95dc-e466b61574b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3cc622-b1df-47cf-b8ee-316b4ff92170",
        "cursor": {
          "ref": "755dcd1b-358e-4cb5-b22b-fc005266779e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9dc4744b-0907-4528-85ce-ec1359ddcd9d"
        },
        "item": {
          "id": "5a3cc622-b1df-47cf-b8ee-316b4ff92170",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "febde9b8-2a34-4ab1-8746-1adf3b05a696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fdfbe4-5e72-49bf-b0b1-1e06f54fe150",
        "cursor": {
          "ref": "eb4aaf85-4090-41c3-bab6-2252bbb21372",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "523a5521-4351-4fe3-849c-acb3691217fd"
        },
        "item": {
          "id": "94fdfbe4-5e72-49bf-b0b1-1e06f54fe150",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cd9f3f92-7945-4f3c-a137-22ed6f8ea42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b57050-8414-4f6f-a143-b757ddff7c15",
        "cursor": {
          "ref": "ad96cbfd-e218-4fdd-9723-8d813feb253a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ba1799c8-1b26-4ed3-9249-27ce567ea010"
        },
        "item": {
          "id": "99b57050-8414-4f6f-a143-b757ddff7c15",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c4f32710-66f0-43a5-8502-435fbf204d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d067587-9fff-46ae-89ea-e98213ae77e0",
        "cursor": {
          "ref": "1d59e1ac-1865-4742-8523-8217f63ccdce",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2a270f40-599b-4395-a75a-bd6515fc8141"
        },
        "item": {
          "id": "8d067587-9fff-46ae-89ea-e98213ae77e0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "41376019-8555-4932-a255-10d79bae12af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4cabc6-dc5c-4acb-b8aa-4c9515101df1",
        "cursor": {
          "ref": "86bf9715-c3cb-4128-9ff0-6cf0e5099b76",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "613450e9-9bde-44d9-b46c-78eb5f0b4acb"
        },
        "item": {
          "id": "6a4cabc6-dc5c-4acb-b8aa-4c9515101df1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b3ffde77-603e-49a2-af1a-2bcb73f965dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b84f9d-754c-4328-bc6e-76ca1417532d",
        "cursor": {
          "ref": "0cdaee5c-e065-4650-aa4d-798683f330f0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2f229d0a-01f2-4a4b-a626-917b59f34bc9"
        },
        "item": {
          "id": "64b84f9d-754c-4328-bc6e-76ca1417532d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "69650aa3-d2d0-4aac-8212-4b4b3b31ade6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b6baa4-a7da-441b-a178-87e55aca9be6",
        "cursor": {
          "ref": "77cbae85-49ac-4fe5-b7d9-153cea863b69",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "362af690-47d3-4a49-b307-7bac60d0a08b"
        },
        "item": {
          "id": "87b6baa4-a7da-441b-a178-87e55aca9be6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d1711d49-38b8-407f-99bd-7e86aa80d83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775d7940-db0b-431c-b6fd-b853cd2468b1",
        "cursor": {
          "ref": "1c2acc04-6ef4-4dc7-984b-cbc0f502ac1c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "14fa1e60-0d05-4cbc-ab38-0a36604de124"
        },
        "item": {
          "id": "775d7940-db0b-431c-b6fd-b853cd2468b1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ab1e17b1-827e-47ca-9593-6611ea5801ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf17c2db-35ff-4327-a988-40001613aa22",
        "cursor": {
          "ref": "3ebc3971-903a-4b89-acfe-4ec096d61350",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d029cdc2-14aa-41ec-b26d-786047d879a2"
        },
        "item": {
          "id": "cf17c2db-35ff-4327-a988-40001613aa22",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "86f00f11-d644-42ed-94b3-f6d005596d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f540c4d-f474-4d95-ac0e-c5e7ec77dc27",
        "cursor": {
          "ref": "f6c0266d-3ca6-47b4-ae28-2fad4ad60998",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "383bf321-68e7-4d42-a639-819247080ef0"
        },
        "item": {
          "id": "7f540c4d-f474-4d95-ac0e-c5e7ec77dc27",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b82bd0ef-49db-421f-94a2-93354cf8840e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1490c650-b308-407e-92cc-4ab4628af2b2",
        "cursor": {
          "ref": "fba50d26-807f-49dd-a73d-90328afecbdd",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c7a1423f-c07f-4d32-bc03-0952189b9437"
        },
        "item": {
          "id": "1490c650-b308-407e-92cc-4ab4628af2b2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "764fed84-6a55-4388-a9a5-a528c3ab69df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b977ad90-90b3-48bf-9456-7747999758c9",
        "cursor": {
          "ref": "1277e136-7f75-4480-b656-f76db1c8243e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e4b26723-f352-4136-ae12-a3ea76271a6c"
        },
        "item": {
          "id": "b977ad90-90b3-48bf-9456-7747999758c9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "653d113c-ba8a-47ca-b2d5-248f412d3dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652df926-5492-4696-a5a5-c589ad990f06",
        "cursor": {
          "ref": "2a7367a8-2ace-4836-b443-d398551c5f26",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6cef1013-e23b-4193-ad2c-c96a4aead1bb"
        },
        "item": {
          "id": "652df926-5492-4696-a5a5-c589ad990f06",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fba27b67-06af-44f8-b27a-a26b63eac13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03697f49-06ef-41e2-a995-5d9d6f84b5a6",
        "cursor": {
          "ref": "89c924a6-2ef2-4bf0-89ff-8e78050c4646",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9b52e2f6-dede-4270-ab9c-62eb7c8b71a0"
        },
        "item": {
          "id": "03697f49-06ef-41e2-a995-5d9d6f84b5a6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dd5d3f2a-dad6-4ee3-95a1-982617f48ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1946d34e-0049-4867-9647-fb8759a202b8",
        "cursor": {
          "ref": "e1f181f7-8aac-46b6-91e2-7d959532183f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0dea1775-7b0b-484a-95ad-13fea917027e"
        },
        "item": {
          "id": "1946d34e-0049-4867-9647-fb8759a202b8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "696d3810-d067-4c4c-a2fd-15d0486b305e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ed7a5e-9f87-4540-81f7-7fb0c75e2cdb",
        "cursor": {
          "ref": "1cf3d32e-19af-4c22-8dac-87a1ce50b198",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d5c9defe-beea-45f6-b43c-d4b42d3335ef"
        },
        "item": {
          "id": "d7ed7a5e-9f87-4540-81f7-7fb0c75e2cdb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "647f6658-1e3e-4a64-b309-5cd52fabfcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dc8f87-9bc9-4202-b9ef-91e563daa9ed",
        "cursor": {
          "ref": "efc7037d-c759-4199-8b87-cda0fd763270",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6799d419-4142-4ecd-ad4e-9faf5d2ac81a"
        },
        "item": {
          "id": "53dc8f87-9bc9-4202-b9ef-91e563daa9ed",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e0322531-f91b-4a76-bf47-1cc6a6b20327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92277944-0302-42c2-8848-ec279d9c76f8",
        "cursor": {
          "ref": "5c3a2de8-15c8-4b5f-9b56-7be734f8864a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "28948b2b-6501-49c4-8f6b-46d591aeaa40"
        },
        "item": {
          "id": "92277944-0302-42c2-8848-ec279d9c76f8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2cf3e45e-394b-4cf4-81e4-2186a9e60dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559d800d-cd0d-4554-9ba6-8608ccf1683e",
        "cursor": {
          "ref": "b5b0a71e-db18-467c-8a80-2061358a14f6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "eb4a51ca-65d5-484d-9d78-813604c12023"
        },
        "item": {
          "id": "559d800d-cd0d-4554-9ba6-8608ccf1683e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "eeb8c631-25b9-47f3-a1a9-190c462e7918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04fcc57-ea01-4687-a32a-576ed04f805e",
        "cursor": {
          "ref": "9bab70dc-8502-4f62-9796-3a60cd82ae2b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b1db076d-add0-4975-918c-51366aead8d6"
        },
        "item": {
          "id": "b04fcc57-ea01-4687-a32a-576ed04f805e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a06862e6-6a5e-430e-86d5-a3d778f57fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1025cf-570a-4dec-9589-8f241f4bc9fc",
        "cursor": {
          "ref": "1e2a181d-9353-44be-a685-ea06824f70ed",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3c8e7259-b868-4cef-bf67-f2002cca1926"
        },
        "item": {
          "id": "dd1025cf-570a-4dec-9589-8f241f4bc9fc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ab2178b7-64a5-4a50-b771-48a22ab90b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf486fa-fcd9-4a1e-98e3-ddb99b3e3d59",
        "cursor": {
          "ref": "9a54747c-8294-445c-943a-52b47267d2f3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a7bfdc94-ab95-44a4-ba2b-1cd47b44e95c"
        },
        "item": {
          "id": "abf486fa-fcd9-4a1e-98e3-ddb99b3e3d59",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "63c6a30b-bf56-4363-93cb-fa0ef0d3decf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbb6661-98eb-4072-884a-88288ab38fd6",
        "cursor": {
          "ref": "8bf789e1-c340-4b77-9007-ce7c04bde94d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "64ef274d-92ab-497a-93a0-95db7e74c02a"
        },
        "item": {
          "id": "0dbb6661-98eb-4072-884a-88288ab38fd6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dce1b908-49c9-45c8-9ad1-8da58b7040e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5bb4cc-f798-4c0a-a4d2-0182d438bb90",
        "cursor": {
          "ref": "7eb5de87-182e-4f1e-8b49-b8e4cad28d93",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b0f45f8c-e8a6-4e3c-9ec9-7dd01cd9e268"
        },
        "item": {
          "id": "bd5bb4cc-f798-4c0a-a4d2-0182d438bb90",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6615cbfb-4548-4ec7-a627-8632ca86e908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cebf66-6ad7-4758-9b40-7099b5ef2437",
        "cursor": {
          "ref": "1251d60f-a20a-4a8f-8a43-3265fe6dfcfe",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d0ad1bdf-18e6-47f4-96c0-8215a4184248"
        },
        "item": {
          "id": "07cebf66-6ad7-4758-9b40-7099b5ef2437",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aec57b37-a711-405f-a5fe-51f154e27cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fb0e32-ec79-4e8f-8907-094444ee8377",
        "cursor": {
          "ref": "4c40df6e-31ad-455d-936c-54d6448dc977",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "aaa3da5e-c23f-433d-ad59-3dc33f32cc58"
        },
        "item": {
          "id": "70fb0e32-ec79-4e8f-8907-094444ee8377",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "aef7cd77-bf01-4336-a676-6b9a86a3e655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c60bfa8-15a0-4bc1-ac96-f4c854aaded1",
        "cursor": {
          "ref": "8ef86d3a-0364-404e-90a1-c4f46296f94a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1e53130f-2fb1-42b4-b15e-cf120a212807"
        },
        "item": {
          "id": "7c60bfa8-15a0-4bc1-ac96-f4c854aaded1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7122886c-440a-4209-9efd-ee0279ace763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50654173-a12a-45f7-a9d6-13cd2639fe60",
        "cursor": {
          "ref": "7229aa6b-d6e2-4b4c-9f6d-ff44b169950d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e06a0423-fedb-4f6e-9f29-b294cc66eae4"
        },
        "item": {
          "id": "50654173-a12a-45f7-a9d6-13cd2639fe60",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4e8bd920-06e8-4e5d-8ed4-5bbad5d1dcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72b2e53-32e5-4f96-a7eb-fb995cdf1f8f",
        "cursor": {
          "ref": "877f453c-ca9d-47b9-b876-c85ca4bf436d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c4616549-57a2-4668-8281-b6fc5ddddfb1"
        },
        "item": {
          "id": "a72b2e53-32e5-4f96-a7eb-fb995cdf1f8f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "051d30a6-6c1d-4b2e-9585-434c3c92c4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3966a268-c450-4a06-807b-9cbae53e2c88",
        "cursor": {
          "ref": "8e0a56b2-7e60-4d7e-a888-5816d66e7a6a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "331c440e-7228-4b51-8419-a5ef0ea2e814"
        },
        "item": {
          "id": "3966a268-c450-4a06-807b-9cbae53e2c88",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a63df226-a401-4329-8031-fc241a88ebee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3de982f-06b3-4781-81a1-5085680cb178",
        "cursor": {
          "ref": "fd9f97e5-9e71-4e91-b848-42dd0e5aa2a6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b2d454f8-e421-4336-a8ab-5d04c1db6829"
        },
        "item": {
          "id": "c3de982f-06b3-4781-81a1-5085680cb178",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "57ff390c-d722-44e5-be8d-06268280919f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05e8454-f108-4353-a9b3-461c9d921423",
        "cursor": {
          "ref": "da6c3c97-afd8-4ff5-a504-2f026a322be8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b839972a-5881-40e7-847e-894b06860749"
        },
        "item": {
          "id": "a05e8454-f108-4353-a9b3-461c9d921423",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "68b57e7b-ed30-4307-8782-30174bb80826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4fb287-c2a2-4b75-bee5-a97484447d2b",
        "cursor": {
          "ref": "e5427513-cbbf-404a-b744-79ce0583eba2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7dc12520-b041-4712-ba19-05b646a6042c"
        },
        "item": {
          "id": "2a4fb287-c2a2-4b75-bee5-a97484447d2b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a55dbb61-3b24-4c00-911c-c0c0724326c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cb12f0-ae36-4a53-b177-cda99a1483c0",
        "cursor": {
          "ref": "9f9332b7-51f7-4fa9-8e2d-a0dcd4c38a56",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f19a4627-25b8-4428-800f-20e354c21816"
        },
        "item": {
          "id": "06cb12f0-ae36-4a53-b177-cda99a1483c0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bb381d58-30a1-4237-a77a-e3a615e024fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6cde02-acd6-4dfb-816f-bac03e550845",
        "cursor": {
          "ref": "9f0f554d-d8d9-43af-a4e9-5e446c180754",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c2f9c4bc-915f-420c-b6c3-5ad1c1420863"
        },
        "item": {
          "id": "7e6cde02-acd6-4dfb-816f-bac03e550845",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3d60ba24-3a9b-4192-8be5-c986b56bccdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85908621-aedb-4025-98f9-8649bc0f294b",
        "cursor": {
          "ref": "64bceafb-b2f0-4bad-b237-c8270f4d4819",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d9e87d29-e8c3-4206-8fbb-be2c2f38f02f"
        },
        "item": {
          "id": "85908621-aedb-4025-98f9-8649bc0f294b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bcc316a7-7c68-4868-89fe-837199c46f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8af0a5c-36a8-4862-88bc-9f4b4e3fbfb4",
        "cursor": {
          "ref": "399fa5a7-fee3-412e-b9cc-4370c6a7c6da",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a2b66ae8-b382-413c-aa1f-1096c17b6fea"
        },
        "item": {
          "id": "f8af0a5c-36a8-4862-88bc-9f4b4e3fbfb4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c8f5b700-13f9-4302-a74e-abb047ba2e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c039de30-b661-4b26-926d-22b57d665015",
        "cursor": {
          "ref": "2c9ffd27-4bad-4cbf-bb2a-4dbe7ecf516c",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d66fb989-4d52-4819-a150-c8bd42f661ca"
        },
        "item": {
          "id": "c039de30-b661-4b26-926d-22b57d665015",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "85bfcbc1-a023-4991-b13d-afa4170c869e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12345d42-d1e4-4252-a64d-05cff37abdbe",
        "cursor": {
          "ref": "093b8540-94db-499d-b7b0-838dd059be58",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8712e129-27c4-46a4-bcc0-4b39dc835785"
        },
        "item": {
          "id": "12345d42-d1e4-4252-a64d-05cff37abdbe",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c234423e-bb68-4b18-866e-067842384d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f40322-ea64-4ff8-a5b6-291d3f06f2d3",
        "cursor": {
          "ref": "866f557c-15ee-425a-ad18-ab52ef734c13",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8f6a5196-2757-46df-bf99-ff2833951841"
        },
        "item": {
          "id": "86f40322-ea64-4ff8-a5b6-291d3f06f2d3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "152c8642-1ebf-40b5-b598-87a350bed34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e4693e-79d3-4193-80a7-2496c502583d",
        "cursor": {
          "ref": "af537e69-3737-4878-99a0-eadda3b77d6a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9725a864-7eb3-4ee0-be57-3b53c6e98305"
        },
        "item": {
          "id": "53e4693e-79d3-4193-80a7-2496c502583d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "55a66606-821d-48b4-959c-0f8af7f7ce87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314e6482-0e54-4c0d-9ec6-166a3423a9f7",
        "cursor": {
          "ref": "11aa68b3-945f-4668-af92-283570f9d521",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bd69fe2b-924e-4d2a-a12e-77e5d09288bf"
        },
        "item": {
          "id": "314e6482-0e54-4c0d-9ec6-166a3423a9f7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cd2d6d02-3420-42fe-a183-0ac5c45503e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5cf7d0-380b-4a7c-84f6-95306b88a7b8",
        "cursor": {
          "ref": "64c28635-db10-4c89-ab3c-6f143f381aa8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "52241699-a263-49f5-97bc-7802952e6227"
        },
        "item": {
          "id": "bc5cf7d0-380b-4a7c-84f6-95306b88a7b8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "10eff865-2afb-40e8-ac0c-77dec24959ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552377eb-b6c4-4bfb-baac-2e340ccb92c3",
        "cursor": {
          "ref": "69e165c1-f7d1-4a6f-ad8c-6403e4d358a1",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c64a6a28-0285-4ebb-a7f1-fcf3bc5cf379"
        },
        "item": {
          "id": "552377eb-b6c4-4bfb-baac-2e340ccb92c3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1cc69a66-335f-41e9-b6f0-0e851ec57fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c666451-043e-4fe6-9afa-9d80616a6972",
        "cursor": {
          "ref": "8eef68ac-ce7b-4507-8479-e180a24ca9b6",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fb73c890-3b9a-4bae-9e67-cdbecf1162c4"
        },
        "item": {
          "id": "1c666451-043e-4fe6-9afa-9d80616a6972",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5284b18a-1220-4cf1-8088-ea4bef95677b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0777f670-bb97-4100-8c9e-30a2ca9fd59e",
        "cursor": {
          "ref": "be9d1460-6ec4-4ea1-bf95-e2f83185458c",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "571ec40a-dc9e-4b4c-8423-485104f38b36"
        },
        "item": {
          "id": "0777f670-bb97-4100-8c9e-30a2ca9fd59e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e971df2f-612a-4967-b5d6-3055c92b9cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b047cf1-ff45-4de5-b6ea-2ce380658795",
        "cursor": {
          "ref": "91056210-e258-4496-b32b-fbccbc93001a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6446fe7a-7c4f-4f84-8e12-e70e29e82f74"
        },
        "item": {
          "id": "6b047cf1-ff45-4de5-b6ea-2ce380658795",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "72f3c293-0eda-443a-8ee2-bdff312ef138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7266823d-9a1d-44a4-9fda-47d2a0431a59",
        "cursor": {
          "ref": "ff3cdbe2-9c36-4676-8f0a-268cd5f143cf",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6d3edea5-c898-418e-9d31-1364012cf57c"
        },
        "item": {
          "id": "7266823d-9a1d-44a4-9fda-47d2a0431a59",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "96816909-29d5-4829-8614-b8f438774456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cde7181-6d96-4d14-a4ca-3dac3b4d60a2",
        "cursor": {
          "ref": "5247e755-0488-4b82-9441-3a6a66c26bb8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "064b5d6a-e5fe-4c95-bf13-aa53f61dacdf"
        },
        "item": {
          "id": "1cde7181-6d96-4d14-a4ca-3dac3b4d60a2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e8575604-471f-46bb-813e-ef3c0ce9f86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de26efa-d64a-4b23-a05d-08f6cb102d6b",
        "cursor": {
          "ref": "52a4eb17-9864-42b6-9da6-1d0e925df699",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7a3b0bb5-71d4-4860-8dc9-6626b502ef16"
        },
        "item": {
          "id": "8de26efa-d64a-4b23-a05d-08f6cb102d6b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2b4dc9b8-9a17-4ae0-bdc7-ebff26c30f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eef1ac9-5581-4282-9a5c-1f7ec613b4de",
        "cursor": {
          "ref": "08df00d9-5d4a-4649-9a31-623db06656f1",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "39cd8ece-2f7a-495b-aad7-38c21763a329"
        },
        "item": {
          "id": "2eef1ac9-5581-4282-9a5c-1f7ec613b4de",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "147f8249-4e76-418b-afed-c6ae3d5259f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c099dfaf-0309-418e-81d6-1bcd67b1feb3",
        "cursor": {
          "ref": "0b9e795f-d72e-4cc5-98c8-de8ef8ac40a9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "69293db3-4cba-4835-9e0a-e51363c23463"
        },
        "item": {
          "id": "c099dfaf-0309-418e-81d6-1bcd67b1feb3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6d7a2a0d-d309-44fe-ab02-a21871446e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b6fe26-ec2b-4c62-942a-eadfe266775e",
        "cursor": {
          "ref": "e963ab83-235f-45f8-a869-d2593f1c174d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6f8e7e13-91b0-433d-83b6-c76b5a20b1f1"
        },
        "item": {
          "id": "66b6fe26-ec2b-4c62-942a-eadfe266775e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "28a7b834-2907-4527-aa28-7ad7e824b3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225c5a36-c212-4cdf-b168-a29dec470737",
        "cursor": {
          "ref": "512b0c64-ecaa-4add-a1e0-e06eea48a85d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "65fc19b9-9546-4676-98e3-dc1cf0dc325e"
        },
        "item": {
          "id": "225c5a36-c212-4cdf-b168-a29dec470737",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c19d5ab7-2e4c-4120-a96e-2c4390285633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db177f46-d70f-42cf-b5fe-992e92bcf3f5",
        "cursor": {
          "ref": "5e21c747-4e5e-426b-9be2-4e8db62eb23d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d46bf47f-699f-4600-a713-d0a738451c0d"
        },
        "item": {
          "id": "db177f46-d70f-42cf-b5fe-992e92bcf3f5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b535a01e-6d5b-499b-8423-1845d9f695a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01809718-8232-4c56-b239-b738dd6d71df",
        "cursor": {
          "ref": "92793bc7-217b-4f0e-a256-fa806301d090",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "34ec3d7f-d41f-455c-b449-0bba25945469"
        },
        "item": {
          "id": "01809718-8232-4c56-b239-b738dd6d71df",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1c08858a-5e6b-46fc-a581-a0b6b0f425b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f16ba5-4a50-4842-8d13-fb8cf9187ba9",
        "cursor": {
          "ref": "d8723f25-d23a-43c5-aef8-0dccf9a3e78e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c5babab7-7e72-4e72-8ecf-ad615a78bc84"
        },
        "item": {
          "id": "09f16ba5-4a50-4842-8d13-fb8cf9187ba9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fd2843d9-83e9-4284-9533-21797027ed27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07105dfc-fe07-442c-be85-cd1c5a29d06c",
        "cursor": {
          "ref": "6056959d-f34e-4fce-a922-2035a07f6cda",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3b08c7ce-c5d1-4869-a6e9-e5c9d7137be0"
        },
        "item": {
          "id": "07105dfc-fe07-442c-be85-cd1c5a29d06c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "33f5112c-3588-4c2b-9720-573d42713871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992d3e0a-3cdd-48c5-afe5-4abb8d1947fb",
        "cursor": {
          "ref": "2e37e7f6-9a44-4a9c-bdd8-caa04577de88",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "df3a34d3-5093-4d01-94ee-deeed8b91b18"
        },
        "item": {
          "id": "992d3e0a-3cdd-48c5-afe5-4abb8d1947fb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e49f5cb3-36eb-4492-ac76-6e1ae6e5b645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aba31b-6719-420a-b443-f4584f08555a",
        "cursor": {
          "ref": "19e655d1-bc48-467d-bc04-dc50f51982a4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f50f5a71-43c7-4bf9-933b-baa5a27105a5"
        },
        "item": {
          "id": "80aba31b-6719-420a-b443-f4584f08555a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "67fb3eda-4144-479a-aa56-b1bb0b65d59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8599bed-ab75-49ef-9838-3c0b4e0acdf6",
        "cursor": {
          "ref": "cc281bd2-4f0e-4650-90b9-c1e930b23080",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8bb6e8bd-0319-4488-a9eb-60e1093481f0"
        },
        "item": {
          "id": "f8599bed-ab75-49ef-9838-3c0b4e0acdf6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "724a757e-b6e0-4810-9147-578e23e0c57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e703e8-9d70-497c-b6e4-a4da3f582db5",
        "cursor": {
          "ref": "8d6d6a05-51e8-463f-8286-5e0311a28c35",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a763710c-2722-40f0-8b7e-12652978a16a"
        },
        "item": {
          "id": "48e703e8-9d70-497c-b6e4-a4da3f582db5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1462527d-f8e5-4c82-a89c-9031b0ea9105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec83bf9-b42e-4a42-9bd1-d874e91e8738",
        "cursor": {
          "ref": "be70da60-87fa-458d-ae18-b0b975a83c9c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e32e4580-7150-4c3d-b00a-7f6904256878"
        },
        "item": {
          "id": "6ec83bf9-b42e-4a42-9bd1-d874e91e8738",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5359bcc4-0dda-4a6a-a76b-070231f3ab62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9919fa04-0b2a-4750-a776-0953c5a06715",
        "cursor": {
          "ref": "2b9c4ff1-d5c0-4478-86ef-403c832663b3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "de337c11-7ffa-4f48-a4f9-708c56833179"
        },
        "item": {
          "id": "9919fa04-0b2a-4750-a776-0953c5a06715",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "85b8bac6-b087-41b8-9814-40fcbc37224d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceddea24-c0dc-4bf7-bf55-a40e5cac26ac",
        "cursor": {
          "ref": "f4fc84d9-0133-4fc3-80fb-8b81e92d1d8b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "bbe6ba3e-c5c6-4b38-aa59-1aed572508b1"
        },
        "item": {
          "id": "ceddea24-c0dc-4bf7-bf55-a40e5cac26ac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f789b477-fe72-467d-96e5-2bdd73f8253a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b88da6-4946-4eb9-87b7-93df2dbbe481",
        "cursor": {
          "ref": "dfcf82de-a39e-42ab-b196-6fadc16486a9",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a9b37c60-8e1a-41fd-8d1d-16dfe7c04e78"
        },
        "item": {
          "id": "51b88da6-4946-4eb9-87b7-93df2dbbe481",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d2ee05ba-f348-4dba-96f1-7fba1cca0eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68665c7d-6e26-40b7-90aa-e9db49017ad0",
        "cursor": {
          "ref": "7d627030-08d7-4c32-a1ff-fead8c4bef49",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "718a47a3-97cb-4274-b693-9321146312dc"
        },
        "item": {
          "id": "68665c7d-6e26-40b7-90aa-e9db49017ad0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ab89e6d5-6c2f-426a-ade6-e3272fe438c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9350721e-b2df-4ca5-82b1-3fb9ffa18d73",
        "cursor": {
          "ref": "4fea212e-2c1b-4572-ac1d-1926bec1d2db",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6da1352e-97a9-4bc6-96bc-18669ffe7ff6"
        },
        "item": {
          "id": "9350721e-b2df-4ca5-82b1-3fb9ffa18d73",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bf61ea76-97b8-4676-8622-56d8b4331d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e384f07-e5d4-440f-bf94-cd922f2d506f",
        "cursor": {
          "ref": "b4887ba1-35dc-4e50-bd3f-4ad83a70bf4e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7b05dfff-de1b-4b66-881c-dcb87d1c0f53"
        },
        "item": {
          "id": "4e384f07-e5d4-440f-bf94-cd922f2d506f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "46d48065-d752-4c74-854c-9fe25b5b5fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c02f89-f0e4-4f49-9b62-fed480fa103f",
        "cursor": {
          "ref": "0ba828cb-df50-43f7-9ea7-2416f4f641c2",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0007257b-dfe7-47fe-9c73-56a65041dd1c"
        },
        "item": {
          "id": "89c02f89-f0e4-4f49-9b62-fed480fa103f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "393f2732-da5e-4fca-811e-787c1c42bf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a52541-597f-48e5-98d0-0823e7f997e1",
        "cursor": {
          "ref": "f1f8425b-8ee4-4d97-bb6c-ccbfdb6a4f81",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4c908ff2-0b1d-447f-8575-9c22ea1033c9"
        },
        "item": {
          "id": "09a52541-597f-48e5-98d0-0823e7f997e1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "58e18c40-dd6a-4eb6-bf7e-c7c265b47322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128af1a5-62df-48f3-84a5-660a7c603258",
        "cursor": {
          "ref": "3ae19b59-5867-4f7f-9b23-5354990589d9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "025ace16-53e8-4b8c-97f8-1fe500ae879a"
        },
        "item": {
          "id": "128af1a5-62df-48f3-84a5-660a7c603258",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3ec5331d-464c-49b5-8721-1b0e02a4daf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c7cd65-5a45-4186-9f30-8b5b4fd38365",
        "cursor": {
          "ref": "df343cd0-fd83-4615-9b92-ee485f51f983",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "204a13d4-c4c6-4f29-9fce-6e8159658a04"
        },
        "item": {
          "id": "00c7cd65-5a45-4186-9f30-8b5b4fd38365",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fc157910-5e1e-4395-a2ea-c4b60f905c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07672908-53d8-46b2-8f2d-01789b5a33f1",
        "cursor": {
          "ref": "056ce103-5daf-4a14-8467-589b03cc6ce8",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4a30be49-8e8d-4cfd-b015-8a81494fce81"
        },
        "item": {
          "id": "07672908-53d8-46b2-8f2d-01789b5a33f1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "570253b9-3344-413e-b69e-eb0d1ebeaee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af53c12e-4b53-4d30-8932-d4247f4606da",
        "cursor": {
          "ref": "e7a7b510-f549-4c8f-a6b9-fa11a2880b7e",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ddbab7bb-1ad9-4440-861d-1d2ed292327f"
        },
        "item": {
          "id": "af53c12e-4b53-4d30-8932-d4247f4606da",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "20248ce0-202b-4957-9067-223176d4d331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5895b946-b1a3-4a89-b2e4-32cc491481e5",
        "cursor": {
          "ref": "3cad452a-5f3d-42bc-b9b7-863ea50788b0",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ac85c54a-c772-48a6-8ab4-04826bef53a6"
        },
        "item": {
          "id": "5895b946-b1a3-4a89-b2e4-32cc491481e5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e800de84-f8d9-4a79-b226-dca562d995c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a53fdb4-bde1-4285-99af-54a7cca25e28",
        "cursor": {
          "ref": "d15b8ad2-af60-4309-9362-aaff54319332",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9ee40616-b44a-41d4-af87-40268e31d9dc"
        },
        "item": {
          "id": "6a53fdb4-bde1-4285-99af-54a7cca25e28",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fd01ca52-fb97-43bb-bca0-9307ce22057d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c44550-67e4-4e3c-aac4-fa9266fdf7cc",
        "cursor": {
          "ref": "5942cdd6-1350-4565-812d-ab61443f2288",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1cb012df-5bdc-4309-9930-602d3ba318eb"
        },
        "item": {
          "id": "a6c44550-67e4-4e3c-aac4-fa9266fdf7cc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f20405d6-faf9-472e-8bf7-f2a0d9134c04",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a4163c-6587-4214-83b9-70b29f111e9c",
        "cursor": {
          "ref": "521f8c84-9f7e-44c9-947e-0d2d6b61251d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a85a9d5e-f08e-46bc-8ec1-4fccbacf4032"
        },
        "item": {
          "id": "24a4163c-6587-4214-83b9-70b29f111e9c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dc217850-c1cc-42eb-97a1-39cd9b7b5c89",
          "status": "OK",
          "code": 200,
          "responseTime": 1537,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d90fb5-3e95-4a3b-a598-f6fd91b5f3e7",
        "cursor": {
          "ref": "f365e948-0236-4883-a99f-1839b81dadcf",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a2416bb9-9753-4cf5-8a15-33b9fb150b06"
        },
        "item": {
          "id": "51d90fb5-3e95-4a3b-a598-f6fd91b5f3e7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "221ab165-872c-4c64-944d-a95eda2863dd",
          "status": "OK",
          "code": 200,
          "responseTime": 1266,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee17fb2-c172-4cff-9f1f-95652fb4dd93",
        "cursor": {
          "ref": "4fc001c8-5d2f-47f7-8f1f-27ab6722f515",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8ab1df99-9384-4665-bf3d-60923aa58daf"
        },
        "item": {
          "id": "7ee17fb2-c172-4cff-9f1f-95652fb4dd93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "73d85b7a-4233-4b1c-a82f-5612cb486865",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee17fb2-c172-4cff-9f1f-95652fb4dd93",
        "cursor": {
          "ref": "4fc001c8-5d2f-47f7-8f1f-27ab6722f515",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8ab1df99-9384-4665-bf3d-60923aa58daf"
        },
        "item": {
          "id": "7ee17fb2-c172-4cff-9f1f-95652fb4dd93",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "73d85b7a-4233-4b1c-a82f-5612cb486865",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730b6f24-dddc-4c65-bbc0-f0040fb23dcd",
        "cursor": {
          "ref": "2fe80fb9-b760-41c0-8e5b-58b09b5827b3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "da8bc2d6-51ac-4e0b-9206-53c1194af47d"
        },
        "item": {
          "id": "730b6f24-dddc-4c65-bbc0-f0040fb23dcd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "98b849c4-5bc6-49a0-930a-d1d9dc2f9632",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c44c2f-7d87-4e1d-a5ed-3e8319d6ad20",
        "cursor": {
          "ref": "93a8ad81-d291-4a9c-ac6c-d2ca58f1fe73",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "414e2b0f-f6b0-45c9-89d0-585acbe92e81"
        },
        "item": {
          "id": "55c44c2f-7d87-4e1d-a5ed-3e8319d6ad20",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "47d8baec-90da-4e9c-858d-8e87764c484b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}