{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3f3291ef-4333-4d4b-bd43-aede4e142f2b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8911be6c-4060-44ee-818c-c3f5479c92b2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "472a36b9-b991-4c2d-9135-9b90702f9300",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eaa73ca4-1a2e-4b25-8007-4075923fd3cd"
                }
              }
            ]
          },
          {
            "id": "6a0c9895-68b4-47bb-a96e-e42926b1baea",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c290589e-3751-41b2-b49e-0ae32cb8f56b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a892e5e4-bcc6-4bfe-af1d-bdb03cc63106"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9fddca82-7e2e-4f8a-b975-3969b50074f7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "04542095-e52f-430c-a5d6-256dfd31bb56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fcbb33bc-a5da-4536-bf28-4bdb46771c27",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54b1ae7e-250f-4fb5-b575-3d546786654c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b6f2cf9-89bd-4caa-81d4-8a7cf2185b08"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da42925c-1c35-4106-ba1c-9d8db8d2fff9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31002ef8-a9e5-4c8b-810e-2376633447f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "87c83714-a2ca-4471-8c53-8966e17375d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9aaba78d-407f-4421-a304-349d0bb30ee8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7de03a29-de66-4e5b-a52a-db0c7e9923c7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "36131eb7-9216-4057-b472-ae6e342776d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f13ef50b-4600-4a18-91a5-ed746a42dda4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5c5d538-f0b0-4a42-80ac-f0fde05be5f3"
            }
          }
        ]
      },
      {
        "id": "6f968e69-b4f2-4d5d-99ef-76e0698f6ee5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9dfb0e31-9a40-4f98-8661-2221f423a17f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe847fad-60f5-4f8e-b92b-1396e9290c45",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38d71b8e-c062-4643-94f6-657b458a76e7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa4acc4-d45d-4b17-9d7a-02484e9d1204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66519804-ace3-4655-b3a9-db91c56b672e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1623c84-4546-48cc-ae7a-a4be9f2e5f96",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58124e7f-bf47-46db-90c7-acc4b1c94c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8806725-0c90-4d74-9c38-292401407801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712cc65b-5423-477d-8b84-40ab15cfc853",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8837da3-75ee-42f8-9e60-133aa2f27350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19f6320c-4098-4889-b437-053c223d013f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20c1a94b-44b9-45a9-859f-f9220789f272",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b903c2a-d9fe-4455-9111-8ddcb5bfd916",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88228067-e792-4ff1-aa95-c457d052b345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1efa296-70c6-436f-b2d3-a280b5364d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258e7831-19f0-4cc4-8948-e48bf76973e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35c877a-afdd-481f-9519-851e34c092f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "53eda56b-7e91-4621-a698-5d6c550f6c86",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da2309ef-18a8-441a-adb9-dd92bdd405be",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e31d4296-d808-4786-baf3-f4c46864dde5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fbaffd32-23c1-4437-9d6f-e21e3a3096b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4dd29c24-ecf6-44d6-b0df-1ae008f2b4aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b5739ab3-37a4-4f96-b9d4-353c281b5a27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da9f200d-aa24-4427-bbb7-aaab72af99f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62eecb35-2563-4d3d-a6bc-d460b1680962"
            }
          }
        ]
      },
      {
        "id": "e02d85e5-8e56-4ea4-b016-bc7a8c8fa13f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f543ee2b-d772-4d35-9163-0023bca47e02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3dc1611b-cb59-42e6-9423-3589e058d488",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6954491c-7a0e-413f-aa67-2ffc873b7b15",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01621d5-6939-407a-b022-bfe0f553642d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf6b9ce-a780-4467-84b7-8e539a64f891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32a0774-e890-4bbb-a6f4-367ea39f012d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db587bd8-21e7-4e16-9e01-c49afbcd8032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f74f68-a90e-4af8-8068-fcbba4139a9e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d9f79d-7f64-48fe-94eb-a3fafbebd1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd90a828-89eb-4fcb-b902-b25675ccb7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77334e1-3cc6-467d-a134-fd9d0977dad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44ba6253-8c9d-4c04-823a-6322fcc9edbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203bda9c-515c-44a3-a84a-5fc3f649990c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dafd57f-99e8-4ec1-baf5-f0d3ef65fb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efb4dec-acc7-4682-a590-7298cb496558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d5be53-76ef-4f44-9b6e-ac1388262df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d301886-0efa-4f17-bc46-c1f20abd55c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c869203d-32f1-4310-b6ca-e54df06f7cd7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03230532-0136-4977-aeb7-8f7976a04295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a51d93-daff-410d-bdd9-92de6db73aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25fb38e-80c3-4285-ab9e-443bb96d4c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7d59fa0-5243-49f7-bf9e-7a8c2e3063be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26e083b-e7d4-4edd-9ac5-a89e302b7738",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc27fa03-d586-4eaf-bfff-f7195f5ed614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5e538a-8b56-4fec-9eff-87ed014a66a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c202a26-261b-4daa-ae59-75470f3e0b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e4cc661-25bb-45c3-a268-2abf8dd1a737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b18b30-ab92-42f2-a61f-191d913f6195",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8489d9-f727-43f6-9f12-ebe72a605880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74770765-88fb-4363-9fed-7e9010d821b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c7dca8-a5a8-49d2-9fee-a65df6a5ec9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c62c1e4-3204-49a4-8cce-27566388c90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fb3a41-eb8d-4419-823e-e9d43d971c8b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2c685d-ecde-41e3-afea-990023c68d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4259376-3ac9-4cd6-88f7-0cab52b921d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750e1b6e-dac0-413a-aaae-840b5bb455fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72429e2b-0c13-46a6-8ac1-59392411342c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c18cfd7-39a2-4794-a8eb-7c147e700214",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0fd1a2-21e2-43d6-a6e6-2e994a0f5dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9a85a8-d9c7-4e2e-a745-20098765e7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb364719-e093-481c-8635-846f58ec012d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fffbd75-30de-4929-9136-d94be704c421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5b2655-0c45-4bb4-b422-62bb0e931d75",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e163e666-e7d2-446f-8dd6-2333acebceb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e864872a-77e6-455e-a88a-a3e434a34fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ed5c92-7dde-4d96-8498-9b91894d3ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea9215ab-c16d-4708-9c0b-c8f11bf24c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8052bdb4-cd84-4cb2-a1de-737dbd4d504e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5d5e26-9b43-49cf-a0ef-bb56b69c5210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc2ae3c-d76c-4678-89c8-309d417dff2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6b6a0c-e29f-4927-9e4e-846cbfb60bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c3fbce1-3954-4e07-817c-a26be6711bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c4e783-af6b-4997-adf9-34dc09dcd98d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c442fb19-b909-4918-ae45-ac9f07d3a038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5467c60-66c0-4ba2-80ef-cfdd0fc1f816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49536a11-7970-4588-964f-d5cdb14b0b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dbb4bc8-fd42-4c5c-b096-7da5927dff6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64581ef7-04d1-4f15-9632-575096ba4535",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9700c61a-3190-44e4-8ecd-ca12c28b55f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d6584d-fd5f-43d8-9e19-d749b6f3241d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12601cbe-bbda-483c-a312-8e478ba2d3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbfb6a99-8ca1-4c68-808c-411fe1573deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95543506-ccd6-446d-8576-2f115b4035f0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d349ae-fcfd-4d40-853a-d663458e2843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ecb149-2040-4d65-b91d-78d68c143833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f14f7c-97af-43b8-b7eb-17ba160616f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7df26789-decd-418f-870c-93eacf469e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cad702-0e8f-4afd-867c-6cde470758c8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915df3c0-4c2c-4797-ad25-9c74b9dfc08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7228512f-bea9-4ea9-837e-e2df92314eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba4b2a9-f4e1-4261-b23f-e218357cf326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3d2bd9d-f56f-4e3d-9177-3a821d3a0fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d53a26-1141-4c5f-a2e5-ef5f0b803257",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8243acf1-a25b-41be-85c9-cdb108aa81a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7746fc2-eac7-4b15-8b55-e281d9529f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf8b024-356e-42cf-83c8-d9a7acac1f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ac27fb3-3188-4a8a-acee-2d6574ecd685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24034d8f-fec0-47d7-a379-3b32220d1dff",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aafea18-33cc-4fdb-9ea8-607d3e0983f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1265a14b-8fc0-4b88-adc7-fd8a76856668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871f4a2a-d650-4230-b888-2731f8952a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b620e7d0-07e4-4c30-97b4-78eb72577fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c13feb-6f78-4380-bc0b-9c36db5c7050",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74fa8db-33f8-4683-8b82-7e1cd2e89ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8119f4a9-399c-4cfd-91e5-37f13db657f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2edea3e-9b7b-40eb-a5f6-c416c0813739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1160c622-b5f2-419d-82ba-417fb3b90572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b425ec-852c-465d-b853-9f0a1be69a4a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dd0983-02a5-4130-84bc-02eed95f60d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "652e29c7-72e3-4310-ab20-42d0509ca903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef38e4d-cc1e-4d05-8dce-b261721cecce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "373f8cee-28fd-4ff4-96da-1097d019eac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66001cd-9666-45af-a918-45f61de54da9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee99b1d7-1696-4a3b-9ed3-435083e884d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237ae467-3777-4257-a00b-582ddd47404b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00338811-0027-4531-8605-295ba4099995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7986fdd9-51cb-4975-8ce0-5b93492ec504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94094fe7-b5f4-4022-8743-715ac56f0e26",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f4636b-314e-4195-b57c-ed9af29cec55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61690eb-d24d-4357-93d4-c353002b8f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ef7c28-127b-4f5f-b44d-5d053d872dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fefc2cf3-7e15-4b01-813c-e5e987116362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ab11b6-0a26-49ea-a99d-e6d30da80987",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e520e94b-a252-449b-8ff8-462fe131cc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d760fd68-dd38-4f69-804e-b0ec33214ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5793c78-dee3-48d5-9ba4-e6e03ef11432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32763169-3ff7-435c-8073-921da1783cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57700a3-5dbc-49cd-9341-8dca8bb4d2d2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed005029-a06b-4637-824e-821b121714b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98ed7fc-3263-42d3-adf3-7a0eb0cbb648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac940d57-ae67-49cb-bb82-73e00528d9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb483ae4-2612-4a70-8a21-7b8a997bf689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d2740f-6e99-423c-9092-41d9a6ab240d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dc4fa2-758e-433e-8e7c-7ab39d1dc565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f027ef08-39ba-4d5e-90a4-796018ad884b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ffff07-1d07-4dfb-9571-f05adcd679bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a73e19-2334-4f38-b231-2b000e33c0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aafd585-2f0a-4e00-924c-decdd347c32e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04feda0f-4953-43ca-afbe-cd56bfe518fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916ef59a-bb82-42ab-897d-a2ccbb9b2758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9aa9943-f2d4-4dc5-aa0b-35406d90b68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4f7bf2-798b-4515-b518-df78806220c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dc99c1-362e-4a38-89f9-7bd32977202f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69ec4cb-06e4-4850-a9f9-74f0effb0935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5d453a-c3f2-4efb-9bac-7ee6f91545fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f499a57-cc3c-4219-863d-b71be7a4c7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8874c303-c567-45cf-a012-153f34cff991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07d6bb3-13ca-41bd-b65d-cedd5aa77773",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bd6936-373d-413f-91b9-49efb5de4c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce57026-f02e-4893-94c7-5925c4e6b027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe8829a-0ad5-4507-aa58-98bcd98dea60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87ba9f32-3d51-49af-b463-e1a55c0fa6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07581e8f-fed8-4a8d-a586-c4c44c2f0352",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212f373e-ce4a-4188-80e7-b56c574ae04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a16812c-9d72-4e8f-8b8d-34ed056657ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c50f140-b9f6-454d-bdf9-6859235c3a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a4f8ac-90a2-4bb6-8a9a-6aab626092ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f6249d-0974-40c7-9a63-b8a8e651cb1d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde5fdb6-a07d-4aac-adeb-ae29d10825c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e23374-1525-4c85-a077-60bba2c457d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcadb6e-6e50-48b3-8efe-143308d1b64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc2bd76-ee38-4d9f-bfab-a2cf0c6c96c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c53371-aff6-487d-afba-4ed5a66b002b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e08a419-66bf-4cfa-9fa3-f18aa08e7c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97184d41-a15d-4274-9944-a580ac25ad08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19dc488-634b-4a38-9a0d-4a99540cb85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c82a66b-036b-4b2c-a0d0-67ebcd0befd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a628b7-45a1-4f6a-a9fc-bedc4af4ed98",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff02ecdd-bbbe-4bb6-af56-ffb947f3ad36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709e1fb6-f26d-41cb-b9c5-6e921750bf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2161aa74-f0ee-4977-91f6-796c93a6d12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3280d2a5-a5ee-49c0-844f-1e2ac4c04cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d25d45-3e03-48a3-b734-0880a06a6671",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79882f26-fb58-412d-b305-de71ac70b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe556d9-755b-4df1-95c7-3e4c79e10686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce127230-2f29-4bbf-ac7e-bbe09832fa89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96e918dd-fadf-437c-9957-2d2964345378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb51be17-0722-4f66-accb-f1386be0759b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163861bb-d1a3-4320-9acf-46558b4c3d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1501fd0f-fd19-471e-ae00-86657089577d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c08e2a-a7f5-4efc-ab32-0eec17230473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2fb902-dd2f-43ef-adb5-cd7cd2061618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f669e90-033b-476b-b16b-823b2a763a5b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bdc59c-f9c8-46b7-b82e-b4c2e5f57ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee763e1-acdf-4d31-ad3f-4e2b8dc555a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3265e324-e187-465e-94b6-25424c374cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acda3dfb-3729-4e44-b393-9466cf38efa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca0e4b9-e286-45df-82c4-a10b05145aac",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa14250-e79c-47b6-b7e5-4ec620229c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a936b18-5026-45ca-9dd5-c9ec6b4d7e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3abe53-fb60-47be-a345-b201bdd75f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f007b5fa-b979-4ee2-aa8c-6697be16a247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fba8f4-b10a-426d-bd7f-9aea526f7db9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd4cf58-2fc2-4692-bdc3-cac11f1e9adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b8392a-7d15-4dbb-919d-9785bedf98bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f631d24b-d770-4f51-8446-b24704639069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "686766b3-a589-4e7c-8cd8-5614b29d1962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c2ffa4-4680-4faa-af2c-503746ad0ef8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be220bc-81b6-42a2-9ecf-91c6e957aed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e511a6c-acc6-441c-9b90-7d9017ea36a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdf372c-9535-42d1-aac7-5e17afe3c434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd927c61-4a76-43fb-b1ad-0a13d3605e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9ce040-1006-4ad4-b42f-3094b5a555f3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177be337-15a4-4a17-bfb5-917692991b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf22becb-8ed8-4ab8-bfb6-1bb418079030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4465a93-d538-4e35-a354-51110da7223e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3e4e6c-d837-4e79-9527-51de6037a348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88d798b-cd4e-4113-a1d4-5fd580af014c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd70ec8-47aa-425b-a12d-d4464b0f2557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766212b4-d287-4197-80f4-0ae38c46d906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1e76e4-0dd3-41f0-9461-58cc6d35cf05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "240f96cb-28f9-45e7-a7b6-53fd847a462b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a92b267-d06e-4258-8649-99dbd8594e04",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a918fba9-1632-4e5d-ba4f-05318f45295d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1578a02-9d27-4a07-a591-14be9859c61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d18b26-100a-4761-b622-911bd69a76d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "21adc04e-31b2-4f5d-8af4-33357790c388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4635d12d-7861-4c04-8cc8-471181e53ee3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be19ff5d-01ac-4b57-b2cb-6b2463861994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730af124-b4f0-4e21-ba51-4098a30f5267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcafc8f-d3c0-423b-be74-a2b2f22ad2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e98ae378-1fd5-40f4-ab4e-bf4b46e2e989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e684fe00-437c-4c29-9bdf-542204766686",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b987de7b-ea98-42e9-91e7-494fc8b16340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6614fb59-8f08-4873-a078-64e2639c13e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1164a23c-780b-44c4-890d-56b566ddda9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b12167e-4cee-4dc1-9cc0-c28fa01b5952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37efbc70-5536-4404-8e08-4826b9831947",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8f6744-2875-468c-8d61-d5200a3760cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d827836e-fd5c-49ba-b0c7-21b09825b70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09eea257-c7b4-4afb-a32c-8cb0f237c275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "27f0b3ff-ec34-404c-b513-54df2d1618ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b49576-8f99-4f40-8956-a7b43f03af5a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e44b94-4c35-4972-9b91-eb64aa85d332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7af4b7-e456-4cea-b45e-b1fd5547ee33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096bae7b-f47d-477a-8300-9f64af8b6d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4b7fe3-5120-401f-8713-9c9592f1a6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f2fb0c-1dab-4c71-8b54-24bd141f0a88",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5f71d8-5ef9-483c-903b-9c0bee1fdb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb50d1d-9b3f-4345-b679-c6be1d6be302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f562c31-8ad1-4f21-848e-0a3dd4fb9e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a40ad2c-57f2-4d97-a823-ee1c79302e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ff406e-53a2-41a2-a5b4-277fb599bf28",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c1de77-1f18-4e9b-8bd7-7246c9914a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e441bae8-b1ea-4da3-871c-a78b3e902a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d45c065-19a8-4aed-9408-3512788bba1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffbbda5-7aa8-4289-bd48-df1c6057382d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056c5d61-d9cd-4b1f-ab42-6b907da52c14",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a033a58-ce85-4727-97b7-a5aa12b0814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745522e4-3c43-4086-9395-32e1152f8465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccae0872-836d-4744-882b-63c3a18699a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c7fba4-13c5-4ddd-926d-1793ce916b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd7d70d-8078-4c9e-9fc3-60b1d0dad770",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf03ebf-412c-4e20-a8e3-82b24cf0d500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898e8a83-1caa-415c-911b-2c1e8c3bd800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbdded1-a851-4676-ba5e-629acc45e4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76dbc999-b1a2-47d0-87ce-5cc65bde3175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b429ea-be2f-4001-a36d-de3cf6efb87b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdb723c-30ad-404e-99b8-04da526eb977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d716edaf-a541-45a5-aefc-a240eed6755e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d945896c-3a65-4555-9e2d-4673a3b80f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32de3042-3a77-4272-af4b-9afa093d0b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b71a97d-ea71-4d01-93ca-d363c6b4697d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8496daf-b3fd-405d-b024-d529ff1843dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae99d61-7a15-444c-a4e0-2ecaafdd3908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936724df-d51f-4f50-ba1e-b3f0c3d4edc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6be633-7228-457c-acaf-a8abe641c283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e914ceb-389a-475a-9198-8e4660fc193f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e79563-0a88-4d30-b3a1-08062e199c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424d673e-1732-4552-8928-a0fdf10b51f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89579287-84bc-4458-a7e7-ebaf7fb8c9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ac8444-655f-4092-88ae-6f9e962811c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3551eb-61b6-4f93-bb39-31d6613c7cc3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6711740-eb3a-49b7-adad-20d43bf68f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6983dfe4-41ec-4e31-bb57-3f8a90cf90aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cf74d6-24f4-422b-bd54-c49dcc3ab16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45a27d7-e26c-4533-b2f3-6e19ea0df42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f5a1a8-4d7b-46bb-8e61-bc1e88a35991",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644df3a7-a312-4e57-bd61-335b0b9c82cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e944559-20b7-454d-ab3b-4b718b7f5b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f2a20d-e5cb-47a9-a177-a3b891863a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40cbb424-1c60-42da-a048-3980e383c3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9bae9c-139e-450f-9ae9-c43c8bc8d22d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5c72b2-aa78-4ff5-a175-6ae7ec2e45cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45e6481-9951-4fe2-90c9-9636cb793b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78e5701-54eb-42ed-9ea0-d034c269de03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07f1ae62-df8e-4e5e-a9fa-66dac3d9b7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9caba5c-f11c-43fa-abfc-59d9098630d8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e457232-8dbd-4ca1-9dff-3a696ae6bfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fc9008-9d47-4ad8-8868-8443b8575a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb89af60-f9f6-450b-ad3b-a900fa096a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb3605f-9ddf-4c95-b954-dbc4b1afd8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4493c2e2-6b84-498b-a36b-45241c80173c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fab239-7ee8-4833-ad59-e6d070957398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b162bc24-38a5-463a-a618-6632af90c834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bf7720-f715-4475-aabd-65497613faf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b751bd62-261f-4496-987c-43958079f568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05abee1-922b-43a6-9644-e71be7955536",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06064be8-7cf0-44f2-b48b-0a6d78843c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03266d1f-67c7-42b8-82c2-783067b0272f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06719456-abf5-418e-8c24-67f64080991f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7fe78e-0bb0-42fe-aaa8-514aac8679c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9cbb6a-8abd-4391-8741-68e18e13b709",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba4a511-5b87-4e31-80f0-95f17c290cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c119dc4a-da04-4e06-9a2a-1556223747b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5329010f-4582-418f-afb4-9c82dfb1254b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "466c4031-06cb-4d7d-82a6-a1559513021a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf67947-58b9-4515-a45a-a3f2c44597c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981993ef-a3d3-4a1a-813b-b96d8c035a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1974788-d3f6-49db-a5b6-11747b66d6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1798b9fd-1b4d-4fc4-9cc1-8995a2d3f16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8582c371-c81e-445a-914e-8ef6f37e5ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8cf332-12e2-4313-89c7-c2cd2136996e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f317c653-4aa0-4307-8278-31f8c71c82bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f217315f-13a6-4051-a70b-b7c9c97a45a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c5f1fc-1b4d-4f96-994a-bd249d313d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c8af16-9bbb-43eb-898b-7c6dea0b312b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48dddd7-23fd-4797-85ec-66ada2999af6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bec592-61df-4111-8f1d-c77d7def9876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30cc59d5-202f-476d-9fc2-541493fb4755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1cf9d2-5ddd-4c92-a5c7-e83a755177df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "13265b16-3dda-492d-a5a8-d5f66c92c91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dd16d7-516e-4b9a-978e-cceca9ce2ac9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee0d699-65f2-4b88-a511-3096502a0ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cb8da9-8950-4b19-9e85-77ea51869314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b13746-5eb2-48f8-9133-d3d4954b3fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "03bc5c43-7004-4688-a5f4-add444f9e9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf4b57e-6238-483a-964f-4cc2f3020232",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3892dc1-a6e2-477f-9b0c-a3aa8da8e8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33907ead-c036-4eda-bd12-9f61b0440e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a93c9ab-1be2-49ea-8b8a-61692d18a7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0213a63-def6-4518-9b26-2445e429a3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82ef10d-8004-4bf6-b7b4-c39ab8fbc2f8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377a0df6-fcc5-4fea-8aa6-4d97cb5dd04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b973617b-40e4-426f-805e-4faccc539dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11555e7-4ee0-4ac9-a48d-1615b07d28d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "225525eb-b6d9-4aee-84dc-00858fc86084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d48a8d-b62b-4e82-9b4e-22fa678eff01",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81632bc9-e978-4720-93f1-d65050a662cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18c90f0-045f-4ea2-b666-936e7f13ee5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b3f9c0-7db1-4e56-b5e3-e2646711d6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a84b347d-bcef-4b27-996b-9a0ccd0c9fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f960bdfd-c19d-4c5c-adaf-2e242fa7cef4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb6ab99-6d2f-4e8e-a811-67b2925b1e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dddce40c-37ab-4957-9a93-bc97278e68b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afdcd11-c2ba-44ec-99b9-5ca9df6755fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b85eeb-ea15-4471-9b2c-ca9d79373046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4de725-d027-4911-a74c-9ee116559bf3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b298aee4-c635-4601-885f-13667527bd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fa3646-ea1e-490d-8f21-5a0fb37136c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b0dfac-6455-4ab5-8ecd-4daa3f6ed45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56c58e03-2304-42a9-a19f-2a449a9ead83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d78621-12b3-4af5-807f-d8d6ac6745d2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9465186d-ba48-4869-865b-01a97a1166cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a88c75-e2d0-4aed-b31c-b7c1c88b9f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de3e0b0-f4ae-4c41-b1e9-f0cde4b6037f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af5deade-000f-4b86-8e4c-2311cb5f8bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838f0425-42a5-450b-9e11-2e6fa0cfe311",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba94f23-191e-490f-85aa-4fb9efb6350c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc66765-2758-4c5e-b7bd-e710b57b3f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae4a489-4c8e-4517-b547-8e0469c2fb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "549d66f3-9dee-447f-b0e3-2474fa2da7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6089abda-4738-4411-9f4a-e545a7f99174",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12536744-ee54-4114-aa21-a4e79bd5ed06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae81ab5-bd57-449b-9997-0da0bb85d7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b57027-1782-4930-858b-4f3c24d3ded8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b23951e-f74c-4611-a2bf-32f34a62779e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0ebd7d-7e90-4547-8e00-cc6d95411e35",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca04be5-3760-4df9-914f-9d8c8f49cde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11c1fd6-a16e-4705-9364-19e7d17c50a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0926183e-10bf-41fe-8dea-97e7c275c86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a12e17b-9df5-49eb-a9ca-afc52d96efc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab8deb7-0282-40a9-95d4-0d6d0fd1c5c8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb2baec-d8be-4515-a476-4420346d57d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c700f6be-8a4e-4dd0-a01d-7c12f5221fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ce5d27-d671-464c-8078-d07c0e1a4e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3500a748-e218-4f8d-a7c1-dbfd64f58397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5da6869-96dc-47c4-ada8-ca8fba5c680e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c81036-1e44-470f-816a-a74c7e445f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ca43eb-b103-4784-929a-16dc1408c361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab45fbc-1091-4327-8073-f2f501d8f687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2568f90-b3c5-4ada-a8d1-89ff293c98a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae2eede-9b10-4202-aff8-78d6625a81d3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c5e2a7-fe3a-482c-bf1c-55558547ee0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04df3d26-ed1f-4846-9d4f-b462d1d9ba1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e505ab5-887a-4b81-a5d6-c1288e3993d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e6465a-b2e5-4f13-8c2b-c65cff33ab6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcf5c58-24ab-4744-ba61-14a38bf1c703",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5947af3c-7711-47f3-8deb-b437cda67564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c6394b-23ed-4684-8ecc-655b116a434f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1698350a-027b-48c7-8b9e-514d0ca8f76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89e0dc4e-325c-4abb-abe4-f9f87568eac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e712b1f2-f92d-498b-8864-c281071bb3b4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c67640c-f670-42d0-a14a-36d060ca033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965739fe-d772-48b7-aea9-85f3f375b289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c159141-54d8-4983-aa5b-595ac5e4cfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09866423-5aed-426e-b743-310ecb98c4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05d4e75-b4d1-4893-91ff-20837e921cc7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d224a6f-47cb-4d06-af5e-367674bde764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2471eee1-02d2-444c-82cb-0fcf26d70629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85de3ae9-d738-416b-add5-6cb4111b67d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92a2f74c-2129-462c-a87e-95ed054ae301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5573fc59-626f-4389-93b2-df5dc23cd256",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d478b316-b38c-46a4-b933-07e9d1469e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a98962-8f85-46c0-97c1-269029e5c002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d402cb2-280e-403c-8b30-38ce7ce09f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6845e5fd-8ef9-43a3-b762-62e0dafaf545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0108014-192e-455e-81b4-e25a9207dd25",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296cb229-fc6c-41c7-a897-274d4ba451a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c0407f-2b07-4ee4-b26a-38d563de71b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab42b636-0af1-41db-a42a-bd32b45d3b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d3029a-7845-4048-a7a3-b590537a87c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a867ed-1847-4c6e-ab13-64bc7f808de3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffd327a-28a8-4c16-93fd-659177b47b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a544c286-5252-485d-bcbb-96db9c45eb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d97a136-59ae-4522-9443-69de06217c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "043c3d2c-ea3c-41f4-9fe9-db8c7260e280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf7f686-fb10-4eac-a9e3-52c0240cd17b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00aa47b9-fa01-467a-8b4c-8518726c0fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fea404-d9c5-4255-955c-111e201bce54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e977021-c8dd-40de-bad9-99a1fa1a5c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e690ae69-2e09-4a54-96bc-038c16b5f820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b221d1e-5ca8-4ee8-9897-4317f579e258",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a253988-50ec-4a24-9d25-1d9c38bdeb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9aa7d66-830e-4a1b-aaa0-0123a938f03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ce98a6-c5f9-401e-8906-59512a2833c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "444390f7-1f21-4c67-8dfa-f19c0565d95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10f6ae7-2c94-4cac-b958-2f17d363c575",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5524f73-8e5c-4be8-b9fa-30213b53e4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59924f27-5ada-418b-bc38-0f29c17bb764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dc8141-658c-4029-ba32-2aff2c2e6d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "806be64a-402e-4bc6-9a00-8940b1697876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d610762c-03fc-4d5a-8db6-72e314031b7f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3f50c0-fd65-4db8-8e78-7b2f78646617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af22618-835b-4f01-9f42-671fdbf07471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c5b64f-7d54-44fa-a150-deffc62df460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4842aee3-b092-4ab9-9b03-429842a6e1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76485dd8-aa0d-4bd0-b002-94b07f1f794a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432d721b-0647-4398-aac0-e8e739e1d9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f69529-35a5-428d-90ea-7d9cb58e7806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830e63a4-2951-4227-b7c7-e5933ea8cd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5eeb67-d80d-414e-9133-8d6a9cd26d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9372e98-b1dd-4581-93e6-e0f9cea97d0c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8b7459-9d87-4240-b134-3fafd129800f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1329bb-d936-4799-9331-6af4a09a3bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f756782-3774-48a5-9ada-663519f55ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74d7c9dc-9e66-45dd-b8fe-096565d57500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0edeb5-1564-49b6-bfd7-fae754b8d528",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1654aad-cb59-4dee-9777-5b3ca5aeaa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73298c24-4173-4506-8389-efb2fcc37d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8ced52-c2a9-4cfa-b51f-75f47e0bc93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a15e466f-95c4-403c-a58e-b09c21a1104b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be1fce2-9dfb-4268-9bca-71521505d960",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf403b8-7bc2-4a23-afb2-3bcd749d4f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f134b160-c680-404c-b0c5-489b839a65d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b814ab5-2f28-4360-83a4-300cbae84fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4733e99-9e0e-4faf-9019-d6dd05bf0b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41010ec-4210-4246-b5b9-477d13723681",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480eff64-3b4a-4ef8-a393-bb64d7cf927b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1290e17-d9b2-426b-968a-bc171fdcffb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7a59b1-9546-45fc-af93-21a8a14ad6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ce786e-8d02-4357-9025-31ef25107c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cbbf33-0689-43c9-8898-413d98b5976e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9329d0c1-1a57-409c-a0bb-a7b1b4f91987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52d9aa2-cc0a-4063-9800-08c215783ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a4fbb0-4770-4f0f-a824-a93d33fb0f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4d905d-9605-4ff8-ad89-4db3bc153733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9378743-2d32-42f6-a95c-71016058b4d7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a419fe1b-f284-48d6-be0e-ca7d7fac5f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f234c0-240a-4e0c-8e86-0d00ca4f6e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa27d629-7486-4770-af75-eac109645621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "52cc332a-9706-4c0b-87cf-6c28425f0cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8710ca82-4ca6-4037-8b08-0cdac3fd5d96",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda5d270-6abb-4e05-9165-a318d7b0ad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb11c8a-393d-49c8-9b27-13976e5c38f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0c704d-db29-4fbe-884c-5d837320a196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "76a7dc00-c39e-40fd-9ad8-91b2f1c36019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16553b13-71e3-4c17-b40a-167618c23325",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b52bf3-f288-4bd3-a09e-249270c732f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9c2e8bfc-1900-4ed8-ad3c-16bd2b30f57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4ec3d4-be9e-4dc9-bb96-093cf3d3e624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "174153e6-dfe5-48a0-8e0f-abd75ff79e31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9106651d-5333-41ad-a21f-7bc77ba07ab7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d84815cd-02c5-4c6a-812f-a8cd4b5849a7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79717297-9feb-4c35-95a1-b9179bacdce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b5818b1-1ccc-492c-9d21-f83855aaee08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf8a00c-9d20-4675-915d-c72d122d401c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8788c76b-6885-4549-bcda-4c9805bdcfa4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5b07902-659f-45af-960f-547bab001375",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c17e2ded-2499-4f3e-a4a7-4aabc9642a92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52ce12cf-bf94-44b1-b4d2-b9f766c21aae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dd68256-0de1-41f1-820f-482143a18de6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69abcc28-befc-4f3a-b15a-deb6a9beb92f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e09b99a4-b1f5-48a8-a579-dea56cb75b14"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c4c66ad-9026-4297-aad5-be5eb5bf71df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ca78c0c-b8b9-4ccd-a34d-735cbebfed91"
                }
              }
            ]
          },
          {
            "id": "7b572dd9-b3f0-4225-9866-2d634bc5a362",
            "name": "Positive Testing",
            "item": [
              {
                "id": "89960db4-4eef-47d7-8590-34896e805fb5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "692a8d48-96d9-43eb-9310-86c990302c52",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c86ae0-ef22-4b23-948c-f18c854e778c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d2d0810b-2856-44ca-9cec-2137b1014bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a5bcab-1d66-45da-a2e4-90991054fc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3e531b-1d39-4d59-b883-8708778d6665"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5e12b45-f0bd-4f2c-9d17-d0713bc5526c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fedc5906-811b-4863-a009-dc10401b560b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1b8b4d9-22b9-4422-b1c7-909654780ded"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64b452d1-91c7-450a-993f-de30d7aa9fa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8447c182-c03d-4027-98f3-b4dcdfb483c0"
                    }
                  }
                ]
              },
              {
                "id": "eae8780c-9c12-49d7-aa64-a945b9dfe1e1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dd9153e-429f-4c35-9363-32a1a717c930",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ce6806a-4d92-4c65-819c-1185f94f35dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f6253f5-527d-4851-a2e8-e0dca4d48ad3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09b40efd-0942-4220-bb68-8a3482988911"
                    }
                  }
                ]
              },
              {
                "id": "2d2f4f2f-c2fd-4078-b38a-f2cb3b910f85",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ee33a7a-c7fd-457d-bdaf-55c976137674",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9a48677-6479-4b95-b0aa-065bcb574d01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f467b6f-0610-47e7-9ea3-d2d957d06e68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84eb538f-16a9-4aa7-a608-1700f7fd0c13"
                    }
                  }
                ]
              },
              {
                "id": "59d7e67f-8ca2-457f-824e-34a6b824b2b8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6167d632-176c-4bf3-8547-e18adc35d48c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6d5a55c-7bd3-4620-a093-e8c61b33c577"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74dca4dd-5e33-4a52-98a9-283f70375b2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7cb5e08e-5d34-4117-9cda-f9fa7fea3c42"
                    }
                  }
                ]
              },
              {
                "id": "ca697217-22d0-4478-97f8-64a38c9c5593",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19dcc77d-5d1b-4fb1-a9fa-577fa3dbae88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71077bd2-1377-417c-bffe-32fef968352c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94c91bfa-554a-4514-99cd-c6f92c187a6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "422612a7-46d9-443c-a655-830a198d4782"
                    }
                  }
                ]
              },
              {
                "id": "dd4b5e77-5f0a-447e-84f7-e5b832582208",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41bc7575-1188-4d97-9af9-75a62a4dcb63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06f984fd-a9b3-4b9d-97d6-4f0058f2c69e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "179f296a-c502-4b71-8b23-840505a4adf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7a84f6f6-ffd5-489d-b555-e351b6d97a60"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ebb91d1-8385-4b20-8b37-75782028bd01",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eda3b270-e2af-40d8-a0b2-bd3d398d1d14"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09378d7e-1ad3-4cb3-8917-2ad7087c20e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eab8258e-fe83-4d5f-a03e-90b46c533c1c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd0dfc65-981e-4446-9cf7-d9133df3ccf4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "906523de-9086-4e80-b418-7a8dad7b2e65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a226a23b-748c-4bfb-a32a-cba6c5df2bcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9e574a3-a1e7-4939-addb-c648ba2b61a1"
            }
          }
        ]
      },
      {
        "id": "be1633ba-f102-4325-9223-8f3cd8c3a866",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fc80abfa-dbe6-4efb-9360-81202e261f8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bd82d03-7cdf-41b5-8040-5963adaf7c1e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85a7c602-15ff-4d16-99c3-192a6133c644",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385e18b7-eca5-4f10-a004-1addbc6de74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8554df5a-137b-428f-9dc4-7590fabca66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda672ce-f12b-441e-bf7b-42cd228f8ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "971aeb3d-9b47-4840-8e95-20246f4ef75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf96b3b-cbe4-41ba-9fce-3008d776c04a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a059c5-0f70-4819-85b9-2e1351824e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba040e3-335b-44ba-8444-b61e21366131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb3b748-3244-442a-95d8-cb1222519e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "677b8e14-3918-4bef-87ff-3d8d72709d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684d645a-24f1-45bd-81c4-3fe9b6263881",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6109e92e-04e9-4fc8-aa72-b386f1309df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8564a815-bb3f-47c3-b163-b46b298a9bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e932c4e0-17eb-4942-9cb7-87148cd6972c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e723dccb-3731-4d7e-b4b6-43a443417699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a94f23f-e546-49ca-8918-c2df8abfd941",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccabd0f-802d-4516-89df-59adfae30647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c5878c-edb1-4e78-b764-53ef899456d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6292a6d-c4d8-42fc-a039-f6c0a37bcd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de22bc3-e4de-44d0-b12c-5ae24e71365b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670f2a10-bd00-4cc5-a233-564cb3431891",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e654757-e74c-46d3-938f-afc70b1b3da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eaf83b0-0161-48bd-9085-9016952d7f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc964c9-1fe5-46b4-95db-ea2e4b051bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdfa8c1-cbb3-4720-ab4e-437f3efd7259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc437354-8dc1-4ae7-b663-1b070fada783",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d14cc1-092e-4fa9-920e-5e11cf6b45fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cee0c5-2488-47e9-b9f9-bc458fe950c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536bbaef-7b20-4312-875b-da5f97be8fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8d592d-dc7a-4f7a-9dbd-f0087355e0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f41535-5ee9-456f-95f6-f54226ce11be",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d03073-c055-413d-bb3c-6a26b880eedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3eb5749-6225-414f-991b-6956575093ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79ef86b-9fd6-43e7-8071-a3955f0e39f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b5050b-de40-42ca-b562-66020971204c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327f4bbf-61d2-4ccf-98c4-43bdaf6802ee",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebac871-d84d-4b11-88cd-209973c6c475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a0a647-f617-4246-a9b0-c05b7d5856ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e09324-4c8e-4e8f-93ab-5716185acaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa047ce-4e99-44f5-9829-3edefaeeeb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6415fa-8123-4a81-a5bc-bb59a705fcbc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e47364e-4bf4-4e3e-9dc7-80621188fa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4df73f4-553d-4e4b-8afd-fbe3f948bc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f951a9a0-dcfd-40c5-8673-3d668c97f8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57706b2a-f7d1-4089-a1f3-4823d04d7c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed926f8-402c-46b0-9101-42b69e1e5506",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a3118d-c834-4edf-ba0e-f4104d68e735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5318b762-5b26-455c-b8e2-6f0d54aa81c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768f1a78-6e8a-496b-95fd-01ca963ce333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1753b9dd-8ff7-481c-a88b-89a12db6007e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f227f7a7-90a4-461c-bf18-925bcd2e506f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82611e8b-9298-4125-b0cb-7b43de9942f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b73d8a-b7cf-4f8c-8fc3-7c1a193716a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7063e1c4-6b9c-42a4-9336-d3c27ffe277d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1199db9a-b2a1-4ec6-b712-20528e799d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae743ca-f7ad-4374-9828-f50b1e80f0aa",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7e60d2-73ae-464c-8597-c94efbc0df12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77a3400-9f9f-405f-a0c7-8d677f8ab6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5911ac09-5bc9-4e45-a1a6-0ae7fea669f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d13053c-47ef-4d39-9640-0341827e5b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5ebf73-c0f3-4981-8419-c877406ab71e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fd3fcf-f43f-4aa7-b1bb-ce8c1c684503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70464233-13d4-4b0d-ba8b-be031fdf2184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6ec116-d1fc-4e13-bea6-f626e3dd4ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2324bc74-dd0a-460e-bddd-4631da3e3404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e75ea0b-acf7-4dd7-8ee3-87ab5c94dcdf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e35a69-e120-43d9-bff9-f1c7f4a04ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ad3011-5678-498e-94df-c8507cd6af94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c331df8-6017-4837-84ff-107646af1fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "37fb7e97-7405-47d7-a6b4-a5060f7227e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8149ee9f-7450-474c-a488-c310fc30cc00",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8006cb2-0195-4855-ad80-c28b3af8ed40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd2853c-5f29-4d94-a482-039ec4731ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd93dbc3-8cd0-417d-860d-91061ebf80fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "783a4d8e-dce6-4e3e-9532-434d85f61bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea51424e-c3c6-40ea-af6a-6e548dad5613",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf46f0e4-1595-4e06-b177-d60a411c0b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cf942a-8dc9-4ad8-bd89-fe0aca7e2f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92244a0a-2d41-4791-b9b9-a5434c85095b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b30e0a54-50d3-4727-a99a-2a8e57756988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b189eb7-3d74-4c91-85ca-cffbde5004c4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0749ee-e058-4f65-b233-ab588919b64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bc2aa0-68b0-4ca9-bb8a-d339445230b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f308441-0f67-4989-8735-88b5ab72b440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "290b39f1-474a-4828-a370-9417a6bb368f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40d15d0-ed8c-49e8-ba27-07c1e293b12d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb004b7d-2ba2-4f4d-a7e1-5af83b4e99f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c1ae8a-a627-468a-87ab-0058e17b46b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bda112-8000-4721-81b0-1e41a7eea3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d38aea0a-6153-429c-aa2d-e04d7abe8cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6e1ee5-7f3b-4f68-8e20-756a25ee9c63",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cafd5f-7d4b-49e2-b2ea-4c7bd01c375c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bec49db-cd6c-4be9-9678-286cc8212c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19ee340-8dfb-446a-809e-ef3f5d7f6a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62b17079-2e9d-4a23-b2fc-fd0b24ed5875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39f94f6-4352-4391-8d78-d132502966e3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c347046-20df-4144-9be8-142bf4d5b095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0b3a4b-92f0-4f6f-8b9b-ea6002c4d323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3ee377-7e55-432b-8e55-6991645ea588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1396a6d9-a06c-402f-9231-436ea4bf948d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97322dd-34d0-4590-afa1-5e45007197a2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d13913e-f0c1-4b9e-9081-071129426ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870e63b1-31fb-40b8-9a8f-85d10bbf6c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3f772e-73c1-4271-a309-59cdb8d99c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "169aeafc-089c-4390-ac71-facfb9433941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b637ad51-31e6-49cd-8d3a-aad2999376d6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3692072-80ac-44b3-a904-acb23bac35c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1dc7f0a-f828-4612-bd6a-b7b05e5e21d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa4d312-c83a-4af9-a2c3-0582a5be9d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4a6f11-1d26-4ed6-960a-b5d116033b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db9db00-7c21-4129-a0d0-062211b0527d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a40aa6-b7be-4848-a2c5-205bb706030e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bc6a2e-fa81-4637-9a95-a066664531ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e93793-bb95-445f-856b-1c05b2b5a813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d11a747a-f990-4138-adb0-9b8a54416e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e940243e-fdaa-4b53-942e-557544b91db0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2e0f40-ab1c-4264-bb38-7bf140b05fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94299065-184d-4a0c-9f72-d99ec1ac70a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2916272a-cc0b-41ef-aa5c-7746c295fee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e7d7d5-62d5-46b0-9c0e-663d3fcc2232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa177a1-25fd-4336-93ea-00e03eaed369",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eff2207-0fff-4967-8a9f-46de60306ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ecaf0d-95bc-4131-84eb-d3da9e6a20fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582a2468-fad9-4864-8b9f-5e6ad91a7934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "249ad1b9-1476-42a7-9d2f-6f0c33ac1d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38b02c3-5dbe-4702-9c84-16c01002411a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40758e4-26b6-44ef-abe9-709d48109dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a09caba-e2ae-409e-8fa0-6219da6d1ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ab3a2e-f8d5-4214-98ec-cde691891017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f27eec1-ccbc-4277-8202-315edc6f495c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bde7c7-d6a5-4edf-bf76-6c74c30763b5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfb3472-8456-4258-b916-23b8b92cb341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebeacaa-e58e-4b86-b96a-2382d38ba823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ad4940-94e2-476f-b8a7-d2fb18e8aeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3041438d-ad6e-4e78-94ad-7040071bf4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71448cc8-7663-46ef-90a2-f279c7d10072",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1c932d-23fd-4ee0-903f-736975a33cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ee51e1-b15f-4d39-9366-d2b6033d6b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b9d99c-edf7-4b12-9e23-3d8682dd15d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d4a6c4-5128-403b-b251-54e1c0603e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb3de7b-25d7-4f17-8308-1274f128ca4d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37876b0-385a-4d54-93a2-7cb21d177773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ee78cd-8830-4f47-96f7-b9c18c48f959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7a5883-bcb0-4c78-9fac-52d8a6237b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8834e045-b288-40c9-930a-c612de0d93e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a0d924-8ebb-454d-a030-cb7e70a9827e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fe5136-d64b-44a3-ae30-7a9726b6fecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e17056-bbdb-413d-9a2c-a8ea900ae057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f469c5ef-7edd-4327-8fc6-349d10fcb0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c61fde-29fd-4fa0-b96d-678d22acd3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faef58c6-44a5-4996-be51-05bf994b3b0c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6ab71b-943d-4932-aafc-f4e33da7c4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b6eca5-90ab-418a-9092-c66e6541e531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e6e775-845b-4299-8469-dafce7b4a108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f84951-2e12-43dc-8441-1435786b5590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a228d4ba-1302-4d4c-9776-600740457222",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d263d3bc-adb2-4f45-8a62-4746cd6cb913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60afa2b2-65e6-4514-b56b-c26487fa7f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d677ba8a-4379-4774-bbd3-11bc075402af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7991c356-45d7-46a7-af1f-68512bbf0833"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "61ee808e-ec4e-4b7f-8b33-9e3a329d55ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c683baf-634d-4785-b78b-dc1dcd9b3503",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b4f76f-8911-440f-810d-37c667261732",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1161fa8c-9503-4f62-bcbc-af5aa7e40856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b1761f-252c-497e-b799-3f3b8f0c2407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cddd3be3-9954-4fe7-b174-9fe92a6343c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ba46ae0-13c1-4f4a-9123-59899d91226a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1edc5885-df11-4233-85f4-227bbee34e0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b100108-72d6-4503-a744-312312c404ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6edf799-aa06-4bd4-826c-639cec22aa24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53bbeb42-f133-4219-8d1f-53a35a351985",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f448747-1ae9-4539-8d6f-9fc6b88bcfc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7073a36-09a4-4c10-ad29-3f6c27c3b357",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93b1cddd-c73b-486b-83b1-671da0d55226"
            }
          }
        ]
      },
      {
        "id": "2d7d433b-6a94-4663-9b6b-277d63ab026d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "013cdfe4-17d9-472a-930a-010a4f6ed9da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02980d51-eee6-477a-8620-2d48336eb32b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "69380687-d4ba-4b3b-98fa-f7195f1b7d7e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db547f3-8a48-4657-b490-e13f650c1c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2eb9e2-d912-423b-9066-532c0f257e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36899c4-2334-4808-a6d4-9a4cada216b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "04509c10-7716-4216-b209-5e08d351014a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f8cc4e-0b65-41a1-8e32-f4b0489f810f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15199479-abb8-4842-a155-205971c0de23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5154b25c-8587-48a3-83c5-e5705997eb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09ab895-2f72-41da-8704-960ed75dc231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd27bd6-7e86-4080-9319-04b2b3fe7ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb1323a-0283-46b7-98c8-744b6628d254",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dc7a1c-ced6-4f2b-9e52-9f4cb689b0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fe76ba-8e79-4be3-9685-85ef1eac83a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79867c9f-3890-4ff5-a4ec-924327722d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bd4b3e-d82f-4945-aebb-cc2a1cb49c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3c5d58-445b-4a93-9200-51c23ea4e564",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4f62f4-5bbe-44cc-a2eb-79ed1b853b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eadf732-a360-415c-a1a3-a42516083523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b773d78-3190-4a9d-bd68-5f4f86c485f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e520d3d2-f86f-4a26-9228-21a15ea9c206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5fbf20-c90c-4a5f-9128-291c8de4e4cb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c06384-c806-46e3-8c02-1fd3d6e81b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203d8923-5fb8-4319-a5df-ce93da12ca29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb11f660-5bb0-41ec-a991-1a7606dc7632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee04d7b-8884-44cc-a10e-28046f514c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44654451-e387-4166-b390-9d4d9f8d4e22",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe52620-27f9-403a-ad5d-56433e9926f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01af337-cb82-4570-b254-0119d2d2fbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a28169-8a8d-4fa0-a697-8baf33b78885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd381293-eff5-4bbf-a56e-c6644ca07ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8680cd6d-f8a6-4871-afbb-41882cd15efe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18dfb91-5f40-467f-b3f9-9fa7ef7be4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0190b0b-d9c5-431e-bc0c-8271e9e991ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eabb307-c1a7-49cf-bbc6-008f91a0de94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "00a53955-d68f-4a23-84be-810ced6109b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8df9ce2-5159-4f2f-95a2-83dc40acd401",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7990c58c-38bf-4239-bec7-4082b22f76e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73712f7-74ac-4098-a996-91a6f1bbc6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432da13e-9506-415f-b28e-312eebe9ec1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae57f21-c410-4965-9bd8-4e6cf502f921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228f7a9d-c7da-4d37-a9bc-847690f212ce",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4538a0ea-17a0-480a-bb82-45049bd04c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba1c6a8-41e3-4aad-b049-d6a815158638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b43209d-0679-49d2-99db-8b104d6a20fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a55119f-a0a9-4576-b291-f68ae9682975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a498491b-fbdc-4ca0-946c-ccd230f43c6a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b8226d-bf58-4d1a-a5ca-8618d4ee95d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9298c620-7425-4672-8587-38d274c98dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fadaa8-b447-4c79-9734-7318d2b7ece7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9675b8-07ec-4e8d-94cc-d6eac13f367e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb664e7-3d84-431e-a15b-7f09092a2177",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be2f020-71ac-40a6-b123-39fa69f36b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85502a5-c1dc-4b54-8c98-37eeb7c219b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69206bc3-20f6-488c-9f09-f262d713b967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6b16c7-1cb3-4544-a7c9-63f989b1df52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e322872d-6664-4b21-8c83-df5f7a49e90e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bff601-4b11-4f0c-aefe-5feafe0084a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357c2aef-6252-4ad4-83c9-938cc5640ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de3d566-2f17-40d1-8cc9-2deafbdd9e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5310d985-661f-4f59-a8b6-b33824bf287f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98126489-1e34-427b-a695-6a538a89a2e5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67772e0c-4785-444d-adcc-3ecd951ce0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8a59c7-a04d-457b-bdef-30a15e227c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c15f710-f026-405a-8f49-2686978f0ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45345533-2152-47f5-9d64-352e187ac3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430f882a-fe86-49e9-bb4a-01a70b06ccd4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba63a420-1093-452c-ac74-7075be641ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76a5d568-6e11-49f2-8c56-b492c571bb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ac5e11-8310-40d1-bc65-dbc512ec49b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "950f659b-de0e-4047-8b9d-766aee4d0d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145a87f1-5e05-478b-9c0f-e640d104be84",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c24521-de89-48ae-92ec-808cfd7c3b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4c3727-c1e0-4b4a-a9f3-56322002e502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961c0bd2-ce0b-4e83-a493-f9739b0e827c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "057e4a4f-7586-48d8-a8ac-f524131de712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8882d2-8a72-4826-a24b-26201dc6d809",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1838ec23-8be3-4924-aaff-dd527328d3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5672f43-3910-43b5-bc39-8c1a8bde21ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c123d3-2570-48ad-9211-d4d89e4843c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0dde7e-d887-4fcb-a3e0-26a9e027af9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ef52f7-80d3-4566-9918-a9ff870dc6d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd946d7-fbe2-4459-912b-3e85948909e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74510e19-93b8-42cd-aeea-49afaee99368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7e9b64-da80-458c-88af-b876dc3a1820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfdd91e-6c3d-4001-bb62-be2fdbec588d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0456dad7-8a37-4c6c-a0d2-7e1e3198c0aa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff18471c-9d81-48c2-bf93-e52cac9678bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fad6e36-d84e-4ae4-86df-b9158583b8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072d1f49-2a82-4271-8869-11a5ab1ac79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a65aa157-ae3d-43db-981e-61a70e1333f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbf2226-a717-459a-8817-f7a40a9248d0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b20e4b-ff8c-4e45-abc3-7aff390e0756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0daeb779-ebbc-4134-82fc-8a83f00f456c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5279808-2769-402c-8399-db9c8c139ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a1e41c-fddf-4725-9133-8eb1a24acdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61052f66-5f4f-458d-a98d-117c0163a897",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22323307-9c95-4b03-b4f0-243ca164acb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e367ab9c-0ece-4e6c-b0be-4a41d456b3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b83512f-ca0a-4195-9e07-53bb90b0b3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdf1122-cada-4b77-905d-158286146655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8308f03-c71a-484f-a2dc-c1607efa2286",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af132f4-c4a5-4637-97af-ca6d2a2b6f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749f97c0-6dcf-4bf6-ba29-f4701fe22295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015a32f5-db3a-46d1-8aaf-95f456a8b406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13c3bbf6-420b-4907-bf44-4ef1796adb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfbaa84-8c3c-43ae-9d97-cff9b835745d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e2d1c0-4b88-4e05-8afe-cb1ef97cc243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a750a6a-ed89-4024-a430-33a412c09e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50810c9-01b7-4c50-ba5c-0ee7510d767a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "487cc553-6bf3-4ed0-b21c-9037bcf2dfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a5a685-25ea-40d3-9413-0c5d570042eb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bec2cf3-9788-40db-8b3e-c80cbdd0d7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b8035a-58e8-4603-97b8-1cb6cc2bde0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce04d2f-c1a9-4f72-8f9f-b9d89beb1c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5c9ccc-da2f-42b8-969d-e605c4a599a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878fb2c6-8753-4f20-ab16-6e606f409a05",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab5236a-de1c-4082-9ecc-1e87a50f1cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a88943-0bb4-485e-afa3-107f340c9055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c9909e-e8d0-4d96-ad89-2623855fd0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec311ec-a2d3-43d7-a454-0708e0f02112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bedd8ad-d71a-4a7d-b4e4-aa4d617b09d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494f7b24-7ac9-4472-a601-fb067e14d110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6131ec13-0c9c-4690-89ee-fa4850f091a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f0bb2b-e359-4d8f-b46e-1f4909da0a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5736d5-7a5b-4661-bdc1-e1bb1202a86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8384564-b7de-4eed-bde5-9ce58919b5be",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a4c55a-64d3-465f-ba3f-c76f66cc7e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca53e862-baaa-4e68-9bc8-db59c3327afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c852dd4-bb30-4409-9901-1f4ad7952341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd44b84-0a7a-4fe7-953a-ca80c6e9821e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f13cb3-8eb7-47de-b892-a3893a1b3bf5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d712d4df-292f-4fd9-9852-987192e41597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38202791-7ffe-493f-a1cf-521daf5ebc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263cc436-2039-4e9c-830d-f2df0402bd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7499e0f-a3a4-4924-ba54-4af8047bff19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13206875-eab2-468d-af5f-f520efdd86a1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d05f33-e7fd-42e3-9132-03a8a17a77c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4a4dd1-e77f-4f04-be32-8b229bbc9032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6184218c-0f59-4072-b132-352dc405077f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e437b91a-0766-4998-bc86-90b2f8f04774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eff1060-8560-4f20-af9b-8f843d48f8ef",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65446ae-cb51-487a-94f6-17f589038d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9acdcb-5af0-42fc-8825-07b067a3de62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0449ba32-2c31-4b6f-adc5-d64a4d3b83a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59595f3-d7ff-4849-b2a8-c89bb79bfb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2885399b-d2c3-42cd-a817-70b629ba22b1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4219ff-ff1e-49f5-9d0a-66bf5199e17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c16263-e0d5-4c4e-9687-fe38035f714a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d72ae3-7c25-4bba-ac47-da35f2f78e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca62c1f0-422a-43b7-be48-2f023099f5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baf21e7-bae8-41e7-bfdd-5e60f2fd1328",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4d4732-4942-4298-b21d-319eb9a5b0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b850dbe3-d73a-4dfe-bc3d-c2b2a2665db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaaebba-c3a2-46f2-b946-884ae0b16ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0f2154-3803-44e9-93e2-42024005d559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3358109-eeea-42d3-a9a2-fae1cd23c4b1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ec3541-c091-4e0f-a151-acfe1f63860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490310fe-5a94-424b-9823-dc4fd9677f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f7d5aa-de7d-4055-817f-088a9faa52f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5855205-8f5b-4a87-8669-0eebd3bb9649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e4e2f0-7d1b-4063-9545-2ba7e93c934f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eda15d-eb66-4b12-acd9-d092f1572477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e96bdc5-f2b0-41a0-94bd-b047323f0100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f10697-6a2c-4d01-bec1-0d5785fb0673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf49881f-fa06-47f9-a5ca-a14ebb772ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cae3aae-8166-4967-ba7b-241b68cc4032",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16be827-dc83-4588-a781-833dfaa4d770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e38e024-48c7-4de4-99ef-72019a8db889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41abefb7-df8e-4b6a-b41f-9352b6f16848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ea44c9-a439-4d66-ab22-912bd4a36724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3980c4eb-d91b-423e-b45e-4123de2d79d7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd4d785-1334-49ec-aceb-a165193cd802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa101ec0-f9a4-4a16-9572-118954dffaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de206a1-7c7a-4f5e-a761-419f358c77b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f4ca0b-e0fb-4a08-961e-5679c82387b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717f96ed-26df-4cab-96d8-e491f7371521",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df9c831-db4f-424f-a740-820cab130b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75171bb2-c4e0-48c4-81a8-8a2327bcd93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18eaa405-0e3f-4419-aa7b-2506a6918612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbf2e77-76e1-48bc-a590-909d5356dcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e751d82-9dbc-4388-93bc-697b9c97a4d3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1857f654-6877-4526-ae9e-8ce46b3131cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43736c96-9939-47a1-a949-0970edd2f340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83f05fd-0c58-4f39-908c-d1a6e222c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "545d3e31-c743-40be-a007-14b7442548bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6f91eef0-067d-49a4-a20a-4bd904b3c5f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c37c9b0a-f733-4773-ad47-5de8e617f3a3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b989c73-87c4-4a3b-9308-eb3f8c22b541",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48d9bb0f-b2dd-4bcb-a0ad-962a5e20bf58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2961d6fe-d7a4-4bfd-9469-942208cdc44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d3d3d82-6217-4a7e-8b6e-52666171aacf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d19857bf-74a2-49f6-b3ec-2b0041fbed36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be9899c0-484c-4c9e-b6ed-9ad5dd8b4f2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec600d0b-37b2-4eb6-8db1-1765d5683c90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f915cd1-6d87-4158-b3fa-181eb5b3cc66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc134831-54fa-4359-9018-886c6ebed3d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2928b9a8-9bb3-43bd-91f3-21fe722baf22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e3fc4a9-494c-4cb5-946a-e97522ae82d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3635cb28-5af4-4c5a-ba2a-05dc85d69cbe"
            }
          }
        ]
      },
      {
        "id": "e658165e-91c5-4b37-a48d-2159f858ebd5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "546472c5-9344-453c-a158-691f7096e82a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f8df32b-62fb-46b7-b99f-3c1a42bd45af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7180147e-2de1-45aa-b056-76746452c34e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41cce57-37a4-40ec-bda4-92baec567138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5af28ab-d769-4001-b1e2-69d480b31129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44a0b2e-5f6e-4907-a2d8-fb6d876e7bc7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1e889b-a6b0-4e75-b374-9c59dca69a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6185296-3f00-4c58-91d2-9eac241543d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f8f905-af56-4bb8-a5c6-fed691469a03",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065c9915-6109-4498-8af7-091fccdd66de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e349f79e-72a0-42ba-b3d1-3dc489203288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067da800-9779-46d9-8827-eed097bbe9cd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5df917-8882-4556-a573-fa08af615066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1be312-492f-4be3-86ff-155d3010e9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fdcca4-9c70-4022-90e5-cd2b8be58f8d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc71e3b5-233c-4a99-ab18-c93b3b21be9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a57241-9b70-4a10-9999-d28db07b65b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7da504-f203-47cd-ab77-bccdeea15150",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25124d9-b3eb-41dd-b03a-a135dc37c43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7405fced-19df-43bd-94d4-8b02303f3ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfbd2d8-0180-4b50-b812-f42d7a0e5704",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466c184e-9326-4c4e-845b-27eefae0bdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bd57fc-3b67-495d-85e6-fd6c30404dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0a9363-81f2-4e2d-89ea-ddd5686db24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12da5b38-e334-4033-afe2-81e10f5b931c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3f491d-7182-45d6-9b75-20593da42926",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06618b3e-3455-4838-9587-49b62cd4c3a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff9bf41-4b29-403a-9916-fcc196ed61dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f530962-537f-463f-8233-cc9fcd440dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074ddff9-77de-45aa-bc15-424683607174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301b8925-6535-47b7-91ce-5b61bc2e1bac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9495a374-a366-419c-93ff-43520a3f0c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aec20df-53b1-479b-beba-445f0f4d56df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49de519-3766-4ede-a95a-20c94cbc7341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e12a71-f062-4ae1-ae77-bc28e74f7503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfea878b-4f3a-46da-ac17-cd2f8914ac1d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a36c73-1822-4279-8621-c2680898bb17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ba700d-1186-4092-88eb-e9d31214b239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6849e02-9733-47e5-a2e0-5735a4716afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068fd509-c98d-4090-82bb-de5517f80468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fafc6d-e233-4a9a-a230-179bfa3a42d7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f4571c-d4ae-4e11-94a9-07c2e5f94d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6a93df-3ecd-47c8-ab04-0983f34c3a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4263b94-2e17-4c79-b46d-f618368b19c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3e6c40-da9c-4b3d-81ea-4ca2ffaf3e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddd9bb5-5bc8-449f-92e6-386d5d4b718f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791e7cfd-fb62-4f6c-9cd1-d5a2db430008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56873c1c-6e5a-48fe-8a35-174df89baf81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beacdbbf-d6a2-4817-96ed-e1035b98b41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72134dc2-49f8-4710-9e5d-e5142c3eb360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f89b031-cabd-4db1-b59a-dc31ff30e820",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb8a9b8-8d07-4339-9555-7e4144e34086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdce499c-f76b-4ec9-8be8-c23396297b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e266903c-ae58-438c-b401-c84877c6d5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc130cb-b504-46d4-8969-f292252ed2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c27186-3947-4229-91ae-dda8ed705196",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee4c085-1e7e-465b-b89c-d078c4b6c520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a64922d-c04b-4051-81b8-969fc6f64257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125d11e0-f49c-45a7-80c7-4e7ab2ba3ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0055843-adee-4f14-a448-121e04def35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f01f08e-70b9-4678-9211-d58fcf8dfdd7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8b6ad1-687a-44fa-8d87-3342609dd75b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d594f08-b44b-4027-9e0e-f013fabd1a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25f3655-4313-49cb-9402-6fb7ff9df02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b36c53f-e63c-4ef9-b274-f9d2a991cb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd00257d-bbd8-4bb4-8edd-0e7c44b92e94",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00059234-ab76-497d-9eb4-23632e467b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a358150-808e-4354-83da-fb52eb92c079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5db0047-0b95-4cd9-a154-0579bd071bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f869dc-a94a-4834-8e8c-16cbbbc4dfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8665f4aa-0d2f-4285-9b13-9746f473f162",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06fb91c-f251-4798-acfc-274efe6cd141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aad8819-aa90-4157-bd9d-82b7cb0656ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67048b7b-a697-403c-9443-b245681db1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa885f5b-59d3-433e-a775-4f0afdc289f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4e16ca-271a-4f28-af79-ec049a6acc4f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538e9c62-fe32-44f1-8742-1ec29b3acb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59ebed0-146d-482f-ae55-267764edb195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c3b3ac-2668-4151-b1b0-82595c2262f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebde3dd-e1c0-4549-a88e-9fd6919f683d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f4fb92-6bae-42f3-b59f-17c2ea6296b3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2cc1a5-ab02-4e37-8b9f-f24263df37cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc801629-abc4-43ab-8dd8-a947765f4237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa303355-1c8a-43c7-b56b-777182dc75af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3293c6de-5374-406d-8e50-2c3502cf9e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9fb19c-ed3c-4a5b-b04a-da2dea1af02f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c224cff-d71b-4931-bc4c-1de51a899ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4372cc2f-c136-4559-88e4-9f53046f2a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cee887-53da-457c-87de-2d195f9c3977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e2cfe8-5a6a-4cb3-8680-8ea96585c30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155cbd39-20a1-4bd6-995d-5eec8261c12a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55262fb-dc9e-430f-acd7-f93eb8bc836d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f17171-b061-4e2e-bb57-35bc765b4c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719f5007-46a2-4ca7-88d7-d5abe524dd96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f71b7f-2b06-4590-8674-467a38632599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713af054-8203-44a4-8e15-a7cfe651e824",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab795f7-04a8-488a-bceb-c815aaa67c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6c0004-f538-4826-ba7e-40fe2d6490a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45df9926-2e08-4944-9eea-81f00cb64461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938f2614-2605-4ac3-8239-7c1e03d2eb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7a0816-ede2-4292-8b1b-5fa6e80e53a0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e654d34-cd97-4ded-a318-627ccddded36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cefaa1-52e6-4ac8-82ee-d5717b7a767e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3377ed3-67e8-4970-b4bb-1be07c94b0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce22f412-8192-4612-802c-af9f9da8bc3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807b5169-07af-4db3-aed0-50f11b9474d7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4556b84-d889-4882-a3af-40361395c72d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed5e8ae5-9157-41d7-82e1-d22bf309846a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7129e70-f6c0-49c5-b8d2-95192599e56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d668ce1e-ce19-439a-bfad-1b3852d9df94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1293e9a2-5807-4449-9909-fdb91f5daa34",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8114c430-2ab2-406a-8734-ff6ac242fca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc6a4ab-ecbc-4be3-8f32-3535abe09312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8b9cd3-7ac7-49fb-99d5-ebb779c9398d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a2be43-73b6-4d29-929f-5d6bb333609e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8979af3b-68e7-4d0f-afef-c5044fedb2f0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795cd7ce-237c-4101-8827-523a4e2d3aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a356f544-edad-4549-a475-5c4ebd7336fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fb4594-07ef-4779-b498-27d5df47b6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32593123-d0f4-417e-b30a-6fbe772b8179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508399f4-6817-4362-94bd-ed52579a1b8c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a09fa1-0ff8-4450-80df-5b2fa8c6d6ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e40303-ae25-46d7-b7bc-5023787d2da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07554d80-b5c5-4375-9dd1-7af8acf8b7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348811de-9dee-4a5c-8c68-dfb446a4936e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849ddac7-e761-48c8-85fb-0b3b8c6d8d67",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9125dae-2f92-453d-9704-1f0669253f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f4538e-e0a3-409f-aab9-48af83105fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea346d2-d3f4-4c8a-a3c6-f8842bd963fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cab6e9-363b-489c-8c41-b0ca3fd1176d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c51f1a1-20f2-4103-88b8-7b2ef5636ca3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f93d5e9-2cbe-4d74-825b-dc7d9bdb6232",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b3bb7e6-9136-4137-bea5-7aa38400ed2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1e45ce-f358-49d1-b757-ff668c8d6d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2924c5f4-b866-4319-9fac-14785cf0bbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f53c92-a637-4a0d-92cf-262260b98e70",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b7779b-b377-427b-b7a5-a7182759edb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7290582b-7de4-4b60-b0de-93067bc2954e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92fa386-5cce-4d25-b011-06f272647080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64c9888-186e-48eb-90e1-099af0eac50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26293092-bcb6-4028-ae6c-1a94da68f94c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e625a6b-ebaf-41a7-92a8-c2dd8982a942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dfd78be-927f-4901-9d15-0314d69124c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25672e61-c631-4743-8369-ad405c5e5554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bbb9ab-f81a-4404-9c7a-e26fb329d6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cecc247-ac4d-40b4-a967-485a7f14acf0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddeff41-2528-4de9-91ef-e401d5ffce5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2636f6af-45d0-4771-b015-cc9682523ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471f3e55-b570-4487-91a1-a273f1a1155c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0da7de-4ee2-4013-97a5-194191fc3e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade1147f-31c4-4b0a-a32f-3b32c0e09021",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0861f579-1c6f-4821-b4f7-2c0024d683df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d685585-f68b-417c-887a-726d5bad7649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c29a375-0f4c-44b0-85b9-d85813f29a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bac4dd8-3a00-4cdc-96da-0da6493b1233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e469397-c4e3-440a-8d31-04fae89b10e5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a8111f-26c8-47ee-8641-568d1455960a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3667f3a7-4c85-441e-b1ca-afee356d4f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7bf87b-2001-4e1a-8759-2b05e999db60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a80bf8-1eda-468f-8d9f-b5b08a255a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873b4002-593f-46f8-9fb6-0dd501eff4a3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6780e611-45c7-4df7-a672-0709b1166b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e467e13d-05dd-4ff5-b144-f8bcf7004015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2001420c-98df-4671-93b8-cdda6eb4c65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f92745c-6d35-48ca-8d64-9be2a0ad3fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b3d569-58da-48a9-8b3e-5aa257390948",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8622eb92-a6e4-4041-875d-662318ec730e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1036be-1bf0-4e59-82c5-68d5e9c6f725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7954acb4-d65b-4790-b593-d098907245ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765be7b5-756f-43fc-b92c-2947e9ab28b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6037bc-4b32-4835-8837-a9117294e7a4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48890f1-c084-4c94-96c5-5437261898fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eeb36ed-a591-418f-a1dd-db8bca1742f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d26136-a635-4b73-9c3e-cb2fe10cd7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c6dec0-3609-4d1d-b411-99170eb882bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3f8037-ef6f-4632-8cef-bea4756a7b76",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2aeda33-7ea8-433d-aca1-8a3a25ac5269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d388a6-9eb0-4966-b99e-2e2fa9034495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23ed46f-45cb-4f21-a30b-3345d458fe42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d52e83-24b3-4c35-a949-9156d4f2ca11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560ade92-6b4d-491f-b059-c007871ca2a7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b9016d-3c4c-4b30-bb67-dea64cb12954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a8d9be-1ef8-46f7-9cfc-f6c1b49b717a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097d843d-bec0-4303-917d-e31b2a0420af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28171a21-f1b6-4db1-a3da-df7e3f7502c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e18ed48-6ff2-45ea-8aa9-80228eef6f98",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24889b2e-8c55-4957-8af5-99bdb34cfbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c2e8fa-deb6-4324-82ae-e5cb7ec57016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79655f1-25fd-49a1-a183-d9c958f41bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f1542c-0822-4586-9944-c2ff6609d3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bc5993-1dbe-44f8-b098-c0014ce345a6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4395c68-a329-4956-b042-b82d2c8abfae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0bd51c-6a60-4390-a5f3-6f430c164f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50898a8-1b66-4f1f-8703-f53296cba0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ece909-0c02-4d78-bda5-ad702c60b625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2561b61b-68e6-4f48-9a8b-e804099b0dab",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042ea2d0-bef7-4e13-afb6-cd7501165448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82e2f1d-53d4-4287-9a28-e4b2566ba03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afe6817-ccca-42b3-89dd-b6deee72229b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f916dc3-82de-45d7-a702-fe63941caee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828f25b5-9700-4bb5-8ac8-8d904c2a726e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccc513d-0e8f-4383-b532-5e84d7a1925e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953b17af-51a4-4939-b8f5-282613a6fc7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9033f58-eb3e-49a1-884b-3d1e2c61d1dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66864aa3-315b-43a9-a31e-a7c028d8614a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d824cb7e-d93c-46d6-abdb-094bb368d5f7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8127f409-4749-4322-b1f7-4cca462d68c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdcda4f-782d-400e-8b06-e32e2cfb5865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755bcf8d-416b-4e5f-90bd-d42e89ec09b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e650d439-32a7-43d5-962b-93cae6c3cb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17b0279-9cb8-438e-8d83-6e37f7eff4be",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc9fff5-1dad-46b4-9e1f-fe13114abd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7b61f0-d356-44d2-8e0c-583114b318c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b646a1c0-799c-43de-8f88-a2e6e6f4bf69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21e09d8-bf82-4561-8def-6de6100ec527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a944cd8d-f14b-44ca-8375-eb841ca94eef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0411c93a-827e-432a-b730-37bfbdea4cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ac6277-fc5e-42dd-999e-097be56ee589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf84f93-6778-4c29-ba36-89cadc07361e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c9907e-557b-4ebf-b9fa-71bd15c2d9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4252c9-056b-43e8-9397-27836a9d6f1f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4925c1-9441-4770-94c5-e2504996fc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a420816-1aa8-4c17-a524-5de999554b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f449071c-7c17-4907-a965-b995a4a33a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81992c58-388a-44ec-826c-f906375e8d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d4558b-8775-42fe-bc77-e1a2039f1992",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3bc577-8d39-44df-b148-b3cded40a1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3374254a-e13d-420e-bd93-b0c8ec927629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c704df5-38c4-4486-9be6-2acaa74c6d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875d5510-34d3-43dd-81da-7719810e01dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70059055-0bc9-4dec-aba4-aceb51ef89ec",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e010c37c-cf3f-4bde-8fe0-d9934908bc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ec68e6-c489-4947-8e21-9d09ba327d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4397a2-ee4c-48bb-8933-30a5291e71ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4515de12-293a-4188-98c6-ce4fb4e20e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d1baa1-be51-431d-9636-0de66163c9f9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d998e660-5118-4ce3-8031-f8c0c60fdc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b855244-8840-43f6-a058-df5600af5a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f510023-e570-44ed-a7aa-48937378e4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18852f1b-9eac-4479-b98a-b15c1a73109e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f9090b-2454-4b80-a0fe-1bda556c4690",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d1487e-4c3d-4de5-b1ec-5fd434b4adae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48c90f8-47d0-44a5-91e5-eee848e7a6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5914818a-375e-4ee8-875d-20f0e8a3c729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfddd9a-6454-43a4-85fb-62351d067f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2701dbcc-b7f4-48bc-8b32-694d27544754",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94de716-0398-4121-b2bd-7e2937ff5543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b4e356-e08f-414c-a3e7-cf8041907339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf65f51-39cd-49ad-8005-9c9f79127774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ef94d2-7f2d-4ecf-86e1-47f49e3f2a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce145710-f9c1-4f84-b4e0-104d440da2f0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8eee465-5faf-4a5f-a90b-ded516fe635f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8553571a-75b6-4dd9-9c6e-d704b89652ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d625909-f6e6-4a8e-b88b-b7b957f5be80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33dc9599-b84d-44dc-bd88-d2122478b64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb94983-b19b-4472-addf-771cebd4d5e1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd43dad-37ce-4b84-8f00-91681c6b5719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a73024-044a-4b26-9bc8-24a7a2d2a286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03635614-6926-46b9-98e9-cc67f66a2f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc440efe-5339-4b26-9d11-208053fbc525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3eb897-3f25-4a17-b086-235ee41fcf4c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20864827-c967-4cd3-a276-0bc93947c756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632def72-4751-4ccc-aa25-d2600063eca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4960376-825e-47e6-8bcf-dc82b48e59e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10044b2-a1c8-4bb7-89c4-9e6f1d98f5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d563241-8b70-4a02-9350-d3825c923c9a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960b2870-8374-4ab9-afa4-2f6c9394edae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57dba2df-f7d1-4691-b2ea-1da7a288f101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b9c509-a5ce-4e15-9ece-0fe148a7cb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc5aef5-ae20-4575-9075-45b80d45787d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed05ebf8-960f-477c-b4f7-e99977632962",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab18f7a-b8c9-4aca-84c8-ae9dc272bbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08ac2ce-7fb3-4f57-aec7-cb94e3b034f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2a7dc1-9b83-41df-aac0-5503b00111f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233f245d-3516-4a73-b7ba-a503e1e32887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac35568-adc9-4de6-a71c-e81779186ea3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b59d73-888a-4ce2-a164-73b359b7741e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51479d02-d761-47be-8071-fe55b5725688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b298e995-4c3d-4673-a190-f15e36cf8c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd55318d-a237-4d67-8a26-19e4c7f92d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7d41e4-451e-4116-b3bd-2eb6cea8d7c4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8877700f-515a-4dbe-89f6-8b016f8b8636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ff16e5-fcac-4269-85d6-025da14a1840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a68f1c-5613-4850-a13f-678ada487ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4dbcb3b-9eab-445d-8881-6c63c2fd7a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4de712-aa56-4b2a-9cd6-e004534d6078",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603267cc-5882-4435-b8f1-d69908ae784a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4584f82-a248-4c06-9e52-162ee4567650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cc3045-9430-4f6c-8749-3e0addd1cc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b55d44-667d-4176-9e02-045a7053ea65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336fbaca-dcdb-46cb-8f04-f43a42c05239",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd7f961-7447-4302-83b8-60be467a9a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3622666-d2e0-4386-be50-f7a7ef78a205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66fabcd-73e8-4353-9050-944894be208b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f89357c-8968-4c2e-ac1d-20af4984f9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5813c37b-0c67-4b6a-87ba-d90c79e261c6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040be3a2-95e9-4f98-910d-82b4ac582031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f893a3-1c55-495c-b3c4-66faff474307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e4f4f0-d449-4d13-81f5-c865c271a5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de53d1d-8c0e-40c3-82ed-053b84b0a409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee358a92-b146-4d0e-8cb6-e26809101133",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fe3b4e-0723-452f-b615-14293789da87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5629d1a-fe23-4545-9d80-fa9101def706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33af248a-a80f-4a26-b232-b2800ac785bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5f03c0-5be0-45c1-add8-6548eba4c809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933081b4-959f-41f5-b124-4be90b71695e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e972a9ab-9bdd-4dd3-a1f4-e57ae8e2bd1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e208592-b8e1-4522-a4c5-9026a4f7f1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffabf76-a5af-46b1-a540-42771446ba23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a02e1ff-8c75-4fff-9995-d4eb8342582d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6fd7b1-acd7-4446-81a2-8f2f2c46ff6e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefb0e6c-1bd5-4ee0-9056-45c2be29b62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f53f30-132c-490c-91f1-0dd0b8d70c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7695aa75-5c8b-46fa-bf93-8f1997411097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0693d2-b722-444b-8644-24e82196a3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6caaeb-c850-499d-9a30-be3bbb21cc0d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4cfabf-27fc-4064-9a5f-e97187806911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4230007a-d7f4-464a-b9e8-47372a70d565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f7d074-61a6-42aa-8eae-a6548eee9972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6ff856-bf24-40b7-9e96-530358e82a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f127158c-cb19-4512-9f2a-0068eb4d3d56",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3721ea24-f51f-456b-8c67-58835479543e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cd467ae-bcac-4e8e-b346-0d7f9edb2276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e9f371-19d0-47ea-8cfd-ee1e96f4f481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba67179-e0c2-4cfb-be9c-18c2911b96ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b3590d-f9ee-487e-9cc5-9187a5f9794b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98d9b03-50e9-405e-bc0a-c5467b909df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299976ff-83b1-4e53-82c1-1a6bc01615d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "259f7e57-5530-4c00-8730-156ba87cf154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45eb82a9-f332-4387-8d3e-fd53bca98f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6c18bb-163f-48ac-b42f-1af38e1b6a0c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025441bf-e9c8-4101-a2ed-3698be634724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bffdb5c2-ddb9-430f-afd6-91d309108015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8eeafad-3053-4772-8c6f-36f7f5a29937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773a9ea7-3b49-427d-9b31-968326b24d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c93205-db85-42ea-8362-ea519058db07",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670d3e49-390c-4ea4-a3bd-70c837d1a76b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41fd85f0-9732-424e-bb90-3724e55bd39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4368905f-41e0-4231-8a36-c7f7f1283c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf059ca-45e4-4b95-a19c-6b7d2e5f8257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42614bee-3fc0-4d0a-829b-5b62da4b43e0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c856c4d-2725-438d-928b-d372ad3e8093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be31365-323a-4238-afb9-34ddfb1c0b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a30cab-9c8a-44f3-8a78-772789774e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55c3a1e-99f1-4900-8568-a898c8032df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7c01bf-8566-4ea5-9c07-0b601cbc206a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b207ee-82da-43ad-9727-14e7f00d6bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abcd94ae-f80c-4df9-906e-f586905fab0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d2c2eb-17b7-411d-b479-8318e888a429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0e0811-b2dc-4b52-9de8-f271c7999de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c3176d-2173-43f8-b823-9c539ca34eb8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f25b8c7-61f2-4603-9dfa-5b30fcb27fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9eab6b-51ce-411a-8040-71f901e53dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1293db-c319-4872-b956-9e7cd05c2db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edddd9ef-dfaf-41cf-bde7-95aa3ccbaaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d251fe-77c6-4c36-a010-5d6c95530574",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc0180d-3836-493f-b661-6f2b10730aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260d0226-533e-4505-a1ba-5335bbaaf31c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c587ace-52ab-4729-aaae-fd5d72ccb3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74739124-e93a-44f9-8d03-40078becdaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb08ef9a-15af-45fd-b585-fe07c56ec00e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c03800c-97e3-453c-b3a2-a16b35b7aa39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc50a33f-0280-404c-b907-94d0e007f0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03b7e36-18ec-4cc9-b7ab-9479989a639f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90668a4c-741c-4503-8f3c-bcb926583b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a732fc06-001f-4db1-b0c2-51d9a62d1cda",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd21811-f085-44be-930c-57b0f4d54779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9f0020-37bc-42e4-bbb1-0de051fb71cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5651a289-7c6c-436d-b728-42d8c7b7627c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f8ab5e-ae6c-4985-8539-17417b994d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2a1c9e-018e-472b-98ab-f547ecbd26ab",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be81515e-a0d0-4ce6-b790-b293c7542edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2165a628-68f6-41c1-b8ba-fd0ad081ac20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e87070b-1333-4022-a364-e80397e6be94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75e7e26-4ed0-408b-9d8e-72462d4ae7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbda7c2-0978-4f44-bf6e-b713928fe019",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b2573e-f881-447b-82e4-91b8611b812c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60727eda-8832-4f3c-b4d2-f1ffad4136d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e9ae2c-1476-41d3-a788-6fabce40988e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4108491-92c3-4d53-9ca6-be8abd5beafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eafb64-36e7-441b-bdcd-821831217022",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fc05df-93bb-4a09-a852-bea6cbe0d161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36195e66-4775-4e16-918e-ba1a25206d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3102c176-0ad9-4500-b9ef-78b6e81d402d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f195f96-183b-4075-bd82-e79bc9fc72f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95924cac-323a-4978-8d54-7aeee629d8ae",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706c3cfd-c09a-4c67-a9af-1e2cb4c03bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d48da123-946a-4d79-8ef3-7e6e1b2d100c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d7ca43-6cb0-4f3e-baa7-8d2bf43eb2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb242c2-cab6-4bd9-9ea0-89bc83a5b3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15c80d0-612a-4de8-a68d-4d4ea8b3e1d4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbdc943-7a33-4172-b2dc-cbf37c91e44a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f6595a-2160-41c5-9edf-eb442ee32562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a20858-6cb8-4a4e-a261-cd5bd2234daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1682ae51-bb8f-4ac8-a378-d630a4669454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b445b07-5f1e-471e-9b60-f99b4b85119e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428bbcc1-0c77-4c83-b25f-8ac8a7163614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f97f7eb0-3475-4e14-8b8c-28a54e44e7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb13153-3651-4de6-a9cd-9452a4a73852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3879e4e-763a-46f6-a0a3-ecf37c6d1484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8ae1e2-6b69-4bbd-90ca-ed6c9c7ba9fb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56afafe9-a1bd-4488-af44-d9e12c8c7758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9062153-cec7-4106-ba7a-f83cd930e261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060c65ad-74c9-4c24-871d-119c9a4eb671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41e5bf8-894b-44ba-9279-9d757f495234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f150d6f8-8217-4643-a010-544c6c835a33",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd4c1ae-bbcd-4c0d-8874-9c475bb7ce95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db3bb0bf-a88e-4dc5-a247-3ee54423c2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9d8bdf-b4b1-4563-84ba-4c9b3e06e690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f15772-f8f4-49c9-9b5b-1ae75da0a87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00ad6b8-045b-4a92-9c1c-b15fead60843",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e818e135-0722-4ef8-95d7-7e2c22d2e893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83a8ee75-c89a-4ebf-b5cb-d35b6aba0da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a071f850-e231-4c1a-9897-c06c4ecad813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f92ca79-fbf6-47cc-9cae-72e98d63c582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942eae2f-85ee-4c1d-bd22-80a387bd8eab",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05512700-4228-473d-9e5b-021fb410b4f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15b8109c-2a4e-4bfc-9c27-31c33f5ccf3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73e4e49-da5d-4308-8eeb-5d01766dc958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74be00d8-a9a3-4a99-b588-94969eef731e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d3742d-955e-4177-8957-caeeca029485",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22ad248-65c2-4f80-a34d-d76f9bcb873d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e19f64-c32b-4692-94b5-c12a03509def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d9eb22-a6ca-4969-8795-87ff153bb980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d768fe7-1b4b-46b0-a980-b3848121312e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dac0ad-0084-4bad-a6b6-07c1e0a6d220",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3987feb9-3d55-4afd-aac3-fd36afe8ccbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4dacd6-36ed-4d52-a7bd-3ab53edcba3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94e261e-52d7-4dae-96c5-a96f57d54c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9686765-51aa-4449-a2c1-e7a690a82b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0035fab-8397-4724-9968-79e3e5e032a4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e950baf8-f989-4779-936b-d3cb38063b14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b259bdf9-6084-4dab-ae55-35574cb752df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afd276f-9c6f-4c49-8cb9-38c390129d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd391f8-4614-4ec9-bdd5-1790433f01cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb4dc25-5e73-48ba-a886-8dd4147a8415",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eaf42e9-bef0-4f5f-8c92-f9066a987316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e318276-f1b4-40e9-b06d-39db482c8a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae51d02d-7e29-4492-8aa5-b2055e372d87",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e0d6ce-30bd-4c89-81eb-aa6c7dbf1b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425dcfa7-6ce0-47e1-a7bf-41de2636c95b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3108055-08c4-428a-b92f-8ae0be789a17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf00253-a732-49b7-8da5-772d42aebf7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5551261-b245-4fd8-bd53-15ae9a84d4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8744dd-9de2-4591-971b-8c8c8c2d449e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c528b36-7935-4d64-a074-4cf1a2b33d9d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2ddc92-004f-45ea-80c7-28e8029cdaa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f4611c-452a-4999-96ba-3fa8906e1ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90d2109-0fc3-430c-a24d-04c381a146ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e89017-7815-4feb-a5e1-d1f7fe5e3f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32933f9-3221-4ce5-a1ad-bd05c558d53c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8758ffd7-6236-4f79-9525-b0cb8a6f0e3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc62ab0-c02f-4217-acc0-ce183b2a788d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e7c59e-abcf-4ba9-a5e2-accb3f86a01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec3f613-1161-4794-9275-0e205d7234e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b888d211-0018-4985-9bbf-0f0c1286f4fc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7a9c9d-1fec-47d4-908f-e999f521757d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dd44d8e-f0ca-4394-af3e-c38014a9da65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8e10c7-61d8-4d9f-a482-18f9699eca07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1dbcb9-7cce-4e20-a19e-97f10a194bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19355a0c-f92b-4f47-95f0-eb93dd873279",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc5f436-f7af-4d5f-a16c-431fcb4866d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce153341-541b-456b-b731-528bc32f58f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c542c117-86b2-48c1-8612-70e3a7533184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0404d6-b296-4857-8928-246511f26c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d08bcb-9f32-4112-945b-ddd43526b82b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e987a5-e98d-4291-9dee-29dd1dfee469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994511ac-7ec5-40a6-a94f-199d5ebdc02e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdae5e75-8a41-4a10-9f0d-81227e4d3e39",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a52aa99-b957-4b83-9e70-edb647764b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e29892-d9d0-4687-82d9-3e452594f720",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05210228-63c4-4843-b6d2-57f60614dfcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ae6eb4-4d3e-408a-a6dd-951cfddf790d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6546ee-05a2-4f8c-8a22-66bc949787ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dce3ce1-4a3b-4616-ba1a-08bad524af96"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03f5d9ee-b3d2-4b40-9c23-d088c76749a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a023cb3d-0b39-4f80-bfb0-9b1503e32d6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45b946ff-a707-452f-bbb3-c667ef80acd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d14c100-afc5-4404-af80-21b167cdce0e"
                    }
                  }
                ]
              },
              {
                "id": "3064e949-f128-4fb6-8d2f-c1215591a179",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91f428f4-1e31-4ae2-bf23-7db99f513053",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e4fb6b-86e5-4aae-8083-dc165705dd16",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "95225d97-3ece-440e-9cc9-3c68b8db124b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9745b43-b75c-4ab3-8566-ea3c06443bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "606507f4-3671-413b-936a-d29cd43d3077"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15da9364-e113-4800-962a-5b5b847cbbbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cecd1f9f-431d-4b9c-b173-52f75c9c735d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "725e93d0-3c3a-4b3b-8155-f5c2daf8532d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "836856ff-ae8a-475d-951a-75845a847593"
                    }
                  }
                ]
              },
              {
                "id": "20673d8a-bb77-44dc-b7c0-fa7f5aabd00d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1ed19266-19c9-4e30-a8ca-3c8fdb3516ba",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8456dd0-857d-49fd-aa7e-1621e34ae9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "496a3784-a4ee-4df0-8719-b893537f9606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e601db85-d437-4a77-a056-decfc4fe711b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ebfd6e-4139-4bbd-93ff-736bea82b45a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8db72d42-5993-42bf-83c4-4d613ad13588",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48252a78-eaf5-4b9c-88b0-cc2de2e5a170",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07fa2a2d-2615-40b4-870b-3d397ee1aaae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4545a360-848b-4510-ade2-c9f7b76afff4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2b56f77-2786-4b56-9f04-68abb2e2a6e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "919383ca-9cb7-407d-a28e-3f90abbaa700"
                    }
                  }
                ]
              },
              {
                "id": "ad8103a5-4982-416c-ab83-bebdbee2e00f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83aa4019-a459-4e4e-bb2d-8f36bf5246d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "566e46c7-051c-4891-b98d-ddc31ba41ac3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84acfffa-bf87-42f1-b2fb-89f1f3354867",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b98b0e49-fd92-4805-a929-b8aef0d1713f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f947aac4-87fd-4728-8f3d-44f1f4f78509",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a62c55b5-f9d0-4a19-adcf-b7c920eba66d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21a25235-c8fc-4d53-a700-3f618a2df1e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f100c3d-ac19-492a-9666-8a755649e4b3"
            }
          }
        ]
      },
      {
        "id": "7a06e3d0-2118-41e7-8d57-56b5e50ca28e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9c300b9b-9c3b-49e0-a798-18932e44100b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d642f70-07a9-4732-93cd-2ee0998cb81a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3e2d28b-9874-40fc-bf68-a10ed837efa6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b016d983-4aea-4182-9173-f77aa6c0387b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "20737330-bceb-4bf2-ad5f-a4eaec043a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdff066d-59f8-4b8e-b88d-8d228b331909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46aeb627-86e4-40bc-b76c-58d2084c6fc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2b745ca-0db1-4e90-b513-a1a359fefe77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "948e1645-3b82-49c9-9ba5-ced36c7ed012"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a63ea83e-af01-498b-8cd3-481bc7bae470",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59b95287-5d93-4902-8849-65e4bdff8c3e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa308eda-b3ef-4606-b4ea-d9b3d80ed0e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ab0efb34-77ce-47f4-9e38-662e16bf4967"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d728f6e1-e18d-494f-be5f-5527a6e2981e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89662545-c07f-44cc-81d7-30c91c62ca3d"
            }
          }
        ]
      },
      {
        "id": "be4b406f-39fc-445a-8410-cc6ade243ba0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "560cf364-a84d-449e-b7a4-9bd07a69f197",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95314bd3-3780-470c-a169-3a5b23b91da4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5163a3ea-2b13-4fa1-a21c-31fd424ff6bb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f340634a-03d5-4922-8116-8cdb37bcce17",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c03a8845-ba59-4045-ac2d-8f9ab3cf3816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e219f272-88a9-45b7-b629-01c4e60d2d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa40c5e4-fd9f-4efb-99ff-3dc39cb2d35e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "847f5b83-f5f1-4281-ba86-42c4dbfad766",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "316c1492-851c-45f8-ba30-04ea045cdaab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ab1f225-157d-4d0b-a6c4-97e8254d305d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b52d12db-eb70-4aa3-8500-54e1a6505551"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e7cf8c8-32ca-4931-8bd6-096c822c20e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6289b829-1578-4946-95fa-087ca58e0681"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fb4e0d2-3f40-4ef2-bf74-8b4eda169961",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22b3845a-2559-4acf-bc65-8865723818a1"
            }
          }
        ]
      },
      {
        "id": "8bd8654f-adfb-4df2-8b8b-541a7f2aacb1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9a2ac418-b3b1-4911-918d-67ab071aebad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58e5d692-8904-45e5-a843-3fb8d6aaec13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "682274da-0049-45b4-b955-8d1b6190acd3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7234366-e79a-4703-808c-cf3d02b96769",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddc98f7f-ac49-40c9-aae0-b3b6fe75a9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c589d137-575f-4b50-a468-e871837ef29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa993ed2-e206-46e7-98b3-7f3cc26c504e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e3652a1-7bfb-4c5c-8b97-4b4639c05fc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eef315cb-a802-4510-b9b3-e35ae619c3d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8114c65a-9889-41c5-a7e7-a6c77ae60acc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d2b78d9-6388-47dc-a902-c1ac200ca2e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee8e05dd-27e5-4156-ae09-b023320e3bca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "293bf3af-0bb0-4b69-a9ac-2128dc9546e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bada146-41d0-4e5e-b1fc-6467a242094b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d693390-9815-419c-a367-beb822864ac9"
            }
          }
        ]
      },
      {
        "id": "530a017a-02dc-4e80-9db1-a50498cde6c6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d389f5d5-cc87-433f-bfe0-b852b54d4374",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78bf3839-0d66-4df6-84ca-3ab10ab0a611",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3d6e5e62-aa22-449b-83e4-0c556569877d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7da48aa3-f935-49c0-886c-b42800d9b67f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f96f1665-929d-4e30-8f58-e9c91cb7b890",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 114.32982456140354,
      "responseMin": 6,
      "responseMax": 5916,
      "responseSd": 418.8784565851975,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702686928157,
      "completed": 1702686969787
    },
    "executions": [
      {
        "id": "8911be6c-4060-44ee-818c-c3f5479c92b2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "054dc39e-7755-4c38-9edf-d02579372f67",
          "httpRequestId": "14165829-abc8-4e7e-9d9e-7073cd99a3b9"
        },
        "item": {
          "id": "8911be6c-4060-44ee-818c-c3f5479c92b2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "302742a4-fcb6-4ac2-826a-eea2547537a9",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "6a0c9895-68b4-47bb-a96e-e42926b1baea",
        "cursor": {
          "ref": "032d0ff1-6a58-4b84-9c72-a826055dfeba",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "15b00117-e013-4b47-95e5-e990102a0c84"
        },
        "item": {
          "id": "6a0c9895-68b4-47bb-a96e-e42926b1baea",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "63376550-7f06-4e52-a450-2b4b522dc845",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "fcbb33bc-a5da-4536-bf28-4bdb46771c27",
        "cursor": {
          "ref": "c4e55a91-4e43-4d98-80a1-869e253779f4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "44d46393-ee76-4be7-8bbe-b9c3fde3a87d"
        },
        "item": {
          "id": "fcbb33bc-a5da-4536-bf28-4bdb46771c27",
          "name": "did_json"
        },
        "response": {
          "id": "710dbee2-0a7f-45c2-b923-0d82ded0b7bb",
          "status": "OK",
          "code": 200,
          "responseTime": 433,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d71b8e-c062-4643-94f6-657b458a76e7",
        "cursor": {
          "ref": "60f8aef4-2298-460c-bdc1-dc4d5dafc283",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "660a8277-194b-4b2e-8a85-0f39b59f2c55"
        },
        "item": {
          "id": "38d71b8e-c062-4643-94f6-657b458a76e7",
          "name": "did:invalid"
        },
        "response": {
          "id": "983c21a4-86aa-40ab-8728-276b27b8431c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1143,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d71b8e-c062-4643-94f6-657b458a76e7",
        "cursor": {
          "ref": "60f8aef4-2298-460c-bdc1-dc4d5dafc283",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "660a8277-194b-4b2e-8a85-0f39b59f2c55"
        },
        "item": {
          "id": "38d71b8e-c062-4643-94f6-657b458a76e7",
          "name": "did:invalid"
        },
        "response": {
          "id": "983c21a4-86aa-40ab-8728-276b27b8431c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1143,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1623c84-4546-48cc-ae7a-a4be9f2e5f96",
        "cursor": {
          "ref": "3017d051-50f9-4cf6-8e89-839f0de34960",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2f2a391d-85a1-4989-9b94-4f63588bb758"
        },
        "item": {
          "id": "a1623c84-4546-48cc-ae7a-a4be9f2e5f96",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8a64a85a-3a30-437b-b925-de5d3082109f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712cc65b-5423-477d-8b84-40ab15cfc853",
        "cursor": {
          "ref": "1b8c6513-0489-401d-9a87-9a810daf5649",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d16043d1-1b74-4db8-88f3-f1eaa77f62a3"
        },
        "item": {
          "id": "712cc65b-5423-477d-8b84-40ab15cfc853",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b68681d8-32d7-410f-bff6-4eaf54350ff8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b903c2a-d9fe-4455-9111-8ddcb5bfd916",
        "cursor": {
          "ref": "e03ceb0c-ed58-4035-b8da-7245e5c9d190",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "947737a9-b188-4cf9-8924-fa2add354058"
        },
        "item": {
          "id": "9b903c2a-d9fe-4455-9111-8ddcb5bfd916",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "10015a72-554b-4936-b50f-53b732038235",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 176,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2309ef-18a8-441a-adb9-dd92bdd405be",
        "cursor": {
          "ref": "854d3d08-ee82-4976-b49a-555cf7d82c7a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4511f21d-3fbc-47a3-a090-fa29b9662928"
        },
        "item": {
          "id": "da2309ef-18a8-441a-adb9-dd92bdd405be",
          "name": "identifiers"
        },
        "response": {
          "id": "82e9e903-963e-42fc-9729-427acfe770cd",
          "status": "OK",
          "code": 200,
          "responseTime": 209,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6954491c-7a0e-413f-aa67-2ffc873b7b15",
        "cursor": {
          "ref": "4b99f82b-1b4e-4cb1-a792-1cda19924887",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "adeb1f14-27da-4331-8538-27683bb0475b"
        },
        "item": {
          "id": "6954491c-7a0e-413f-aa67-2ffc873b7b15",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "20f6e593-7c03-4a0b-917d-51b075e5e8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f74f68-a90e-4af8-8068-fcbba4139a9e",
        "cursor": {
          "ref": "e52435d5-8d68-491e-81b5-ffe5babec8ae",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fb2d52b1-ced0-4033-aa94-688ca25c46da"
        },
        "item": {
          "id": "d4f74f68-a90e-4af8-8068-fcbba4139a9e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "79a1aa15-7142-4a6e-b7b7-59b0f0a83630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203bda9c-515c-44a3-a84a-5fc3f649990c",
        "cursor": {
          "ref": "60465b2f-5cc3-44bc-beb0-bc74f8bf68e1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "34a27afd-c186-4c56-9cb6-c450ec938350"
        },
        "item": {
          "id": "203bda9c-515c-44a3-a84a-5fc3f649990c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1dafac59-c76c-4fb2-bc41-a1bfc62fdf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c869203d-32f1-4310-b6ca-e54df06f7cd7",
        "cursor": {
          "ref": "1599ff85-ff69-40b1-9270-5c6eeb99a834",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8b4b201e-a09c-4ff6-b46d-a6fa8a1f1819"
        },
        "item": {
          "id": "c869203d-32f1-4310-b6ca-e54df06f7cd7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0e7c72fa-721e-4588-a5c3-81428b28f693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26e083b-e7d4-4edd-9ac5-a89e302b7738",
        "cursor": {
          "ref": "6cce84ec-628b-4454-8891-e7debbdf0216",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2e88d258-0d8e-4a97-bf86-19267a9d8b1d"
        },
        "item": {
          "id": "c26e083b-e7d4-4edd-9ac5-a89e302b7738",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "049bb9d5-00f6-4171-9381-51d78aa3d5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b18b30-ab92-42f2-a61f-191d913f6195",
        "cursor": {
          "ref": "d7af408b-fc88-45b5-8158-dad3e7d78e68",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "308e3600-2fcf-4daf-84fe-273ac6c353dd"
        },
        "item": {
          "id": "40b18b30-ab92-42f2-a61f-191d913f6195",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a314bbaa-df2d-49a0-9214-3e1e6b915510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fb3a41-eb8d-4419-823e-e9d43d971c8b",
        "cursor": {
          "ref": "38d20da5-5df4-49d9-968b-793066938836",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1432a7dc-8100-4443-a359-8d9be5849ee9"
        },
        "item": {
          "id": "c5fb3a41-eb8d-4419-823e-e9d43d971c8b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6cd8397a-0e8c-4451-86b0-e7a6bb742cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c18cfd7-39a2-4794-a8eb-7c147e700214",
        "cursor": {
          "ref": "97d762cb-19c1-46b4-827a-7a972606f604",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cf4ac7b6-ee23-49c8-8e9a-9c28100aeadf"
        },
        "item": {
          "id": "5c18cfd7-39a2-4794-a8eb-7c147e700214",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "521a855d-5c39-4a17-bcbc-3f8bf45709fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5b2655-0c45-4bb4-b422-62bb0e931d75",
        "cursor": {
          "ref": "0698b3de-970d-4ea8-b01a-07cee73f6417",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "25857ca9-d787-491e-8abc-3e3da79c9853"
        },
        "item": {
          "id": "bf5b2655-0c45-4bb4-b422-62bb0e931d75",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "efa3dc17-c360-48e3-8a86-4ae13eb474d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8052bdb4-cd84-4cb2-a1de-737dbd4d504e",
        "cursor": {
          "ref": "ea3b5d0e-5c92-45a7-8641-97f946d442d6",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "109bb05d-c886-4028-9233-f4ca8a72f114"
        },
        "item": {
          "id": "8052bdb4-cd84-4cb2-a1de-737dbd4d504e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "03788ead-3a4e-4d15-b641-91b7a3e2d435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c4e783-af6b-4997-adf9-34dc09dcd98d",
        "cursor": {
          "ref": "50581035-f506-4ff1-a29b-7c06030d0277",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7d9491b4-27a3-447f-9864-2e9b297f6f59"
        },
        "item": {
          "id": "52c4e783-af6b-4997-adf9-34dc09dcd98d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ec5f937a-fa8d-4886-9676-afb658c44ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64581ef7-04d1-4f15-9632-575096ba4535",
        "cursor": {
          "ref": "139dd343-f93e-49c8-b798-e42fd8d23f38",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2254580c-2e74-4f9b-b3b4-6c3458d53c84"
        },
        "item": {
          "id": "64581ef7-04d1-4f15-9632-575096ba4535",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cf866ed1-6537-4be7-867c-a0ccb1463990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95543506-ccd6-446d-8576-2f115b4035f0",
        "cursor": {
          "ref": "38d7c4f7-9e2f-4791-9d59-5e763b08da9c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a6c32a7b-f52e-4a0c-a4b5-e6bb72c66b17"
        },
        "item": {
          "id": "95543506-ccd6-446d-8576-2f115b4035f0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d4617efb-e72e-4a9c-ae65-945d0d884fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cad702-0e8f-4afd-867c-6cde470758c8",
        "cursor": {
          "ref": "baca9a35-122e-4a4a-aa55-0b5a7ce1bfa8",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dc155346-dcac-4c74-b4de-162d8f111b7d"
        },
        "item": {
          "id": "59cad702-0e8f-4afd-867c-6cde470758c8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8b7cb56e-9e98-482f-be1f-c0b8944cb121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d53a26-1141-4c5f-a2e5-ef5f0b803257",
        "cursor": {
          "ref": "730fa0ed-8ba1-40d9-ab08-6259603f4af9",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9e002e2f-297a-4797-a945-39034e138e97"
        },
        "item": {
          "id": "b3d53a26-1141-4c5f-a2e5-ef5f0b803257",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d9018cc9-8c23-4076-a84b-ec8509ee315a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24034d8f-fec0-47d7-a379-3b32220d1dff",
        "cursor": {
          "ref": "51a7fe24-5860-42db-9b10-9770f3e42eaa",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5df4263a-ef91-44c2-80d8-d5a5092d4d22"
        },
        "item": {
          "id": "24034d8f-fec0-47d7-a379-3b32220d1dff",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c5496813-2ef5-41a0-88ab-17427bc452d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c13feb-6f78-4380-bc0b-9c36db5c7050",
        "cursor": {
          "ref": "0d249e0d-bfd2-4450-a996-25834cb69ddb",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "edb07eaf-ad0c-4bb2-aaa1-6c295a78622f"
        },
        "item": {
          "id": "20c13feb-6f78-4380-bc0b-9c36db5c7050",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8047e51f-4c64-4f98-a25c-1ece2202715c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b425ec-852c-465d-b853-9f0a1be69a4a",
        "cursor": {
          "ref": "c435b1d8-112b-441a-9409-b6675389d2c8",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "af4ed998-2599-42de-84a4-871f563b1b42"
        },
        "item": {
          "id": "96b425ec-852c-465d-b853-9f0a1be69a4a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "76b7842e-146d-4955-ad2a-59e3dcc88b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66001cd-9666-45af-a918-45f61de54da9",
        "cursor": {
          "ref": "3c0cb208-54d0-464f-9058-1c0523e5ede7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f162b4cf-7182-4e55-843b-b59475b28ffc"
        },
        "item": {
          "id": "b66001cd-9666-45af-a918-45f61de54da9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bc9cc4b5-57e8-4764-9317-2e88dd56b7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94094fe7-b5f4-4022-8743-715ac56f0e26",
        "cursor": {
          "ref": "bcdf0571-1654-4363-93c8-1d4131f2922b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1d5a37ad-c079-49b0-bf71-34148c57f677"
        },
        "item": {
          "id": "94094fe7-b5f4-4022-8743-715ac56f0e26",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a9427f4e-4624-4003-ba5d-1d9f64703829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ab11b6-0a26-49ea-a99d-e6d30da80987",
        "cursor": {
          "ref": "6510f842-8fda-437b-ae75-1621dae4141a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "37dc92ec-526d-4d7e-8082-59dde7c9207c"
        },
        "item": {
          "id": "c0ab11b6-0a26-49ea-a99d-e6d30da80987",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a5fbbe9a-1716-434f-94f5-4f8b7ca6a249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57700a3-5dbc-49cd-9341-8dca8bb4d2d2",
        "cursor": {
          "ref": "67e426d3-ae8c-4d0e-9304-efd66bd7a963",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "583d5548-ed4c-48eb-83be-f21c563a0b46"
        },
        "item": {
          "id": "a57700a3-5dbc-49cd-9341-8dca8bb4d2d2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "da60ff7d-abce-441b-a82a-af81848545e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d2740f-6e99-423c-9092-41d9a6ab240d",
        "cursor": {
          "ref": "e8a70e9b-5b76-424b-bd53-a9d14f019d64",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1381986a-8fa4-4878-95f4-a3621d1a2687"
        },
        "item": {
          "id": "a4d2740f-6e99-423c-9092-41d9a6ab240d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "47676be4-b3be-40c8-82d9-5f63d34b7843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aafd585-2f0a-4e00-924c-decdd347c32e",
        "cursor": {
          "ref": "4762aabd-d574-4f2d-a69d-d9eb1d27b5d6",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5e485f61-51f6-49d8-bae2-a12263f9a5e6"
        },
        "item": {
          "id": "4aafd585-2f0a-4e00-924c-decdd347c32e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bc3847ab-c1ba-46b2-96bc-7011ca43ff79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dc99c1-362e-4a38-89f9-7bd32977202f",
        "cursor": {
          "ref": "4fa6b474-1a59-4edb-9ad2-c1a5a607fd87",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9f1b0f96-7010-4295-b687-22b503e47cdf"
        },
        "item": {
          "id": "40dc99c1-362e-4a38-89f9-7bd32977202f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b35a9e6e-90bf-439b-8942-8be16a372e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07d6bb3-13ca-41bd-b65d-cedd5aa77773",
        "cursor": {
          "ref": "812d8a08-be3a-413a-bbea-5067f93c13c7",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f3786ed-ab15-4076-90ce-93953d239ff7"
        },
        "item": {
          "id": "e07d6bb3-13ca-41bd-b65d-cedd5aa77773",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "99223402-b2a9-4466-a84b-42f907a5487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07581e8f-fed8-4a8d-a586-c4c44c2f0352",
        "cursor": {
          "ref": "25c5545d-73fb-444e-bea1-e077bda863ba",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c650f915-8aa9-4be5-9c3e-71eda44b4a82"
        },
        "item": {
          "id": "07581e8f-fed8-4a8d-a586-c4c44c2f0352",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "315af2e4-9874-47c2-ab93-34f9bade906e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f6249d-0974-40c7-9a63-b8a8e651cb1d",
        "cursor": {
          "ref": "952c6b85-3533-4e74-8a6d-a81b37ab6aad",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1213ed70-467d-400a-b055-9ea24327ef0a"
        },
        "item": {
          "id": "37f6249d-0974-40c7-9a63-b8a8e651cb1d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "259ba2e1-a493-48c5-b51c-d602fe8c15ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c53371-aff6-487d-afba-4ed5a66b002b",
        "cursor": {
          "ref": "d06d3ca4-89c8-447e-9d94-13d49467ce2d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "29b9875b-daaa-4f0f-be64-fc425d6dfe77"
        },
        "item": {
          "id": "c3c53371-aff6-487d-afba-4ed5a66b002b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "796f3c3a-786a-4681-a810-42c98c458b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a628b7-45a1-4f6a-a9fc-bedc4af4ed98",
        "cursor": {
          "ref": "201069b8-854c-49fe-86cd-131a1bbf774b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "685a9e22-9ed3-4341-bd83-8b7fb299a561"
        },
        "item": {
          "id": "b6a628b7-45a1-4f6a-a9fc-bedc4af4ed98",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "20556faa-036b-46a6-a7b5-0c26071a7824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d25d45-3e03-48a3-b734-0880a06a6671",
        "cursor": {
          "ref": "22927846-b03f-4fa5-871b-82e56ece166f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6c94ab24-73de-4827-9bc3-afbb672033a1"
        },
        "item": {
          "id": "d1d25d45-3e03-48a3-b734-0880a06a6671",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c953eac3-91c6-48ae-9f15-d9e3a51e279c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb51be17-0722-4f66-accb-f1386be0759b",
        "cursor": {
          "ref": "3578af1b-4e0e-426f-8cf3-c4141f4d99fb",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d6612e2b-417e-456a-9a8b-66f3ce5647c0"
        },
        "item": {
          "id": "cb51be17-0722-4f66-accb-f1386be0759b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5af05a70-1b12-4951-ac8f-8a13128418d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f669e90-033b-476b-b16b-823b2a763a5b",
        "cursor": {
          "ref": "527ae701-70a1-4ded-a318-6d95a60a39c0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d68876ea-2b38-4e24-a789-5a4cdf2234cc"
        },
        "item": {
          "id": "0f669e90-033b-476b-b16b-823b2a763a5b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "88841788-2494-4857-b130-d43abcda4e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca0e4b9-e286-45df-82c4-a10b05145aac",
        "cursor": {
          "ref": "83342a4d-f3bd-4913-8615-9f3fc25ef293",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7d44fdd7-93ae-4cac-a745-44a659981954"
        },
        "item": {
          "id": "3ca0e4b9-e286-45df-82c4-a10b05145aac",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0befb51a-394e-4f60-92ba-b981b8d0b45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fba8f4-b10a-426d-bd7f-9aea526f7db9",
        "cursor": {
          "ref": "5269b8c3-98b9-41a0-a78a-7d94cfc96b41",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1dba9496-75c2-4fad-8224-948bae6a3147"
        },
        "item": {
          "id": "c0fba8f4-b10a-426d-bd7f-9aea526f7db9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4451eb4b-955b-4c0a-a074-a735bfdd6969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c2ffa4-4680-4faa-af2c-503746ad0ef8",
        "cursor": {
          "ref": "f15779dc-32b2-4dd5-93d7-1a0f5f702a74",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "047fca2a-1f5a-4146-b15b-397443d99fc8"
        },
        "item": {
          "id": "a5c2ffa4-4680-4faa-af2c-503746ad0ef8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "01d12b57-44c0-4684-ab29-83d4801a37a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9ce040-1006-4ad4-b42f-3094b5a555f3",
        "cursor": {
          "ref": "21230a3c-1032-44ec-b48a-f56c2fa0e730",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5a82e946-0df8-49a2-b53b-21021ad6c4c9"
        },
        "item": {
          "id": "8a9ce040-1006-4ad4-b42f-3094b5a555f3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b8030c58-d675-40e9-aa6c-f7e45932a1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88d798b-cd4e-4113-a1d4-5fd580af014c",
        "cursor": {
          "ref": "37a88c64-b622-4725-a913-f083bc78ec1d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f11b744d-2169-4c5e-8935-e3a904699805"
        },
        "item": {
          "id": "c88d798b-cd4e-4113-a1d4-5fd580af014c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9fc75989-23e7-4a57-861d-b741c0d8f041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a92b267-d06e-4258-8649-99dbd8594e04",
        "cursor": {
          "ref": "12e832a1-f0a3-44cc-be68-90d17385f5e2",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8eb95410-a61e-40d3-a3eb-356e11eacdc7"
        },
        "item": {
          "id": "3a92b267-d06e-4258-8649-99dbd8594e04",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a9f8040b-28b0-40c8-a6d1-e81ef5367b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4635d12d-7861-4c04-8cc8-471181e53ee3",
        "cursor": {
          "ref": "bfa07c3b-0329-4080-b90f-6aae2083c527",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1aa9f332-4f8f-4c35-92f1-62ce1ed0ed05"
        },
        "item": {
          "id": "4635d12d-7861-4c04-8cc8-471181e53ee3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aec00daf-fbd2-4c85-a982-844155608d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e684fe00-437c-4c29-9bdf-542204766686",
        "cursor": {
          "ref": "83c47980-b9de-484e-abe5-45394ff87daa",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fd8ed16f-0898-45d0-b069-6be7b519024f"
        },
        "item": {
          "id": "e684fe00-437c-4c29-9bdf-542204766686",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "74745f3a-a4ba-43b2-8848-a022d4a99807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37efbc70-5536-4404-8e08-4826b9831947",
        "cursor": {
          "ref": "27104188-2e17-405b-b2c2-f92075eabd35",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1ff37e1b-094d-450a-8ca4-74ddede249e8"
        },
        "item": {
          "id": "37efbc70-5536-4404-8e08-4826b9831947",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0b6fa78c-eb16-4624-b795-dc3d37afb71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b49576-8f99-4f40-8956-a7b43f03af5a",
        "cursor": {
          "ref": "0bf605ec-8568-41c1-99f1-5bc1d616d765",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6d32582a-0e2a-498b-aa16-84eac3bbc398"
        },
        "item": {
          "id": "c7b49576-8f99-4f40-8956-a7b43f03af5a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "45315262-10ab-4ae8-bb9f-2a0c6145bcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f2fb0c-1dab-4c71-8b54-24bd141f0a88",
        "cursor": {
          "ref": "98d48f2e-b91c-402e-9661-97b760ed6cce",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8f08ac63-203b-4ef4-9981-47a4192dbed9"
        },
        "item": {
          "id": "a9f2fb0c-1dab-4c71-8b54-24bd141f0a88",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0b78554f-96ec-4106-b3f3-f7334720a3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ff406e-53a2-41a2-a5b4-277fb599bf28",
        "cursor": {
          "ref": "ce4cfa6e-4fbc-40c6-bb18-ad6e76c5abc9",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c66dfef6-9cd2-46e4-aaa2-43d20b99a343"
        },
        "item": {
          "id": "05ff406e-53a2-41a2-a5b4-277fb599bf28",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "12751ad6-0ed7-448e-96b5-97136a811230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056c5d61-d9cd-4b1f-ab42-6b907da52c14",
        "cursor": {
          "ref": "ed7213c2-17b0-4f18-92dc-7aed92da1849",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5fd56702-15aa-4237-aba8-86ca4f2ca53e"
        },
        "item": {
          "id": "056c5d61-d9cd-4b1f-ab42-6b907da52c14",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "821ff6b5-a5fb-4d8a-93d2-da3aeada7b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd7d70d-8078-4c9e-9fc3-60b1d0dad770",
        "cursor": {
          "ref": "8ec69712-4a5a-462b-b088-5f1c659905c4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3c35fc18-ece6-495c-a638-dfc05cb0224e"
        },
        "item": {
          "id": "1cd7d70d-8078-4c9e-9fc3-60b1d0dad770",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ea2491fa-7fec-4619-b746-370e75892cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b429ea-be2f-4001-a36d-de3cf6efb87b",
        "cursor": {
          "ref": "c5d85021-184b-4f19-aae9-de89002b3632",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5d823c62-3434-4d93-b097-ed67c028e8d0"
        },
        "item": {
          "id": "f9b429ea-be2f-4001-a36d-de3cf6efb87b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3b658f8a-ee80-4e81-a398-9087556e63c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b71a97d-ea71-4d01-93ca-d363c6b4697d",
        "cursor": {
          "ref": "dc4ed348-1f93-4125-88e7-afda523a339f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d76c3ec4-5e71-4e75-bba8-a6b7a7dcf42b"
        },
        "item": {
          "id": "1b71a97d-ea71-4d01-93ca-d363c6b4697d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4743ef60-5902-4a21-8cce-d39c0315a9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e914ceb-389a-475a-9198-8e4660fc193f",
        "cursor": {
          "ref": "dc322ee6-ba3b-4f1d-8531-015aa4af3437",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e41183e3-27fe-412e-920a-2bb8adb8b2c4"
        },
        "item": {
          "id": "3e914ceb-389a-475a-9198-8e4660fc193f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1b965984-beac-4810-b267-4271a535ace3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3551eb-61b6-4f93-bb39-31d6613c7cc3",
        "cursor": {
          "ref": "8978c837-0e25-494a-acb9-d0d0e2165de2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ba56a1a6-9f0e-497f-9c25-53be4e6da001"
        },
        "item": {
          "id": "8a3551eb-61b6-4f93-bb39-31d6613c7cc3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "585c0bd2-11b7-4776-8c44-0ae854505c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f5a1a8-4d7b-46bb-8e61-bc1e88a35991",
        "cursor": {
          "ref": "4f1367d0-d281-4fdd-9cf4-df243d997e82",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ce2b802f-5062-4015-90c3-d89788e6d48d"
        },
        "item": {
          "id": "90f5a1a8-4d7b-46bb-8e61-bc1e88a35991",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f5aebff4-7f98-4733-b1db-a4093c9f4c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9bae9c-139e-450f-9ae9-c43c8bc8d22d",
        "cursor": {
          "ref": "277d310a-6934-4101-b604-eed7857bc6f4",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "287b85fa-b87f-45a8-8798-0cfee6bf5767"
        },
        "item": {
          "id": "3e9bae9c-139e-450f-9ae9-c43c8bc8d22d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b1402895-2d6d-475c-9abc-69741f622eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9caba5c-f11c-43fa-abfc-59d9098630d8",
        "cursor": {
          "ref": "30969cfb-492c-444d-8b1e-76603d9fa850",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c514bd4b-e938-4857-880e-ad938721c797"
        },
        "item": {
          "id": "f9caba5c-f11c-43fa-abfc-59d9098630d8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f58f81a8-1a3d-4bf7-a174-86295c7b19c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4493c2e2-6b84-498b-a36b-45241c80173c",
        "cursor": {
          "ref": "2e4d3f27-802c-4e23-93c7-45e9254d24bf",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "30794fba-da65-4d1d-8326-85000f1f4c7d"
        },
        "item": {
          "id": "4493c2e2-6b84-498b-a36b-45241c80173c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bcc09977-6617-46a7-a2dc-7d29355b8096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05abee1-922b-43a6-9644-e71be7955536",
        "cursor": {
          "ref": "7ff94882-6e7d-4d9a-9a96-37aae7312957",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cad9de1d-b08e-4940-8f05-17dc38ae03ef"
        },
        "item": {
          "id": "e05abee1-922b-43a6-9644-e71be7955536",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "177a977d-5ebc-4924-acae-f172908a35be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9cbb6a-8abd-4391-8741-68e18e13b709",
        "cursor": {
          "ref": "a9f3d069-528e-42ca-96f6-1d727e2b446f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5e2efc7b-1af9-47e6-9101-754af2c4d113"
        },
        "item": {
          "id": "5e9cbb6a-8abd-4391-8741-68e18e13b709",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0e3245b0-3124-4930-b5e7-077b7807cb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf67947-58b9-4515-a45a-a3f2c44597c8",
        "cursor": {
          "ref": "62b6f324-5188-4cd8-80e5-89a80965eb96",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "27a8e32f-8304-40cf-b6c4-8bd7b1098da4"
        },
        "item": {
          "id": "caf67947-58b9-4515-a45a-a3f2c44597c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "78074778-f7e3-41b1-9846-ef3007466535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8cf332-12e2-4313-89c7-c2cd2136996e",
        "cursor": {
          "ref": "6ee73ab3-4e4b-482d-abe7-6ed0058eb828",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a8a05cd4-5c21-4141-8dc7-ee8614715e74"
        },
        "item": {
          "id": "7e8cf332-12e2-4313-89c7-c2cd2136996e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "266984ca-c2e4-49b5-a193-597f78732d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48dddd7-23fd-4797-85ec-66ada2999af6",
        "cursor": {
          "ref": "3ff5ea1f-8e77-40e5-b72b-70a54e042d4d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4d8c13d6-ad0e-42d7-99d6-8c72d06a348f"
        },
        "item": {
          "id": "f48dddd7-23fd-4797-85ec-66ada2999af6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8129ac95-0251-4fad-8b13-402f196da2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dd16d7-516e-4b9a-978e-cceca9ce2ac9",
        "cursor": {
          "ref": "567380d9-56a8-42f7-8fb4-b502e68ebb5e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b7f3e221-3ecf-4251-b29c-f8f40ba774ce"
        },
        "item": {
          "id": "73dd16d7-516e-4b9a-978e-cceca9ce2ac9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eb69be1e-a48d-44e9-9cdb-15a4b655bc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf4b57e-6238-483a-964f-4cc2f3020232",
        "cursor": {
          "ref": "7af8fa17-c41e-4d7f-be70-5382018bfe19",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f7e43ad8-4605-40a5-a238-f98b7f06b285"
        },
        "item": {
          "id": "5bf4b57e-6238-483a-964f-4cc2f3020232",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2fd305aa-44d7-428c-a31f-8488696db11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82ef10d-8004-4bf6-b7b4-c39ab8fbc2f8",
        "cursor": {
          "ref": "f8845d13-1d0e-420c-b3f3-3f34bea6f1b0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f1625dcb-7deb-43b1-b99f-6b7058a64458"
        },
        "item": {
          "id": "a82ef10d-8004-4bf6-b7b4-c39ab8fbc2f8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d175c7b5-94bc-455f-9544-60644521219c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d48a8d-b62b-4e82-9b4e-22fa678eff01",
        "cursor": {
          "ref": "29a18afa-54e3-4229-a357-6da14f6b5569",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "11a65c55-8854-4d33-b7c9-eb57b2ac2a79"
        },
        "item": {
          "id": "17d48a8d-b62b-4e82-9b4e-22fa678eff01",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "092e9085-dc67-4f2c-9f21-62ed2d46bfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f960bdfd-c19d-4c5c-adaf-2e242fa7cef4",
        "cursor": {
          "ref": "e6921c2b-0b54-400d-88f4-10379e563ed7",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c271a295-8cbf-42b1-932f-7547414cca78"
        },
        "item": {
          "id": "f960bdfd-c19d-4c5c-adaf-2e242fa7cef4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8b0b4dda-2c9f-40e7-87d8-5dc38fda5bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4de725-d027-4911-a74c-9ee116559bf3",
        "cursor": {
          "ref": "3d60b1fa-ea20-4eae-a16e-8fe7ef4d3fd4",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9c42a27d-e595-4321-8dd0-2ae1b3f4e673"
        },
        "item": {
          "id": "cb4de725-d027-4911-a74c-9ee116559bf3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d5875a4d-fdb0-46fa-a493-b50b40d978d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d78621-12b3-4af5-807f-d8d6ac6745d2",
        "cursor": {
          "ref": "5f8e809e-bb23-4360-aa00-a7dceb02d5b1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d63596cd-ae0a-469f-865a-39788c3c5a5e"
        },
        "item": {
          "id": "07d78621-12b3-4af5-807f-d8d6ac6745d2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "72df7041-481a-4ea7-94e5-cbe442f1d266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838f0425-42a5-450b-9e11-2e6fa0cfe311",
        "cursor": {
          "ref": "befa4988-e4e0-4081-b6fc-9d9e280ab91b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "21e1d438-3659-4b49-b6a9-a79b0cd1738b"
        },
        "item": {
          "id": "838f0425-42a5-450b-9e11-2e6fa0cfe311",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f6a1427a-a3dd-4a48-a958-bcf96fa5d9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6089abda-4738-4411-9f4a-e545a7f99174",
        "cursor": {
          "ref": "72b24163-f4f1-4da9-8350-ddc2e1a14d16",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3f2a0d87-f7ca-422f-afb1-e0d35332306e"
        },
        "item": {
          "id": "6089abda-4738-4411-9f4a-e545a7f99174",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6a80d91d-cf8a-40ea-9dd5-056cbcd28da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0ebd7d-7e90-4547-8e00-cc6d95411e35",
        "cursor": {
          "ref": "3de35573-8545-484a-bb92-8ac6c28349ca",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ec88f5a3-20d5-4735-adde-0ba92f2c1d87"
        },
        "item": {
          "id": "4c0ebd7d-7e90-4547-8e00-cc6d95411e35",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8024d8fe-26a4-4628-8c53-3441dab91b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab8deb7-0282-40a9-95d4-0d6d0fd1c5c8",
        "cursor": {
          "ref": "cb0905ce-edc4-462b-93f3-53d9c3821961",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3f5c5da2-a314-410d-9d0b-a148762c2940"
        },
        "item": {
          "id": "0ab8deb7-0282-40a9-95d4-0d6d0fd1c5c8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a01f1a0c-efaf-4282-8b81-aa679b68378d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5da6869-96dc-47c4-ada8-ca8fba5c680e",
        "cursor": {
          "ref": "b3222ceb-5270-4fc1-b4cb-2428460c936e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5f9d621c-24a3-45b7-975d-62cc4b562edb"
        },
        "item": {
          "id": "f5da6869-96dc-47c4-ada8-ca8fba5c680e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8174b0c2-701e-4036-bafd-24a4874c5147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae2eede-9b10-4202-aff8-78d6625a81d3",
        "cursor": {
          "ref": "db342626-4716-4854-8fb8-563610c12583",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ca1bb87b-a4fb-4df0-8e51-d5568d9b6154"
        },
        "item": {
          "id": "5ae2eede-9b10-4202-aff8-78d6625a81d3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "57b3ff58-bd63-4ea4-9d58-d7818d2456f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcf5c58-24ab-4744-ba61-14a38bf1c703",
        "cursor": {
          "ref": "58ec9b29-d99f-4889-a4a5-348dd083812c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2baf831e-0778-4312-b744-44ef49b23978"
        },
        "item": {
          "id": "afcf5c58-24ab-4744-ba61-14a38bf1c703",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "55fa8503-dfc1-40f2-a96a-a6fd5497573f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e712b1f2-f92d-498b-8864-c281071bb3b4",
        "cursor": {
          "ref": "50d7bcb9-88af-437b-922d-467732001994",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4efd7b12-9eb1-4a6d-82d9-3af38f449c06"
        },
        "item": {
          "id": "e712b1f2-f92d-498b-8864-c281071bb3b4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e4513eca-dcc7-45b6-8c61-278b5b194970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05d4e75-b4d1-4893-91ff-20837e921cc7",
        "cursor": {
          "ref": "2197134f-bd2b-4165-9ba4-2907c369e397",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6cce8b35-6002-4390-a293-4f743e54644f"
        },
        "item": {
          "id": "c05d4e75-b4d1-4893-91ff-20837e921cc7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "58ddf78e-18df-4fe2-a94a-8ae275a8c131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5573fc59-626f-4389-93b2-df5dc23cd256",
        "cursor": {
          "ref": "28f5ef54-b2d9-4325-a08b-4303279a35b0",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c16735aa-c7fd-43a8-aa0b-9c44c459ea3a"
        },
        "item": {
          "id": "5573fc59-626f-4389-93b2-df5dc23cd256",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "05faa65c-560c-4d04-b776-2b6f68e16868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0108014-192e-455e-81b4-e25a9207dd25",
        "cursor": {
          "ref": "8afe4b46-0053-4bb9-9834-8f3e456ab11b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b8e2db19-9456-415b-99b7-f490f04ca4c3"
        },
        "item": {
          "id": "c0108014-192e-455e-81b4-e25a9207dd25",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1a0cee28-ca40-4052-8b12-fb15b4034057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a867ed-1847-4c6e-ab13-64bc7f808de3",
        "cursor": {
          "ref": "0ee35ee5-8038-4fe4-8bec-48467ae8c1ea",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b7e8075e-7a30-4f95-8e54-f1dc2bc76343"
        },
        "item": {
          "id": "d4a867ed-1847-4c6e-ab13-64bc7f808de3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c1311b13-bb19-4199-b0e6-0ca457c504b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf7f686-fb10-4eac-a9e3-52c0240cd17b",
        "cursor": {
          "ref": "ac0e6e49-39f9-4faf-b3da-a7913fd3d892",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2db0d162-f14d-4661-a422-c7ac033ed31c"
        },
        "item": {
          "id": "4bf7f686-fb10-4eac-a9e3-52c0240cd17b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "44028783-b78f-4350-ac4a-5552ee10a148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b221d1e-5ca8-4ee8-9897-4317f579e258",
        "cursor": {
          "ref": "088d8eb1-fc8a-4df9-9d8f-57052f99c067",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a89461d4-c7a0-4176-bafe-3d819a998ff6"
        },
        "item": {
          "id": "4b221d1e-5ca8-4ee8-9897-4317f579e258",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "eee24551-7f5e-4b80-a8ac-56f083229969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10f6ae7-2c94-4cac-b958-2f17d363c575",
        "cursor": {
          "ref": "3626c2b1-18ac-476d-b6a2-c64a21bade2a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "144eeec3-19ac-425a-a34a-a349fd85969b"
        },
        "item": {
          "id": "c10f6ae7-2c94-4cac-b958-2f17d363c575",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dd56ffb2-8954-4822-b642-8f494eaf9387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d610762c-03fc-4d5a-8db6-72e314031b7f",
        "cursor": {
          "ref": "a3bc9fc9-210f-4cfa-a8db-1ed84e634260",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "79fcf1e1-ae7d-4e2c-8228-8dfbb20aee7e"
        },
        "item": {
          "id": "d610762c-03fc-4d5a-8db6-72e314031b7f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ad2b1efb-746a-496b-98ca-deb6cbeb83bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76485dd8-aa0d-4bd0-b002-94b07f1f794a",
        "cursor": {
          "ref": "f7139e34-d3b4-4716-9b20-b1de85ab8f4b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "adf56d8b-e564-4f1f-ac79-2d3b43a11555"
        },
        "item": {
          "id": "76485dd8-aa0d-4bd0-b002-94b07f1f794a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "601890eb-f03e-48ca-afe2-4086fa5b5bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9372e98-b1dd-4581-93e6-e0f9cea97d0c",
        "cursor": {
          "ref": "4d9f3e43-b5a8-455f-b946-0f85bce79b18",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fce193b1-e7ec-40a7-8375-92e3bc0b80cd"
        },
        "item": {
          "id": "d9372e98-b1dd-4581-93e6-e0f9cea97d0c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "62510767-3d8c-486f-865a-155f37a4c67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0edeb5-1564-49b6-bfd7-fae754b8d528",
        "cursor": {
          "ref": "0cc08fb2-348c-4bf0-85a6-4e504d36dbdf",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a32a0f43-596d-4dca-9639-ca7d79428849"
        },
        "item": {
          "id": "3f0edeb5-1564-49b6-bfd7-fae754b8d528",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "30540ab1-1674-4b50-933c-080f35cbb1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be1fce2-9dfb-4268-9bca-71521505d960",
        "cursor": {
          "ref": "083557b2-510c-428e-b632-03247a4c0a9f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "184fef49-2c3d-4150-a175-0cfbda207134"
        },
        "item": {
          "id": "3be1fce2-9dfb-4268-9bca-71521505d960",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "101d62b1-d3cf-41e0-9875-c2a93405df12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41010ec-4210-4246-b5b9-477d13723681",
        "cursor": {
          "ref": "19f58a90-5a55-4b36-86ce-a246047ade24",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "97a3c02a-0282-4571-b550-4c6193fb582a"
        },
        "item": {
          "id": "e41010ec-4210-4246-b5b9-477d13723681",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a54c4a28-91e1-47fb-afdc-bae200a99d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cbbf33-0689-43c9-8898-413d98b5976e",
        "cursor": {
          "ref": "052adc9a-5fe4-4070-b43a-0f8e47813bc1",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5cf5f882-daa4-4732-9a81-53c92d5f01e6"
        },
        "item": {
          "id": "85cbbf33-0689-43c9-8898-413d98b5976e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3f268c1e-f9e9-4ddd-8c15-73d8244573d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9378743-2d32-42f6-a95c-71016058b4d7",
        "cursor": {
          "ref": "3d80d775-f336-4989-99d8-c0ed02aeb8ef",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e8e12f46-e59c-4c1b-be09-689547c86159"
        },
        "item": {
          "id": "d9378743-2d32-42f6-a95c-71016058b4d7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c9877fbe-4c11-45ae-b6a5-8c7e4f689d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8710ca82-4ca6-4037-8b08-0cdac3fd5d96",
        "cursor": {
          "ref": "bddd82f1-41f0-4ae4-a9fa-6ecd41607513",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bd1d2667-3385-4efe-b122-e4320f0c82ef"
        },
        "item": {
          "id": "8710ca82-4ca6-4037-8b08-0cdac3fd5d96",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d5466724-bbbf-4f53-b6bb-815956daf22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16553b13-71e3-4c17-b40a-167618c23325",
        "cursor": {
          "ref": "2fc747d9-2174-48c3-8395-71c0b9c6f4bb",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "96e85646-ae40-43d2-99f4-822b8e4c352a"
        },
        "item": {
          "id": "16553b13-71e3-4c17-b40a-167618c23325",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e298b34a-c732-43da-bb1f-9ef800f75c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84815cd-02c5-4c6a-812f-a8cd4b5849a7",
        "cursor": {
          "ref": "5aadb4d4-b016-47b3-968d-1e431be868f8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a36012af-0217-497d-800c-c0b1ff0d6122"
        },
        "item": {
          "id": "d84815cd-02c5-4c6a-812f-a8cd4b5849a7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "06b5533e-62ce-483d-9e11-5678bcdb4d88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692a8d48-96d9-43eb-9310-86c990302c52",
        "cursor": {
          "ref": "a8e06877-158f-46ae-bc12-ea9640f62ebe",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2135f694-4817-48d7-aa6f-6222a457aecf"
        },
        "item": {
          "id": "692a8d48-96d9-43eb-9310-86c990302c52",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ab75c140-b037-4700-9e3e-996b2955b476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e5e12b45-f0bd-4f2c-9d17-d0713bc5526c",
        "cursor": {
          "ref": "f00c5441-e679-4add-ba49-0a3ed0f9e823",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "793efaaf-68bc-4a34-bd37-e8ea27191884"
        },
        "item": {
          "id": "e5e12b45-f0bd-4f2c-9d17-d0713bc5526c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ac7e91d3-fe92-4271-84d3-2ab1f1d6e745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "eae8780c-9c12-49d7-aa64-a945b9dfe1e1",
        "cursor": {
          "ref": "82ba0d64-47a2-4b0a-b431-e772bc90c7d2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c2ef10d0-713c-457f-81a1-e27d22007436"
        },
        "item": {
          "id": "eae8780c-9c12-49d7-aa64-a945b9dfe1e1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "32aa2b15-7b66-48b5-96ba-8f6890a4b75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2d2f4f2f-c2fd-4078-b38a-f2cb3b910f85",
        "cursor": {
          "ref": "d2c9a1ad-5027-430a-87f5-0d8f489b6c81",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6521b7e9-3fd7-4049-8d62-0d14a6623b86"
        },
        "item": {
          "id": "2d2f4f2f-c2fd-4078-b38a-f2cb3b910f85",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "15ca0487-ec94-4bf7-a2bb-a6ecb2ea0d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "59d7e67f-8ca2-457f-824e-34a6b824b2b8",
        "cursor": {
          "ref": "969e0ede-967d-42b3-bc17-1a039c5aec4f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f3d9e3ca-6920-42d6-9add-983e7f9290c4"
        },
        "item": {
          "id": "59d7e67f-8ca2-457f-824e-34a6b824b2b8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3ebaa089-b870-444c-a429-fd1fc1d044b4",
          "status": "Created",
          "code": 201,
          "responseTime": 5916,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca697217-22d0-4478-97f8-64a38c9c5593",
        "cursor": {
          "ref": "d99614f9-cb58-4b41-aa84-10f1008beae8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2e1362e8-fa4b-49f3-a08c-7e96ade6e919"
        },
        "item": {
          "id": "ca697217-22d0-4478-97f8-64a38c9c5593",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "33779654-acd6-4c49-b2fe-5c95c1e7b7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "dd4b5e77-5f0a-447e-84f7-e5b832582208",
        "cursor": {
          "ref": "7ccb4d92-8b36-4bd6-a798-450f0ec2f071",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0183d4bc-a32b-476a-bfec-0ce5c176edf9"
        },
        "item": {
          "id": "dd4b5e77-5f0a-447e-84f7-e5b832582208",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "71d79084-8796-4b7b-a9f4-81b0a654c2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "85a7c602-15ff-4d16-99c3-192a6133c644",
        "cursor": {
          "ref": "298b46c2-e5ca-4e83-a35b-0207c959411b",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "56868cd7-a1ad-4ae9-8f83-46002b73c468"
        },
        "item": {
          "id": "85a7c602-15ff-4d16-99c3-192a6133c644",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "567e3436-76a7-4115-9821-a88daf5871e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf96b3b-cbe4-41ba-9fce-3008d776c04a",
        "cursor": {
          "ref": "b23e2ba2-9823-4b94-b0d9-916bed8c1727",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3469c305-e35b-47a8-8e80-2ec770628bf1"
        },
        "item": {
          "id": "ddf96b3b-cbe4-41ba-9fce-3008d776c04a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4b17da1a-34fa-4568-b686-a0613b503c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684d645a-24f1-45bd-81c4-3fe9b6263881",
        "cursor": {
          "ref": "7120c707-d888-40cb-a1f7-46aaa9949001",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "514b678c-d7b0-41b7-9657-761b2411116a"
        },
        "item": {
          "id": "684d645a-24f1-45bd-81c4-3fe9b6263881",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2d43b47e-4c4d-4580-9392-f1f9f3f6535f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a94f23f-e546-49ca-8918-c2df8abfd941",
        "cursor": {
          "ref": "45f5d485-cde8-41f7-b6b9-0bebfc6be5ff",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bda1dd5e-11b6-41ba-8c29-af06f6b7be98"
        },
        "item": {
          "id": "7a94f23f-e546-49ca-8918-c2df8abfd941",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dffabef8-f393-427b-8eb5-0500b8e9b21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670f2a10-bd00-4cc5-a233-564cb3431891",
        "cursor": {
          "ref": "5ec9d9dc-ef1b-4565-886e-d2b5b52013dc",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "47511f62-87a6-440d-9226-c459b520e56b"
        },
        "item": {
          "id": "670f2a10-bd00-4cc5-a233-564cb3431891",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b5a5136f-2a46-4ac2-8c69-d4e168db021e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc437354-8dc1-4ae7-b663-1b070fada783",
        "cursor": {
          "ref": "94417545-e14f-4129-8862-44f0debfb044",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e9176a46-66ee-4d4b-8583-cc4b1fd1f32b"
        },
        "item": {
          "id": "fc437354-8dc1-4ae7-b663-1b070fada783",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1698ca95-470a-49b4-ac32-87ab36c2b433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f41535-5ee9-456f-95f6-f54226ce11be",
        "cursor": {
          "ref": "56dbd377-2b45-45cf-9216-118951c6f257",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "094a7587-33d5-4f87-9dda-4d3396c25cb3"
        },
        "item": {
          "id": "11f41535-5ee9-456f-95f6-f54226ce11be",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "36b6cf35-bc3c-4f95-8ce7-64788e573429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327f4bbf-61d2-4ccf-98c4-43bdaf6802ee",
        "cursor": {
          "ref": "65a979af-bfc2-431b-bb2d-63f1c206e179",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0c408349-718f-487a-8caf-f855162b0d55"
        },
        "item": {
          "id": "327f4bbf-61d2-4ccf-98c4-43bdaf6802ee",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b45107f-f84d-481a-8842-c5dd3a32a312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6415fa-8123-4a81-a5bc-bb59a705fcbc",
        "cursor": {
          "ref": "64b7e31a-fc57-4fec-a40a-11e43c1c27a3",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "35d6eb91-4379-4206-bc7a-adfd286f82d1"
        },
        "item": {
          "id": "0e6415fa-8123-4a81-a5bc-bb59a705fcbc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7afa8915-13ff-4bf2-ac7a-4b0d2d7944f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed926f8-402c-46b0-9101-42b69e1e5506",
        "cursor": {
          "ref": "a1a7d393-a1c4-43b2-a1f3-226851bdccb2",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e0757c31-5f5d-45ee-b419-6823b9e5a672"
        },
        "item": {
          "id": "1ed926f8-402c-46b0-9101-42b69e1e5506",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e94fc48d-c061-497c-b52e-7bc5a6f3b1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f227f7a7-90a4-461c-bf18-925bcd2e506f",
        "cursor": {
          "ref": "fb972b27-79ea-420c-9839-ac74e55ebb5c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "67f8f3ff-7bf3-406b-adbd-d589442b18ad"
        },
        "item": {
          "id": "f227f7a7-90a4-461c-bf18-925bcd2e506f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cbdd7f65-166e-41a8-899a-29d1f6776dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae743ca-f7ad-4374-9828-f50b1e80f0aa",
        "cursor": {
          "ref": "5fa77e2e-00a4-4582-b540-cd4c9794e44b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a08dac12-092e-4410-be0a-ba8ea4a096fe"
        },
        "item": {
          "id": "0ae743ca-f7ad-4374-9828-f50b1e80f0aa",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a17aeffe-3f7e-4e65-a86a-719b8e593938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5ebf73-c0f3-4981-8419-c877406ab71e",
        "cursor": {
          "ref": "c84a0107-9b85-40ac-b895-5565d906c1ab",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "16f86b07-d4d8-48c8-b251-887ac461e8e1"
        },
        "item": {
          "id": "9e5ebf73-c0f3-4981-8419-c877406ab71e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "50213321-476b-47f7-b014-e64e46aff5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e75ea0b-acf7-4dd7-8ee3-87ab5c94dcdf",
        "cursor": {
          "ref": "c755e2dd-4252-4cdd-b3ca-012b80a33f0e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "39f18c85-1cbc-4c93-9885-211fe092a21b"
        },
        "item": {
          "id": "3e75ea0b-acf7-4dd7-8ee3-87ab5c94dcdf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "52b14ee7-392c-44a2-80b7-095fe5808304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8149ee9f-7450-474c-a488-c310fc30cc00",
        "cursor": {
          "ref": "ed20df25-fe0d-4d20-8c03-f9fe4c5623d9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "67b8d52e-c38b-4225-8891-2788c4f5757c"
        },
        "item": {
          "id": "8149ee9f-7450-474c-a488-c310fc30cc00",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c0297f99-5684-4aaf-8306-66f0b290ff1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea51424e-c3c6-40ea-af6a-6e548dad5613",
        "cursor": {
          "ref": "13ad5cef-9c05-4641-9897-70f644588ed0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e9c9f207-e7e3-4fe7-a5c8-501fc88c311a"
        },
        "item": {
          "id": "ea51424e-c3c6-40ea-af6a-6e548dad5613",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f314ec5b-3fbf-40be-956c-d85cc9951d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b189eb7-3d74-4c91-85ca-cffbde5004c4",
        "cursor": {
          "ref": "bc1d6ac2-fc16-41cb-8d73-e517102324b6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ab9d0cfc-2626-49e4-aaf2-d0d09b4a1d4d"
        },
        "item": {
          "id": "3b189eb7-3d74-4c91-85ca-cffbde5004c4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3780ce0f-d506-4d63-ad08-0df20223b262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40d15d0-ed8c-49e8-ba27-07c1e293b12d",
        "cursor": {
          "ref": "8eff1f18-2d45-4cba-b846-51873d3a51ed",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "65c05c21-f5f1-452a-8c44-d63e96cd6a9b"
        },
        "item": {
          "id": "b40d15d0-ed8c-49e8-ba27-07c1e293b12d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "17c48349-41d2-444d-a6e6-858b0e72241b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6e1ee5-7f3b-4f68-8e20-756a25ee9c63",
        "cursor": {
          "ref": "881f830d-d052-42ec-be3a-82e6450be7f7",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f598b03c-6af1-4966-81d6-bf06ce05e756"
        },
        "item": {
          "id": "0b6e1ee5-7f3b-4f68-8e20-756a25ee9c63",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1ec2f1ae-b477-4312-b2fc-87d0db6dae2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39f94f6-4352-4391-8d78-d132502966e3",
        "cursor": {
          "ref": "94d17084-3415-4958-8831-9f57eec669d5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c506dd71-dc4d-4087-bc5b-5473f91bc6e3"
        },
        "item": {
          "id": "d39f94f6-4352-4391-8d78-d132502966e3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3491ac2f-313b-48b1-b4a3-9e1c908ce2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97322dd-34d0-4590-afa1-5e45007197a2",
        "cursor": {
          "ref": "3d8c654a-0cdc-4705-a785-b56f48f5063b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e585bff1-3dd8-43bd-9486-d8a621cb25d8"
        },
        "item": {
          "id": "b97322dd-34d0-4590-afa1-5e45007197a2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3aed22a5-97b9-4b75-9cb6-2f27cb542879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b637ad51-31e6-49cd-8d3a-aad2999376d6",
        "cursor": {
          "ref": "89874677-eb4d-4e5d-8584-3faea30717af",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3183d83c-3205-4ac9-af1d-02372d6d2b2f"
        },
        "item": {
          "id": "b637ad51-31e6-49cd-8d3a-aad2999376d6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "81ab4a1a-c383-4be2-be2a-7432c32b381c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db9db00-7c21-4129-a0d0-062211b0527d",
        "cursor": {
          "ref": "5f41c505-458c-4e68-b3a1-1573ebfaf53f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1165dd7f-0cef-44a1-8e13-39eb81b82021"
        },
        "item": {
          "id": "0db9db00-7c21-4129-a0d0-062211b0527d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d464f82e-8d0e-4b5f-a08b-c37b5c120641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e940243e-fdaa-4b53-942e-557544b91db0",
        "cursor": {
          "ref": "495d0cf9-f1fd-4ffe-a325-9ed559120a9a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0647edcc-a06e-42b9-a082-ceafeeaac022"
        },
        "item": {
          "id": "e940243e-fdaa-4b53-942e-557544b91db0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "81c1ae09-5100-4927-8089-d9cd8f8a2e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa177a1-25fd-4336-93ea-00e03eaed369",
        "cursor": {
          "ref": "ca510a52-18c2-4b3c-ac24-c6e7afcea5d2",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b1598e47-d8fe-429a-8e35-997702f5b534"
        },
        "item": {
          "id": "aaa177a1-25fd-4336-93ea-00e03eaed369",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c8752aee-9e76-45a1-85e5-6c34765717c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38b02c3-5dbe-4702-9c84-16c01002411a",
        "cursor": {
          "ref": "5e5420a4-efb3-43d2-bce8-73ebbc1aec88",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "640a5481-ded5-47a5-8c5e-7587e9972f03"
        },
        "item": {
          "id": "b38b02c3-5dbe-4702-9c84-16c01002411a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3e66f8b5-aef9-44cc-afea-2fc8d4d6d8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bde7c7-d6a5-4edf-bf76-6c74c30763b5",
        "cursor": {
          "ref": "6c6438bb-0929-4dba-8aa3-d8bfb06937c5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a489a61a-ff5b-4336-a9d0-73093bf3dbd3"
        },
        "item": {
          "id": "53bde7c7-d6a5-4edf-bf76-6c74c30763b5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9f8f2eec-4a77-467f-8425-0e28975217a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71448cc8-7663-46ef-90a2-f279c7d10072",
        "cursor": {
          "ref": "c24e474e-a0d2-4aad-affe-78566421c3bb",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f897591d-a807-4040-92b4-26bb1ae5baab"
        },
        "item": {
          "id": "71448cc8-7663-46ef-90a2-f279c7d10072",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f99c44d1-3615-4784-889d-892f3db795fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb3de7b-25d7-4f17-8308-1274f128ca4d",
        "cursor": {
          "ref": "a0375f17-fc27-4453-aaec-2ae285d89664",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1be6add9-d893-4ba8-85d1-d4217d025bfb"
        },
        "item": {
          "id": "0fb3de7b-25d7-4f17-8308-1274f128ca4d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9c80154f-d8b8-43c9-8541-ca6cf6507a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a0d924-8ebb-454d-a030-cb7e70a9827e",
        "cursor": {
          "ref": "4676491e-f4ad-4b5e-8c6f-124228b9baa7",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c0730f3b-271d-4710-9400-c2e2259a1bcc"
        },
        "item": {
          "id": "68a0d924-8ebb-454d-a030-cb7e70a9827e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "65d26ba1-cfaf-4b5a-a4e9-a258d9739e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faef58c6-44a5-4996-be51-05bf994b3b0c",
        "cursor": {
          "ref": "619676e3-f835-47b9-a049-4ff633eb6cc3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "30251769-ff54-459d-9d47-4c3929ce220b"
        },
        "item": {
          "id": "faef58c6-44a5-4996-be51-05bf994b3b0c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0c7b06db-6c9f-421d-a59d-3465de797ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a228d4ba-1302-4d4c-9776-600740457222",
        "cursor": {
          "ref": "302ca72b-3ffc-47d2-b5aa-9b709217fdc1",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "88747f44-ba9c-4de1-900e-f5c3f418eff1"
        },
        "item": {
          "id": "a228d4ba-1302-4d4c-9776-600740457222",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c02a9666-f1a9-48b9-abee-3207cfe97cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c683baf-634d-4785-b78b-dc1dcd9b3503",
        "cursor": {
          "ref": "29f00267-d3c7-4533-925a-8b0619bba18f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b303b383-9f44-4b4a-847f-d2d0243af99c"
        },
        "item": {
          "id": "8c683baf-634d-4785-b78b-dc1dcd9b3503",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bba3f4bd-4c5b-43d9-9f29-c3a855704a2c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69380687-d4ba-4b3b-98fa-f7195f1b7d7e",
        "cursor": {
          "ref": "b1fe310b-e228-436a-abc1-f017cc617f2f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "626845f4-21ee-4daf-93a5-1ead35832340"
        },
        "item": {
          "id": "69380687-d4ba-4b3b-98fa-f7195f1b7d7e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec73a5b1-e124-48ad-a5f3-f29283dcb701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f8cc4e-0b65-41a1-8e32-f4b0489f810f",
        "cursor": {
          "ref": "75d456e1-921a-4881-ba63-fa709c299ea3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "05cdcfb4-7970-45f7-8871-57535b931350"
        },
        "item": {
          "id": "c3f8cc4e-0b65-41a1-8e32-f4b0489f810f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a52a6d41-140e-4ed9-ba83-eade90e4ea8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb1323a-0283-46b7-98c8-744b6628d254",
        "cursor": {
          "ref": "46567b57-c120-4d52-85da-57c049cc02e4",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fdb8e924-2363-475e-a7a2-5297109b98bb"
        },
        "item": {
          "id": "fbb1323a-0283-46b7-98c8-744b6628d254",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a3851e3b-f9cc-49ab-bf6d-ef7d72b15dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3c5d58-445b-4a93-9200-51c23ea4e564",
        "cursor": {
          "ref": "4ea79d03-ed09-40c5-8a86-80445c3e7bcb",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6799536a-39fb-4060-9e2c-4ab25ca2b6c8"
        },
        "item": {
          "id": "eb3c5d58-445b-4a93-9200-51c23ea4e564",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f87badb9-d8e7-4d1a-9c18-196fd2391c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5fbf20-c90c-4a5f-9128-291c8de4e4cb",
        "cursor": {
          "ref": "1f919cdc-527a-4ad8-ab5b-d09b591dce7b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "69055686-c733-4276-99a6-e427ef3f4c7c"
        },
        "item": {
          "id": "1d5fbf20-c90c-4a5f-9128-291c8de4e4cb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d79dbccd-627b-427e-9c81-3c6ef748570c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44654451-e387-4166-b390-9d4d9f8d4e22",
        "cursor": {
          "ref": "97d7ffb3-d611-44e4-8ab1-2ba4276c5272",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f74a0efb-d227-4056-ac4c-46ab60dcc32d"
        },
        "item": {
          "id": "44654451-e387-4166-b390-9d4d9f8d4e22",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "92f329c3-f86c-407c-8980-33c667859b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8680cd6d-f8a6-4871-afbb-41882cd15efe",
        "cursor": {
          "ref": "1ad1c008-0baa-49ff-bcaa-923a6b1bb5f2",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d7fb7f01-f070-4c20-9631-0b9d51c864bd"
        },
        "item": {
          "id": "8680cd6d-f8a6-4871-afbb-41882cd15efe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "02ca8361-695b-4c93-a26c-59c82a575bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8df9ce2-5159-4f2f-95a2-83dc40acd401",
        "cursor": {
          "ref": "cfa77dfe-e655-40ed-9172-6dc718a1fccd",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3bd39914-4d66-4314-8cc8-0cbba96dc970"
        },
        "item": {
          "id": "f8df9ce2-5159-4f2f-95a2-83dc40acd401",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fa21dd29-78bf-49f1-a0e7-e4d03dfc441c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228f7a9d-c7da-4d37-a9bc-847690f212ce",
        "cursor": {
          "ref": "0289c640-49ed-47b4-8ca6-c2c7c2c571e6",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e76924b6-1201-412c-953c-49774928130e"
        },
        "item": {
          "id": "228f7a9d-c7da-4d37-a9bc-847690f212ce",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "84dbb97a-cc9d-41d6-aeea-947ca3bc23a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a498491b-fbdc-4ca0-946c-ccd230f43c6a",
        "cursor": {
          "ref": "61861802-7160-4bf1-8c98-3478ab12fe43",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a73a88f7-35b9-4877-b7c4-55001eeebe48"
        },
        "item": {
          "id": "a498491b-fbdc-4ca0-946c-ccd230f43c6a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a9fd9304-5441-4674-9ea0-b884089eb415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb664e7-3d84-431e-a15b-7f09092a2177",
        "cursor": {
          "ref": "144449ca-b11b-4a94-ac73-142838f45ea1",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "916f84e5-4af5-4c1d-b9e3-a5dc7990d0ea"
        },
        "item": {
          "id": "9fb664e7-3d84-431e-a15b-7f09092a2177",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f069a1fd-2d1e-4c6d-a910-f379e7c6c1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e322872d-6664-4b21-8c83-df5f7a49e90e",
        "cursor": {
          "ref": "bf2e513b-4c7d-403f-808b-350c635a5c9d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a49464f8-5edf-4160-b07e-67aed1c4c73b"
        },
        "item": {
          "id": "e322872d-6664-4b21-8c83-df5f7a49e90e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fbe49d00-7171-4471-a2f4-7a408827970e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98126489-1e34-427b-a695-6a538a89a2e5",
        "cursor": {
          "ref": "967e8f35-3e19-41d5-9a69-ad6eed0a9a8f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "549ecf0e-648f-4b1f-8f70-a154935d7bd1"
        },
        "item": {
          "id": "98126489-1e34-427b-a695-6a538a89a2e5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9a40578a-a59c-4db9-8d9c-2e58ddcb5c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430f882a-fe86-49e9-bb4a-01a70b06ccd4",
        "cursor": {
          "ref": "4aeccc65-e42b-4bdf-9796-2b7b5008dbc3",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "05394902-5667-4129-90f2-8407c28ec1a4"
        },
        "item": {
          "id": "430f882a-fe86-49e9-bb4a-01a70b06ccd4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "54fccd4d-5b8d-4b47-8acc-61fe5d7a37df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145a87f1-5e05-478b-9c0f-e640d104be84",
        "cursor": {
          "ref": "0cf9f3b5-ba9b-47c0-adc6-3fb6307a2110",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d2e38968-70ff-4698-b57a-f3226015f346"
        },
        "item": {
          "id": "145a87f1-5e05-478b-9c0f-e640d104be84",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "01a7a8d0-5a3c-422c-b641-c44606004e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8882d2-8a72-4826-a24b-26201dc6d809",
        "cursor": {
          "ref": "e567b660-efe3-461a-8bf9-6f4ee8ea7250",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "11fec4ca-4ea1-4522-8e0c-b8966d6fe2fa"
        },
        "item": {
          "id": "ae8882d2-8a72-4826-a24b-26201dc6d809",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "63c23882-d87d-4569-a898-cb444947f020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ef52f7-80d3-4566-9918-a9ff870dc6d7",
        "cursor": {
          "ref": "3ba8163c-9b3f-466d-a8ac-ec9e1624dd76",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "72a7e545-dbbb-4499-a64c-bef144075a57"
        },
        "item": {
          "id": "01ef52f7-80d3-4566-9918-a9ff870dc6d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7d3e36d7-2e7e-422e-869e-844af33e44c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0456dad7-8a37-4c6c-a0d2-7e1e3198c0aa",
        "cursor": {
          "ref": "07764096-e15a-4a20-b090-df76bf4da0b3",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3f6daa84-3094-4f3c-9374-d42ba390f4ac"
        },
        "item": {
          "id": "0456dad7-8a37-4c6c-a0d2-7e1e3198c0aa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "738fc11c-2f53-4e90-99e1-e2bbd7cfe102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbf2226-a717-459a-8817-f7a40a9248d0",
        "cursor": {
          "ref": "fe68d638-d69b-445d-905d-d7a1c007b83f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "73994409-d8f9-4fe4-b7a1-f8b2e5cb0e56"
        },
        "item": {
          "id": "8bbf2226-a717-459a-8817-f7a40a9248d0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3e851239-8f2f-444e-ac53-0b9579401633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61052f66-5f4f-458d-a98d-117c0163a897",
        "cursor": {
          "ref": "25e24f9f-6775-4824-963b-9a11d648224c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2024b177-48b3-4930-b26b-0d42c0ad1431"
        },
        "item": {
          "id": "61052f66-5f4f-458d-a98d-117c0163a897",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "901f27c9-efd6-4f14-a4d0-65d6752c8532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8308f03-c71a-484f-a2dc-c1607efa2286",
        "cursor": {
          "ref": "1469ed90-e7cf-40d6-a6ae-778b6b520263",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7d268de2-b34d-4b95-aa7a-f7d81e4b6b07"
        },
        "item": {
          "id": "e8308f03-c71a-484f-a2dc-c1607efa2286",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9bf541c9-fd5d-48c4-95d2-5967191b7c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfbaa84-8c3c-43ae-9d97-cff9b835745d",
        "cursor": {
          "ref": "e37ce2a2-e247-434a-ab69-b0c142677b77",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6a61bf05-401a-4d11-b0f9-a719124d1a4e"
        },
        "item": {
          "id": "fdfbaa84-8c3c-43ae-9d97-cff9b835745d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c9eccada-d158-4266-bd26-8e51ccb5bd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a5a685-25ea-40d3-9413-0c5d570042eb",
        "cursor": {
          "ref": "29a49d9b-911f-49d4-8524-d3c7fe31fb29",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7578190d-642b-49ec-b75e-10cd02b03ac3"
        },
        "item": {
          "id": "a8a5a685-25ea-40d3-9413-0c5d570042eb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fbdb3903-d638-45f6-90d9-a0cf43370afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878fb2c6-8753-4f20-ab16-6e606f409a05",
        "cursor": {
          "ref": "86caee06-d99d-4326-9ffd-d2e44189ac99",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c9539db7-65d6-4964-a5ee-f7dbb7281203"
        },
        "item": {
          "id": "878fb2c6-8753-4f20-ab16-6e606f409a05",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6555fe57-3584-481c-a107-459546ba8536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bedd8ad-d71a-4a7d-b4e4-aa4d617b09d7",
        "cursor": {
          "ref": "a0c18e13-2846-4ed3-b21d-f9812d31673e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c0b179cd-2a69-4d4b-9a6a-3f4731e51de3"
        },
        "item": {
          "id": "3bedd8ad-d71a-4a7d-b4e4-aa4d617b09d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ab171ffb-5583-4397-9708-1b9fb792c4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8384564-b7de-4eed-bde5-9ce58919b5be",
        "cursor": {
          "ref": "99435e68-6758-4e03-8100-0a8d2be6df74",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e401bb2d-c112-4183-8369-f10a624cdfcd"
        },
        "item": {
          "id": "e8384564-b7de-4eed-bde5-9ce58919b5be",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8349a9e1-4125-425d-a9d8-2051cd32b47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f13cb3-8eb7-47de-b892-a3893a1b3bf5",
        "cursor": {
          "ref": "b9898ac7-2124-4f92-b65f-c52f156aa1e2",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2f8d3355-2a7c-4803-82ca-716bba259bb7"
        },
        "item": {
          "id": "81f13cb3-8eb7-47de-b892-a3893a1b3bf5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "98a96440-033c-4a4d-9a99-54d6be00a711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13206875-eab2-468d-af5f-f520efdd86a1",
        "cursor": {
          "ref": "3da009d0-1836-4663-aaef-ac447a509a93",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "455ef098-6850-4b7d-a09a-b80738ef1380"
        },
        "item": {
          "id": "13206875-eab2-468d-af5f-f520efdd86a1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "79c289d6-d6c0-4c97-a024-202d08597d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eff1060-8560-4f20-af9b-8f843d48f8ef",
        "cursor": {
          "ref": "a555d188-7820-4f37-bc6a-9bcfb164eb9a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "700ad065-1078-484d-9835-edf7a99fa07c"
        },
        "item": {
          "id": "5eff1060-8560-4f20-af9b-8f843d48f8ef",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7d469177-2044-43d2-bcde-c6e61013490d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2885399b-d2c3-42cd-a817-70b629ba22b1",
        "cursor": {
          "ref": "70ab9ae1-1f4e-4c19-b7f0-fc9a6f767538",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "10ed00d6-bd29-48f1-a288-cc88b6422e5c"
        },
        "item": {
          "id": "2885399b-d2c3-42cd-a817-70b629ba22b1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "96340433-0022-4e85-96ce-760dfaae33b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baf21e7-bae8-41e7-bfdd-5e60f2fd1328",
        "cursor": {
          "ref": "ddf86789-a0e4-4b49-948a-54f7ffdd3cf0",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8e4b3801-fdb3-495e-85df-f064b287d5e8"
        },
        "item": {
          "id": "7baf21e7-bae8-41e7-bfdd-5e60f2fd1328",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ed95420d-bc55-46ff-9962-0aeb19e35437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3358109-eeea-42d3-a9a2-fae1cd23c4b1",
        "cursor": {
          "ref": "4df17b35-d1cf-45d6-823b-90c8461f9415",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9ecefef8-d9f5-4b6c-8d89-5489e0c9647d"
        },
        "item": {
          "id": "f3358109-eeea-42d3-a9a2-fae1cd23c4b1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "51aef58e-28ba-4456-ace2-ff15f3e8f515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e4e2f0-7d1b-4063-9545-2ba7e93c934f",
        "cursor": {
          "ref": "d3ae30cb-214e-4f68-b67a-e742ba9f6a1f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8c646aa9-bfd0-4655-b310-61684110e086"
        },
        "item": {
          "id": "91e4e2f0-7d1b-4063-9545-2ba7e93c934f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3c57d9d7-56ec-4375-bf26-0288ee48e448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cae3aae-8166-4967-ba7b-241b68cc4032",
        "cursor": {
          "ref": "b1dd4b22-474b-410d-8901-008957164f72",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e68acbf9-66fd-4fd1-9cd8-b900a06f753f"
        },
        "item": {
          "id": "9cae3aae-8166-4967-ba7b-241b68cc4032",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2e29ddf7-3c3c-4f0c-b92d-ded6bf101236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3980c4eb-d91b-423e-b45e-4123de2d79d7",
        "cursor": {
          "ref": "dc7cc34a-7797-47be-a182-049c3d0f017c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5335eb79-a0d4-4fba-bda6-fc4c84376abd"
        },
        "item": {
          "id": "3980c4eb-d91b-423e-b45e-4123de2d79d7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fbc35d06-8af4-4476-8c2a-c55928919053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717f96ed-26df-4cab-96d8-e491f7371521",
        "cursor": {
          "ref": "bf168718-1c31-44a2-9649-92508a0b4536",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "99d9e686-114b-4e93-9f60-a4f4bf32e014"
        },
        "item": {
          "id": "717f96ed-26df-4cab-96d8-e491f7371521",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e7c83f46-32b9-4478-bc4c-8f35a6706026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e751d82-9dbc-4388-93bc-697b9c97a4d3",
        "cursor": {
          "ref": "547fad58-bc2c-4b6c-82e1-c976f1f9b92e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dda54de5-8fbf-4cdd-9398-193390e53506"
        },
        "item": {
          "id": "3e751d82-9dbc-4388-93bc-697b9c97a4d3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "27eeb7e2-17d3-4631-b35e-fea5c7d70605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37c9b0a-f733-4773-ad47-5de8e617f3a3",
        "cursor": {
          "ref": "f7f73e92-1987-4759-b770-39190f3d80f4",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "81211d78-4d1b-4fa9-b68c-b565a64bc6a5"
        },
        "item": {
          "id": "c37c9b0a-f733-4773-ad47-5de8e617f3a3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2215ec5-4ac4-4f1e-8f93-2f2e28d383fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7180147e-2de1-45aa-b056-76746452c34e",
        "cursor": {
          "ref": "fb65903f-663b-40e0-8929-7c1267cdefa7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7fe0915f-54f5-4724-b50d-51e63d693a4f"
        },
        "item": {
          "id": "7180147e-2de1-45aa-b056-76746452c34e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a82c1e0a-642e-41e4-8d81-9af535960a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44a0b2e-5f6e-4907-a2d8-fb6d876e7bc7",
        "cursor": {
          "ref": "fa8bc594-9a5c-4f80-a88d-fd4a12861d3f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "98ec4957-eeb1-47b7-81bb-adc1ec0d37f2"
        },
        "item": {
          "id": "a44a0b2e-5f6e-4907-a2d8-fb6d876e7bc7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "eb60eeed-cd0c-48f6-8b62-34380f085916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f8f905-af56-4bb8-a5c6-fed691469a03",
        "cursor": {
          "ref": "40a48fe1-cf45-4269-8b20-6bd3e2485e0f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "367a15bf-e966-435b-896f-2454575c7cf2"
        },
        "item": {
          "id": "31f8f905-af56-4bb8-a5c6-fed691469a03",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b93dd263-2738-4b8d-bc71-b7a9ebd4ac6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067da800-9779-46d9-8827-eed097bbe9cd",
        "cursor": {
          "ref": "96609163-bd81-4d36-aa9a-bba1180bc994",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cd99e681-f69b-4eec-8462-10fa59d85394"
        },
        "item": {
          "id": "067da800-9779-46d9-8827-eed097bbe9cd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a70a7e8c-e1b4-41b0-8688-867cdb5a872b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fdcca4-9c70-4022-90e5-cd2b8be58f8d",
        "cursor": {
          "ref": "278be62e-2555-4611-baa4-2c7352389ebd",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8f4e9d34-7887-4aa3-8057-ab90769fa909"
        },
        "item": {
          "id": "81fdcca4-9c70-4022-90e5-cd2b8be58f8d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5c332514-0f45-4124-b6dd-49fe5117e3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7da504-f203-47cd-ab77-bccdeea15150",
        "cursor": {
          "ref": "34fb7516-3c53-4d98-bc2d-aa384804d4fb",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "12be25c5-9234-4d35-96cb-6e789566a64b"
        },
        "item": {
          "id": "de7da504-f203-47cd-ab77-bccdeea15150",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a96daac8-3bc1-4302-ab58-a9c3fcbb71a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfbd2d8-0180-4b50-b812-f42d7a0e5704",
        "cursor": {
          "ref": "1e53190c-8927-4908-975f-3350f8ed9ac4",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "65738bcc-57d9-4ede-aad3-bae16d675002"
        },
        "item": {
          "id": "2bfbd2d8-0180-4b50-b812-f42d7a0e5704",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "65930a1f-517b-4276-866d-707f1beb8b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3f491d-7182-45d6-9b75-20593da42926",
        "cursor": {
          "ref": "4fb32290-c1b0-4da7-be73-5f9c009e91c1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "60c7d913-17a8-480d-964e-0dba21da4c73"
        },
        "item": {
          "id": "bc3f491d-7182-45d6-9b75-20593da42926",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4a2ccf79-aae3-4aaf-82ef-1e2218447baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301b8925-6535-47b7-91ce-5b61bc2e1bac",
        "cursor": {
          "ref": "f983b934-c03a-4985-8f8e-109b6ffe4396",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e26fe26e-9a9c-48d9-bbcc-09fee4937d51"
        },
        "item": {
          "id": "301b8925-6535-47b7-91ce-5b61bc2e1bac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8aea931c-66d5-48f7-a031-c917341f15e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfea878b-4f3a-46da-ac17-cd2f8914ac1d",
        "cursor": {
          "ref": "f14de043-5a30-4e36-b349-f2ab6244f52f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a70584df-49d7-46eb-aed4-f02570e7d327"
        },
        "item": {
          "id": "bfea878b-4f3a-46da-ac17-cd2f8914ac1d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "55969f46-e212-438e-badb-7afaf44690b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fafc6d-e233-4a9a-a230-179bfa3a42d7",
        "cursor": {
          "ref": "acab25bf-9ea0-4551-98fa-173cad2abb61",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "42cac813-aac0-4224-a0c3-98ea85e92a5e"
        },
        "item": {
          "id": "85fafc6d-e233-4a9a-a230-179bfa3a42d7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a64b4470-7b26-4efc-b09c-8f921812b170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddd9bb5-5bc8-449f-92e6-386d5d4b718f",
        "cursor": {
          "ref": "c9b55080-336b-4f22-9cf2-9d9a728eef0a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "282667fb-1cac-4cb8-80de-dd48273c8c50"
        },
        "item": {
          "id": "dddd9bb5-5bc8-449f-92e6-386d5d4b718f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ec0a64da-c0dc-4f3b-a1dc-7d424945ce47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f89b031-cabd-4db1-b59a-dc31ff30e820",
        "cursor": {
          "ref": "64a15790-a56e-4045-8364-3a50c5256dcc",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e25f0173-a872-4f08-9375-ce875381cb51"
        },
        "item": {
          "id": "9f89b031-cabd-4db1-b59a-dc31ff30e820",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "51f24def-50e2-4c62-ac89-4ffaa2958322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c27186-3947-4229-91ae-dda8ed705196",
        "cursor": {
          "ref": "0687ce96-1493-4f06-a9f9-3b1ead0fdd52",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ea91f1a0-3646-4dc1-b925-87e93d11867c"
        },
        "item": {
          "id": "f1c27186-3947-4229-91ae-dda8ed705196",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a4c3777b-3453-4682-a157-89a9487e29b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f01f08e-70b9-4678-9211-d58fcf8dfdd7",
        "cursor": {
          "ref": "842dd175-fc62-4afe-8bcc-254b23f13e26",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "97751d16-7c50-4f1d-81e5-ce973f4b6bdd"
        },
        "item": {
          "id": "3f01f08e-70b9-4678-9211-d58fcf8dfdd7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "27121f2d-ccfe-4d78-809f-c2cdbda64f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd00257d-bbd8-4bb4-8edd-0e7c44b92e94",
        "cursor": {
          "ref": "3fd0494b-a94b-4843-8248-9f9fe06afc8e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "feb47397-d683-4306-9e9a-68328c138971"
        },
        "item": {
          "id": "cd00257d-bbd8-4bb4-8edd-0e7c44b92e94",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "932ce52c-e022-49f9-a67d-549522bde180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8665f4aa-0d2f-4285-9b13-9746f473f162",
        "cursor": {
          "ref": "7cd98db1-4b2d-454e-b964-49801a810f20",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f062bdd9-172e-4d4c-8a05-55cd2ef0fecb"
        },
        "item": {
          "id": "8665f4aa-0d2f-4285-9b13-9746f473f162",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0dc28918-ab45-4b6c-92e3-f6a13065d17c",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "7f4e16ca-271a-4f28-af79-ec049a6acc4f",
        "cursor": {
          "ref": "266a558e-c6ea-4846-86f8-8e265168dbf8",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "18ad4d54-eaea-45c8-8361-4aeb35866bfe"
        },
        "item": {
          "id": "7f4e16ca-271a-4f28-af79-ec049a6acc4f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8cd44c93-ffe2-41a1-95d0-d4804db630d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f4fb92-6bae-42f3-b59f-17c2ea6296b3",
        "cursor": {
          "ref": "1e3dd53b-e49a-460f-9b46-7431cea0e76a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "05b83a89-cc8d-4666-ad0c-f015f2e22e0b"
        },
        "item": {
          "id": "f1f4fb92-6bae-42f3-b59f-17c2ea6296b3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d9f7443e-c84e-402e-a925-317c54978782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9fb19c-ed3c-4a5b-b04a-da2dea1af02f",
        "cursor": {
          "ref": "6092a253-6582-4cd1-934d-a56de9dfe2e0",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "127ecf5e-ff30-4466-a8ea-9ad3c87ea7ae"
        },
        "item": {
          "id": "2f9fb19c-ed3c-4a5b-b04a-da2dea1af02f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2fff3ecd-300a-4244-a5f4-0e4ca2212321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155cbd39-20a1-4bd6-995d-5eec8261c12a",
        "cursor": {
          "ref": "d9397b87-f530-4b09-948f-4ebfc23ce82b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b7320340-1386-47c8-9698-dda4532a9ca2"
        },
        "item": {
          "id": "155cbd39-20a1-4bd6-995d-5eec8261c12a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "43a3b617-5d70-4176-b2fe-21c7ed22b15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713af054-8203-44a4-8e15-a7cfe651e824",
        "cursor": {
          "ref": "765ebd0a-e54d-4c26-8929-a812bdbcdbc1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ae570b48-cd9b-4776-9efb-e7b6e6bb33db"
        },
        "item": {
          "id": "713af054-8203-44a4-8e15-a7cfe651e824",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "12b0a7de-29e0-4aae-94f1-2bb6350779f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7a0816-ede2-4292-8b1b-5fa6e80e53a0",
        "cursor": {
          "ref": "e1678c55-84c7-4da4-8a92-a0eeea8877bb",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "76aa4171-bed6-4bed-b0e9-67a9e40c84d0"
        },
        "item": {
          "id": "4d7a0816-ede2-4292-8b1b-5fa6e80e53a0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7d995b7d-ddeb-4b02-bac5-5b3515f22870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807b5169-07af-4db3-aed0-50f11b9474d7",
        "cursor": {
          "ref": "dc0d8f12-65c3-4dc2-b187-f9e24edbafab",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "72f40863-2163-41b2-b401-0addbf4e064b"
        },
        "item": {
          "id": "807b5169-07af-4db3-aed0-50f11b9474d7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ec5c46d0-e640-4b95-87b0-722eb996f744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1293e9a2-5807-4449-9909-fdb91f5daa34",
        "cursor": {
          "ref": "c14a88f6-3464-40df-a3bb-d69142534c79",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5368b2ba-6b0f-4178-a138-1b8831253a9a"
        },
        "item": {
          "id": "1293e9a2-5807-4449-9909-fdb91f5daa34",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "064408fb-88fc-41fe-9352-6b691ccef41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8979af3b-68e7-4d0f-afef-c5044fedb2f0",
        "cursor": {
          "ref": "7791e32d-a77e-4ad7-9107-ee984054d1f8",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d6ab8767-2cab-4531-a3ab-f514ba883963"
        },
        "item": {
          "id": "8979af3b-68e7-4d0f-afef-c5044fedb2f0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e49b048e-4649-4507-b61e-d1089d634969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508399f4-6817-4362-94bd-ed52579a1b8c",
        "cursor": {
          "ref": "9e70201b-68f3-4071-94ef-4def7597b287",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b7e24a23-d760-46f7-9e9d-83c26dcdeb53"
        },
        "item": {
          "id": "508399f4-6817-4362-94bd-ed52579a1b8c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d7b1c11f-26d7-4207-a0eb-6a07ff533e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849ddac7-e761-48c8-85fb-0b3b8c6d8d67",
        "cursor": {
          "ref": "b94091b3-ad5d-4754-9e2d-30be991c0255",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "289d1da0-61dc-4890-abde-9dc8c02bcd93"
        },
        "item": {
          "id": "849ddac7-e761-48c8-85fb-0b3b8c6d8d67",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d47775eb-5c48-4dd9-8afa-50d8c340c97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c51f1a1-20f2-4103-88b8-7b2ef5636ca3",
        "cursor": {
          "ref": "4a37430c-241b-4f89-844a-9e792e35d8e3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c41d828a-cd78-463a-ab65-11004a950e26"
        },
        "item": {
          "id": "9c51f1a1-20f2-4103-88b8-7b2ef5636ca3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "10489085-c5a0-4d5a-9382-3eefd9191abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f53c92-a637-4a0d-92cf-262260b98e70",
        "cursor": {
          "ref": "f9fa135c-3bc2-4a1f-a328-3b0062402724",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7a0adeec-d643-4e57-b6fb-464afb7d8346"
        },
        "item": {
          "id": "22f53c92-a637-4a0d-92cf-262260b98e70",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b63f9688-702c-4420-b53e-6d193f4b329d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26293092-bcb6-4028-ae6c-1a94da68f94c",
        "cursor": {
          "ref": "eda06bdd-f676-41fb-98fc-a8050fa0b8f2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "63743222-c4b2-4b79-9f68-cd6fb8fa5414"
        },
        "item": {
          "id": "26293092-bcb6-4028-ae6c-1a94da68f94c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d635635f-cc94-4115-bc66-13de42b74ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cecc247-ac4d-40b4-a967-485a7f14acf0",
        "cursor": {
          "ref": "2ac23d50-6bee-4f21-a032-f6f341a101cd",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "782675d3-f31e-43c5-ad95-404cfd091ed7"
        },
        "item": {
          "id": "0cecc247-ac4d-40b4-a967-485a7f14acf0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ed899c73-7d7e-4404-a26d-5ed09e099dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade1147f-31c4-4b0a-a32f-3b32c0e09021",
        "cursor": {
          "ref": "8f737764-0369-4e2f-9ef3-2ae208ac5f57",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ecb36fc0-ef2d-441b-b401-c4ca5d3ba72a"
        },
        "item": {
          "id": "ade1147f-31c4-4b0a-a32f-3b32c0e09021",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ef9e1d55-5ce3-4360-bd09-4e82d3464be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e469397-c4e3-440a-8d31-04fae89b10e5",
        "cursor": {
          "ref": "d69a9887-54aa-48ad-b602-522bf2e08c06",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b24fe5d6-e848-4f56-9e90-6fc953aaa491"
        },
        "item": {
          "id": "1e469397-c4e3-440a-8d31-04fae89b10e5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "24d6fbfe-80fd-4b46-baaf-dbb3377e53e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873b4002-593f-46f8-9fb6-0dd501eff4a3",
        "cursor": {
          "ref": "f4569858-bbaf-49b3-955e-421a7f227fff",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "562ff61f-5506-403e-bd42-ab9c99982f6d"
        },
        "item": {
          "id": "873b4002-593f-46f8-9fb6-0dd501eff4a3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cdc86ebe-191d-45a4-b69b-2e442ec88850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b3d569-58da-48a9-8b3e-5aa257390948",
        "cursor": {
          "ref": "4d5e9dc3-796f-4b43-837c-392fd9c99d44",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cfb555e8-c5bd-4898-9edb-c9b2dcd5b5b9"
        },
        "item": {
          "id": "58b3d569-58da-48a9-8b3e-5aa257390948",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3f00424e-f4ae-4035-baf0-e03164428db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6037bc-4b32-4835-8837-a9117294e7a4",
        "cursor": {
          "ref": "a58b0950-31c9-4be2-a60d-b6f8a242f7c6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2bbb0bae-e878-40f1-a68a-88d8fe034249"
        },
        "item": {
          "id": "3d6037bc-4b32-4835-8837-a9117294e7a4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9b9f197f-a435-4e88-b92a-e156899ba701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3f8037-ef6f-4632-8cef-bea4756a7b76",
        "cursor": {
          "ref": "3a330825-f234-4ff4-817c-c30ad5c21948",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9a535bd1-ed01-4ac8-b106-8d70629c596d"
        },
        "item": {
          "id": "7e3f8037-ef6f-4632-8cef-bea4756a7b76",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ec3f9940-11f4-4ad4-97bc-d01c74bfd230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560ade92-6b4d-491f-b059-c007871ca2a7",
        "cursor": {
          "ref": "3bb86d3d-e97b-4f15-9f44-3a7bd5454a05",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0ffb0e71-c655-4077-8582-9bd7b536abb5"
        },
        "item": {
          "id": "560ade92-6b4d-491f-b059-c007871ca2a7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c9809a28-7559-40f5-9eb0-06f5ef0b51d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e18ed48-6ff2-45ea-8aa9-80228eef6f98",
        "cursor": {
          "ref": "e96deeab-445c-46b2-b4a1-1fbb748473f9",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "acb751c4-b9aa-4a36-84c9-ee63ba95bc8b"
        },
        "item": {
          "id": "5e18ed48-6ff2-45ea-8aa9-80228eef6f98",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e489c826-28ee-4e41-bd4d-e188e79f06ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bc5993-1dbe-44f8-b098-c0014ce345a6",
        "cursor": {
          "ref": "9fd99f17-2ec1-4eea-968c-cb83c3fbfad8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "85e7bacf-7101-4193-8483-3775f1067bb8"
        },
        "item": {
          "id": "00bc5993-1dbe-44f8-b098-c0014ce345a6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f02b7a16-f8e4-49e7-9e68-6f5668f21c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2561b61b-68e6-4f48-9a8b-e804099b0dab",
        "cursor": {
          "ref": "47f68433-0a16-4ffd-a53c-a132ffb5e6b4",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "65bad33d-aac5-45bd-88df-7b8d03ecdd55"
        },
        "item": {
          "id": "2561b61b-68e6-4f48-9a8b-e804099b0dab",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f6fc8193-8fc1-41c1-b7de-1ac9ed06db91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828f25b5-9700-4bb5-8ac8-8d904c2a726e",
        "cursor": {
          "ref": "8fab9050-1c30-4cec-84ff-282c76208fb6",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d74da847-b755-4592-ba32-f81d55074d48"
        },
        "item": {
          "id": "828f25b5-9700-4bb5-8ac8-8d904c2a726e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e248a5ec-ab7c-4eca-84a2-0dc251856d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d824cb7e-d93c-46d6-abdb-094bb368d5f7",
        "cursor": {
          "ref": "2423b8ce-2309-42ec-8394-886699c94cd4",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e0ab98cf-f85d-4bd0-a9cb-a1418c6a3699"
        },
        "item": {
          "id": "d824cb7e-d93c-46d6-abdb-094bb368d5f7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "202a6295-7efa-41d6-8973-48d11ee00236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17b0279-9cb8-438e-8d83-6e37f7eff4be",
        "cursor": {
          "ref": "ab3d1480-e1e0-4d2c-9fb4-b1fa28746e47",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5982bc48-9334-4993-88be-7f97e746b4cf"
        },
        "item": {
          "id": "a17b0279-9cb8-438e-8d83-6e37f7eff4be",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "01ef70ec-e8ec-4a42-ae03-bef378d92e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a944cd8d-f14b-44ca-8375-eb841ca94eef",
        "cursor": {
          "ref": "9bb90715-b85f-47ca-a443-2134b72567ad",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6f4e6cb8-0365-4296-8151-c16ad2f6370b"
        },
        "item": {
          "id": "a944cd8d-f14b-44ca-8375-eb841ca94eef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c254835e-54e7-47dd-b76b-98c81d2d5061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4252c9-056b-43e8-9397-27836a9d6f1f",
        "cursor": {
          "ref": "53831e20-57b6-4dd4-91d9-44ac7f8e3dc9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6d8c5752-89c7-4ac7-a83e-69523b365c6b"
        },
        "item": {
          "id": "bc4252c9-056b-43e8-9397-27836a9d6f1f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3c255865-65f1-437c-9ffb-3cdec7631425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d4558b-8775-42fe-bc77-e1a2039f1992",
        "cursor": {
          "ref": "31d44860-d9b8-4bc3-a845-6b1e40bf6fb3",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "42fff12e-29c9-4c94-9c1c-af8b6422d5b8"
        },
        "item": {
          "id": "a9d4558b-8775-42fe-bc77-e1a2039f1992",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "699a0815-1371-4e7d-8777-8de5b38caf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70059055-0bc9-4dec-aba4-aceb51ef89ec",
        "cursor": {
          "ref": "e6f6bb82-e16a-4980-9d9b-0d201f630d88",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a0aaa54c-58d5-4f1b-9bd1-64b551549490"
        },
        "item": {
          "id": "70059055-0bc9-4dec-aba4-aceb51ef89ec",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "db710752-6490-437b-b7c1-548569b2a72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d1baa1-be51-431d-9636-0de66163c9f9",
        "cursor": {
          "ref": "ec4271f9-5060-47ec-b23b-ed82529ccb79",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "90a202a0-771f-41a8-9d95-4748aa1c2c9a"
        },
        "item": {
          "id": "85d1baa1-be51-431d-9636-0de66163c9f9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9c2fbb83-405f-4c47-9274-047ff87715fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f9090b-2454-4b80-a0fe-1bda556c4690",
        "cursor": {
          "ref": "27f1f070-2aed-4964-8fa0-92b997669cc1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "183c61b0-b917-4489-9ae3-2f84994d43d9"
        },
        "item": {
          "id": "28f9090b-2454-4b80-a0fe-1bda556c4690",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b96af267-04e4-465d-a422-235229ce67e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2701dbcc-b7f4-48bc-8b32-694d27544754",
        "cursor": {
          "ref": "dd01849b-a90a-4a5f-ba51-bd3d42f9ebe2",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e386a440-ff43-4c62-99db-9ea2d31be3dd"
        },
        "item": {
          "id": "2701dbcc-b7f4-48bc-8b32-694d27544754",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cfdddccd-c1c0-45b1-88b4-f87a81fccc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce145710-f9c1-4f84-b4e0-104d440da2f0",
        "cursor": {
          "ref": "5628c959-8b61-4578-bff7-636dd64d5df5",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e10c0580-4b51-4390-b579-6b2b05103ddb"
        },
        "item": {
          "id": "ce145710-f9c1-4f84-b4e0-104d440da2f0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "301fa6b7-d563-48e1-a6b5-33d086056862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb94983-b19b-4472-addf-771cebd4d5e1",
        "cursor": {
          "ref": "8fe4886c-5d28-445e-8b23-9da6f5f21e98",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a360dd1f-2693-4ad2-b5c6-eb0e5774dcce"
        },
        "item": {
          "id": "5cb94983-b19b-4472-addf-771cebd4d5e1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c64a03ba-50f6-43ff-905e-a86c0b3ba399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3eb897-3f25-4a17-b086-235ee41fcf4c",
        "cursor": {
          "ref": "e1d3efcb-65e4-4d9f-9403-6214e67864b8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0f927acc-a0f1-47d9-8682-a97a1b8ef54f"
        },
        "item": {
          "id": "6b3eb897-3f25-4a17-b086-235ee41fcf4c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "af115ca9-0446-41d1-81fb-926b88f67f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d563241-8b70-4a02-9350-d3825c923c9a",
        "cursor": {
          "ref": "a8ec9481-1122-4147-9549-801dabf9a874",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3eeb7e0c-c6de-4dd5-b6ef-26cdf2b61e9b"
        },
        "item": {
          "id": "6d563241-8b70-4a02-9350-d3825c923c9a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0f5df83d-6ab5-4738-a656-e1927e80e82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed05ebf8-960f-477c-b4f7-e99977632962",
        "cursor": {
          "ref": "e38d30ef-b8cb-4a03-a8be-c2f1556f289c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eca76d4c-fa6d-4c62-8418-3003d2601ac4"
        },
        "item": {
          "id": "ed05ebf8-960f-477c-b4f7-e99977632962",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "39fb9ff2-8c50-4c21-a313-53814d3b3195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac35568-adc9-4de6-a71c-e81779186ea3",
        "cursor": {
          "ref": "4795a7a5-914b-4886-98b4-dad358d6f72c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1b5ec486-fdf1-4bb4-9905-2b95aa73c7c1"
        },
        "item": {
          "id": "eac35568-adc9-4de6-a71c-e81779186ea3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "947972f4-37d4-4bb9-a8b1-c4c2e71ba198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7d41e4-451e-4116-b3bd-2eb6cea8d7c4",
        "cursor": {
          "ref": "8871e6c4-cd23-4afb-a14e-8f2bfeaea634",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6a5f4375-3f0c-4700-aca5-ce49fc38e0fc"
        },
        "item": {
          "id": "9d7d41e4-451e-4116-b3bd-2eb6cea8d7c4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "094fc60c-9848-4ae0-8c98-1d3953bf02fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4de712-aa56-4b2a-9cd6-e004534d6078",
        "cursor": {
          "ref": "c7107ffb-9e36-4552-927b-70fb8966bc65",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "49d24e33-62d2-4ed4-9ac7-4767fdcb1008"
        },
        "item": {
          "id": "8c4de712-aa56-4b2a-9cd6-e004534d6078",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "aa49ac9b-8959-4f46-a68d-2f3a025cb156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336fbaca-dcdb-46cb-8f04-f43a42c05239",
        "cursor": {
          "ref": "8905776e-1943-45eb-82f4-05d7e496a1e1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1796048a-d674-4a79-a8cf-422d99d0c928"
        },
        "item": {
          "id": "336fbaca-dcdb-46cb-8f04-f43a42c05239",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d1f212e5-1ef8-4a2a-a3ac-f0ac6e8961d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5813c37b-0c67-4b6a-87ba-d90c79e261c6",
        "cursor": {
          "ref": "3aa6c9ad-691b-4267-a2b6-734bd7434d75",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7a73a607-3c13-4c5b-909b-f7c8000301a4"
        },
        "item": {
          "id": "5813c37b-0c67-4b6a-87ba-d90c79e261c6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "07f0e4d9-e257-48cf-aeb9-d5257edfc4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee358a92-b146-4d0e-8cb6-e26809101133",
        "cursor": {
          "ref": "cf55cccc-d099-4742-9869-26d178ee23ee",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f55b3bad-e50f-4e07-98c6-a652e133d936"
        },
        "item": {
          "id": "ee358a92-b146-4d0e-8cb6-e26809101133",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a6409507-a980-4fb7-a398-f5ab38d655cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933081b4-959f-41f5-b124-4be90b71695e",
        "cursor": {
          "ref": "1446feae-e790-4bed-8b20-663b7c74e7fd",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "65ffb1ce-b7ad-48ef-9e32-3b4c1f555a19"
        },
        "item": {
          "id": "933081b4-959f-41f5-b124-4be90b71695e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9081a1dc-39d2-4698-99dd-4cebaf9c94c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6fd7b1-acd7-4446-81a2-8f2f2c46ff6e",
        "cursor": {
          "ref": "1c11824b-eaf1-4564-b852-5f13adb9587c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "60728ba9-aeb2-45b5-91ae-720f100c1319"
        },
        "item": {
          "id": "6c6fd7b1-acd7-4446-81a2-8f2f2c46ff6e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6e541bcd-6a76-4f22-8dc1-ee1726abbc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6caaeb-c850-499d-9a30-be3bbb21cc0d",
        "cursor": {
          "ref": "2533bdc5-3a7e-4df9-a964-ec282d6ae43e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ddbbb6a5-fb7b-48b1-ac8f-d38afdc8f9d2"
        },
        "item": {
          "id": "eb6caaeb-c850-499d-9a30-be3bbb21cc0d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e3de5ab2-4e7e-4eb0-a455-adc3c6e71caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f127158c-cb19-4512-9f2a-0068eb4d3d56",
        "cursor": {
          "ref": "33dcd665-218f-4eb1-8571-10ced2f230ea",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "51568579-826e-4fc8-8240-09a0de836338"
        },
        "item": {
          "id": "f127158c-cb19-4512-9f2a-0068eb4d3d56",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6b9652ff-07cb-4dcc-a0c9-6dcce0c1544b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b3590d-f9ee-487e-9cc5-9187a5f9794b",
        "cursor": {
          "ref": "bbcc784b-5c72-4ba4-ba93-dfbb72b63366",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3f82d498-9505-4b81-a380-36ff35ccde0e"
        },
        "item": {
          "id": "d9b3590d-f9ee-487e-9cc5-9187a5f9794b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "790c78e9-3634-4fbc-b87c-3bf8a6f12808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6c18bb-163f-48ac-b42f-1af38e1b6a0c",
        "cursor": {
          "ref": "ec086df5-1382-4baa-be8c-0c7874555899",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9a2e8a71-bd90-4621-8650-7604c7d72add"
        },
        "item": {
          "id": "ec6c18bb-163f-48ac-b42f-1af38e1b6a0c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7f4d22d4-f376-4e42-8834-0a8b2ed03cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c93205-db85-42ea-8362-ea519058db07",
        "cursor": {
          "ref": "c975a7fd-6aae-48fc-ae8c-02b176e23f31",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "92f43239-6728-46d4-8cae-068f2c7630d5"
        },
        "item": {
          "id": "c6c93205-db85-42ea-8362-ea519058db07",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6f644bac-13d6-4013-90c8-ef37473062e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42614bee-3fc0-4d0a-829b-5b62da4b43e0",
        "cursor": {
          "ref": "b777e8c5-1405-4e79-8c09-7fbadd7c95ec",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bfaa5e78-6de9-4c9b-9002-5420f140463a"
        },
        "item": {
          "id": "42614bee-3fc0-4d0a-829b-5b62da4b43e0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1315e8a4-e601-4c94-ad69-8bf0a393c212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7c01bf-8566-4ea5-9c07-0b601cbc206a",
        "cursor": {
          "ref": "e54290bc-86b8-47b5-bcaf-0873621443c0",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e4ff4cad-c9c0-4263-ae5e-684b7971a0a9"
        },
        "item": {
          "id": "2c7c01bf-8566-4ea5-9c07-0b601cbc206a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5492ecc1-4796-4d7f-8055-5f6fffc91e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c3176d-2173-43f8-b823-9c539ca34eb8",
        "cursor": {
          "ref": "cebb8082-b10c-4878-97a4-20b2c8f9e34c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cc9ef44d-5f36-4901-a427-89da97ef4da6"
        },
        "item": {
          "id": "f7c3176d-2173-43f8-b823-9c539ca34eb8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ff7f804e-ba76-4c93-a22d-7cfa2525334b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d251fe-77c6-4c36-a010-5d6c95530574",
        "cursor": {
          "ref": "79a897c6-ac5e-4819-91ef-14e3c46805ba",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9d960f92-4ae6-428d-9c04-a39def4c45a8"
        },
        "item": {
          "id": "25d251fe-77c6-4c36-a010-5d6c95530574",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2bdac7c6-23fe-41d3-8bb1-fb83c539171a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb08ef9a-15af-45fd-b585-fe07c56ec00e",
        "cursor": {
          "ref": "b264260c-a3e5-4014-9bca-e4eac7a5379e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0f9abc55-52d8-48ab-9829-56b6607dbdd9"
        },
        "item": {
          "id": "cb08ef9a-15af-45fd-b585-fe07c56ec00e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5a3abd7c-c590-4c2d-85f6-ce19309e1133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a732fc06-001f-4db1-b0c2-51d9a62d1cda",
        "cursor": {
          "ref": "7827ca77-5708-4b6b-a513-4c204a92a201",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8f94e42b-80de-4b7b-8c69-2211c7e20d6f"
        },
        "item": {
          "id": "a732fc06-001f-4db1-b0c2-51d9a62d1cda",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a064c74a-633d-4b19-b88b-be2e610fa9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2a1c9e-018e-472b-98ab-f547ecbd26ab",
        "cursor": {
          "ref": "d19ca6ae-95c6-40d4-8653-974f80fd18f6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7aa76f36-05c3-49f9-a567-2d41e358a0b4"
        },
        "item": {
          "id": "dc2a1c9e-018e-472b-98ab-f547ecbd26ab",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "97d617d0-599c-4396-b9df-27a50f7030c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbda7c2-0978-4f44-bf6e-b713928fe019",
        "cursor": {
          "ref": "c453df36-1a37-4fb3-aed5-4051c7015aa6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "29958c31-3a55-4300-853f-fd56f642822a"
        },
        "item": {
          "id": "1dbda7c2-0978-4f44-bf6e-b713928fe019",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bcb1b7df-c877-4581-ac8b-7733f6a2a0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eafb64-36e7-441b-bdcd-821831217022",
        "cursor": {
          "ref": "9621df1f-9186-43cc-97d1-29f45308ffa9",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5a52cf46-e8c3-43fd-9743-3ad54df09e24"
        },
        "item": {
          "id": "b3eafb64-36e7-441b-bdcd-821831217022",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3c52c741-049d-45cb-8451-c2ae63514974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95924cac-323a-4978-8d54-7aeee629d8ae",
        "cursor": {
          "ref": "18d54ac9-a978-4b93-a9f4-c15c41ba921c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2a543cf6-3b29-43ee-b705-6ae85473a71d"
        },
        "item": {
          "id": "95924cac-323a-4978-8d54-7aeee629d8ae",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f499d988-c8f6-4283-9101-1938646566af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15c80d0-612a-4de8-a68d-4d4ea8b3e1d4",
        "cursor": {
          "ref": "5570b10e-8800-4a12-ad89-39d368216916",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8a282b08-2b50-478c-8145-6cc851b4570c"
        },
        "item": {
          "id": "e15c80d0-612a-4de8-a68d-4d4ea8b3e1d4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "12818f5c-505d-4a30-976e-0a97a5283e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b445b07-5f1e-471e-9b60-f99b4b85119e",
        "cursor": {
          "ref": "1b8a8640-ca3a-4602-ab64-94d206dc697d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0de6ffc2-a892-4fcf-bf94-cdfe587b2d10"
        },
        "item": {
          "id": "6b445b07-5f1e-471e-9b60-f99b4b85119e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ce436494-3bef-4980-bd41-a3f62f6c707d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8ae1e2-6b69-4bbd-90ca-ed6c9c7ba9fb",
        "cursor": {
          "ref": "1de46dd5-51bc-4f03-ae97-694e635ca15a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "719cbccb-f84b-4333-a704-06729b0b1e9f"
        },
        "item": {
          "id": "ed8ae1e2-6b69-4bbd-90ca-ed6c9c7ba9fb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "49c6db57-2310-4720-ae0a-329e36f7c7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f150d6f8-8217-4643-a010-544c6c835a33",
        "cursor": {
          "ref": "7f407a45-c43e-4733-b66e-8bc9d661a92f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e3c85192-8f5d-45c1-8b7b-4e5f73d0e8ce"
        },
        "item": {
          "id": "f150d6f8-8217-4643-a010-544c6c835a33",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d0f26e0b-e079-42e6-8d22-a553f6371be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00ad6b8-045b-4a92-9c1c-b15fead60843",
        "cursor": {
          "ref": "48e64b10-a491-4964-8ed6-d7c434b9737a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a6cd01d7-4d82-4755-b3fa-a0f74cde4835"
        },
        "item": {
          "id": "e00ad6b8-045b-4a92-9c1c-b15fead60843",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e34857c4-fac4-4697-b4e3-917ad860e51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942eae2f-85ee-4c1d-bd22-80a387bd8eab",
        "cursor": {
          "ref": "4b938ef9-6f48-4d95-a156-833d3683282f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "de701730-53fd-48ee-96b5-6260db830f57"
        },
        "item": {
          "id": "942eae2f-85ee-4c1d-bd22-80a387bd8eab",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "269c6392-09de-4faf-a19c-37ca194b7be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d3742d-955e-4177-8957-caeeca029485",
        "cursor": {
          "ref": "865c7aaa-bd06-4337-aeb0-d0d0b5126c4c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "61653304-19ed-4588-a1df-49fe6fddd854"
        },
        "item": {
          "id": "95d3742d-955e-4177-8957-caeeca029485",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8d0911b8-3e7e-40ce-952c-54965c06c5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dac0ad-0084-4bad-a6b6-07c1e0a6d220",
        "cursor": {
          "ref": "9a073c7d-7a4d-422e-83da-a89cd0576d29",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3be1a61d-9f2d-43a0-a87f-08f500c2a3e4"
        },
        "item": {
          "id": "29dac0ad-0084-4bad-a6b6-07c1e0a6d220",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "39834fff-f91b-4208-923d-e4d9ea26b638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0035fab-8397-4724-9968-79e3e5e032a4",
        "cursor": {
          "ref": "6dbb34b2-5f8b-4c19-a3da-d59bc632b849",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8384d596-a716-42ef-844f-89290c17238b"
        },
        "item": {
          "id": "a0035fab-8397-4724-9968-79e3e5e032a4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "494345f9-a2e1-4600-acef-f6b9f294cc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb4dc25-5e73-48ba-a886-8dd4147a8415",
        "cursor": {
          "ref": "382e8085-3790-4b65-8a14-47d7bec8aeab",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7af07183-3790-4eba-bf3b-a969dd2a62fb"
        },
        "item": {
          "id": "ccb4dc25-5e73-48ba-a886-8dd4147a8415",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e1f22d92-628d-4d2b-8a61-0e9c590f5317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425dcfa7-6ce0-47e1-a7bf-41de2636c95b",
        "cursor": {
          "ref": "df6f9c09-56a5-4375-98b6-81400fee5901",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bcfd940b-3678-45d2-9ec4-7a87aa6fcbc7"
        },
        "item": {
          "id": "425dcfa7-6ce0-47e1-a7bf-41de2636c95b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "35be4411-23ed-4b60-a3b6-54219a7a5d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c528b36-7935-4d64-a074-4cf1a2b33d9d",
        "cursor": {
          "ref": "2172bc29-23da-446f-be4c-c40a2fd5ade9",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9b4336a9-64db-4b13-bfbb-6e525241c474"
        },
        "item": {
          "id": "8c528b36-7935-4d64-a074-4cf1a2b33d9d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7878abfc-48cb-4e1c-b3de-f66f9b8f0dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32933f9-3221-4ce5-a1ad-bd05c558d53c",
        "cursor": {
          "ref": "18be9534-658f-47b4-8fd3-61994d1f56f3",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7a520bf4-0e90-4aeb-8b5b-8df964d425bd"
        },
        "item": {
          "id": "b32933f9-3221-4ce5-a1ad-bd05c558d53c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aad210fc-c636-435a-9464-a91599d5d57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b888d211-0018-4985-9bbf-0f0c1286f4fc",
        "cursor": {
          "ref": "934c8aaa-b050-48fb-a93e-3f3cf9b3e12d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "790b6c40-2db7-4ad4-8ce9-82dc50f001b2"
        },
        "item": {
          "id": "b888d211-0018-4985-9bbf-0f0c1286f4fc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "efb9a7cb-7385-45e4-b1ea-ff148111900d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19355a0c-f92b-4f47-95f0-eb93dd873279",
        "cursor": {
          "ref": "0545da34-03b6-4799-8556-d557bbc86a74",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d242357f-f108-489a-b006-e08392128c69"
        },
        "item": {
          "id": "19355a0c-f92b-4f47-95f0-eb93dd873279",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e7b90028-ff43-4392-aee9-64debbf5fdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d08bcb-9f32-4112-945b-ddd43526b82b",
        "cursor": {
          "ref": "cf17b339-5a3c-4742-90e6-e8e15a2cc6bc",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "36dda9a6-b259-4ac7-a9c2-646b56520721"
        },
        "item": {
          "id": "47d08bcb-9f32-4112-945b-ddd43526b82b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ef23ac11-60b2-4ff1-8c93-2f4c193d56e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e29892-d9d0-4687-82d9-3e452594f720",
        "cursor": {
          "ref": "0e78be0b-51f0-4a35-a8b4-19243eeb5f89",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5f84ff2b-f866-44c2-8e61-80f1d73e36a9"
        },
        "item": {
          "id": "58e29892-d9d0-4687-82d9-3e452594f720",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4c23e6f3-8e06-4213-92d7-32c7a6bfb7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f428f4-1e31-4ae2-bf23-7db99f513053",
        "cursor": {
          "ref": "6953895c-0c4f-48fc-bc77-e27443dd19fd",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b200bd01-908c-4efd-80bb-7bb6eb020595"
        },
        "item": {
          "id": "91f428f4-1e31-4ae2-bf23-7db99f513053",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8ec77d4e-f3cb-46d9-bb16-e45cfa38f02b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed19266-19c9-4e30-a8ca-3c8fdb3516ba",
        "cursor": {
          "ref": "5499db02-72dc-4ea7-837b-b7796c4a2e25",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2f1d130b-94dd-4aa7-9dcb-a7ce145a6e70"
        },
        "item": {
          "id": "1ed19266-19c9-4e30-a8ca-3c8fdb3516ba",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fc124440-1b6c-4192-899e-9d1120b0ebfc",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "48252a78-eaf5-4b9c-88b0-cc2de2e5a170",
        "cursor": {
          "ref": "6c926641-1485-450f-a632-5b051a9e007f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "68b50c87-9e7b-4dcf-9e12-27901b38825b"
        },
        "item": {
          "id": "48252a78-eaf5-4b9c-88b0-cc2de2e5a170",
          "name": "credentials_verify"
        },
        "response": {
          "id": "15b2d8bb-e01a-4030-99b0-d880f9cff54b",
          "status": "OK",
          "code": 200,
          "responseTime": 2621,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8103a5-4982-416c-ab83-bebdbee2e00f",
        "cursor": {
          "ref": "a8530c92-96c0-426f-82b5-f07950ed4855",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ee8de993-7997-4a4c-b9a1-61c9c050922f"
        },
        "item": {
          "id": "ad8103a5-4982-416c-ab83-bebdbee2e00f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bf35988c-ed91-461a-9ac3-9ae075645bdb",
          "status": "OK",
          "code": 200,
          "responseTime": 2274,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e2d28b-9874-40fc-bf68-a10ed837efa6",
        "cursor": {
          "ref": "45af6af9-1358-44d7-b4c2-2e20c17f343e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6f4fc0fe-7ce3-4c17-b4c3-3fb3f8abb78f"
        },
        "item": {
          "id": "c3e2d28b-9874-40fc-bf68-a10ed837efa6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "758c64d7-5df2-4279-91d7-d7606e7853a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e2d28b-9874-40fc-bf68-a10ed837efa6",
        "cursor": {
          "ref": "45af6af9-1358-44d7-b4c2-2e20c17f343e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6f4fc0fe-7ce3-4c17-b4c3-3fb3f8abb78f"
        },
        "item": {
          "id": "c3e2d28b-9874-40fc-bf68-a10ed837efa6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "758c64d7-5df2-4279-91d7-d7606e7853a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5163a3ea-2b13-4fa1-a21c-31fd424ff6bb",
        "cursor": {
          "ref": "ad4cc5fc-cd93-4733-92ce-d6386f2fa748",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "66aefafd-dc32-44ef-b53b-50b4162698d6"
        },
        "item": {
          "id": "5163a3ea-2b13-4fa1-a21c-31fd424ff6bb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "369bbc1a-79a6-406e-bbb2-653e87085f12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682274da-0049-45b4-b955-8d1b6190acd3",
        "cursor": {
          "ref": "5af5b00c-b1bb-4ae7-bbcd-64cd46bc5890",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "16ada5ce-53fe-4a6d-a8df-aac1cf43663e"
        },
        "item": {
          "id": "682274da-0049-45b4-b955-8d1b6190acd3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0a08a80b-5b10-4a6b-867d-3745d7548dff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}