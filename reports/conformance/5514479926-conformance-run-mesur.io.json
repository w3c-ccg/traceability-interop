{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "21ceff27-785c-4988-b2dd-e0122990e87a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0ae193e0-68a9-4b05-858b-c656b1f6fc79",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63f42fa3-7354-4399-a1a1-391137e24ab2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aca9459c-95e7-440d-a196-d1dd716995ca"
                }
              }
            ]
          },
          {
            "id": "a67e3305-c3bf-493e-ae8f-8600a585b8b6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77ec6fd4-376e-4d7c-ac37-23b295c21cde",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "adddaec8-4bc6-488b-907e-e2cd3de7c057"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ee95088e-06d5-4bb1-895b-cb93e55a2964",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8debf070-f048-44a6-9add-e12eb4b78c87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "daa8b537-21f8-476d-8f1c-5d74ada50a02",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db657e08-1795-4570-bbaf-e32dd2317b90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0a0b223-1df9-46c9-95fc-a67e2ad10669"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d50bba6b-6044-4d65-a838-38fa3b4eedc6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62946ec9-0da2-481b-bf8c-72f8d9e2e460"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4df8f50a-258c-4d26-a0a3-7f38a6d49c8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "411e2e72-f8be-4720-9833-d03969df4689"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a15e12e0-5716-4d18-8da6-7eb69e54918d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9ddd8977-7b6c-4a0f-a832-88ee3d4c039f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1db50d47-2a01-43d8-bfe1-ce35ed3850ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31b25419-73d7-4f5f-8036-db3ddb570a65"
            }
          }
        ]
      },
      {
        "id": "cc563da1-0d59-4e4a-94f4-17626ce6693e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c574b676-9273-44a0-91d7-94fa693e6e92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b11f7ae6-208b-45bb-b7ef-618da512374e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a9b4b0ba-fc42-4322-989c-ec4fe0df4213",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2c739c-c278-4c29-ad57-fb0b646c9159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d5542f3-9ad7-4b8d-995e-217f7f299446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e27418-2a07-481c-99e6-80c09e8775d0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c312e65d-01c2-4861-9c50-4a280ca382bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24be968c-582e-43f0-9f07-63b9074599f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e3505d-2ab4-47c6-b9b5-7bf6209ad03b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a51ec5-da1e-40c5-9aa9-8f458aca676c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be1687ef-fc02-47b9-b671-e2550048a093"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b78c3b4-1995-4e99-ac43-965a5eb389fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c46e8778-be78-43ab-ba5f-b7e2e92f45e3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd62ed5c-8c3d-4d36-ac5a-e153dbc4196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5de21696-e986-4ad8-a463-74c9f7ddf750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65db10a-1e1f-4a99-b062-425d1dd6b0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0efb8ff-a33f-4a44-a041-4e87d8d8c9ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f6dfbed7-5f26-4693-b0e7-038237a88e24",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fdaf108-e0d2-43ca-b131-534dec8cbff9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed2d209a-8942-4eeb-84bb-7283670569ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "51d20004-ed2e-4b69-b571-1f2d2187fa71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59dfc447-218d-44e9-a5e7-d88e5402bdef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a92d000a-717c-479a-9b4e-4673fb875f3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44aa3ad3-8cc3-497d-8b7c-6d4a30279e2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f902f492-5709-4835-9ce7-32dc856b50db"
            }
          }
        ]
      },
      {
        "id": "1f758a45-0640-4293-851d-922b0818ee3d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c9302ea0-aec6-431f-930b-d13e95a8e4c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98a25520-8745-467d-a3c1-a8d179b10abb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1dee129b-5471-44e8-bb4b-2bd60226fa5d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d8638f-5fb9-495f-9596-53e0516c3931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d53bed-4e85-4f66-9964-16393fe292af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2cbb69-fb40-489f-a8ad-fddaba61422d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d75c208d-1b98-4f70-b0a9-e7de3e3e7e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01573a05-9d67-4da3-beb0-b11a1f30fcec",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e4ca21-f0a6-456c-8a4f-a27f1273335c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb8c2ac-bd1b-4747-99e7-a808cbc41573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7ff8db-c7a6-4bd6-ba35-cf15b9dd10f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4df829bc-9e5d-46a0-8e4f-77aa04b18e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ab6d02-3795-4acb-8e00-021d3d39e5b7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5e2ed7-768d-45d4-96a4-33460f34451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc073980-14d3-4d44-8cee-f92a468bbe43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdfead4-d8c3-4be2-8fa0-e0001b21f39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdc3259a-a59a-43bc-89b2-cc976338fdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d56a39-f095-4aab-b731-1cb03813612a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d3ea6f-2729-4583-8f4f-675b17f1e0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0402dfc2-a3d7-4007-ba50-5e86f245f29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d3677f-1b1f-4abf-b8d5-8cabaec3f89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10a55ec0-22d6-45d0-9b17-c93b4e02c6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95265162-eb0e-4b89-b112-886473d9e906",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e16f1b6-7cfe-4bcb-8bbd-35da12e3ee87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c845ec-c3e5-4506-a4a1-6c8043de5688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece5f347-2b9d-4c7a-bf23-aad2e61fb5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dcb7a17-53ae-48e5-8f2c-7a82842c1a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4256ca68-02bf-4a96-9c02-5e2ce98ed9d4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029ebc7b-d867-4780-b89c-68e4d5758c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f65f638-745d-4c46-ad4b-ec8e40153e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e2d069-4a59-455b-83b4-8409d651eb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a813648-542e-4b3e-9f79-1a36ab94094a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80886337-1a5d-4ccb-bad4-1e5792d9d94d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8e9ed4-736e-4a3e-a398-e5199907cbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148b6759-b242-4f7f-a089-3c591397ab2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797409be-2724-4130-9e94-15704a02473a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "559ec06c-6400-4000-9890-110f049eecb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f786562a-fa15-4f32-9829-c272da048ae8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036b62b8-8ed7-459f-90b9-69f77aaaf690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3617339-a678-4e06-b82d-7d4a6039b8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68591d17-6732-460e-b23e-3c7ddec83f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9798b11d-baef-469b-ab4c-106174c74ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c805e77a-455d-48ea-aecb-e7017d495358",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d11598-fb07-4031-a4a5-54c6faa2931f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d18399f-1ffb-42b5-8b6d-795631934ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415fd6a4-00c8-4736-9e49-546a6d399998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54ab99b1-1e8a-4e0c-a1e0-bf9d017c2265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac24bcd-65a9-43b2-a9db-eabb2ae588d5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19388386-8abb-4c93-8301-badc24c3b8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903b9392-6fa3-4130-8539-90762c61b5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29912a8b-af8e-4e47-a45d-adb059532aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8ec186a-49e8-46ce-a2f5-1234f35b0f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d52ee9-ef31-4985-b197-56cc4ca87329",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011290e0-e1a4-42f5-807d-3d6aa402048e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1b7fa8-adf9-4f6b-b0d3-f45612a431bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4663f4ab-24aa-49d0-80d2-38cb61840d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73d2dc1c-c300-4aa7-b3f5-23329fa8844a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37b6669-2ff8-4fb5-a0a7-08d54402c2d1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b78a463-d1bf-4ef8-bff0-422027cb9123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e18ebf5-7649-4f0d-89bd-b4d38348630b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078b4914-3f20-41bd-bac0-343ab84308c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ded297f-8235-4362-9d3b-63b9437fd43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cba200-9ccd-4ad9-8122-c92ecfcbc299",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea90e1f-9f25-45e9-aeba-d276e54f691e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d58664f-2866-4beb-9db7-f3efdf79ab43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db351ff5-6637-4a70-b63f-55b3afae1b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe43183b-ae41-4bc8-a6c5-4235038dfd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5d6868-ed77-4a83-98f0-d21fd14a6ddd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb775eb-1242-407a-bd26-d1e710dfd5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91dd3831-3708-404f-8a02-eb22d6061acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c0282e-d01c-458a-90ab-c761bcf23e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "775f547a-0638-4c3c-ac0c-02288d7bbce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a380d0ec-33fe-492d-b41c-2bd0f5a2388b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f1c180-ac6e-4314-84fb-8c651e40da40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39123e4-9686-46ac-a072-3f3ff877443e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c13218d-c5bf-435f-a9da-9df1fa93017e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68085e79-2226-4891-9fc0-1f0aae1b2e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e00eb5-f174-45f7-970a-aade6e913c42",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c9e3ab-826c-4e2a-99f3-c0950077c25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d55046e-e9ec-4822-a810-59d923d7a8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0117990-6e55-4af7-9dab-a41f4e4998a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d8f2002-2374-4240-8fd4-c827c02168eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44be3420-a89f-4d50-83ba-fbcf040882bd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee48985-6889-4cf1-9198-88a815fb8cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fb9857-dd4a-49fd-be2a-d5f90ba09a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f23143-e378-4c93-af09-be1c58b4d0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4644c7de-3d1f-40f6-a113-dbb1a72345e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf71520-74fa-44f9-a9df-ccf62c9a3047",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf80a29-c90b-4d6d-9766-d20bc9c22878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe1a607-29b6-4a73-af68-22e8fbc87461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ceb00d-8aca-4b2b-93ea-915c7a1501f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "639a350b-7c6b-4347-ae5e-ac84f0dfe7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a226522-0743-433f-923e-7aafe4efc817",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91426d99-fad9-4cfa-a199-4f1466822215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356a7a7e-4277-439b-89aa-32efd25e1379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e57201-3c28-4755-95db-d24706b58834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb97af8-c2a4-48c3-9aad-eee8a196678d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512aa7e7-5711-42c5-87b0-14dfdf95faaf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c455809b-4f76-4e48-a391-620323261f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ead5bf5-8c80-4c0a-8a09-af99cf6ada39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6d6cbc-f521-416c-8c54-38167840448a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24e207ac-5e8e-4da8-878f-d71ccb2d90da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f635ea-3262-44bc-a975-bd2bb5c88019",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7008a18b-3938-4d37-a8c6-1addc9dc04c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67af15bb-7a5e-4096-a90c-fca9b4a7efd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2167a1fc-3a78-45b9-9215-ab88c50c208e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7335d885-e87f-48d6-8999-23a80152d616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22319657-e9fb-45cb-8909-5d10efce277b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada16a4a-035e-4da3-9570-60af26ac8369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9080bd3c-cc05-419e-aa0f-96a8fae2c61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ff6cd1-d21b-4ce1-9ce3-7d2203214d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "296c4bdd-d16c-403a-bd31-fd00b1264bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f64301-6aa7-410f-bd36-0dfd6fca1fdc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21320f24-ac04-4eaa-8738-b22efb454ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfa2515-b04f-4f56-91ff-86a36861e134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d59095-76a8-4117-8966-f03182e999b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b57c1e3-be7c-490c-9ae6-26ebecaa5287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d683cbc4-1d43-4035-9f01-12dde13a61bc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d541113-1b01-47a2-8758-5f1182ce8046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7ae8fc-2c98-4692-841a-a73850390c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb697b89-e4bb-4523-9d55-3a75b6066131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb8152e-b2c4-4c21-8eb3-28bd491d9ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36db332b-8e2d-413c-9dd4-3f1617bb81a5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa161ba-9041-413f-879b-192bd493458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09eccc6f-834b-4c9b-91db-4ac7ace00e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ea9da0-c4e1-4169-b42a-f0ba40e99115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40093084-65d5-457f-bc53-e1c15a66a22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fcddd3-3234-4a13-9bf6-1373a84b068c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8c097f-ed43-4d2b-a7e7-edf011970784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d7058e-2d0c-4f54-8278-bdb8446bf2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b395113c-2c1b-4b72-b3c8-46ac13965706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c84f24-9388-49ba-9cf3-aca8c344a226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5c44fe-014e-486e-8a19-465504f39ecc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93942dd2-4f79-4da9-b754-6f6f3146d233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729de95f-1fd6-4f71-af9e-0f62bcb560ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e06d3ec-5f3a-4601-9cb7-324ff6098ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8755373-4f7f-48c7-ac6d-0e1a109952e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c29369-c75a-40ce-bb60-3b455e246146",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bb11fb-f0bc-47be-8e5c-36c3c217f434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57a579f-25cb-45f0-8d19-e99fd710a302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5903cd-74d1-4b89-b05a-a6c8c4e6c156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d964c611-e05e-4aff-a38b-1d0309b2ae19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afed756c-56aa-4cee-948e-d89865314c2b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f07ff59-cd8e-4001-a0e0-5ac67ddcc1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807e5cfd-41e6-491e-83a2-f2cb6321c982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a79cb4a-e353-4b0e-b647-ecb3030d0d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3400397-39a5-47fb-a741-8f7ccde33ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc7cb74-48e9-4517-866e-04bb418061d4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecce3ab-fcda-4e72-8a09-50d59afea7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991fedd6-e853-46e0-a660-821d7ee1472d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edb684a-1563-47f7-8ca6-b2890b8177b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1c2fc3-d727-415f-93ce-46a0ba87ff37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da06a7f0-1eab-4ba6-84d2-ae8ab9dd6cbb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5afa143-8e6d-4b6c-ae21-b7ea9c4b685a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67b4ab9-96ff-44af-8ee0-793a8bb43e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c24fa8-e17e-4411-9034-f12b111157fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ec4631-c99d-4844-b924-dafe916d534d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8123b8e-750d-4a1e-88cd-2c14a79245c9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694c091e-b0eb-41c6-b370-4c9cf8b8840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dd1c3d-edd3-4dfe-b242-4bea9a7a54e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed572c8b-a036-44fe-8f6c-b874c3570175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae84e980-1024-492a-9d89-1e758cad0f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614be014-f776-44c3-b80a-8bbce70d49e1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20a27a5-164f-4219-a3dd-865b6f448484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed74595-925c-4b62-ac68-e03b5f1e4c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a3cef8-4d37-4766-9d64-105071fd85f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee084a3-fabe-45b9-923a-ee69551c1fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbed501-b349-4568-a9de-27325536cfb5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e65176-3141-4310-b7c3-78bee5a36e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506a5092-f382-40ad-a600-bf1103248da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcac4706-9b47-4903-84dc-28ea7af7498b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08e4ee02-8ef7-44b9-a9f2-49edbbbca167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03948a9-8801-4025-92c6-5f945d1b8db0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23511f6c-556a-45c7-a589-0ac59e45b659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5406fec-d7ae-434a-b753-03a88356fbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f5b0fb-db77-462f-92cc-a47cb8bdd22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6853170c-4e19-407c-8a8f-d7d35dc315dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d93325-4f1a-4b39-a92c-bcfd5ad458b0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef42ae75-296c-4d52-9a44-ba82f06072b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac8dc9d4-7ead-4c82-842f-2be85538b6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f920ac-b06e-4086-b1e9-66e5f7bafb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96b19242-76b9-48f2-9e20-6bd75027f339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2213cb97-0f01-42cf-8c38-9d4416821849",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0990bf1e-9487-44bf-acab-c78dff2e1d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8fbefc-3cc6-4344-99c2-99e66b7a0a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b43f924-994c-45c2-a78a-984f39b72444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1d769f-d9c0-441e-aac6-aaea181aebae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4beac527-ef61-43d9-95c0-499ac19928b7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c788c11c-7157-4362-840c-efef7b65119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff15a41-fb65-4a17-977c-f1ed1f71d62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14af671d-a49c-4970-884c-22800bc258ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e84ed9d-dd03-4c53-9baf-ae0c02965dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a96932b-c750-4db8-807a-1968a3a48fef",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3411e75a-819e-4021-8688-cf0e020fc9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d81416b-23e1-448b-b786-2f1b85ea3ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c1f5af-caee-47a1-b030-8b322c5a8aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "370d7ead-5ca8-4d5a-80b6-d558a4dadd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787ed47a-6649-4efd-8013-fcb5d63ff6ef",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0b6f4c-e384-4c72-b96c-6fe5ec60ec8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3474c81-bfa0-4c8d-8ef3-577842743fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9171a6cc-3be4-4fa9-8b49-1e0f6cbb8e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "43f347cc-5db0-408c-8c30-55d9d0c39bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a7b513-d2e5-44e7-aa46-963d31d7ae9f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1609656c-fac1-40b9-8fe9-dc794b132a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741f31f8-da70-4af6-a131-9cbb5910cd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f995767a-816d-4868-b05e-b31234686a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10cdd34e-958d-4766-99b0-570bc0bc77ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a690ad5e-82e4-4f8a-a5c3-9720ab72a05b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd514dd1-b71c-4c9f-b6cc-19d054868400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671d7fac-6c8a-4688-b50a-ea3ca23b032e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419fda0e-32bc-4af3-ae4d-0503ee0ab94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9321286a-da66-4769-b341-334c14f2a21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e325ef-da55-472d-885e-a70715a97152",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffee91a-3d41-4ae6-833a-ec8d56c2bc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaaaf7df-de46-4ce3-8f6a-2404044464a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0f9d3f-8db5-4f9b-ba1e-01c112f01c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "71095e11-467e-4062-acb0-5b542489a6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef252fb-2560-4c02-b6bf-c97a85fee8a7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcc48b5-7c9e-41de-97a5-58259f545130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ccc456a-e627-4b5a-b08d-4dfea0b19510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1827ce6-57fb-4022-832b-2d829ec09638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ab42ff-9f7c-4570-8291-63a41e870a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3999ad2-8d13-49eb-9e29-60ba276004a1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fdde8b-f088-4d39-ba1c-ee4cac3c1209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1cce06d-d86c-46d8-a26a-93d883b0e0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ba7fd4-5fcb-46cb-9f44-4a0b23f0788e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ae408a-d30d-4fd0-b12f-87a262839944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34db0ffe-f472-437b-a4f9-32de83541256",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c92b090-6210-4fc7-b5df-16510142b3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f836351-1956-4672-b1e8-30d9d991d85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd47a9f-88b9-4d3d-a660-6bbc1a0cffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67764532-2a67-4a83-8189-9a3b85ae08d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d4186f-5a62-4bd8-ad7f-119b99c3d9f0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97848e40-1243-47f6-89ac-bd7b58b0edda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05ee909-de99-4fea-810c-3073275c34db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad7df8a-d656-4d25-a871-792f5ccfc682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc09311-1b35-4e6c-86f9-26b0f5e43cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a418597d-6964-478e-b09e-0810fa5d9409",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6f97c3-9ee8-4bad-ba26-278d863b9c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e840d36d-7942-44a9-9a41-35e2a5a6ccd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a236c3b-ebdc-4428-ae3a-bd5b24cc5b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "075a55cb-0f03-4126-ad0f-062d5e746e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda71f9a-ded0-4933-9a2f-25b16e249a34",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0284c656-7033-4072-bca2-79f30e64fa95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb72858-d0c5-45dc-b692-e00bbcdb34f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620e3e97-0e02-489f-857d-3d56ec21c53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5118efd1-052e-46ed-b8b5-a6eb8a1bbfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f66ce8-2ed3-4a67-a82c-a91381fe59df",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac834a45-d2a1-44bb-9ebb-e5419b50b9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3312768e-6654-4cd6-a358-bef9d1515881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64feaae7-271f-4b69-ae7d-bb6112ac2bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18e24b21-69fd-4479-bcd3-0f592f95062b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d11e64-f9f0-42d1-b4d8-e2ea90625c55",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1aec448-67ae-425a-b615-b8912871c881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb4f3fa-ded0-447d-addb-38a59abec1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef7ec61-769c-4d9d-9422-0c8d899973e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a51759f5-7fa4-41de-9da1-23264d139edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fe5da1-9469-4509-b4fd-f7aa8627406b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8902153b-4866-48ae-b7c2-97e0ee20c693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa25cf8-f959-4cf0-8ce1-ee26836c2173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c1ad37-7730-459a-8779-bdd00ca24f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d263a9e3-0189-4554-aca9-2d078b52dcb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43438bdc-3686-43c7-afb9-1365f1eaf376",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa615cf-3760-4968-aa5f-be7cd0a5db82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49377fdd-a172-4eb4-b7bd-de68401d1ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb25206-f4bb-4577-942c-64f306c69c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2354e777-f5e7-47a5-9379-bea00adc25c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e056bed-88bd-47bf-8728-8ab39ae964c2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadfec7b-83aa-4b06-821e-707dcf42b528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859e4b31-a8c6-48da-a305-1685a67f4e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11523965-5853-4307-8175-e3496f1e7494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9a5dbf-5972-485f-82f4-7ef69ded0796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cc62a2-d3b5-47d4-aa16-d7ee04fb3362",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddf4fc8-7517-4fde-bba8-86f1e6a21eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650b9442-8546-47c4-8c3a-7c3dc0f9edf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b753d243-1f29-4723-9729-5cd34f54b832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd4ab76-fbc3-4913-af76-18b0262b5797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8695f6-8e38-4b80-93f7-1a0861194df2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a17d7b5-e4a3-4e0e-845d-8874842b539c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f660a03a-b3d1-478b-914c-0d36220a1259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d263b27-b47a-45f1-b78a-60197fb67623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "da05d788-79eb-44e5-a024-cf061f61c414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e947c88b-cef3-4239-93f9-e991bf22f3da",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6e4d73-f2ed-4245-926d-9e6aaf62404a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69ab333-202e-4e7d-ad60-663b31f740eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1c305a-a8eb-47df-ab45-07d99d65a18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "02081d35-b064-49ce-8b3b-206153bd914f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1765ee4f-501e-4c62-88dc-9c578eeeabe0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641a5a28-fe21-41f0-ac1a-9bcd3f50277a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe574686-2bef-4ebd-a739-ca0276263d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64842883-c62d-495f-b37a-8c1806429ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b97a039-0d7f-4dbc-96b2-ff1d3c81b167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902841a1-0a07-4c5b-8392-000fbab06920",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae804c0-ad4c-4a46-b359-5664e8b46b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a33a02-9b7e-4194-8fe8-db8848d7498c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e3aef3-0104-4192-8ae9-7c60e20841ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6e8a58-7ed0-4e32-b853-20453a3fab78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f830236-8d4b-41f6-9709-b29d4c934003",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce54e5c0-7182-402c-a94b-e04e810b80ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76e05c4-1eea-44f2-b35d-7faf9a4d8e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b174f1-1b65-42a3-a36c-5603f8cd837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02539b91-8900-4e76-857f-22bd4db98741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082810ef-3b14-4638-9a72-fd2d54760657",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb6d9bf-a760-43e0-b279-4e363f09d476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6eac4a-3f49-4591-bd23-b92735501aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8240f54-2202-4421-8886-b42f64c68ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ded64e4-439b-4361-afe5-77595cb7aee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da9a1bc-abbb-4fa1-b2ad-5fe87ef2dc54",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf275b4-fd03-45c2-aa9f-dc7351ff23b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7ce47f-d645-4ca6-a197-2bd48e20ad29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35f9658-5d90-4ab8-afc4-f81fea00f4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a28cca4c-f1bb-4b9a-84d1-807f100d4f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950a24a9-62b4-459d-880d-d2d8a786d811",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9ec3e1-6bb8-40b4-8af4-a400ff0898bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d32e942-7350-4928-b40e-3242c18772ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ca9ad2-e2d9-4ea4-bb8e-9583dfdf2159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "924628c8-73e8-48a8-b7c0-cc47f63b3874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbed3a9-4466-4af4-ae6b-0c40ff321f8d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aad5f2a-3652-466a-b5f7-b8bbf24ff214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7eec81-630d-4e96-8b91-29b5b969b976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848a6429-e9f3-4482-a2b0-1b7644799446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68ace84f-9ce5-4fa8-b385-a6fc4a311f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d42d4cc-4f4d-42c6-b8e0-6a0dffaef61a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1cf86e-2432-4f73-9942-499172e46a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca3c434-c186-4778-8ea1-7cc4d6bbcb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160dab9f-caba-4f22-9c90-526cfac5f917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3f7ecc-3f2e-4d16-a5ba-a3adb97ad6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814afe83-3615-4a73-abdb-b6508facf251",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15d1901-1551-42dd-b61a-043212940ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea38f2d-e929-4399-bcd4-0eccedae053f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52920ded-6b13-4881-bf86-e3061499ca56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91d55ae5-6378-43ad-857b-96f12b5b334b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045fc6ca-b2ad-4b3a-9a73-9b6400bce90f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6a3ca1-7af5-4ddb-9b62-a24107171eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca975c38-41cb-4543-9caa-bd99cddf318b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6258a4bf-b405-4f2b-9388-9977782644ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acd5ee51-7867-4de0-814d-13211a7bad8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c117941c-d605-45a1-b104-0ca846ab123c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c7ce7b-d24d-4ced-ba70-2dd6ffd5f4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15f53e3-0932-4029-b543-4d6f131c13a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6e2370-ad5e-4073-b5a2-3143ac062cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c97b9e-aa15-4480-973a-e80113526f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0add1217-2f8a-414c-8eaf-690f395442d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed98e11-732d-4ab5-9dbb-c462fc24bf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a8a64f-1c0b-419c-a9f1-481ea1fa41dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cab6363-38b5-45f0-816b-789c809dd332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ac601e-e13e-4c66-b214-da5aecbc5be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccd3bc3-2e7e-4843-991d-6f8e9b2c391b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592ee0fc-708b-45a6-a687-7a9c55b49541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71c5044-d9f4-43d1-9e3b-15102c41cfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbdb954-bb54-464a-ae1f-3cad1fda6a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c32c1a1a-a63e-4678-89a9-0db8e31f174c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7925315-629c-46ab-8faa-b5b945ef5ee9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53aadb47-4022-4161-a606-45568d117bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776c759b-080f-413d-b7a9-3cd88c64c9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71198fff-f9d1-4a77-99a5-27099e07a8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e42fc984-8c3f-4e24-ad5e-ec9a1f4d816c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8163f1d-59d4-4ffa-9a26-0864505f0680",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c34d2fa-de01-4ea4-a935-94d547778b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb5b88a-0c94-4e76-a27b-15922e87f021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f183c1e-1b1d-47cb-b8ce-4bfa0e5a1669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68fdbde0-8bc2-460b-ae94-675073ad4bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eeb6bd8-bf28-4fda-a935-2eb7a32e7270",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65be5d7-64c6-4210-a025-0d9c4b4b4952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad0ec8b-2143-4d69-928c-c229dfe127ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681f1ff5-dcc4-4142-a54d-3cfa2f4832c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbc1b4e-8033-425f-b8a0-a9d9122380cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b6a431-c1b2-4127-86b0-6316ae6e426f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0903ee55-6e27-43e3-b86c-40469a0c7398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7a7001-6b98-4001-aafd-8c96e1f8dbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcd67d9-e283-4ac2-a538-bfd71ca77846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "831be6e4-153d-4b18-9ae7-54ce670dba0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d688495-61f6-4f8e-b104-ec26002011ec",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e2e358-e695-42ae-97ec-bea2eba86f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff4cdd6-8eef-474a-8b40-95163225a5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a27f07-e578-4262-a741-4be03c3bea2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5723204-2835-4ab7-966c-6861ccdf530e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f45637-8185-4469-9943-2a277cca5a3a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cd8ca3-f8a6-4233-9122-ae26f84cba51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a7b8ec-4717-4fed-8191-13ba7e3d1613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0a5232-c7b4-4622-869e-d380ab6bd6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92164172-38ca-46cb-8d14-1a58641ce317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f9a28d-2fb3-4ec2-b5a0-35792e79e586",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5d93cb-a0f9-46d6-826b-7cc1e6b7ccb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565be3ca-a5a6-46ef-bc26-bfffa345c081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3021b7fd-5996-4851-89c1-39ffa73e9d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d2c834-1917-4902-ab8e-a9b2739216dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a2da8d-cb14-443b-99d4-6c538181053e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684fdbb0-5a96-475e-a59f-74f9b84b1647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29d9aa3-89ae-4619-9fbf-ae403792fc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13809357-7408-4c21-9f3a-595dfb480c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "876960b1-0083-4e92-9138-4fa08e8d564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1f4c5f-a8ce-4bbd-a078-ed7c0d4c2724",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1095ac-3588-4aea-bd5c-ee07bbd5a109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8909a326-6b17-440f-9e21-a1b27a64e048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ec89db-e7e2-4163-a51b-94de04e2bb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95f7fd23-e1cc-4909-8fc6-af1b92696c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717cc547-4de8-4896-a116-a6217c89cbfd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dc0d9e-e821-4460-8c51-f0b169e92800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312f4f6f-8468-490e-bb59-4f847016872c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ccd27a-cdef-440d-bc1a-b10ccd385d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8172fdfc-c3c6-48f5-b765-d73596e81626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceff6811-4508-4f9f-ae93-cb6e7ab5c2c6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5e1e10-6318-44b0-a84b-5c392bf8f014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f9229f-d08e-4fe1-af73-dfc12aba0171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b177f0dc-9371-419a-ae4a-6ef9a6a17bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "241d4890-16d3-4c14-8d04-fef7c3ebd4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e57b68-ccae-4036-99a0-20e99eb91d8e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58214beb-baff-407f-88e2-0aac5ea161df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad7f88f-757e-42c1-a74c-4c79fe51a0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1afb4f7-804e-4b53-9df1-a3d95ecda75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24494ff3-2e66-4693-89d4-6bca6c8bbb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ded22e0-36ec-48f4-a396-9111126237cc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c90be9-53d5-41a4-b2c4-e1335d53ce96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7df5f9-dbb5-463f-84d2-61f3e1b7703b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d30ec0e-d1f0-4ff5-a7c8-f6b2883e52dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae35c6b1-b5dd-47e3-851b-5d07aa27659e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a12b3bd-dc54-4252-952b-008b55abd939",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a945b677-0625-4efd-8eb5-25e71faac79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92d6351-026a-4ffa-a31f-ee6bba6441dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894ab81a-3e0c-4574-8a02-d2a572660ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da8c5078-4361-473d-8205-edfa9d115d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212e8751-d544-437d-bc9c-eb6a7af75778",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febe0f29-0139-44c8-b6e4-dbc8902d1e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120372af-63f1-4188-8fde-73186d0242c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abd1344-d79f-40f1-915f-bb0c36b8095b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e11f3e77-e1a6-40d1-a697-8642e6a1247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceec81c-22af-4edd-b7e1-c4d932b42d9c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9c6e9b-3afd-4138-982b-2e2c8adf8f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ee9fc3-da2e-458b-80a7-d389a981b10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58068849-5533-49df-a724-d46001cc57e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d52dee-f890-4056-8090-3da93cb44624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7a7198-4434-437b-87b8-bf94d1a2e6a2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b7b35b-4f2d-4230-8a94-9893b26f2db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb5b77f-e0ac-41b2-b8f5-b98cc8a36899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db73293-5239-4428-9934-b2236af74448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "84240c69-59fc-4e60-a1ef-155251927707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dfcaca-c1b3-492d-838e-f07400c5046a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b38b19a-7fcd-49d0-9308-57128a221ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f937c55b-4115-41c7-af8a-a4325ecdaf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f4dfc9-2155-47b4-b16b-70389a952bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8925513-c3ce-4992-b6fe-09c02e7b012a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d5b193-f5ba-42b0-a585-ad20eb952161",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69a466f-eeab-4e1f-865e-e2d7cb0a7043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9909975e-e1c2-4fd9-b0b3-0db57fe6835c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbd719f-865b-4871-8a80-379c3c5bfc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bb6bb8-2e89-45c4-955e-3b8ae4cb0af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2521f27-8158-4df7-a469-fd17c7423269",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625c3fa7-1268-452e-826a-744f546ccb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa6749d-bbe6-495a-b0e7-9ccb385512c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748efb7b-2b8f-4ea2-ada0-4c7b2e477f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a413705d-1e51-4258-91a2-bdce4ff1a488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee62eaf-eaf2-41c4-a1b0-f42a5f59a61e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4206f482-61a0-4c14-bd81-6867ce0d1dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8890658a-dafc-4389-9d38-3831e8560829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d7d493-9900-4254-af71-e8dee81bfb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8ca24c-4e08-4a3f-a871-22f62f5ab099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f09c239-90ea-43a6-8b49-685dfaed017c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d664eee-90ed-46e1-ac3b-b1eddb2e83b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ee8bdfa4-f2bc-4fb6-b819-2159313db87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b0b6d0-66ac-475e-99df-5e26c4e8b7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e51c8689-0436-4593-ac49-bd8c744d1e35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "32b6aa6c-5176-490b-b166-c2dd34227737",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aaed13e4-252e-48d1-b15a-95acf865f334",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bfd795-75c6-40da-8b54-d9c684128f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bf5468c-d002-4be7-b946-49a6c082db2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c81e2-6a98-456b-a411-a24fa21b6a9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c41bf94e-0883-43e9-bf05-cc73a9fbda73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bda1623c-b914-4939-9124-e15f58463572",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2bd62c7-4573-4dc3-9143-fa19f87d5174"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0ea3ffc-e655-4ea9-a14e-25675db0d0a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "418bbd84-00ef-484b-b533-176ad5662e16"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cdb27d71-d431-4518-8cf6-2f0852fd7fa5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8f6b04d-7c25-4cc4-97fd-9715a05167be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f6e4c85-a3f4-44e0-8ab1-3c5f4524b1e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbf29ade-1c41-4b35-8231-2cfa975842bd"
                }
              }
            ]
          },
          {
            "id": "35419e9d-8e18-44dd-947d-5b143692325d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "276adc53-d18b-46ac-87f1-8d7866645fe9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6428729-adbe-4da4-9f31-c0943b6cd2f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68acca1f-9106-4ee0-b8fb-7f29e59d866c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94ba91ce-bd70-41aa-90ec-ac20afcee14f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e9ed163-abdd-4b33-b6b5-0470e706d139"
                    }
                  }
                ]
              },
              {
                "id": "5f4f6eee-c6b3-46b0-bfac-8a9a7a9602ca",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e94f4cf7-5ad2-4cd8-a4e6-8684a1feb049",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b66223f-c119-4b4e-918a-5b1512bd3be7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23595714-3082-46a5-b3b5-1922a7fac68f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61bbf255-9aed-405f-ac6e-f2c9528a720c"
                    }
                  }
                ]
              },
              {
                "id": "ad96375e-5d34-4ccc-ae50-9134381679d6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "922a42fc-6449-4124-9f41-024895cfb542",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a020d895-2a5f-45df-8e6a-2fc94c3aed9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70f7115a-3aa7-47f1-a0d9-47b7d15682e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69dba0f7-133a-4e70-922e-c9a18238ad98"
                    }
                  }
                ]
              },
              {
                "id": "c20677f1-23df-4169-aa64-1d56cca72458",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d8c0856-c01f-44a0-be8a-34e17889dbf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdde8f4a-a7c4-4b76-ad0e-47c09605e3ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31fd26e1-2a5c-4306-b433-36fc0c10e547",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "304524fc-c960-4375-89b1-edb4413a23f0"
                    }
                  }
                ]
              },
              {
                "id": "2638d32a-1b83-42b9-a9ec-e3b50a8ba0fc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee3017bf-acb2-4b6b-a02e-fb81b27b19af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ec1ecd3-b4ab-41b3-8c76-c1ffed73fce8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a9bcace-bf0d-45d3-a5ce-ecac1517f58b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "24c5e897-3fb4-4e5d-822e-b45a7e93ac69"
                    }
                  }
                ]
              },
              {
                "id": "91dd1777-b088-4ba4-a9b0-508ff3cc5d5e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75736cbf-3b31-4c5f-a7d5-b88167fc5ea2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce20314a-bc37-4e80-841e-fc0c97819de0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7aa71099-1298-46f0-80fd-c87a7efc6d93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93fb48b9-6e76-466b-86e7-d0056e1b79d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0389d8ea-5156-4c55-bffb-6d266778b449",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcf3f8a0-83dd-4ee8-ae39-d2dab60e5547"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6a918cc4-a199-4ce0-a137-bf45566ad1aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47767943-60b7-439a-b74a-6e653156db31"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d231b678-f89f-4735-acc5-76b3f8b227b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c5e49335-0fe0-459e-8abb-f1c12d62f19d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d672f198-0a5d-40a2-af38-053c4ec4983b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c26f9a68-f30d-48c3-bed4-06111a723227"
            }
          }
        ]
      },
      {
        "id": "923df04a-b404-442f-bc4f-c59a6e4f17a7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fa717854-d35e-4650-a995-c70ac67b16b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e476071-7119-4e62-94f0-c4fd0cff7aa2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d208540d-5868-4fc5-8cbd-b8d8ce9bbdaa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19537d7-d4f4-4ca5-a213-70d1c4b52799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109f380a-493f-40e6-b64c-01f9930677c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c642fa12-731d-4125-8700-97fa30a14661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "450a63ba-ed57-47b3-834e-d897b7d90194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6629fe-cd97-460f-93f5-fee689c37742",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654dfdea-39ca-4429-98ec-28b18f85f18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3d0d34-b38d-43d5-9aab-7d8e282290ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f54c71-7bf5-4fc1-923e-74b5fcf9d3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87747af-d632-4144-8f94-17cfc2071a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14f2396-596d-4289-8614-b2d660a94be2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f740aab7-75c3-4e86-af63-d274f7eab6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d10bc1-849e-4e81-9c38-f1d2770dd93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440f9f98-dcef-480a-badf-310eda7ea756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d214b0df-abc3-4104-9f59-c1f15bf348a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828201f0-5d13-408a-b49f-ca4cb077779a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be74067-133d-4866-bdb7-f6017b9ae5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e349401-c2b7-44ae-932e-9b100182c0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8462670b-5868-41ec-a6d3-6895899792fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8fe528-b280-43a7-9a91-a6c1aec17c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff5c3a6-23d9-4936-a0e9-6ee491346ba1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1da7b75-8f3e-4f75-bd77-8e5f14e0d52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823073ab-6a18-441d-871f-ea70b05b5b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf5ae18-b1c7-4bae-8aa5-68d49efebb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c69448-4e07-4774-81cd-721957caf141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecf1e5f-aa9a-4b2a-8f8e-4d5fa5072f90",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c5be06-72da-4171-9232-abddd98369f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dd5269-079b-44a8-a4a5-beb0e911ff54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66151b4-9240-4ecb-8f15-73b1e4ce85a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b875c11b-d05b-44e8-816e-536047a9d44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c783db-e399-44a9-8f9d-16e70c3d6d66",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f22814f-1a9f-4494-9ff8-293b386fd240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f8da26-1e66-4e9a-98df-43964f8a768f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea32acd-115a-40f7-acef-fd9851c8bc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "398cc1cd-b66b-41c2-ad45-d9094a5f48c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38e806a-7237-4d67-be9f-c4f649cbdd2e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8263a1fc-209e-4644-962c-465456ab735c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1654b73b-4ce4-4333-bbc2-853ccdf5a201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2894a4-4101-4370-9e60-df0ccfffe0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e7d49d-4eb9-46b6-a0d6-96c7cdb6ce9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1bcb67-70e7-45df-a5af-15fe5a3b43d5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c6290a-92eb-4ebd-ac41-0beb769423bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036fb1e2-a7d8-47cb-8449-6718c635689b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e886b40-9a78-4dd9-9c76-cadc3552ad09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b406b458-4833-4429-a31e-d4068bccbc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537748d0-ad89-4a65-9ac4-0eb9a49dd4d5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aea866a-6300-4b3f-9b59-79e1895a8d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22a7928-5422-4bb0-aaa8-5b25813a5044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b6cc23-0ab6-4c1a-847c-644156f29c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e5b840-007f-41e3-a34e-50b9c415b30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e93d78-50bd-4a5f-b6ba-b180f71d8a42",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1bbfe1-49ab-4392-b0cd-475d3e04cb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66db8e60-9f1c-4fbb-8e34-e9bc123b8ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8cbe7d-3b9e-413a-ba65-1f728b76f482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9a9e10-ad81-44db-9cd0-dcbfacaa14a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee85407-6a69-44ea-a187-2f83cf9f73d6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13736d3a-5979-4ea0-9f06-8748e7d1d8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a719a2c4-20a4-4b81-b95f-3df401fcc94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7009207e-5284-4b0e-aee1-1c9996c59970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7444b04-9f42-46f1-bcc1-9f0bd7939a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808c7efc-68e6-466a-8611-35f8545b501c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f25eeb-dd99-4d4c-bfe8-1af3916a6448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8effff03-3381-4fd6-84bb-87a80c4dbdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacd5f12-c78c-4cf8-aa7f-55ccb97a5f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a036c137-e475-424b-aae7-17078dd0d61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5908900-c1b0-4f9a-a07b-b5416dd771a3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de9d6ba-d70f-4396-906a-be63d7fa2a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcd7ea5-d1cf-4f08-a160-4621ffffd2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0829c446-ff39-4490-b926-c8a6a3beab1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4a932d-6b03-41a1-b008-9009e6ef3677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639fb385-8c66-42ff-87ea-e6592be248cc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3480d4-19f9-4842-9664-9eb3b6b17f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea907cfd-5604-4025-aa43-2b04f959e90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687878d9-edfd-423c-b22a-5e505efbcda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a29896a-ea9e-4e55-bbbc-afebe4ea7270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34789a2-e876-4218-8643-e563db7edc7d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2857fd13-e30d-40ec-a4b4-dc325d2d9be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2124ea-74b0-4eec-87c6-aa09fabffe74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98601452-29be-4af7-a1ee-0e10e43ba97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bed833-07ce-402b-8874-1bce6998a5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9652bb3-08ff-4aa3-8ee4-b7061eff4499",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2f4d46-8e87-40a6-aa04-923df54b0f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9140548c-33fe-4022-b145-268f3403c92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2313a492-a850-4bc6-9a34-f74753a8f7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7883686-f988-453c-af91-bd9236010edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540cb163-7821-40f9-9397-6d99ee02611d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5445bd-e8be-42f2-8fff-7c44564ee4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d5faa4-348f-4391-9b1d-6736b25a62e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed205e1-22af-40fd-a293-6db2ecc9bb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "511297df-be98-4eef-8572-52810e427438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c5cddb-eb4d-4183-8f2a-6718facbf2d4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebecca1-9ae9-41b6-8338-f32ff1ae4dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11bea68-2ab4-4fd5-88b3-aceaba4dd8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547c78c0-5071-4b4b-ac28-1eb3fda928a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ebae60-fa57-4a49-ad10-d36229a957fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718cd2e7-72ac-4944-8ccc-152f89605643",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716b93f7-818c-46cb-98bb-9f3187556770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6f31de-13cd-4b77-8066-8c32b011acd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670d77ae-e4ae-41d2-99cd-c2d15c8d9346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "090e92a3-a2f7-4f62-9b62-4bed3ff78c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266e6110-a346-4fbc-9137-15d23b433aa3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b5bca5-c028-4910-aca7-6237ab5f9e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8e6663-fc98-464e-ba40-28b87e2ca3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e981a58-9149-4d12-b60e-d260d531ae9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "372700ca-b060-4274-b9aa-d6bc8cb6a4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56735577-9691-4759-8e81-d9ff98a50db2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7790604a-dd83-45a8-84c1-5420f45c6dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678397ed-1c4e-4e84-b9b0-48155a7e52d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1c4695-f330-4ae9-bdb7-53d8b8a2a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b112dc91-a852-4355-8c71-140f45251d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a44dd6-5ed1-44d6-9048-8ca6123f84ec",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa658539-1302-4247-92ea-aab8a6cfc163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214d103c-700c-47de-9709-5e83106faa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafd24be-fcf4-46a1-a05f-72b9b9328303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2538244-7ead-49aa-abc9-7f9ad6916094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7f3c21-af68-4c16-a920-797a07198c26",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427d9dee-23fc-42ad-8084-7dca9330745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a05396f-d2ec-4fab-83b2-ad9715ee5205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6545cfc-be10-49a3-9166-eca1ccc3550c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa33d8d-4f71-442f-9b67-e7d8fd707b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764bba75-8ba3-426f-a6fa-9936a7e69b1f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac7cc8e-0471-4297-8760-f048191d4808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2dc3a27-99c5-48dd-bd83-dd1b58c77a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bed104-bfea-43f9-9760-6475d4bcbc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad3e0ec-caac-442b-aef2-4c7dbafdf0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584744a5-6e1e-4fd2-bdfe-dba93935e2d0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b40b38c-8514-4192-851a-83db27453253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b5b11c-b593-402c-b3b6-f6a4707f9cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4d271b-2043-4c9a-96bc-61ee2640b073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a945a1-e0b7-407d-ba92-4a55a42f90a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15db9959-9594-4a47-a0df-3f79c2d8db96",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755a1948-7846-481d-be80-74077998e96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6220f978-f65c-4ec3-8e7b-964ea05c9d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08918aa-6cb9-4090-a1ad-be6ddcb6c7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d8167b-0481-42ea-a0ce-c1aee49e2ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6912f046-c9ec-4400-ab37-bed69982d1a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874e2372-89e0-4da0-8a97-e00664afb78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984bfc1c-9948-4b4f-8efd-96d1e504fff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9788d7f9-bf9c-4689-846a-913181b014de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f10a7c8-2e16-40ed-a38b-1f736e16af01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a79320b-62a3-4453-b2ee-299ab70d3629",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2062df28-7b3d-440d-84a2-f45298f9b9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e74aa90-bf7e-4657-857c-f872487edf3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afcfeae-c1fa-45c6-9588-30db2ddd0ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b93ced1a-49e8-49e4-b270-6f1ac16a84d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75d8fb5-a051-4122-b308-7f97491111ea",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51bf59f-629c-4b4c-aa7b-9a38f058f6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d87788-85a3-496a-8451-75c10e0a4ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bee691-870e-47b1-990c-9bdaf8723bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0a7785-065b-48ff-8af5-6cfd73fc7c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c16aa2-fc96-47ca-9063-82df31f3abc1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29d9ee0-fd6d-4bfe-845f-4ea3af9c286c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a58f6a-f716-417b-9c92-bf9baf2ff679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb545972-e5d9-43df-b8ba-ce817de443a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94074959-4549-4d38-b408-da01c2535837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bf33e9-1f40-436d-9305-c7111d028c5b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0998443-0602-47af-a537-37c6ee296ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b02e3fe-3b3e-4c96-8bd3-9dd044393da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9082a8d7-3ad5-4d60-aa95-82a9107e0918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0c0de3-25af-4af3-b73c-8ee0b4ecd2b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46699f58-7a0d-4ba0-89e6-4a5eff171d85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf604d76-8a85-47f1-9192-608402cb8584",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55534c9-fdf3-45b5-87cb-2e4072bbd781",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "401b7136-bd2c-463e-9d3f-0f5d05103258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4253093-bb5d-4761-8d7b-b75c180c24f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2d68456-1761-4632-a7b4-2b7e945be9f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46383f36-1b63-4205-b1c1-4969ddcc57af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b1708b3-2cbe-4af5-bdbb-047b68af7e08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a669296-86f6-4f53-b81e-73604436d829",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3e9256d-5446-4bac-8a8b-50f7f33bfc51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78c578d1-59e1-4f87-8795-b46dd7598a6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8935c74b-ba1f-4518-a30c-d810324ffd36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1306bc30-68a0-4a92-b3a9-3a46498d0430",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64c8634c-679d-4739-a303-90bddd49d498"
            }
          }
        ]
      },
      {
        "id": "1107bad3-0f1f-40f4-9a46-e81800913388",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7b866e50-5200-4f83-b66f-c279d9fc38c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f917a970-c29a-40f8-8271-1a12d5c428e4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c33a71c8-c110-43de-ab90-cf9773af488a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a86eb4-97f5-468d-9def-c71e1a741217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcb3a6e-36b6-40e3-ac93-b6fab7103296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bdc92b-05a2-4cbb-92c4-63945718c24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab13817-b8d2-41aa-a139-73607274368e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84eb28ba-6aa1-4b79-b859-acd9a01881d5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa8dc4b-8211-44b7-98bb-42ef3b0fe0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b2ff16-d21a-49b9-a311-3c522cb84c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4c19ba-578e-4388-918b-e5c504619f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7aab64-42c5-442b-85c4-16a7365086f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fce63e0-2e8b-439f-a6b9-987ca88c4f87",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b292f27e-6b80-482e-91f6-5d61466d822d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9801a941-1a5e-4a32-ba50-f1d927554299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c5b053-e6e7-4ef5-bc8a-da50676b1098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "025b0cd6-6402-478a-b622-94e344883938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8aa2d34-e843-4c06-9285-e4ff54748dbe",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2367c4a4-8fa0-4a79-86a5-4afd4bb5806b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516caf9f-2027-405c-8528-c9d6e9d5b25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50afa497-dda2-40bf-9d3c-1135b848ca3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91da0a81-8e96-49f0-801f-6c7954bea3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53d76ee-b3da-40d3-8768-18e842ff3dff",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321362e1-722f-4dbc-bca0-39a42849ce4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a05b43-20be-4fa3-82a3-85af7a8a39dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648dfdf4-5752-4e9a-bdf1-4bcafca8aa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48a5a124-89d4-498b-801b-bb1d189f0afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7addc8-bf74-4efb-a737-66fc0c0ca108",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d639e51-4c77-44ea-901d-28a2d62438b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a14b1a-b7e3-4d3a-a2ea-31224a86f789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f455b15-d832-4a89-bb0a-08b162aea416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8498e9-8a23-436d-a86d-9e402c5c80ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce4a63b-d912-4208-b1c0-4319c4711f26",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890776bf-3134-4e31-8cd8-3c3f8f69635a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbb27a7-0bbb-4b09-83ca-135df4f42e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fbcb5b-0c91-4a3d-8334-a46096bcac1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0161cb-e484-4fc3-b339-8067457c863c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565db0e3-e9a2-4553-989d-62e6e59a7cb0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027dac95-f100-4c6a-9097-8118c5705bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e10e60-95e4-4d5f-b7ab-da88b3a8551c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef41677d-e2de-4845-a8d1-8b05ae309273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c09b6d7-cae1-472b-8df8-780a05488801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fa6e0d-b084-4441-bc9e-adb751bf53f0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff661d1-3eca-4bf7-b314-b8f3cd05942c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c20614-d537-4e7c-9dd3-01898cd2c522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725c3bf7-4e6a-419d-bc33-b07b454a7328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e04725-5b49-417c-acd7-5844aefad0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebddd1b-1083-4b1f-94ca-46942a86c24b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b3edbf-6c22-4137-825e-0249d45a5e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47694836-8680-42fa-bc52-14b15f4b8719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4413c58c-6d6e-4423-961f-6a3a105fdcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e013374-0781-446f-ad5c-f56eca7e1e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75820826-674e-461d-b9ca-085c1f28c8b9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e301c165-64fe-41f9-925c-f9ef87447adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eec66ce-9484-4d5c-8b45-c65182f06004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613bade0-ca67-4ccc-b956-23177572194c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a37abb7e-e24a-4cff-b0c9-f28467a830fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee28b5f2-db1b-4e58-90e9-477f21167762",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d1a3db-3173-422d-afea-1416cfab0ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0ca4b1-c433-437f-b649-3bc5285ace65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563d3aaa-5533-430b-a255-f322606f0fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9216225-e830-40e9-9f11-44959d798781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf5b351-33a6-4315-bab1-13b1f0d810eb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665913ce-ec06-4be2-8165-389eff5d11f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ca6ec1-cee3-4db3-a009-3b3e7e19292c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4546c32a-a273-455c-887e-6236df6bfbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a5eba5-157e-499a-800f-5235d622e2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623874a3-80af-449a-bd89-57e535bce6cc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45e91ea-f670-4feb-95ac-aba294291203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3273a618-dd77-4c21-9b6f-6ed187b7938b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fc7aec-98aa-4ed3-ab0c-880457ce2f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "462f111d-bbe4-466d-a1af-5c3f4538699a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcb9795-5486-49b0-957e-da4111f0fc3c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eafed77-b5d1-48b0-b383-9e761570e16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd3d7b2-6f06-455d-8215-061f87f76019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaa7e4e-04e9-449a-b1b1-b4ccbd9e4a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3eb7245-e863-4be2-b6ff-4f83db109a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514c264e-d1c0-4eb9-8eaa-d9bac6af60f1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c3fcf2-3c43-4544-a87d-235fb1b20a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51cd9f8-280a-44f6-9a8f-ce6aae7dccb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f689e706-1b20-4886-928f-5bdd9da4c709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54f261e-8805-4169-a540-b6b4593a7e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5588d92f-436b-4036-b511-b947f358c0c5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5271880a-0ad4-4738-8530-ec0bb960e00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab560e1-e446-4957-84f2-fc927b5eeb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f446fa3-95a9-47be-a4f9-445943e1ce66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3963bf-fb19-4273-91ec-87872d38ce96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5cb6d9-4ff3-4132-a432-2ebb9a5f9e74",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac0c531-d5ad-4f80-9546-819c45185f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cf846d-22de-47ef-879b-148685c22019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be55f3cb-3b75-4d0b-a177-31835d80ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfc8ec3-67da-4d11-be77-eb2e5cba3903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83deaab8-2e1a-4905-8dc2-14d61a0e39c1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5825a1af-85ff-402b-97dc-7ddf3a299a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e609621-dd2b-4c72-9b39-fc4575ce434b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84dece8-39a9-42a7-84b5-3f71dbd575be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f3c503-7f7a-4d12-8435-1a8cb843d783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e0a723-25e5-4c20-aeb7-9b82431f112a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51145c6-76c5-40db-bd0d-2967a69c0edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7953cfc0-9ea9-4d7e-ae4a-acbc3c8b4b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bba7806-8ec5-42c9-a3d0-02d89ac6c609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b43b589e-e4f7-43b6-ac28-90918c69de52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6783e2-2930-46f2-a7ae-5fec0730e304",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25eae5da-6a52-4b3e-8929-d55b27f0c1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2250ae05-0ed2-458f-bfb1-f5e0c9c389a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8ea50c-3f40-4c40-a40d-4d26c61789bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ceca88c-fb70-4699-b966-48d306fb94ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6677928-3234-4a03-86f8-07b6781b5976",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40923fa-d261-4ef5-b163-c40d27486de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e72161-a357-4595-823b-7fd0e669bf18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0e1c9d-3cd0-428d-b59f-6adfe612ca98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bf4807-8831-45b1-be89-f28b8f3797ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a707e17-9214-4286-8cb3-399989705897",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7420dcd7-9db1-4067-89e2-459807984eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a87b36-2a23-41ee-a420-ee30e77da027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683bc182-e275-4bc5-a379-39c8b94b74ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e720c4-f0b4-4d79-b268-21f0d7f460fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3a6892-f1a8-4512-ae8d-dbc1f2b41e01",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58d3ddc-a4bd-4083-a58e-5567c9cfbd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab8a0c14-6e46-4319-9c71-a593c5de73b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3dbc76-e81a-405c-b395-c225810e531d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4b4d65-586d-4ced-bc54-e0b0a0efaf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5c5a8b-ead6-4ee2-b60a-f9c9e32825f6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5272d0-b2b6-43ee-a308-c6aed9fc9752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e55694-9c43-407a-8ab9-c2ff1f636059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634f3873-f882-425f-a6dc-78ee5be0a9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "047c9068-e94b-4d96-90ea-5d75caf46db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f716bce-fe51-4b3d-863c-df26a5d05536",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cb0da9-8808-4e5f-af5e-36fadd1eeab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd0c346-9ab1-4125-b690-5d14b2938ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8421274d-a204-4232-a373-be0ea0790303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37648833-01a2-4089-abd4-e00bfb4211d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1264d197-5c11-495e-94a1-f15dfa11251d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd193949-ed6a-4dc0-8279-5f039a772564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b19e0e4-9574-418f-b8ad-e715183d87e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e584ad-3aa6-48c6-9769-5c3f37ce980b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08b0e59-3359-40b1-9e93-1498e3e06685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3de6b14-f76d-4c4f-85cf-1ff2a1d1770d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fa5ad5-b44f-4bd7-93d0-2a71bcabc3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7deed9b8-6aa2-47f4-80ec-8e6571737b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05766e10-f203-44fc-8bd6-50d7bc22d7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d74d89a-5914-468f-9427-bcd4614b8e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcc17e2-257e-4947-a5ef-f859ce9f91ed",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ade4627-27f0-42da-9794-6de06828dbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7887568f-398b-44d6-b86c-df1c03aeb223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4bf6f5-d393-4beb-ab20-23f45ad0d934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38765bac-7abc-488f-9240-8a92edb2e527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e95599c-0d1a-4207-a98f-c12f85b79df9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b079900-3a69-4360-b6c7-4ab3932de8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d90093b-cc3a-44b3-b01c-33283bc9007f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6febf413-888a-429d-8229-c729fcab2283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2fc661-2eb5-447f-b4ce-6a22bd9cf27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11096d48-990a-451f-863c-06c3b3b020f3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a0cb9c-3157-4a30-a6db-1089de306dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af115640-a987-4c42-939d-a7fce84dd4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d99b272-379b-46b2-ac99-d6b77edaee84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb2c177-48b2-4e89-b46d-9d2e571f375d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11296ba7-1ca5-4dab-b38a-1c2936d64655",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0eca8d-3b12-46f9-98dc-629d3df664bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be75ef99-f8c6-44ad-a847-78d2db59ac4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b3aaed-8674-4e0c-94fb-cb974431dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0664fd52-6de6-4bc4-83e9-01b08ddf9322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d25a66-9162-4a16-849d-d49573a8fca1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfb29b4-810a-40c2-aae8-4f8cccb901b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8137e4c-1e50-43e1-a350-1daa53638f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62415e6-143c-40a9-ac69-20d311d93aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cbb7ec-0472-425f-afa3-39d6b993f598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69918513-e67d-4221-aff4-054c6eb5ec5e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d5725f-c6ac-448c-b83f-a90335a442fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95268616-6dd7-4c4d-ad2b-3d77d487498d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017756b1-a671-4b16-9eef-08ec1d595335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1dd695-d725-4604-8c68-e953986c1d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e29edff-4253-4bc6-a2a9-91796e18d741",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11d0aca-7304-47a2-ae67-3fd8901d8435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2e258b-bf82-4026-97cd-2f189bfe489c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1663b0-fe63-49b5-b428-097d7babeab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cc24ac2-e373-44ea-bbeb-b2a7e3839536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0b175f-8c3d-4b79-8297-2de8ff6420ad",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61df6361-4d9e-4322-8bae-6540701158ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6894f7-6461-4542-aefb-51f99dbf12df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cb4584-d570-4530-8789-882f0b38fb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "208ceefb-4c33-45a9-a27b-29a236325119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04849a6d-5aa4-4a24-8c3a-6ea8dd56e384",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c169c68e-c45c-4748-93c9-5f06517c8f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0683528-52db-48cd-8378-eed016e84977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcad3ed-5c05-45d5-8195-cbaabb9e0e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff58e5c1-53e2-41cf-8f15-c371019db6ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "407bde5a-8ab8-462b-89b5-d0eaab19f228",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8d6a2e9-1857-48f7-873a-d13c82938abd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2607cb9c-4995-456a-a506-14399687c4e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1cde10e8-e78f-4179-80c4-dee69ef92235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287450cd-f1c3-4017-9d44-6cdb85388204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9087ecb8-a996-4335-9b18-c6c6c5a10a8b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7487df3c-214a-4710-a2c4-2e0a17637f65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c376216-7fd8-4238-b88e-f246c3f66e7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fc6f5e6-703e-4da2-a256-aed01b379e11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21ab682f-f492-488c-9550-c852afaba197"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dbc0a7f-1340-4c0a-be2c-03963e85a983",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57d71c62-0eb8-4890-807c-cf5d6820a77e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9407e46-0cbe-446d-af44-b3af862d4fef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72dad6d8-2052-4a0d-a278-e6eece3ef91b"
            }
          }
        ]
      },
      {
        "id": "2551aa51-915f-4c53-8977-af8a8c5d0101",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b13ccdb5-9566-41df-81be-6683266f5780",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e9d2fb7-08ac-4eeb-b2b1-aeaf5d1cd449",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db0506fd-6b0a-4390-aabc-44c683f1977d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed5d20b-260d-4146-a185-da827c69c110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fecdd7-1cba-4a52-8ab5-26eb03b6b671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00456e9-b78e-44f8-990d-279350ec8550",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971652ba-3977-41e3-9cc8-4a8bee307074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1544b28c-a055-45e7-b5da-62f3919dcdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4586da-6efc-492c-91d4-3997774f0dab",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbe86f3-a0a4-4219-8c82-0c4aabc3e138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba06633f-c4a4-4e5a-afa6-968fdf004882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6b3a21-341d-4165-8b78-4711683f1849",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b3b9e3-7ea5-4b4b-bc01-844d3b4f1d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8ca557-9a28-4c62-a059-7ff68dd5298a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fedd48-1477-46d2-b522-204c57eec95a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf260b68-9c6b-4383-81c6-d18cdc29d922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cd2d83-6cc9-44ae-9a46-9c507db45ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e043f5d0-bad4-4c5a-b6e7-be69d76a5ba8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a94953-dc36-4229-96db-eb9d80e6a519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39193bde-e0eb-442d-bb27-1e8b55f4ea45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d338b6-e900-4e51-8456-5b12f4ac3be6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62541a1b-ab2f-4594-809f-30ca3b7b9e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b8837b-4c5b-4dc1-b259-38951c6dda28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24821d8-5146-478a-8c53-3859ac08fa99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed001960-1496-4709-9dbd-d815b2a69ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2ea386-f6a2-4bb2-9aa3-3d983f2701f5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cb4877-c81c-4940-b307-958012db15a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f305569-a78f-4af8-9a22-e669338ec94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a28138-7295-416d-aa15-d11a4ace1ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275022df-1a27-4506-afd4-c1f9298d1e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368017db-c3b7-4dfa-aea5-f91adf310bbd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e38f9a9-44bb-45ae-98f9-a328086ee13a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3eea096-b4b8-496d-bb03-01b8dd1dfb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533587cd-918c-4cf7-95f0-a0f410410e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815ceaa0-1522-4a19-a5eb-a5bdc447d4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fac2daa-178a-43c8-8bc8-5b3833536fbf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439ed574-5848-42a9-964a-2e8af33d5501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce62f694-79c1-4e53-a17d-e6bc934edfba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a275a55-3093-43b1-a6e2-7670d675ff63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4f784e-45d4-4c0e-b737-566c711fa41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2020c8d7-3ac9-450f-a428-2ba8a1402216",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e4872b-1fca-4b62-931c-16db05480a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443d5a96-93cb-4360-ab66-c64fb970c8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f72de3-3f8b-4793-85e2-6f4fe93c2176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36335a50-2c82-4023-a80a-c77a16a52a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87e7d62-bd91-4240-902d-16321b39a384",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d79f45-99e6-4e29-82c9-58f034b5995c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c96b9a-36b8-46e2-837b-29bdfddc2d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13c4146-a03c-4200-8c1b-414a1b41b96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551c60a9-310d-471d-951e-9de973842780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c06728c-c6c0-43be-92c5-b3bd58f5425c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2759d3ee-3959-4519-8b7b-29122cd163d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2265d1e2-d512-415a-ae9e-23269ef539bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62013aa8-f1fd-4a75-b5f7-ce6285706575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37273cd7-1745-4bac-b91b-b2d8543a25fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b235d9-0bd1-4df7-9e30-a3eeac3cd0ab",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b857dd-13bb-4081-a89e-602e5d267243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0225f10c-32f8-4566-862a-c654957e66c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507e7dbf-087a-477e-9349-1aa05895357a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a507d5-0444-4229-b692-b4104f8ae5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb87deee-61cc-4b77-99ad-48983ade9caf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59de0d45-5c53-4dbb-862f-57013d02723e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d33e198-e1fb-42eb-96a0-e4604627d5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ff37c7-f5e9-452c-9046-1ef809c0b07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825c96f5-ec37-4db2-92f5-97cad35f6467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9879f37-bf88-4d4e-825b-5d46c072980e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519d0c0b-ad45-4b98-af2c-6ed31ea95490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fbd0147-73d5-498f-8d50-0baee6123391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe65a70-b66f-4ff9-91e0-5544d5cc8b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db933d8-43d6-46d1-9e27-0d20429730d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6b7a2e-2550-4793-962e-a7d0673b7649",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29262693-60d9-4693-976d-6c6ce18fcc86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90b0ff6-cb07-4f86-97fa-5f85c0ccb368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e10847-f12a-4a6c-b4fe-57252539e259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cacc6d2b-dd31-438d-b86f-c0379a781067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb54f2f4-d613-467e-9d0e-e84872e99d0a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca140dc2-08f0-4edd-a485-6bdcf9474fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e96bc0-e840-4868-b582-2c757d7d9b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6df5c1b-aa5c-4eac-8ac6-3f5ccea425f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2280ef-4732-4961-a1d7-be91a0cb110d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea3a156-5388-40cc-883f-4dfdebbdd5c6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeea12d-1e24-4137-a480-55e2a84f7928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0c79a0-add0-4f2e-9f07-be1e776e1740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceded0d7-8d9a-40c9-96b5-044b9b4aa0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786715e9-60da-43ac-87dc-80ecd11c6333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0b4472-f714-4c0e-a074-1fc14d49d9f8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db09ab9f-3066-43ce-a043-1ddee53dba86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129706f1-b892-4ccd-b216-725144b1d633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cc6523-98b6-4c79-bcc7-a1859a313fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec96c1a-b649-4d0d-afe0-61921d3beead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eee7f65-3c89-413a-9cdf-7fb6e47e9e1c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4360a6-bc49-4e10-bb8a-f46b479b66ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b08482-955a-4c36-b751-c6cb941604db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc5b6a6-6a4a-4054-aae7-c2b6cdf157b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8f55a8-9249-46a7-8d11-0bee2d835089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f4fea1-46a2-40d1-b92c-995e3384d4d0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af4b7a6-4ef7-4e7d-b16f-189facd77dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f838fb5-7c89-48ff-a45b-3e79dd8cb9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd3edc1-3db9-401d-a224-ef688192ebc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2f1db0-a481-48e1-a575-6b30191f2d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804de9eb-f38c-40b3-a905-264497ac3e3f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c064c1-14ec-4229-831f-5a7846031f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf548b35-1829-4761-804e-87490c06a051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6663b507-756d-466b-8a99-30028ee50564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abb6213-2ce6-46af-b39d-f6e87da81ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021e39d3-3037-4a57-bd9f-254a0252401c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131729c6-e579-4904-b651-18d929420ae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b43f9219-b6f4-4ede-8473-d00fe7271914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978d9f26-0d19-480f-bd9c-dde6ee13a29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784d3db9-8513-4ab7-9474-81cdb7fdd28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56f51c6-999b-4f26-b074-4a6f2ed9dc4a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e61225-3ca0-4751-8ad7-feae622c5279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e236e572-9155-4efd-86ea-3c464b734ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50021518-16b6-4018-bfd3-ebcc7abeacf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aff7927-a8e9-4441-a95f-6837b1c50ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc40b4b-f742-49cb-b909-19c1d3dcc8b0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf84174d-8786-4125-b02b-c5b9b83fa298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4cee84c-c0a6-4a40-a490-ae34e4153150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070eb396-09e1-4f31-9c19-e82caf51c5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5428b09d-507b-40ab-882d-50007e2e0a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee4a74d-a603-4296-83aa-9eea55e56c99",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db757334-eb81-4011-8a61-a42486e364a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96964197-38cf-4447-b8d1-7646eb627743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff16aca3-f1fa-4d9b-aded-2d3518c77d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc9a812-3e72-429e-9bb2-4cc9d24fbd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b427035-7b1d-41b9-95ce-d7abfabb120a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a76c4b6-158a-4470-a780-e92ebcf5cef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0b392b-4668-4bd8-acc4-a777671eda20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d896eaa-2c48-4298-a9e1-2bc260286bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89db7f6-618a-4cdb-b4e9-e98c527b109f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dbd4b2-9e11-40cd-af9c-534762d01f59",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddb7b13-d3a4-481c-b393-ba7d9737ff79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4422e06d-ee95-4378-9597-0c07b862207a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a39c55-325f-4b2e-8bee-604a7a98df14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde58ea7-efcd-4230-9071-647fcdf42209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b299d4-60aa-4f1e-8aef-41267bfa0f18",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7c500a-dc13-4edc-bea0-39604363e4c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75c290a-788e-4a3b-a078-b1d29852ca78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ae0b82-9c2c-4c88-a65e-23090f5f71d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccd8274-f642-40ce-b16b-d5f3ce84b9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af37104-1bdc-4bcb-876d-65466b58d210",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d876fe-312b-4693-a032-97585db1f4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6209ad-9166-42c2-94b5-f52261153f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e028c5ae-f9f7-4bb0-8a2e-3953b6ea57a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36d16a4-718e-420b-90be-79ddf6feb940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee13f54-efcc-4a73-8beb-803030c38b33",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69930dd3-8b21-4976-8906-2ec023ab8a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "177a0d5b-752d-44c9-9bc0-91f9fd7dabaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215bbef9-fb52-442f-ae3e-3242ec3b3d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b772031-18c8-4882-84f2-54c241d980ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd49928-a154-46cc-98b4-199317b64ea8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b90b93a-4036-4a44-a39a-9f9d9a1c8cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d38e037-e523-4a3e-80c6-eea6f09f7533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509a433d-5bab-45c6-8a96-553808b16e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdcea09-cecd-44ca-be78-9af6766a5bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b37d1f-c64c-4e8d-83fe-11540f75585c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03529d87-dae9-437f-a9a1-88b7e4b61148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64f6fa7b-0bc0-4905-81ed-f8328c409a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42842993-ad35-4bca-b9dc-490f9db4ca5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf45304a-ca94-46f3-93d3-8190ece7c2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118ee95b-5f08-421b-97b8-6cba04e21ea6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d033d3b1-59ab-4319-bf7e-a2045e8725ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fabd7f-454e-4b66-8d79-8a95e51db3f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16609d0f-bdff-4edd-89f9-2e1c3bef38ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5096ad83-969d-48c9-ad4d-d188de177c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae47eed0-0d5c-4c34-9c4c-8ff0b0d5453c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0349fc1d-15d2-43fa-9be8-d81eb1e18f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e536ffe0-3da5-496e-9232-ccd67c7c2fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a215d3e-c717-4bbd-a194-1485e58b98ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e83ddb2-5661-43da-b593-550bba4caf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91ea80f-efbd-42d9-a7a5-728ece28f25d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b9d100-46f9-4be1-9254-107cc11912b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37ff425-df53-4ff0-abbd-6796142217d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd868c52-09ce-4aeb-9f3b-20c4675d8333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc9cb39-e3c0-4394-b695-41be679f6354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f89b188-4440-4385-a867-fba76d1d48c5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d25ff9f-e3b7-4322-a78a-b1addfc3f00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8031afba-834a-42e5-b1a4-2223331d0ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3f7a1f-d8d6-4bcc-8520-491a8e5d2365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9484e521-98a3-450b-af36-8369a448037a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b532d0bb-7e19-4ee4-918d-3853ff1565c0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab4ffa4-2597-44e2-a08e-22084f238772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855fb8a0-13e3-4847-9bda-23ed18f32dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b13a42-2ad4-4af1-b188-2af23346bd3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c796e19-e482-47a1-856d-061771bc70d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505a3e9d-2107-4d69-859d-ba7a4c0d172f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4ba2ba-603b-41e2-9f85-a25f7aa2aa10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9419cc6a-0d7a-4a45-b0fe-97ff9345615f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a685549f-a6f3-4497-8a67-66f53780938c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef9a94e-50e4-4817-a63d-efbd741d291b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77887797-de00-4fc7-b8de-8278faf396e8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fc669f-db93-43ad-9501-9c81104cbba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11e7775-1397-4656-b9b2-5f859e135a5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085a5510-8db0-4112-bfd5-2dd51488b8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1286cc-0d13-4568-ac5f-34082d317c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45c753e-3ff4-4714-a64d-c9f62340394a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e58026-34f6-4e77-aab4-95c1e07fb56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371adf85-901a-4eaf-9c1c-072f6f98d3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b434f158-5c10-454f-980f-eabfff3e3714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d7a5bd-792e-4656-a55a-d3d555952772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865d0e4d-5bfa-4f2b-b169-3b9bc280cdf2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d14166-0c78-4829-8640-aafbf8ee4491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d64b271-659e-46d7-8919-3e215d624eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b106ad-31b3-450c-b169-576cbfeff2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c146ebb-25e1-409a-a49f-d2d1ec152ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22ad39b-8aef-40f9-a3df-e5a096650eb1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ebe9f2-8c1d-4188-9d86-6c5c81a8b3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2e0bd5-0d80-4574-b46e-163fbefa0641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b87152-f339-4061-8249-2cda13179148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6f0362-4aeb-4dd5-8ff0-33ab75860e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7aaf912-4826-4281-ac55-d227e6e9f68d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b0e241-9c89-4418-9237-a8478fc643ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad46aff-dd63-4815-b283-0905007d3137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d060fcf-d457-4c9d-8b6d-5b2cc516173d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe423e0-78e6-452a-983c-2e9e60fe4718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fa6eac-360b-43a9-a296-86a125309f5e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a65f836-d381-47fd-8d44-fd9d9b4f8f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e5ed7f-4281-4aca-be5e-a6396a70da3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7f0c68-6f5e-40e2-9fe4-c00f1bbbcd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7ed69b-d6ed-4f29-9a17-7bfa7a3e4bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e153291-3e53-4b8f-91d5-8b63fb4a7ae4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edce408-cf1f-4939-95c1-6811793b083c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a5421f-2ca4-4981-8908-9903908b1cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6f2c45-62b3-40a0-af28-3f58d6a0be2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220e0be9-da58-4cbd-9bfc-eac1dfe5eab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fba4589-f6bc-4123-92a5-10bfdab4379a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1674a97e-db9f-4141-a1eb-cac48d0c96a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e631a4-f912-4855-b1ea-6f7e856fd4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d63fe64-45b0-41dd-b9b7-3488d8ecda8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1765ecba-1a2e-4064-891d-03fffa14c09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f206cf-fb03-455a-b226-d9fec2ae169c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15311896-fc80-4a8e-b457-088c47e67320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32867018-aa37-4156-9d47-130ceb6ccdcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df2826e-ecbd-4ce6-bd70-f494727c265d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c491d7-43a4-4a32-a524-5666004635cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6148ff7c-a3a5-4ad6-9b65-9d184f1acdcb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfe8a86-d0c0-4701-94bb-23287f6d7677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca73c0fe-3735-4202-a42d-811a75389f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb957a4d-83be-419b-8a3b-ef3558d6d1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990cba61-fc08-4bab-a2a3-5eee1e921239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f01525-9eb2-40d5-8242-71246f84bea6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5449f38f-2cd8-4024-bdcb-eb3913ae1bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c894ea70-dca0-47c8-b6b7-655fb9a323f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989ef736-841a-4218-931e-067fd3791585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373fa6aa-1f48-4110-ad00-5d383343c998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b4526f-ac6d-476d-8db1-7278771494ce",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1089a6cc-9f2b-4586-9a09-ad7de9b077d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23abac6e-0e70-48f8-b522-350636d7f59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c004ab2-3e1c-4cb8-bf79-0801dd28403b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0617fb-a90d-4b28-9f1c-98b83af1aadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12e03ea-5adc-4115-9d8c-ac502765bd3c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994f61e6-7b4b-459c-ad96-6f4583de1f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b668d24-843b-47d2-af3c-ac8e331bc214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fef760d-b13e-4873-88e6-181c0bd95b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d000d0fe-da77-4a40-b019-3c38ad01862c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2287658b-3477-4601-a3cb-99c94bc225a4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727663cf-e0e4-4ae8-b86a-95b7763e25b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e785d32-8270-4c44-893a-0e83db6d19b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034503af-f975-4e9e-8c5e-25b3e87f43bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ac585b-59a9-487e-a087-970d67280a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60008d58-5b63-4e96-a4e4-a6e4f2944492",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89740cb3-4362-4a13-8a58-a5fae15ee58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1975dd26-befa-457c-a5ac-e3f78bc369a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f205571c-8230-4e73-83ee-fe2f99bb2a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62e6a44-4aa4-4e6b-9285-77328785cb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2adae2-cbbc-43ed-ad33-9f6ee1bf5027",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81bd9e8-0423-48f9-a134-072facf63d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e7b592-188d-4c49-b8ba-c8a5b055d8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e19b568-9942-40d3-90b2-0b61edabf6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a555539-f510-467e-b2c3-505d2b835a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a04863-15f3-4314-8c7a-fbb35e8e800d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d203f66-1873-40de-bf15-23160c7d7d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46786d78-5968-4a01-9dfe-0033a623ef0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d453aad4-d614-40bc-b17a-404bdf9d3000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7008cc7e-2a78-44b0-9c1d-2a8caa66c5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e58ed31-b32f-4d68-aae8-f86efb73b5f2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687b87df-d571-447b-bc77-12de4665bc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe6a520-dcea-477a-99e5-45b40a279048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee24929-df7f-4fa1-89af-823c171e2c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ff2158-4030-4929-a374-854e5e2e60f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b4f38d-4a8d-4c66-bf1b-81eb8ca254e5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486b74d1-4e7c-4fe5-afc2-05bb972ce4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56d7c7c-20b8-4fce-b013-f21c5b4803a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381e94fc-4176-4751-9481-282f671edc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcbb9c6-4bc6-4e42-8b0b-4ae5a44db0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7cefe3-afce-49b0-8d29-e3ac947de257",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a313a0d5-0733-4ce7-a960-f0e6dc5ca464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bca752-cb37-4e43-abf8-1fafee234fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ae814d-6aa3-4a91-95a9-7979c8fc9592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692daab4-5fd1-49db-b54d-40ff741b03b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3ebfae-8ae9-4510-8b71-1a65647b8c66",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8968c99-1254-44c1-8ebd-0d46b116cde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9188c409-33a3-4a66-9860-eaa4ab464e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb34d91-5d51-4660-bca2-4122f41ddb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272b7249-7104-494f-a0b5-0e227fd2ed96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1417af8f-3c98-4972-90bc-2be8d593ac4f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37f4d3f-ba9e-425d-9cd0-6978c60e71fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91216ba-6fd5-4555-96d2-92cb318bbfe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce712131-ca37-4961-952b-cd0eb5051932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea07cbe-b41e-42b7-8e12-de8bd885525d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f287618-29c6-4950-b699-cdd53faebd13",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7349ac7-8684-4dc7-bd36-58e15b87e6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df66847-9491-4177-a6f4-36fb2611ed26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7115c39-6876-4e83-8fd2-4002a4e8db86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546205d6-19b0-4be2-a039-1a7dc2669c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4429264c-c6f9-4643-a6eb-1294fe5b723e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed8b2bb-48a3-435d-9801-c91792da1ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40569504-6f00-45f0-beac-60dc16c7f107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded41ebf-d86e-4334-ae87-3a67b60ac48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a1b7e9-a98a-40d1-abfd-070db0af2be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1281f0c2-1ebb-4be6-8393-6f103c4d5eae",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94baeeaa-6897-4839-81e5-6b3cf194bb10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "310871aa-8ade-4137-a7cb-cea094888a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab749495-f259-4589-bb08-e4e68f01c156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053c1d53-c61f-4a91-b0bf-ce532f45870d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab04e33-ad3b-4b52-97c2-19e2864ff3bf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d33b96-9ec8-410c-ba4d-f58f85c516f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef803273-34d5-4e88-9a44-f07908dc29de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a9b714-7546-4a66-aef9-6f7460ddb70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75a4b9d-feb5-4fde-8efb-5d2172e70349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4446c087-e43f-40c5-82ee-016670927b8a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd025748-e91d-4b50-9610-cde9be4b6e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2127e27-4e2a-40bf-a8ab-c004ff226693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf781fd-d184-4f12-ba9b-ab5ee2bfef52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9047fc-be14-4b33-910f-99f71fd57c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d1525a-7157-4746-8570-2814b00e5aef",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b350479d-36f8-45da-adfe-517fb1fa0a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ea1332a-3a2f-4be3-9f97-3477f2e07c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c618446-5aa3-476b-ab75-f4bcc5c2f9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cbbc639-e7f5-4c27-8f2e-1b74aaf0a2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cc5b16-e334-45b8-8d28-17195ca32819",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76129a1-93f5-440b-a27a-7c61289533c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "911a90ac-4c95-4858-8a54-804e20760abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f68d8f-c783-43f7-88ed-48cb2f54e261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1207ae4-24ce-44f3-92cc-a901e717af65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1e54fd-b906-4fa6-b209-2954a28825eb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edbdc35-aabe-49d1-8bb3-e6b5015b6208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96749d9a-cfee-449b-a701-888ea2dd855c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf825e4-5f6a-4971-b841-f4a3b4c3a9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ae5cb1-1670-473b-9a5c-2a6492254a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d73cef-b847-434a-b03a-449505a0c1b0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb15e3dc-1234-498d-bb8d-ce76b7158354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a6764cd-b5b4-46cb-8681-38de23c7dd06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed3766f-3184-486d-b1a3-8bf25110ef56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5aa236-c51f-468a-be56-996425fb0c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e415286a-5c9c-488b-9769-4b39d083f616",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a509eb2d-5f1b-40b1-a238-f0d3a4a8fce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45b77d01-c50d-4021-96b7-a4ae93b25f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e803f963-abab-40d5-8ba4-2d69efe16840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bec9670-fa89-4eed-a69e-147e03848d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7d0092-83ef-46ed-bd8b-75bd60f2c4d2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c7b7cb-b2a5-4551-9df8-c6c50cc2bfb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f4f61b-f6eb-4898-8838-5ca0b19e973d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3868064-bcff-4da5-b35a-d93a59152976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4194ef5e-3dc7-4f51-8cb0-657e6b431116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb0b6f7-a4e5-4bb3-94e7-a5b88874489b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8593a2fc-ff43-4b53-a826-8b105c83446f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d42ae47-3009-42a5-b3db-4faf670935f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bdb3b2-91d2-48f1-b192-18f450e95758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce778fed-ab6b-431b-92ce-ef036a59c504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddbcdfb-7a48-453f-9ba4-2319ba1cce36",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5463fe03-98a0-4743-80c1-fff9527c759d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6e5549-a716-4576-b328-e47593285a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bd3d90-6ac6-4e97-8165-6a0972dc5a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd00ef2-8be6-4715-a646-8200726018d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26bc221-827c-469b-bacc-010f093d7a99",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf22af2-1538-4322-90b3-d81e14a96aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043e58ef-41b5-4f32-bfa4-c61c1dd8d1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71bd1e5-2dc3-4a8e-b60d-c7954e016c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33984d06-3d61-499b-84b6-0c462bf37bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddd17b3-a3ea-4ebc-8262-5e656207da13",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28a1e4e-25be-4c74-8145-f17339e368aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ece99b2-d1d9-4ca8-9318-4b8945a4f1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde69584-6668-4c30-92e2-5662f0996f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cd4d20-186b-43ff-9e25-17954837dd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e83fd4e-ff4f-494f-a656-9af15135c828",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484f4558-a5a1-4917-9053-4ad6cf6ca636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "395b2dea-f482-4019-a5ea-f6cd1d446ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5dfbc1-9583-435d-922a-019a3ff860df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14752a1-6414-4d54-ba27-92a062c679e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80326cd-61ee-4a24-9b2a-7c5f06317394",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d140286-ee64-432c-b7b8-d7984e241609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1273165f-3e43-4f2b-bfde-94a0527c958e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad61c7a9-aaae-41b3-aec1-9d0c9a436cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9369cba3-c781-4c9d-b37f-21e3df9c1e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd04c15f-01c3-45e5-9402-69792c0115e4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed465e0-ce95-4344-8d31-1b737845ace2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b568c5-8e29-4ca1-a033-243bb7ae1ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a3c8d7-fde6-4a3b-92cf-0ebffd538b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3ef327-c692-457f-98dd-ed94baa7e988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e836274-1ae3-4a82-98b9-7c3624c20bd8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5d509c-90df-435b-a79b-94bddf4f6ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ef47a6-4d0d-43a1-a9f0-99ee6968f56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c7ea7c-265b-4408-80a8-5598ed86a1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e361f6-6204-4f6b-8634-228dbd3585c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47cf09c-7882-43ca-bcad-f6ee09330de4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7f5b38-ebfc-4ef0-807b-bc5b77cc9440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bce239c-00c5-4d37-8097-9ccc8427acfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2906bb0-4da0-49f2-bc82-2e742e903fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df128062-377f-4935-932e-7158d3b6e642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20e3815-f322-437d-bb96-0b72de8843d6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89130406-ff1d-4a86-adbe-4ca358db3220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60fc4586-b235-40bb-bff5-28a49ce64611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f458f4-127d-41e2-a562-fef8267db352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f29538-7872-4cf2-b46b-12ab41ba07bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39ad6b6-f3bb-4668-b9c8-c45af5987c44",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307e76ec-157c-474b-bcc0-33da5b560ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806b351e-6f1a-4761-a314-20d9e4627a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b27923-0d99-4750-bfbb-98abde38ee80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95ada6b-87f4-4600-97b6-7ffae7771fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25210b4d-1b10-4ab9-9eb8-6f5bdd3272b1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c953950d-a000-4d81-9baf-0642f545da91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3784e771-741c-4d23-9bb2-7c940ccb0f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7031079c-4802-49c7-a35b-27c74c1cc9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8aa108-522a-41e7-b2d5-b4a4b5ec4c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d658ad54-21a6-412d-a1ea-ff6223b4f64b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca2e6b2-0f54-430c-9ef4-841d8b507b03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2744dcdd-82cd-418f-a3e8-53c1ee7b850c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10432947-9c2a-49ed-a3e8-26641e2789e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e1094b-46a5-4069-8e59-6d5e059c3a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c50505-40d1-4816-8da4-1e20249f0032",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811044a2-534a-4c0b-9f4b-487b0e3a5ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0233a80-ee93-41af-ac35-f7443125219d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470aade0-1aef-4115-98b1-66a67c3d9552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d38674-d703-41b1-97da-3748af393424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56ba750-0d43-46f9-84f1-0fecac01bf64",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b775b25a-4357-42ed-820e-827bbf03ae2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601f69e2-8c1b-409a-a0c6-097e9c9c7481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c331cc-c449-4fc9-811e-f50f48e49365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e9ad34-691e-4810-a132-29f9275afbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc41d86b-b8a8-4994-8b3b-2ab61d339c8b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d9209f-44a4-4b97-b776-87ab5baa6d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17752455-ad9b-40d2-ab07-bb15e9fe8574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335e4091-64d1-4d1a-81f1-df14fa2d0600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0470047e-7f21-41d0-9738-5a6501105f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7187c0ca-df6a-4ac2-9ae3-6a3f0137f7d4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5789d973-c550-4085-a419-aa13c773cbad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c881e3f5-b43e-4412-b4d7-0b4da588497f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bd22b1-f843-4869-aef8-60990e10e702",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202f9828-3b9c-47b7-9114-6a701e278e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52191007-23a8-4d04-a62a-68d0622da6b6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a5f888-963e-48ca-8588-9b678837597d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd82b82-88d3-4606-971d-ca84501b48d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33acf89-26ad-4d2b-804d-a900a2725b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4276b4-cf61-4be6-bf10-28dd38c7b492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001efded-35bc-422a-8ee3-11d4f5352f5a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d987de87-17aa-4b39-b3ae-6ea9e5db00a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c787e68-ebb7-48b7-9f35-6f7137c29536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0165c34-ddcb-4e64-b023-5a5a9d2eb101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f040eec2-d42a-463f-9046-af3df266cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f660747a-465a-492f-b49b-c69cfed9845b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e020fc3-f4c3-4c9a-9e0f-48816714fb79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0befc803-f0c0-48ca-b3a3-5eb3d76355c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6db1897-36ec-4da7-9789-ca554767f794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32511c1f-8b46-46ac-a615-2d1ed377af80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5d278a-b31c-4894-b326-6a65b194c276",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dbeebd-9db9-4d7d-b749-a0394cf0856d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c15a3e0-84a0-4f04-91ad-cfe3c9417593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8758d868-234d-4882-a36a-e978cab96b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b1104a-7450-47af-b95a-93f01342a24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22c7eeb-7758-4ba1-90e1-0e933eb8483e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf3783b-f2ea-4743-b1d9-1e46aed6ee3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "769cd8a5-28e4-42a5-8de8-573fa2e61561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712f9849-9b06-4fde-ae6a-cadd15268068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f45060a-ef18-4813-b9f0-21da31b9f5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb89d2b-ccc7-4d68-b906-8e73e8d7e0d4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79d4c58-80fe-4c48-b8d6-e8fab55b78e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16652208-4c11-4062-a1b1-4a2e28a03b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051fc883-789e-4ee1-8f0b-f675122fb1d8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fb11b0-9742-4100-afae-1ede105d5b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4975b63-f586-44da-8fd9-34fea57b0f75",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd8ef2c-d043-4bec-95b9-88f32318b1f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d64fb2ae-c093-4108-8bd7-13ab87362053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4422881a-b2b1-43e5-8331-550f076bcba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd569bf-f23c-4454-ab00-91768dbf9e13"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c00fde2-416a-4534-9772-76cb13c5f057",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a798543-a666-4291-8d28-c1f006934fba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f19a5a66-22ce-4b6b-9ec3-b51a04b7f386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccf2089c-4e6d-48f8-b7f8-db8e37d8edb6"
                    }
                  }
                ]
              },
              {
                "id": "0fab9693-dffa-450e-b5b6-a0828a8ffc89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "468247cc-cd0f-4ceb-aab3-d0b06745b390",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae1e2a9-36dc-4dd7-9ab0-2600f9c5a0a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "073b65a9-adf4-4b0e-b367-cbcd3a59a1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbab02b-5820-4198-af84-09f68f0b4282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "800c841d-cb15-49df-bd42-f6f6c0adf337"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08f1130c-e6c8-40a8-a8ba-4a66bb26f00a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e09b960b-9166-4f23-924d-ef8fd918f134"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17fffaaa-70f0-480a-a538-10077a9fdd45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "171dd929-39bd-49e5-a7c1-9d32df44918e"
                    }
                  }
                ]
              },
              {
                "id": "b681eae4-e2da-462b-8b5d-13afe18a8ce1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5d24d9d5-48b6-4f2a-a55b-cb2e345b969d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7115a753-7b1a-41ee-b1f2-999f90ad8a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "45928c0f-aa44-4123-932d-17fd0cc24477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a82393-267b-408c-ac15-1ff3f7e2e485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e68b05e-7276-4a7e-aa96-54837433b942"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bfae7966-3834-4ac8-bf6a-4b65a938de55",
            "name": "Positive Testing",
            "item": [
              {
                "id": "85f3fe2c-ae19-4ffb-a6b3-24e057ab7d12",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd504b98-7870-468d-82f4-201569f2bbaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7714c62a-0adf-481d-b26c-09f5a14231e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddb5d7c8-e078-40f6-ab07-da8adc0c399a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d6cacdc-a22b-4533-b5b9-7f98096dcea0"
                    }
                  }
                ]
              },
              {
                "id": "9dca2765-8d54-45f7-ae9e-7e2c8482727d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4433e89-258a-46f6-9092-e51a1e44c086",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "379321ac-95f0-417d-a7b7-fba269bce6a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3900b3e9-b80f-47e7-9ae2-18716994689e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c283573e-017f-4daa-9073-4908c9e96f94"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32b8015a-3ee3-45d5-8b8f-fc6aad1ca729",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5c614276-caee-4924-bbf5-9eafd1561568"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e81e9a7-9e5d-418c-a82c-479427688f88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78890e62-6dc7-469c-bab6-18627f9ad7ca"
            }
          }
        ]
      },
      {
        "id": "b78fded3-d991-44a5-a720-022697814105",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5d10a40a-4b9b-4b51-9253-ed6091382b5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "425fef6b-3755-4d25-9e0c-e1c8b465760c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78b2f0fd-dd39-411d-8834-d95441da2c11",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58d8777-0f40-4435-a6d3-52bad0376ac6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "47d97b30-e2ea-46ab-8f42-40e73de7b672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ee7296-de5e-4aa5-84fd-0bca4cfea3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29de2db7-dcf1-442b-8a83-bed33c8067e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ee920ca-c1a0-4a63-b861-28c27f31c308",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec474b5a-7860-46e5-be3a-baaa2f659990"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1312ee8e-bfef-4a44-accc-dbe2434a9228",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29680a41-3889-4459-9ec7-3b56f60ec0fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a89713b-0a48-46e1-af83-4a389860ba13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "12a95575-af43-40c2-a123-3c0035f8ccb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51e73943-65e3-4664-8e48-bf6503603d42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ba5609f-e05e-4e02-a09b-19dcb5d64088"
            }
          }
        ]
      },
      {
        "id": "263b9998-fccf-4045-8e52-65095001b0d9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5be0575c-0821-4f74-816d-4f30b0c7d0cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e548800-2727-46f2-876b-05aefec0b188",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45e68e41-2c6a-4d0f-9da7-a32f6e1b9c66",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dd28b1-8a14-4ac2-a384-106e1f9191b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "415e4f14-71c4-4e9d-8368-2c803e6279c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4697f91-84b0-4608-aca4-66b92358136c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c5dce86-a858-4b81-82af-a24ff39b762d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ff5fb24-e692-4f04-b87a-80f00ec43d03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c3bcddb-5ed5-4562-ab41-e4e09f7123db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd452ecc-e0d1-4f8f-959b-dcaeb960285f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0fc060a-cb17-4b62-a30b-1554dfb71e50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f6738d4-db81-40eb-a998-a947c453b810",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e7c0fd6-3a2e-476d-aa8a-4f6ee1bca542"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6c543f0-2f91-479d-bded-839b5c68a381",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3aa19fe0-8080-4830-bdaf-84ea84ec6d70"
            }
          }
        ]
      },
      {
        "id": "522b7267-22af-418a-8fd3-161b707084d9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b00b5541-32db-4d57-86f0-f2f34a6d7d39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef24285e-28bc-404d-9d58-daabb33c5b52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "571f44cd-13b6-485b-8bbf-1fea3606f5d8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da753f0d-fff5-4e14-a7fa-1bc4edddea55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dff9335-9750-4619-a8fb-328af8bafb3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15810a9-376e-4153-b1b9-f216e0ab148a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9125813e-32a2-4338-a92f-de69e1443ff6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a489eca-7bd6-408b-837b-7e4b809d855c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "589b898e-ed85-4c71-a132-3f8d2761fd54"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "238f43bb-e722-4679-9bc8-78b784c1bc21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29e66e06-5069-43cc-983b-1e7d8f174df9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f53e14a-d4ca-49cb-afc7-bbaf5535445b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be6bfcd8-9ca8-4243-8cb5-7d941be04bd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc0fec8a-b9d1-4471-80f3-ba46ee529314",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "73b745ca-389b-4db1-9c59-5d841db6d96e"
            }
          }
        ]
      },
      {
        "id": "0eb37190-c553-4b37-8b70-907319fea687",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "671f56e3-e9cf-4cf4-aec7-115c2e4a64de",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21d8a6de-e203-4f7d-99b2-ee2f571179a9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d715b6c7-6e34-4df4-8482-d26734a90632",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff90cb9a-3b83-4fb4-83b1-e4c8b3dd9777",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c265ef85-3785-423d-8a0c-256455395c16",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.04929577464797,
      "responseMin": 7,
      "responseMax": 402,
      "responseSd": 32.853779224972286,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689036119340,
      "completed": 1689036151531
    },
    "executions": [
      {
        "id": "0ae193e0-68a9-4b05-858b-c656b1f6fc79",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d861f8fa-57bc-44c3-bc3d-3413c8d629fa",
          "httpRequestId": "4e2d9a0a-129e-415d-b760-7b8d45a17edf"
        },
        "item": {
          "id": "0ae193e0-68a9-4b05-858b-c656b1f6fc79",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e26b47f6-4747-4128-b898-43c6df18bbbf",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "a67e3305-c3bf-493e-ae8f-8600a585b8b6",
        "cursor": {
          "ref": "11a419c6-0a82-4cc8-b872-ff0c848e0b4b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5002f48f-aa63-4c1e-addf-8dfe2f48d521"
        },
        "item": {
          "id": "a67e3305-c3bf-493e-ae8f-8600a585b8b6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6b66b2fa-53a2-4ba6-b23e-3210baf510da",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "daa8b537-21f8-476d-8f1c-5d74ada50a02",
        "cursor": {
          "ref": "60854607-97d7-476f-9c33-833f12a5f886",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "38245fd2-d73a-4419-a570-2df2dc8de7a0"
        },
        "item": {
          "id": "daa8b537-21f8-476d-8f1c-5d74ada50a02",
          "name": "did_json"
        },
        "response": {
          "id": "e5f642cc-aa42-4679-987c-9084f8567785",
          "status": "OK",
          "code": 200,
          "responseTime": 360,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b4b0ba-fc42-4322-989c-ec4fe0df4213",
        "cursor": {
          "ref": "ae66aba8-4e54-41de-8917-74b2a620df75",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e3f10e1b-0019-4fc3-b82d-1a5cf2ee4bfb"
        },
        "item": {
          "id": "a9b4b0ba-fc42-4322-989c-ec4fe0df4213",
          "name": "did:invalid"
        },
        "response": {
          "id": "01418626-36be-49ea-9c0d-a1d3f51f0799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b4b0ba-fc42-4322-989c-ec4fe0df4213",
        "cursor": {
          "ref": "ae66aba8-4e54-41de-8917-74b2a620df75",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e3f10e1b-0019-4fc3-b82d-1a5cf2ee4bfb"
        },
        "item": {
          "id": "a9b4b0ba-fc42-4322-989c-ec4fe0df4213",
          "name": "did:invalid"
        },
        "response": {
          "id": "01418626-36be-49ea-9c0d-a1d3f51f0799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e27418-2a07-481c-99e6-80c09e8775d0",
        "cursor": {
          "ref": "6fa8a206-9553-4378-aadc-8c38690e40b9",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "560ba26b-eb5f-4f76-a293-a1995baf025d"
        },
        "item": {
          "id": "e9e27418-2a07-481c-99e6-80c09e8775d0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "561d99f6-f783-4ac5-a2f8-f6360d1815c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e3505d-2ab4-47c6-b9b5-7bf6209ad03b",
        "cursor": {
          "ref": "305c7d0f-e2a2-4a77-b6b6-dca4012cb1c1",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "af40d831-20b1-4bd8-8ab1-7cc9c183436b"
        },
        "item": {
          "id": "e8e3505d-2ab4-47c6-b9b5-7bf6209ad03b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "13325222-2ca0-45b2-b640-75482a509553",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46e8778-be78-43ab-ba5f-b7e2e92f45e3",
        "cursor": {
          "ref": "30743405-646d-4c65-9edb-94adc158b253",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e221e1ab-d9a9-40ea-b2db-77e194c91417"
        },
        "item": {
          "id": "c46e8778-be78-43ab-ba5f-b7e2e92f45e3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "299ff4a3-4636-4c25-a785-d4837640259b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdaf108-e0d2-43ca-b131-534dec8cbff9",
        "cursor": {
          "ref": "9636d0d3-fcad-4e3a-bdf9-5d4720539bbe",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "45989758-881f-4a7a-af8b-a1a899b95532"
        },
        "item": {
          "id": "4fdaf108-e0d2-43ca-b131-534dec8cbff9",
          "name": "identifiers"
        },
        "response": {
          "id": "0de41107-01f0-4442-99cd-5baa3288e5dc",
          "status": "OK",
          "code": 200,
          "responseTime": 209,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dee129b-5471-44e8-bb4b-2bd60226fa5d",
        "cursor": {
          "ref": "8290a676-644a-4248-b8d3-63bc049a3a44",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b7f82f06-2f7c-48f3-bc2e-b1bea5f739a5"
        },
        "item": {
          "id": "1dee129b-5471-44e8-bb4b-2bd60226fa5d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a53d49ba-c2e4-4400-a71e-0fb47e287e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01573a05-9d67-4da3-beb0-b11a1f30fcec",
        "cursor": {
          "ref": "cf3a23b3-be5f-45e2-8c9a-a935f6db6302",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6e454e69-5c56-4731-8fe0-c53b77dfee78"
        },
        "item": {
          "id": "01573a05-9d67-4da3-beb0-b11a1f30fcec",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "78224957-51b0-416e-bff8-3e7d08fd7a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ab6d02-3795-4acb-8e00-021d3d39e5b7",
        "cursor": {
          "ref": "6a2f422b-22b9-4f68-9f15-a489eb170e07",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a7ee2c29-171d-4a37-bcb6-fa1e53ba089b"
        },
        "item": {
          "id": "f9ab6d02-3795-4acb-8e00-021d3d39e5b7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3f1e923f-e6da-4488-b930-409798f3e459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d56a39-f095-4aab-b731-1cb03813612a",
        "cursor": {
          "ref": "59a3e527-fb9f-4d25-aa8e-3e4ab0bb14eb",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "58459b5b-48d5-47b6-bb03-e01f7fe854ba"
        },
        "item": {
          "id": "d5d56a39-f095-4aab-b731-1cb03813612a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "18141da1-6f2d-4fe9-8ee7-ed58459aa11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95265162-eb0e-4b89-b112-886473d9e906",
        "cursor": {
          "ref": "dc8637af-4740-47a7-bee1-71d6238a206c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7f1dc212-14be-43c3-a21c-fa52f1f0f7a8"
        },
        "item": {
          "id": "95265162-eb0e-4b89-b112-886473d9e906",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "690871e7-d0e1-41d2-a2e2-8de6f77bab9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4256ca68-02bf-4a96-9c02-5e2ce98ed9d4",
        "cursor": {
          "ref": "d7f52c08-94f4-4a71-a705-7f11bb429497",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8b789d10-e1f8-4260-8f99-fd6a919dc5d7"
        },
        "item": {
          "id": "4256ca68-02bf-4a96-9c02-5e2ce98ed9d4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1418f20b-617e-4a78-a170-192c06fe136e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80886337-1a5d-4ccb-bad4-1e5792d9d94d",
        "cursor": {
          "ref": "98cbac35-11e0-4916-91ee-b3e7d5b2d166",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f1cd14cc-5fa8-4ca8-9cd7-c9c9e9565d41"
        },
        "item": {
          "id": "80886337-1a5d-4ccb-bad4-1e5792d9d94d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c2eb4801-6abf-4bdd-b1f2-803fee33b354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f786562a-fa15-4f32-9829-c272da048ae8",
        "cursor": {
          "ref": "f5690214-a77c-4321-8142-5eeff7f6bd43",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "764922f7-b021-4f73-95fa-658e4b6fcaa7"
        },
        "item": {
          "id": "f786562a-fa15-4f32-9829-c272da048ae8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1e8c3897-db82-48d3-ba4e-acc04b226bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c805e77a-455d-48ea-aecb-e7017d495358",
        "cursor": {
          "ref": "7b24863c-1703-4848-90e4-ec87ee09f446",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6293d1fd-2f6b-4fec-8375-f3be01db4ed4"
        },
        "item": {
          "id": "c805e77a-455d-48ea-aecb-e7017d495358",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "06f30545-303a-49ff-958b-6dea54342600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac24bcd-65a9-43b2-a9db-eabb2ae588d5",
        "cursor": {
          "ref": "522487e9-bb4b-4955-8eb9-a3031dea0f26",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "121fd8bb-fb35-48ed-b5b0-5088af7e43bb"
        },
        "item": {
          "id": "3ac24bcd-65a9-43b2-a9db-eabb2ae588d5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b74c22a0-7a55-4807-b4b4-ea8a381b2418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d52ee9-ef31-4985-b197-56cc4ca87329",
        "cursor": {
          "ref": "5f1c174d-a096-4067-9266-e674ea41c6c0",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7f5ff17d-2ceb-4c71-b487-5eba78d6800f"
        },
        "item": {
          "id": "04d52ee9-ef31-4985-b197-56cc4ca87329",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "58b8c00d-0932-4521-9d4f-f909080718f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37b6669-2ff8-4fb5-a0a7-08d54402c2d1",
        "cursor": {
          "ref": "01e6b009-68a4-4c6d-8425-9c5deaded45d",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "758022cf-8969-4820-a0c0-72a5110b497b"
        },
        "item": {
          "id": "e37b6669-2ff8-4fb5-a0a7-08d54402c2d1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "409bbbfd-2987-4a43-82e3-56c211245f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cba200-9ccd-4ad9-8122-c92ecfcbc299",
        "cursor": {
          "ref": "a67601f1-add3-4bf2-949f-4959e5d74071",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "240fadda-fe9c-4189-9a14-403c490ec816"
        },
        "item": {
          "id": "43cba200-9ccd-4ad9-8122-c92ecfcbc299",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f15b1885-572d-4594-bd99-c29274ee21d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5d6868-ed77-4a83-98f0-d21fd14a6ddd",
        "cursor": {
          "ref": "f6f6234e-047f-4d32-8bf6-de32f830da19",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4780ec37-c5c0-4845-a7a3-b3af8f9b9409"
        },
        "item": {
          "id": "7a5d6868-ed77-4a83-98f0-d21fd14a6ddd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3ec83c3b-cbc8-456d-9cdb-f9611cf43686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a380d0ec-33fe-492d-b41c-2bd0f5a2388b",
        "cursor": {
          "ref": "24a3746c-89ad-45a8-9daa-84a53d0b3b17",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2153b85e-b739-4963-93a6-542acbf931cb"
        },
        "item": {
          "id": "a380d0ec-33fe-492d-b41c-2bd0f5a2388b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "764cbeba-23fc-4c2b-97bf-20951fbcfba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e00eb5-f174-45f7-970a-aade6e913c42",
        "cursor": {
          "ref": "a3330d7d-e4dd-4aff-bfb4-e73ca30eb1d5",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "20832f0b-755a-4b1b-8cfd-4c2518e8586d"
        },
        "item": {
          "id": "72e00eb5-f174-45f7-970a-aade6e913c42",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5fd67430-3884-460c-905d-748aebb5af37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44be3420-a89f-4d50-83ba-fbcf040882bd",
        "cursor": {
          "ref": "9df90391-a256-4a74-885b-ed0a5be3e745",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1acb7a4e-9fd2-40c6-8ce6-d7006cbbe4a0"
        },
        "item": {
          "id": "44be3420-a89f-4d50-83ba-fbcf040882bd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c7a247f9-aeb4-4968-994f-8bbf62eb8f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf71520-74fa-44f9-a9df-ccf62c9a3047",
        "cursor": {
          "ref": "47495d1f-fc95-4e9c-bcc5-bc72bff28086",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "db171c65-efe6-46b7-961d-ba6fafe559b9"
        },
        "item": {
          "id": "2bf71520-74fa-44f9-a9df-ccf62c9a3047",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f8ffd1c2-9709-43ff-82bf-91604c2142c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a226522-0743-433f-923e-7aafe4efc817",
        "cursor": {
          "ref": "03a7f57d-26e6-4c20-aaeb-536356b16701",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f567d4de-8cbb-4b24-ba82-1bcb01b71040"
        },
        "item": {
          "id": "8a226522-0743-433f-923e-7aafe4efc817",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "84f31103-2f42-43ef-a75d-b3884a8499c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512aa7e7-5711-42c5-87b0-14dfdf95faaf",
        "cursor": {
          "ref": "eba7021a-e6ff-4060-8131-c636f37f24fc",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f1417203-2015-4c55-8de9-d310e269aae4"
        },
        "item": {
          "id": "512aa7e7-5711-42c5-87b0-14dfdf95faaf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "82361ada-81cb-41e2-9b67-be77a74ba04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f635ea-3262-44bc-a975-bd2bb5c88019",
        "cursor": {
          "ref": "30c665c2-1396-49e2-8847-01a75472ef48",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1d015de6-1550-4db1-8b4c-56e2edec033a"
        },
        "item": {
          "id": "37f635ea-3262-44bc-a975-bd2bb5c88019",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "462fdbfc-ab8b-4277-9a0e-0940d7dd2020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22319657-e9fb-45cb-8909-5d10efce277b",
        "cursor": {
          "ref": "8f95397b-21f4-494c-93eb-d5a0dd0aa8b4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2364b2d8-c697-4b71-956e-dc1f2427ea9f"
        },
        "item": {
          "id": "22319657-e9fb-45cb-8909-5d10efce277b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "488df452-a271-4e96-85f1-b62fa9d8725f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f64301-6aa7-410f-bd36-0dfd6fca1fdc",
        "cursor": {
          "ref": "ce03f734-fedf-48a8-b17e-8ad9991e35cf",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "db1fd05d-31a2-43e5-808c-a66b34784b80"
        },
        "item": {
          "id": "b4f64301-6aa7-410f-bd36-0dfd6fca1fdc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3b09a9f9-46d9-4a24-9d18-cd24560b5421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d683cbc4-1d43-4035-9f01-12dde13a61bc",
        "cursor": {
          "ref": "ebcf3cf7-0d0e-476b-ad33-445479513352",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "95834f31-13a9-41af-bc73-db4076ae7f7f"
        },
        "item": {
          "id": "d683cbc4-1d43-4035-9f01-12dde13a61bc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7b2657c1-31d8-4d21-9804-13109cdf4f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36db332b-8e2d-413c-9dd4-3f1617bb81a5",
        "cursor": {
          "ref": "b2150540-2076-42cf-a209-e65d25185238",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "86c74cce-fe21-427f-89a1-a45f4321d9a3"
        },
        "item": {
          "id": "36db332b-8e2d-413c-9dd4-3f1617bb81a5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ca1cd241-238d-43a0-83dc-43136c13a10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fcddd3-3234-4a13-9bf6-1373a84b068c",
        "cursor": {
          "ref": "20902319-319d-41a5-a565-5d4a721d840f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0116eb55-2434-41e3-bf26-9571cafc205d"
        },
        "item": {
          "id": "85fcddd3-3234-4a13-9bf6-1373a84b068c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "efeb4239-4bfe-4c72-8c2f-e38ebd09e5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5c44fe-014e-486e-8a19-465504f39ecc",
        "cursor": {
          "ref": "966a49aa-b539-45bb-a136-f529de31542d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "08c11948-b17c-459f-89e6-16ceb5e2de04"
        },
        "item": {
          "id": "8e5c44fe-014e-486e-8a19-465504f39ecc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e857fbc5-ed40-49af-9249-bcccafbd5507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c29369-c75a-40ce-bb60-3b455e246146",
        "cursor": {
          "ref": "e492bb6f-b678-4136-bfe6-7ebe37db410b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c37b129f-24d2-4760-8b73-eadc37b69d15"
        },
        "item": {
          "id": "e1c29369-c75a-40ce-bb60-3b455e246146",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2980e7e3-5264-464c-b335-34bd9b506fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afed756c-56aa-4cee-948e-d89865314c2b",
        "cursor": {
          "ref": "06372109-4f8a-4ccd-8eed-9a285afc070b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dc331082-018e-4d4b-b4dd-e66f3d477133"
        },
        "item": {
          "id": "afed756c-56aa-4cee-948e-d89865314c2b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5f6ec001-ada3-4fa9-b28f-9fa0a8943a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc7cb74-48e9-4517-866e-04bb418061d4",
        "cursor": {
          "ref": "8b3d1e3a-745a-4710-9fd9-4f1d7964c6ad",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7dc1f34d-c34f-4f7f-91a4-f7989de3bde8"
        },
        "item": {
          "id": "ebc7cb74-48e9-4517-866e-04bb418061d4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d2878fa5-7fa6-4aaf-a9a3-1b3a1c3bd13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da06a7f0-1eab-4ba6-84d2-ae8ab9dd6cbb",
        "cursor": {
          "ref": "2a608dd4-f5e2-4c35-98b2-8e869fae8bb1",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7ba04128-a496-45be-993b-eb0087b2f97c"
        },
        "item": {
          "id": "da06a7f0-1eab-4ba6-84d2-ae8ab9dd6cbb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5542f07f-f2f1-4f9a-8d25-2f428533904a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8123b8e-750d-4a1e-88cd-2c14a79245c9",
        "cursor": {
          "ref": "ed3ac743-afaf-4107-af1d-238a7dcf34d9",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f07e9189-a245-4a9b-9d27-4ffef57bc751"
        },
        "item": {
          "id": "c8123b8e-750d-4a1e-88cd-2c14a79245c9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "79604999-96d4-4bed-a92e-4d36491cb736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614be014-f776-44c3-b80a-8bbce70d49e1",
        "cursor": {
          "ref": "914e7bb3-af7e-4649-bb3d-261c1349e496",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2bef584a-50bc-4fb2-a487-9e0d3e218e08"
        },
        "item": {
          "id": "614be014-f776-44c3-b80a-8bbce70d49e1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "24a334d5-cd37-48bc-8fa5-8758c6559df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbed501-b349-4568-a9de-27325536cfb5",
        "cursor": {
          "ref": "18d8971f-d4fe-482f-a468-b4c792b70936",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a2e7e394-6994-4ead-9b37-7fae14322196"
        },
        "item": {
          "id": "7cbed501-b349-4568-a9de-27325536cfb5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bde47975-3e66-4aab-864e-97bfadfc4476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03948a9-8801-4025-92c6-5f945d1b8db0",
        "cursor": {
          "ref": "180dc847-491f-46dd-83a7-88942833c980",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "90b71dc3-7fdc-4672-850d-a24b515a4d86"
        },
        "item": {
          "id": "f03948a9-8801-4025-92c6-5f945d1b8db0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1c372a9b-1e4f-4d2a-9a82-920d49b04888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d93325-4f1a-4b39-a92c-bcfd5ad458b0",
        "cursor": {
          "ref": "9c0155e7-ab92-4588-8ebf-e86c3cc83387",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6e2694fb-f4da-4d85-97db-de921a059c2b"
        },
        "item": {
          "id": "f2d93325-4f1a-4b39-a92c-bcfd5ad458b0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7690cf96-0701-42f3-9999-5470e9917293",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2213cb97-0f01-42cf-8c38-9d4416821849",
        "cursor": {
          "ref": "053fcf05-855f-424c-b077-1e93abb20afd",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fa8cd6d0-ae51-4e2a-a0ba-4d8acb8802bc"
        },
        "item": {
          "id": "2213cb97-0f01-42cf-8c38-9d4416821849",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "88d1fe16-54b6-4e47-ac88-d84afdec1eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4beac527-ef61-43d9-95c0-499ac19928b7",
        "cursor": {
          "ref": "f48383f9-cf65-4b34-8a93-c7830e0b03f9",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "631ed5b9-3dc3-446f-ae75-0bb910c80643"
        },
        "item": {
          "id": "4beac527-ef61-43d9-95c0-499ac19928b7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6a09281f-89cc-453e-ae30-48fd6810b1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a96932b-c750-4db8-807a-1968a3a48fef",
        "cursor": {
          "ref": "549f66a5-dac6-40d9-ab2c-e190b916357a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "87467c1c-e7b3-454d-963b-13cf0964b8fe"
        },
        "item": {
          "id": "9a96932b-c750-4db8-807a-1968a3a48fef",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9f1ed47b-5ed7-45fe-baee-9621266c47cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787ed47a-6649-4efd-8013-fcb5d63ff6ef",
        "cursor": {
          "ref": "3e6148d7-bef8-4439-9ef4-88b7e48a4a68",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b5a5be03-a4f1-4977-8983-9c0facfa7801"
        },
        "item": {
          "id": "787ed47a-6649-4efd-8013-fcb5d63ff6ef",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "33d13026-f736-4f3b-9069-691dd7e8435f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a7b513-d2e5-44e7-aa46-963d31d7ae9f",
        "cursor": {
          "ref": "0916f34d-e008-4972-b40d-cbbf36eb8f50",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7f5a8c15-f1bd-4173-b3d5-9e6bf91d0fc2"
        },
        "item": {
          "id": "17a7b513-d2e5-44e7-aa46-963d31d7ae9f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7d26c4a2-0106-4559-bae5-76262f3736ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a690ad5e-82e4-4f8a-a5c3-9720ab72a05b",
        "cursor": {
          "ref": "9762a893-956b-45ed-9c8c-295905c0df98",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e0bba33e-e56c-4dde-943c-3c1702bcb5de"
        },
        "item": {
          "id": "a690ad5e-82e4-4f8a-a5c3-9720ab72a05b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "af7419c6-f196-466a-89e4-64c7cd41737f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e325ef-da55-472d-885e-a70715a97152",
        "cursor": {
          "ref": "8d03eeab-ab14-47d2-82ff-ffb60860a5a6",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d1994554-9260-4b6e-8182-4f2699fc7148"
        },
        "item": {
          "id": "05e325ef-da55-472d-885e-a70715a97152",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8cff5b81-9479-4ffe-a5a8-f1ef6db731ce",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef252fb-2560-4c02-b6bf-c97a85fee8a7",
        "cursor": {
          "ref": "8216ee80-3f0a-4a21-b051-f3cdd7977e76",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "83b801b6-8267-4ee9-99bd-84af4c91b895"
        },
        "item": {
          "id": "2ef252fb-2560-4c02-b6bf-c97a85fee8a7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e0339f9d-d061-41b4-8073-2406100425b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3999ad2-8d13-49eb-9e29-60ba276004a1",
        "cursor": {
          "ref": "c45c7328-1fd4-4ed3-a9e0-360e83a0abdf",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "060f12cd-6c8d-414a-86dc-9357e83f7513"
        },
        "item": {
          "id": "e3999ad2-8d13-49eb-9e29-60ba276004a1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a0e35b3e-6b52-444e-a389-b563e2f4ff95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34db0ffe-f472-437b-a4f9-32de83541256",
        "cursor": {
          "ref": "c8e51b52-2901-49f1-92ff-5bf6b619a2e0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d118b8f4-8efd-4e84-994f-49fbba80c966"
        },
        "item": {
          "id": "34db0ffe-f472-437b-a4f9-32de83541256",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4e487843-2ec6-43e4-90e0-4ea3afbacbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d4186f-5a62-4bd8-ad7f-119b99c3d9f0",
        "cursor": {
          "ref": "f74f189a-ff63-4ce7-b7f2-f486cba315e8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b3ac5e15-9f8c-41ed-99ef-619de9ccef94"
        },
        "item": {
          "id": "a9d4186f-5a62-4bd8-ad7f-119b99c3d9f0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "daea1071-4934-4b7c-93ec-74799e324a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a418597d-6964-478e-b09e-0810fa5d9409",
        "cursor": {
          "ref": "38acbfde-5bb0-42a8-ab8e-c09e71714ffc",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "03c84840-771c-4e37-9f38-ff3782fc9501"
        },
        "item": {
          "id": "a418597d-6964-478e-b09e-0810fa5d9409",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e70deb54-a018-4f91-8efc-6e305ae2afa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda71f9a-ded0-4933-9a2f-25b16e249a34",
        "cursor": {
          "ref": "74768140-b440-4624-bcd7-ecdcf88b098d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4d0f2431-977e-4d7c-b57a-4e53c4b4b44d"
        },
        "item": {
          "id": "dda71f9a-ded0-4933-9a2f-25b16e249a34",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9a27b7de-f9a5-490a-be1c-f734ea9ef061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f66ce8-2ed3-4a67-a82c-a91381fe59df",
        "cursor": {
          "ref": "8b1b255b-1d6b-4283-abb0-9b7f2faa70f0",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7ecee462-2c54-47fb-83a9-03d0fa87d49b"
        },
        "item": {
          "id": "61f66ce8-2ed3-4a67-a82c-a91381fe59df",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e6141b35-2610-4ae4-a133-9a3b04e1fd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d11e64-f9f0-42d1-b4d8-e2ea90625c55",
        "cursor": {
          "ref": "103b6d64-7801-4f14-b615-b57f14983c1e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dea0900f-3f03-4934-9e81-da31b9133228"
        },
        "item": {
          "id": "d3d11e64-f9f0-42d1-b4d8-e2ea90625c55",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9c1eba42-1a02-4232-80b0-6fd8dc4e5669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fe5da1-9469-4509-b4fd-f7aa8627406b",
        "cursor": {
          "ref": "825f5207-df7a-4ec1-a6e2-7ef2b00cebb5",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8e9926a4-af7a-425b-a269-d4683a0723cb"
        },
        "item": {
          "id": "76fe5da1-9469-4509-b4fd-f7aa8627406b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "74af392c-b402-4f81-ae1b-4ba2a538a166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43438bdc-3686-43c7-afb9-1365f1eaf376",
        "cursor": {
          "ref": "41c78081-c9b9-4e79-9468-8a6f2e00d22e",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3330d17e-cb68-4e5d-95dd-8aa47d078143"
        },
        "item": {
          "id": "43438bdc-3686-43c7-afb9-1365f1eaf376",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1f31a80e-784b-47b3-8e25-a6a8d150c4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e056bed-88bd-47bf-8728-8ab39ae964c2",
        "cursor": {
          "ref": "b6c2c592-e5dc-4209-996b-36d6009b98b0",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0f938c1a-0a41-434c-a580-74ad0cd0c973"
        },
        "item": {
          "id": "8e056bed-88bd-47bf-8728-8ab39ae964c2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "880541e9-62bf-4fb0-ae6f-496cf083b3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cc62a2-d3b5-47d4-aa16-d7ee04fb3362",
        "cursor": {
          "ref": "2ed583fa-fdfa-4c26-a11e-9ce0e98c7a1d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0760ab82-2a65-4c0f-885f-0e67f7c8b6be"
        },
        "item": {
          "id": "06cc62a2-d3b5-47d4-aa16-d7ee04fb3362",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "40e05983-dc49-4b9a-a9a3-904b550ff7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8695f6-8e38-4b80-93f7-1a0861194df2",
        "cursor": {
          "ref": "03172335-f16c-4e7a-8994-6ee7d326f8a7",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6af7eb60-5a8a-4f82-850e-ea7c521c9476"
        },
        "item": {
          "id": "3d8695f6-8e38-4b80-93f7-1a0861194df2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "39a6233e-05be-485a-9ed5-a0704bef2c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e947c88b-cef3-4239-93f9-e991bf22f3da",
        "cursor": {
          "ref": "d0d968e2-e46e-49d4-bda5-fc568d0235ed",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b842f01a-fbc1-43b9-96ea-5bd48d749cc1"
        },
        "item": {
          "id": "e947c88b-cef3-4239-93f9-e991bf22f3da",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "685715c2-8720-41c1-8984-34d014f8c3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1765ee4f-501e-4c62-88dc-9c578eeeabe0",
        "cursor": {
          "ref": "f681b3bd-4f2b-4b79-899a-a1cf9b0b6713",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c901eafb-af2c-465c-9363-2d056b223219"
        },
        "item": {
          "id": "1765ee4f-501e-4c62-88dc-9c578eeeabe0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "924a752e-3118-4dbc-8359-df2d9fba73ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902841a1-0a07-4c5b-8392-000fbab06920",
        "cursor": {
          "ref": "d2c76e4d-bbdd-403b-a681-2b3639be140f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8fdfb8d6-0f37-4ab5-8482-3a604f92fc8a"
        },
        "item": {
          "id": "902841a1-0a07-4c5b-8392-000fbab06920",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3e5101af-fe51-4723-af14-927b6b6d86aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f830236-8d4b-41f6-9709-b29d4c934003",
        "cursor": {
          "ref": "dec14e4c-0b4d-4d36-917f-78fc998b2593",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ecc736c8-3305-483b-ad0d-61a4dd4952a8"
        },
        "item": {
          "id": "4f830236-8d4b-41f6-9709-b29d4c934003",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "da2a07e0-be7e-489e-bce8-4f9a8ef61826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082810ef-3b14-4638-9a72-fd2d54760657",
        "cursor": {
          "ref": "2a8042be-0925-4de8-8c1b-015a01fa5c4b",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1847a7de-c8eb-49bd-8eba-7c9ca98ba306"
        },
        "item": {
          "id": "082810ef-3b14-4638-9a72-fd2d54760657",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d1c4b4ac-4631-49cb-9e2b-748a859af100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da9a1bc-abbb-4fa1-b2ad-5fe87ef2dc54",
        "cursor": {
          "ref": "9b8531b5-3ca0-4188-8a31-190372512959",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ea2ce72c-9559-4e25-9e42-86d3cb188612"
        },
        "item": {
          "id": "4da9a1bc-abbb-4fa1-b2ad-5fe87ef2dc54",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "316af9ce-2c75-4a0d-af5f-289ffab988d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950a24a9-62b4-459d-880d-d2d8a786d811",
        "cursor": {
          "ref": "285cb726-5345-4f8c-a72e-e6808e082539",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2274817f-1d59-4fa6-ac2e-d0479345dfab"
        },
        "item": {
          "id": "950a24a9-62b4-459d-880d-d2d8a786d811",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b42fab38-f7b8-44c2-b85e-cafcc74cc316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbed3a9-4466-4af4-ae6b-0c40ff321f8d",
        "cursor": {
          "ref": "61a3a1f7-ca0e-4a83-a863-4526a9c94e80",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "217fd6f2-9090-45ac-9078-92ff09755857"
        },
        "item": {
          "id": "bfbed3a9-4466-4af4-ae6b-0c40ff321f8d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "719105c3-d685-44e6-b5f7-eb81d75fedc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d42d4cc-4f4d-42c6-b8e0-6a0dffaef61a",
        "cursor": {
          "ref": "9a6a4dfa-b0d1-477e-adf8-743f4c80f8d2",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "659069e3-0c49-4625-ab26-6db5c475320c"
        },
        "item": {
          "id": "0d42d4cc-4f4d-42c6-b8e0-6a0dffaef61a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "42e79880-4526-412f-8462-b8a7ec10a357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814afe83-3615-4a73-abdb-b6508facf251",
        "cursor": {
          "ref": "48e2bd9b-abae-4b71-814b-8bbbfc5623bb",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3027abf3-5ddb-4a55-9fb7-896ec1d3fc65"
        },
        "item": {
          "id": "814afe83-3615-4a73-abdb-b6508facf251",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ee119a48-6013-4be7-8a06-46898e06f902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045fc6ca-b2ad-4b3a-9a73-9b6400bce90f",
        "cursor": {
          "ref": "049b9a31-a956-4a02-abb9-57af0225882b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8be4cf76-ae9c-482d-9746-1a06fdd7db3b"
        },
        "item": {
          "id": "045fc6ca-b2ad-4b3a-9a73-9b6400bce90f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "18a8a2d7-7826-4643-8b31-0dc6ca0fae3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c117941c-d605-45a1-b104-0ca846ab123c",
        "cursor": {
          "ref": "79eb8b45-77f4-4c9e-a815-6f9e00bd7f5a",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7eb595d1-18a9-43d8-bc02-444bbc83f992"
        },
        "item": {
          "id": "c117941c-d605-45a1-b104-0ca846ab123c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c1310605-35d3-4f73-9497-b8e1f181fadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0add1217-2f8a-414c-8eaf-690f395442d4",
        "cursor": {
          "ref": "b5c9ba9f-7080-49ea-af63-32710e01b921",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6f8358e1-6f29-4195-a5d2-7e519975de7a"
        },
        "item": {
          "id": "0add1217-2f8a-414c-8eaf-690f395442d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e3982041-3638-42d2-9870-41f20b2f5b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccd3bc3-2e7e-4843-991d-6f8e9b2c391b",
        "cursor": {
          "ref": "18acef14-7add-42eb-8cc6-6effb72ec1e9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "16bcf242-d69e-466f-8988-5911947b5c57"
        },
        "item": {
          "id": "5ccd3bc3-2e7e-4843-991d-6f8e9b2c391b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b7bfc524-03cf-494f-b248-e8cf81f21187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7925315-629c-46ab-8faa-b5b945ef5ee9",
        "cursor": {
          "ref": "69f05634-041e-4a77-9090-4619e7e7bb8b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a1a6263d-6477-4f9e-97c5-aab70fcbd807"
        },
        "item": {
          "id": "e7925315-629c-46ab-8faa-b5b945ef5ee9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4aaf9c7a-b080-4c85-9961-4439d2904d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8163f1d-59d4-4ffa-9a26-0864505f0680",
        "cursor": {
          "ref": "ac4bb422-708b-4e57-9aa7-ee4437b23271",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6f70e53f-c360-4fd4-8e49-f73191577237"
        },
        "item": {
          "id": "b8163f1d-59d4-4ffa-9a26-0864505f0680",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b05199b0-7dc2-4e4b-8f2a-fe943259e44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eeb6bd8-bf28-4fda-a935-2eb7a32e7270",
        "cursor": {
          "ref": "1735053e-2fd9-4dc9-ab13-f34c86dc9668",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5ef63361-5f6f-46a5-8ae3-6ba2815a0462"
        },
        "item": {
          "id": "8eeb6bd8-bf28-4fda-a935-2eb7a32e7270",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f9340601-8958-49ae-bd2b-9719cf2b7cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b6a431-c1b2-4127-86b0-6316ae6e426f",
        "cursor": {
          "ref": "6913ef54-3503-44c0-ab6c-f9eb513dafbe",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "73f7b2c1-273a-4c30-96db-9eb220a06ae9"
        },
        "item": {
          "id": "e3b6a431-c1b2-4127-86b0-6316ae6e426f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a0294692-accb-4a52-80f5-271b341cae1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d688495-61f6-4f8e-b104-ec26002011ec",
        "cursor": {
          "ref": "1cd51022-2d85-465f-b10a-e976384ca4c7",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "78c1f084-ffb1-4cd7-a8e6-937a0b56afdc"
        },
        "item": {
          "id": "2d688495-61f6-4f8e-b104-ec26002011ec",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "84877e27-05a4-4138-a44d-2675b46d88be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f45637-8185-4469-9943-2a277cca5a3a",
        "cursor": {
          "ref": "14081a2b-8a2a-4697-87ec-2f1d38ec5841",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "af077bee-da7b-4eca-a56f-c543ea5ce7d9"
        },
        "item": {
          "id": "c4f45637-8185-4469-9943-2a277cca5a3a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a55ee94e-c5c1-412c-9165-9c5ab0f4a151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f9a28d-2fb3-4ec2-b5a0-35792e79e586",
        "cursor": {
          "ref": "c4b54e1d-0d13-4fa7-8023-1d4d6c76430d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "de0f24b4-879a-403b-8ee4-0624c2112313"
        },
        "item": {
          "id": "d6f9a28d-2fb3-4ec2-b5a0-35792e79e586",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3e4bdd23-0e17-498b-9628-b21219e2e224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a2da8d-cb14-443b-99d4-6c538181053e",
        "cursor": {
          "ref": "6fee617c-f48c-49ce-b197-bb2fa1ead956",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "82a1edcf-563d-473b-b476-49cd7b9568e2"
        },
        "item": {
          "id": "c4a2da8d-cb14-443b-99d4-6c538181053e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0f83a136-4e6f-4cf3-8884-fd0f9a0dc65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1f4c5f-a8ce-4bbd-a078-ed7c0d4c2724",
        "cursor": {
          "ref": "6d3880bb-f47f-4361-9ab2-868fb23a07c3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6b0af952-06b7-4ba3-8ee7-a0f09dcb693b"
        },
        "item": {
          "id": "7c1f4c5f-a8ce-4bbd-a078-ed7c0d4c2724",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7a837c79-1ca6-42ff-b17e-0ffba2ed1e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717cc547-4de8-4896-a116-a6217c89cbfd",
        "cursor": {
          "ref": "4a14ef5f-10cc-42cd-b90b-cca7b943981c",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1262bbc3-4a34-4518-a043-922afd6132fb"
        },
        "item": {
          "id": "717cc547-4de8-4896-a116-a6217c89cbfd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "75ad086a-6785-48a5-9372-060d82c5fb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceff6811-4508-4f9f-ae93-cb6e7ab5c2c6",
        "cursor": {
          "ref": "10b74994-5655-434e-951a-de1fda89b5d8",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "13fd40a2-71e2-4f1a-824d-674f7ac4bdfd"
        },
        "item": {
          "id": "ceff6811-4508-4f9f-ae93-cb6e7ab5c2c6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7af28da0-a0c0-425e-a6bd-e86a51c35e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e57b68-ccae-4036-99a0-20e99eb91d8e",
        "cursor": {
          "ref": "3c9b6489-db47-4f20-a1ed-45d04820c1ec",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a34384de-847a-40ae-8201-83f9f240370c"
        },
        "item": {
          "id": "31e57b68-ccae-4036-99a0-20e99eb91d8e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c9361527-2732-42dc-adde-1287cfa685a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ded22e0-36ec-48f4-a396-9111126237cc",
        "cursor": {
          "ref": "d4816d5f-05af-40b6-8ee1-6beff97a325c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5108e18f-4e91-42c7-b23e-a0e46da0c826"
        },
        "item": {
          "id": "7ded22e0-36ec-48f4-a396-9111126237cc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f40c0528-764d-4a30-a7db-4f398a14be1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a12b3bd-dc54-4252-952b-008b55abd939",
        "cursor": {
          "ref": "2ac3375c-b531-48c9-89a6-5c8062955086",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "746f6730-c5e1-4c63-9019-36d6377426ce"
        },
        "item": {
          "id": "1a12b3bd-dc54-4252-952b-008b55abd939",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "be75ebd0-0208-458c-8429-927b2238768c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212e8751-d544-437d-bc9c-eb6a7af75778",
        "cursor": {
          "ref": "fc9b8215-56c2-4a2f-bf24-ce20d1073481",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "668b2ad2-6079-4ca5-85bb-cde642e03002"
        },
        "item": {
          "id": "212e8751-d544-437d-bc9c-eb6a7af75778",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "554e1a16-dd47-42b7-876b-af005e9ad83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceec81c-22af-4edd-b7e1-c4d932b42d9c",
        "cursor": {
          "ref": "838fdf24-b163-40e5-b576-b4763606160b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dd0e5e70-cd57-4c70-a610-9cec7dc91a32"
        },
        "item": {
          "id": "3ceec81c-22af-4edd-b7e1-c4d932b42d9c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "524607d6-cf71-44b8-af56-5981099be456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7a7198-4434-437b-87b8-bf94d1a2e6a2",
        "cursor": {
          "ref": "c5ad46d1-d834-438b-86bf-2506197379c5",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5ef0f4e5-e822-4bef-8396-943244502a88"
        },
        "item": {
          "id": "ee7a7198-4434-437b-87b8-bf94d1a2e6a2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "287a3a56-b8cf-48e2-9932-3aef2835f38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dfcaca-c1b3-492d-838e-f07400c5046a",
        "cursor": {
          "ref": "2a94d436-7c93-4162-95e7-4a621fe96cda",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4e50c6f3-28a9-4d3a-885f-16e41e7a06ff"
        },
        "item": {
          "id": "d0dfcaca-c1b3-492d-838e-f07400c5046a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e74df5e1-bf9a-47a3-a1f9-baa49fd07965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d5b193-f5ba-42b0-a585-ad20eb952161",
        "cursor": {
          "ref": "4103888a-88ab-4d4b-b71a-7d6581822d5a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9ab2dd97-bb1f-456c-aa94-9483c6574111"
        },
        "item": {
          "id": "73d5b193-f5ba-42b0-a585-ad20eb952161",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fb641718-b0e8-428b-a36a-aa0e9a4c7ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2521f27-8158-4df7-a469-fd17c7423269",
        "cursor": {
          "ref": "a77ba316-d53d-486c-b316-c9db8c4833f8",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d84f3acb-77d4-47c3-8584-6790f76f6585"
        },
        "item": {
          "id": "e2521f27-8158-4df7-a469-fd17c7423269",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "062ff56f-5d05-4bfc-ba41-b46a32a00afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee62eaf-eaf2-41c4-a1b0-f42a5f59a61e",
        "cursor": {
          "ref": "1634a13f-4cad-4016-ad63-52637e999521",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4ee89ad1-d164-42f0-8fd3-1be92bd2c616"
        },
        "item": {
          "id": "7ee62eaf-eaf2-41c4-a1b0-f42a5f59a61e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a8bc1338-d195-405e-9b7e-fee2a4bc3dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f09c239-90ea-43a6-8b49-685dfaed017c",
        "cursor": {
          "ref": "c1b66de3-e141-4b7e-a85f-58ebae765454",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "225fc794-3365-46c8-aabf-23b318db15d9"
        },
        "item": {
          "id": "4f09c239-90ea-43a6-8b49-685dfaed017c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a1f48de8-7cbb-4af0-ad3f-82e809b829e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaed13e4-252e-48d1-b15a-95acf865f334",
        "cursor": {
          "ref": "2d6476d2-7346-43c6-8d8a-00d3d34e7e85",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3f2b2d25-8744-45ad-8931-ed273785a14c"
        },
        "item": {
          "id": "aaed13e4-252e-48d1-b15a-95acf865f334",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d27a567-cea9-44eb-997f-0bfa27062964",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276adc53-d18b-46ac-87f1-8d7866645fe9",
        "cursor": {
          "ref": "bd9f7fbc-9938-494b-9a23-da4e9a5b198b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "77c53347-c653-4051-a097-a94edc4faf23"
        },
        "item": {
          "id": "276adc53-d18b-46ac-87f1-8d7866645fe9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5a1a966e-15e4-4ab5-8603-51d655c698e0",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4f6eee-c6b3-46b0-bfac-8a9a7a9602ca",
        "cursor": {
          "ref": "3ffbe573-9bbd-47a3-9f92-d14bc5e244d0",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f8c13138-9b68-4e39-a745-68736a9aea33"
        },
        "item": {
          "id": "5f4f6eee-c6b3-46b0-bfac-8a9a7a9602ca",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "46a0b11c-07cf-4dcd-a255-b43c2aced24a",
          "status": "Created",
          "code": 201,
          "responseTime": 294,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad96375e-5d34-4ccc-ae50-9134381679d6",
        "cursor": {
          "ref": "7f346862-4f65-4ddc-9689-35c478a6ca36",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2b523ffc-e495-4718-b437-0d6f1dfee47b"
        },
        "item": {
          "id": "ad96375e-5d34-4ccc-ae50-9134381679d6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "59a56e65-a10b-4cfe-8ac3-259bd7607613",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20677f1-23df-4169-aa64-1d56cca72458",
        "cursor": {
          "ref": "b5532923-7f02-4208-860b-245272a28ede",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "30c70c2a-f381-4b0b-a0a9-3a47af971312"
        },
        "item": {
          "id": "c20677f1-23df-4169-aa64-1d56cca72458",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3ed37802-cd8e-441e-9883-850cc7776e13",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2638d32a-1b83-42b9-a9ec-e3b50a8ba0fc",
        "cursor": {
          "ref": "f4daadca-58af-4ba5-9e2d-db2d8759f1ea",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "20044df8-12a8-48c8-90d0-06c929a49d7b"
        },
        "item": {
          "id": "2638d32a-1b83-42b9-a9ec-e3b50a8ba0fc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ff19e940-0c70-4d22-8ba6-9cfef6d34850",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dd1777-b088-4ba4-a9b0-508ff3cc5d5e",
        "cursor": {
          "ref": "ff23ed09-e6e1-472d-8f45-9a68a297bbcd",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4505491f-8f83-49b9-9ac4-e8da6693cabf"
        },
        "item": {
          "id": "91dd1777-b088-4ba4-a9b0-508ff3cc5d5e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d5a416c7-c6d6-4bb7-9bcd-bd1886cbf625",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d208540d-5868-4fc5-8cbd-b8d8ce9bbdaa",
        "cursor": {
          "ref": "570b7e6d-e21e-4a05-8e3b-af012c056e1e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cb3734d4-8aaa-49e2-904f-0239b03be5ea"
        },
        "item": {
          "id": "d208540d-5868-4fc5-8cbd-b8d8ce9bbdaa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "099764b1-c75e-4348-bd2f-fd3a690c83f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6629fe-cd97-460f-93f5-fee689c37742",
        "cursor": {
          "ref": "28085d20-03b9-497b-9312-378bdfcc05c8",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0d7403b1-f189-4595-bc35-a6355e9d3d4a"
        },
        "item": {
          "id": "4b6629fe-cd97-460f-93f5-fee689c37742",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e4a435b6-2ea6-4e10-892c-af5cb8948271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14f2396-596d-4289-8614-b2d660a94be2",
        "cursor": {
          "ref": "fbee82ec-9b04-4d4b-8297-ee601b34322f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "41a4b509-b939-43ac-9399-a29f56995324"
        },
        "item": {
          "id": "b14f2396-596d-4289-8614-b2d660a94be2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0e111ab3-c956-4c99-820c-b627579aad9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828201f0-5d13-408a-b49f-ca4cb077779a",
        "cursor": {
          "ref": "120864c8-65e9-4b5d-bb73-75f1041f601d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "736e5ca4-15ac-48f4-80a1-3311ed46ec83"
        },
        "item": {
          "id": "828201f0-5d13-408a-b49f-ca4cb077779a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "14055044-3ba1-4880-a2ee-54c08d8567a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff5c3a6-23d9-4936-a0e9-6ee491346ba1",
        "cursor": {
          "ref": "0afd5f7f-ec99-4d5d-8458-1b05ccd56aa0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "56f555c4-33de-4503-9b64-efbcc135b021"
        },
        "item": {
          "id": "5ff5c3a6-23d9-4936-a0e9-6ee491346ba1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ce989bdb-05d8-4c5e-b29b-b08c0712e7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecf1e5f-aa9a-4b2a-8f8e-4d5fa5072f90",
        "cursor": {
          "ref": "56027097-850a-4617-b4e1-02ad467e5524",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "851e1a7b-dbe8-4a91-86f2-0c0916939a71"
        },
        "item": {
          "id": "0ecf1e5f-aa9a-4b2a-8f8e-4d5fa5072f90",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a53c4360-e2f5-4c4c-836d-c57b1fc0bf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c783db-e399-44a9-8f9d-16e70c3d6d66",
        "cursor": {
          "ref": "bc061e78-1e9a-45f9-a71d-5f9e32dba138",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "220a9c95-a366-4dec-94fb-d879ec516598"
        },
        "item": {
          "id": "34c783db-e399-44a9-8f9d-16e70c3d6d66",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c918b211-10cc-405e-82b7-0dfd1bebe72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38e806a-7237-4d67-be9f-c4f649cbdd2e",
        "cursor": {
          "ref": "7d50ffc8-cd37-42d3-9412-db39da6a6ffc",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f3cf4dc6-8fea-421f-a4ce-76f547225cae"
        },
        "item": {
          "id": "f38e806a-7237-4d67-be9f-c4f649cbdd2e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "56cc345e-381c-4a5c-8ca3-e2318e2bc263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1bcb67-70e7-45df-a5af-15fe5a3b43d5",
        "cursor": {
          "ref": "c1ba7e16-e8d2-4837-afa7-b9cb029f104e",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "40ecefa7-9a67-4dfb-abec-94ba971e2ee5"
        },
        "item": {
          "id": "fc1bcb67-70e7-45df-a5af-15fe5a3b43d5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b9e3cbc5-dd86-499d-bf36-99263a9a66ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537748d0-ad89-4a65-9ac4-0eb9a49dd4d5",
        "cursor": {
          "ref": "44c7a2d8-bedc-471a-b8be-6b0ceeefa080",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1204a16b-f311-4695-9c41-e549dc754987"
        },
        "item": {
          "id": "537748d0-ad89-4a65-9ac4-0eb9a49dd4d5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "44e55f27-0b14-4cac-aeae-3f53bf681025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e93d78-50bd-4a5f-b6ba-b180f71d8a42",
        "cursor": {
          "ref": "2877fbe4-49ce-4945-a91d-8a768e83e735",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e96b733c-0149-44e7-b813-9ee8db77e7f2"
        },
        "item": {
          "id": "85e93d78-50bd-4a5f-b6ba-b180f71d8a42",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eab91c64-805f-442d-93db-5c6452b4e6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee85407-6a69-44ea-a187-2f83cf9f73d6",
        "cursor": {
          "ref": "fe7a398e-cba7-4882-bcf9-28f956cdb7d2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9a32f1a1-0d5b-477d-bd1f-955cc92f6f26"
        },
        "item": {
          "id": "dee85407-6a69-44ea-a187-2f83cf9f73d6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dba4b3d2-1671-4913-8483-d498f375d323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808c7efc-68e6-466a-8611-35f8545b501c",
        "cursor": {
          "ref": "810b7f93-ba43-4129-9c49-7a689a6cd1ca",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e6346eee-6dcb-4f79-870b-c37ef68f30e4"
        },
        "item": {
          "id": "808c7efc-68e6-466a-8611-35f8545b501c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "12ce61db-7b6d-4103-b4f2-6691718efbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5908900-c1b0-4f9a-a07b-b5416dd771a3",
        "cursor": {
          "ref": "3c31436f-e83e-4f92-9f5b-9254f1fdb10a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bf86cae5-1775-4d16-b880-8b2a981536fd"
        },
        "item": {
          "id": "d5908900-c1b0-4f9a-a07b-b5416dd771a3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f163c4d2-2591-42c7-ab1e-1d02deadae90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639fb385-8c66-42ff-87ea-e6592be248cc",
        "cursor": {
          "ref": "25118907-a43f-4e44-a82c-a4b3326a52e4",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "33fcd7be-ac6f-4821-9e3d-2f9340021247"
        },
        "item": {
          "id": "639fb385-8c66-42ff-87ea-e6592be248cc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "17265f3b-7d2b-4279-abfa-6313f44ce3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34789a2-e876-4218-8643-e563db7edc7d",
        "cursor": {
          "ref": "0e4a3edb-123b-4f2f-94f6-e7698a876be9",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "090c7d1f-be09-457e-bc54-5025336d1bf3"
        },
        "item": {
          "id": "b34789a2-e876-4218-8643-e563db7edc7d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3f7b0445-ddc4-488d-9e5f-fdc27ab1b4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9652bb3-08ff-4aa3-8ee4-b7061eff4499",
        "cursor": {
          "ref": "170a7ca1-ba8b-411d-b521-6ff0b22884f6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7cff0e98-4412-417c-b547-52ece091ec81"
        },
        "item": {
          "id": "a9652bb3-08ff-4aa3-8ee4-b7061eff4499",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "51d99850-e0b1-4b33-9595-0a636e0b9fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540cb163-7821-40f9-9397-6d99ee02611d",
        "cursor": {
          "ref": "19cb78b0-f52b-48e6-ad26-b822bb099f6d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2c0a29ac-7d81-4879-a0f4-d10c928be4f1"
        },
        "item": {
          "id": "540cb163-7821-40f9-9397-6d99ee02611d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5bc3a9f8-b39e-4b42-b5e8-8cdd180bb471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c5cddb-eb4d-4183-8f2a-6718facbf2d4",
        "cursor": {
          "ref": "7e31d77d-388d-4447-97b1-cfbec62c6f28",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8265fdda-ab28-4c6a-9c81-a6ae6ce9142e"
        },
        "item": {
          "id": "c9c5cddb-eb4d-4183-8f2a-6718facbf2d4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "83dde8b8-a08e-4953-b327-c96dbaa99244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718cd2e7-72ac-4944-8ccc-152f89605643",
        "cursor": {
          "ref": "f240914e-de0c-4412-9b72-2650f414dbdd",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8f9e4286-c318-445d-9579-f15c14aa3108"
        },
        "item": {
          "id": "718cd2e7-72ac-4944-8ccc-152f89605643",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b241e067-7cdb-40ba-9932-0fb0fa89da9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266e6110-a346-4fbc-9137-15d23b433aa3",
        "cursor": {
          "ref": "ff1aa161-959f-489f-9e71-1b2b6f2726a8",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "215aed6c-e55a-4bda-80de-aaf2009ac7b0"
        },
        "item": {
          "id": "266e6110-a346-4fbc-9137-15d23b433aa3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8892a3d0-ab25-4855-a0e4-11ff2182dc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56735577-9691-4759-8e81-d9ff98a50db2",
        "cursor": {
          "ref": "09f8e44e-1aa1-46b0-bf25-69de36ef0569",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c7d7e5b0-1b26-431e-ae29-90a022c45d73"
        },
        "item": {
          "id": "56735577-9691-4759-8e81-d9ff98a50db2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a3bdfe89-1320-4f15-84e2-22ee5034ded1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a44dd6-5ed1-44d6-9048-8ca6123f84ec",
        "cursor": {
          "ref": "5af43b3d-37a3-47bf-862b-65723c7b49e9",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "27957df9-66ce-4d8d-b28d-b6904c5fd7d0"
        },
        "item": {
          "id": "79a44dd6-5ed1-44d6-9048-8ca6123f84ec",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "69aa3e6b-191d-4374-a0ae-dfedb2faeff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7f3c21-af68-4c16-a920-797a07198c26",
        "cursor": {
          "ref": "197c3892-f54e-40e0-87c3-e0f3269c577e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dac2f1be-42fe-4f91-8de7-a76708402e44"
        },
        "item": {
          "id": "3f7f3c21-af68-4c16-a920-797a07198c26",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6d5283d2-79fc-4662-9f98-8f0467fd87e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764bba75-8ba3-426f-a6fa-9936a7e69b1f",
        "cursor": {
          "ref": "5516b14e-fd8d-4634-9125-da238b29e398",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "300d1222-59f7-46be-b7d1-3e2b6b98ecf2"
        },
        "item": {
          "id": "764bba75-8ba3-426f-a6fa-9936a7e69b1f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7199fac7-f364-4945-98cf-afe4bb96976d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584744a5-6e1e-4fd2-bdfe-dba93935e2d0",
        "cursor": {
          "ref": "b8e5aba6-9551-4b29-8177-1fa8feb54b54",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c07dcc6a-08f0-4cd2-95b9-0ff3163f0382"
        },
        "item": {
          "id": "584744a5-6e1e-4fd2-bdfe-dba93935e2d0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ba153e43-4ed8-479c-b1d8-575d52265aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15db9959-9594-4a47-a0df-3f79c2d8db96",
        "cursor": {
          "ref": "4f4cf3a0-61b4-487a-8fc1-902113844766",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "121f2117-0f47-4d0b-b8f4-a72e4fa25f32"
        },
        "item": {
          "id": "15db9959-9594-4a47-a0df-3f79c2d8db96",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b1a249c4-2ce4-4e41-8cb9-e33ad956dc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6912f046-c9ec-4400-ab37-bed69982d1a8",
        "cursor": {
          "ref": "1cc1a019-43b1-4e37-916a-0b7da2d1e90c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "043b43a3-c547-46fe-94e0-5f176edb4fef"
        },
        "item": {
          "id": "6912f046-c9ec-4400-ab37-bed69982d1a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eaee54e9-558e-45c9-a96f-db37eb0d6fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a79320b-62a3-4453-b2ee-299ab70d3629",
        "cursor": {
          "ref": "03d18362-14df-4ccc-9f7b-e944f8611850",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "99f355e1-d219-4c79-a5f2-5efe92c5e46b"
        },
        "item": {
          "id": "7a79320b-62a3-4453-b2ee-299ab70d3629",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ec147520-363a-4d0d-9c29-77d167a3785f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75d8fb5-a051-4122-b308-7f97491111ea",
        "cursor": {
          "ref": "12edff62-1a30-4743-ab83-9fe2bfb5014d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "568d7700-0488-4686-bdf2-a8e11d02e920"
        },
        "item": {
          "id": "c75d8fb5-a051-4122-b308-7f97491111ea",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f957bc9b-448f-4728-a1d9-69be8530b468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c16aa2-fc96-47ca-9063-82df31f3abc1",
        "cursor": {
          "ref": "2f66cef7-e1b8-47b2-946b-500e2251b4b0",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2eb13e76-b734-467b-b9a9-bb99a0aeebf6"
        },
        "item": {
          "id": "d7c16aa2-fc96-47ca-9063-82df31f3abc1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d266cf7-d17a-4953-86d4-62c67249f571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bf33e9-1f40-436d-9305-c7111d028c5b",
        "cursor": {
          "ref": "ef0bd7a4-691e-4974-a8d7-99bf5fb72f16",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2170b815-622c-425e-9e6f-35a39e8a7b93"
        },
        "item": {
          "id": "50bf33e9-1f40-436d-9305-c7111d028c5b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b62685f8-8573-4325-bf27-544f4cb3cad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf604d76-8a85-47f1-9192-608402cb8584",
        "cursor": {
          "ref": "3a48a8fb-9f60-48b2-a7bd-8248515fb463",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4b238b6f-b240-445a-96db-721e806f9b52"
        },
        "item": {
          "id": "cf604d76-8a85-47f1-9192-608402cb8584",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fe044144-e1e2-4f35-892f-d959d1e75fe6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33a71c8-c110-43de-ab90-cf9773af488a",
        "cursor": {
          "ref": "a882506b-637a-4698-86ed-60870a7e696c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6fc68f80-7ba2-454e-99be-67e3d36a429f"
        },
        "item": {
          "id": "c33a71c8-c110-43de-ab90-cf9773af488a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "204f50e7-cd84-4a64-b86b-b822190ff8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84eb28ba-6aa1-4b79-b859-acd9a01881d5",
        "cursor": {
          "ref": "0d7647f5-2d76-4d5e-a7e4-7e15af698d59",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "28719a63-12e7-42ff-b99f-9542cdd37f88"
        },
        "item": {
          "id": "84eb28ba-6aa1-4b79-b859-acd9a01881d5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "399394fb-cf99-4f48-97bc-c402fd9eafc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fce63e0-2e8b-439f-a6b9-987ca88c4f87",
        "cursor": {
          "ref": "d83c7c65-c734-4574-82da-69048733b196",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a5915a94-7f3e-445f-9016-29926df26259"
        },
        "item": {
          "id": "0fce63e0-2e8b-439f-a6b9-987ca88c4f87",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "96f3b95d-3b87-4a2f-b987-8c6707b585e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8aa2d34-e843-4c06-9285-e4ff54748dbe",
        "cursor": {
          "ref": "375dc95e-d76a-46c8-845e-8d2c4d6b96f0",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "50dd5f7f-a0bf-4d87-b330-e38a4745881a"
        },
        "item": {
          "id": "a8aa2d34-e843-4c06-9285-e4ff54748dbe",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "71a4aa69-b6e4-4bfc-924d-b7ef8022120c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53d76ee-b3da-40d3-8768-18e842ff3dff",
        "cursor": {
          "ref": "1a41644b-0138-4652-b536-52eb04efc6e3",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9afec055-247b-4349-9fa7-a2c5a9d211e3"
        },
        "item": {
          "id": "f53d76ee-b3da-40d3-8768-18e842ff3dff",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "51ccc199-3887-44a1-a620-fc2acd6dd403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7addc8-bf74-4efb-a737-66fc0c0ca108",
        "cursor": {
          "ref": "d03bb96d-2e8f-47e3-83db-7cbfa9faeb8a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ca3ccf7b-fcd5-4886-bfaa-888ab13b25a5"
        },
        "item": {
          "id": "5b7addc8-bf74-4efb-a737-66fc0c0ca108",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d6601877-eca8-4b9b-9408-fed5f18e5a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce4a63b-d912-4208-b1c0-4319c4711f26",
        "cursor": {
          "ref": "23352bb2-a48c-4cf8-adc0-f968e9fa69fe",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0349cd5d-5e19-4f90-9b60-d2e168d03eba"
        },
        "item": {
          "id": "3ce4a63b-d912-4208-b1c0-4319c4711f26",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8c7ff952-2114-4a4e-a61e-8cac49700cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565db0e3-e9a2-4553-989d-62e6e59a7cb0",
        "cursor": {
          "ref": "0bad60a1-72ae-438e-b4cc-3a7f98393f6c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "00dbcd67-67d2-48f4-9613-0853a8c79034"
        },
        "item": {
          "id": "565db0e3-e9a2-4553-989d-62e6e59a7cb0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9964f2d5-02f7-4133-8f28-016e966b4905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fa6e0d-b084-4441-bc9e-adb751bf53f0",
        "cursor": {
          "ref": "cfe1bb6a-6d5b-42d0-b7dd-c97e21da100e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3d8386c6-6384-4bf0-9e50-de9cb7ad09fe"
        },
        "item": {
          "id": "42fa6e0d-b084-4441-bc9e-adb751bf53f0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fbe5ce07-9dce-40b3-9752-cdf9f41470e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebddd1b-1083-4b1f-94ca-46942a86c24b",
        "cursor": {
          "ref": "57430646-751a-44ab-82ed-ab8b6d1c1f90",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0fb2de87-6267-46b6-8008-ea46cc9901e8"
        },
        "item": {
          "id": "8ebddd1b-1083-4b1f-94ca-46942a86c24b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d64f0b19-ec5e-4cd8-9cfb-9589d1feb350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75820826-674e-461d-b9ca-085c1f28c8b9",
        "cursor": {
          "ref": "de132fdd-6654-4274-8faf-2f126f3de2f6",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d2499a9a-728b-484f-b1df-58eb943c4b48"
        },
        "item": {
          "id": "75820826-674e-461d-b9ca-085c1f28c8b9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "08f4d5f5-aa43-47dc-8683-8c68373aecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee28b5f2-db1b-4e58-90e9-477f21167762",
        "cursor": {
          "ref": "4bfed253-9cf0-4f8d-aca3-440033753c9d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "993641b1-7dfb-4e4f-9c46-acaaaeb2978c"
        },
        "item": {
          "id": "ee28b5f2-db1b-4e58-90e9-477f21167762",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "72e77f5c-3ae5-4c14-8a1d-d90e30d7c3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf5b351-33a6-4315-bab1-13b1f0d810eb",
        "cursor": {
          "ref": "560f1cd9-6d56-4beb-a6da-cc9d085756c5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d010678c-05f8-41d4-8aa7-e9a8feac2183"
        },
        "item": {
          "id": "adf5b351-33a6-4315-bab1-13b1f0d810eb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c2878aa3-4515-4007-b6f5-3f0db7f7f9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623874a3-80af-449a-bd89-57e535bce6cc",
        "cursor": {
          "ref": "1999f697-ee4d-4ac8-b68d-079a10a73a98",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "857b3170-7797-4f96-8166-450048ceb7b9"
        },
        "item": {
          "id": "623874a3-80af-449a-bd89-57e535bce6cc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "867fa750-75ea-4fe1-8c06-38b90fad2a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcb9795-5486-49b0-957e-da4111f0fc3c",
        "cursor": {
          "ref": "d6cfaf5f-1cda-4132-84b2-20f931732d51",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f42dce94-77b1-4a64-a0ec-557d69ee998e"
        },
        "item": {
          "id": "1fcb9795-5486-49b0-957e-da4111f0fc3c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "68a85c0d-903a-4731-9ca1-23682958adf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514c264e-d1c0-4eb9-8eaa-d9bac6af60f1",
        "cursor": {
          "ref": "0bb94bbd-1e8e-4bfa-a7da-a683ab12532b",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a74c05a2-3285-4434-a54f-469d9e94b95c"
        },
        "item": {
          "id": "514c264e-d1c0-4eb9-8eaa-d9bac6af60f1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e83640c2-e0f2-4010-8712-8599829c2629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5588d92f-436b-4036-b511-b947f358c0c5",
        "cursor": {
          "ref": "90c0eda8-485e-437c-953c-c52ffe415619",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5c06ba9e-208a-454c-940a-045f9c2d91b8"
        },
        "item": {
          "id": "5588d92f-436b-4036-b511-b947f358c0c5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "603049c3-4065-4fb9-ad2b-a4381b1d378a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5cb6d9-4ff3-4132-a432-2ebb9a5f9e74",
        "cursor": {
          "ref": "53ce8897-81d3-43e4-a4c2-c59ef9f220fa",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "06d4d773-8c9d-4afe-9ce4-2d2aedddf10e"
        },
        "item": {
          "id": "ca5cb6d9-4ff3-4132-a432-2ebb9a5f9e74",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "633bfb5a-625c-451d-b13d-35604f527430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83deaab8-2e1a-4905-8dc2-14d61a0e39c1",
        "cursor": {
          "ref": "eb839bb8-50eb-41c0-8b3a-e8b87aa74619",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d45dd859-17dc-4e08-a139-b980c0fbf77c"
        },
        "item": {
          "id": "83deaab8-2e1a-4905-8dc2-14d61a0e39c1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aa596959-3dc0-4ee5-9724-f79d23d669bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e0a723-25e5-4c20-aeb7-9b82431f112a",
        "cursor": {
          "ref": "52ed2264-3eb2-4df7-86e6-a50ef4308a23",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9876219a-ff9c-4540-9800-fa8a86f6f94e"
        },
        "item": {
          "id": "10e0a723-25e5-4c20-aeb7-9b82431f112a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0618477a-c799-4132-9b32-5be0ff4164fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6783e2-2930-46f2-a7ae-5fec0730e304",
        "cursor": {
          "ref": "e80886a5-610e-4bf0-a548-9630ed4b6982",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1e2ef2c3-f35e-493f-82a4-5a4d7179ac93"
        },
        "item": {
          "id": "3d6783e2-2930-46f2-a7ae-5fec0730e304",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "62ba6bcc-eba1-4ee2-9049-e117fc8fc946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6677928-3234-4a03-86f8-07b6781b5976",
        "cursor": {
          "ref": "70b6ce02-f736-41ff-a708-5d6cc75ce77b",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6b62db28-4c0a-4a5b-a5a2-3f007aa66239"
        },
        "item": {
          "id": "e6677928-3234-4a03-86f8-07b6781b5976",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "00eb5dc6-49de-4652-9bfd-6ae19445264f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a707e17-9214-4286-8cb3-399989705897",
        "cursor": {
          "ref": "6ac9b636-3317-4add-8a63-3e526fa821c7",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9a732df4-bb5b-47e6-9f8b-c5e3bc3c451b"
        },
        "item": {
          "id": "6a707e17-9214-4286-8cb3-399989705897",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6fb0c4ce-026a-40bd-934b-d975d8ce5f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3a6892-f1a8-4512-ae8d-dbc1f2b41e01",
        "cursor": {
          "ref": "b8071fd3-bfd2-4976-8c76-8aa67595d5be",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d494be62-1056-4fcc-aa26-5a0bf2855518"
        },
        "item": {
          "id": "bc3a6892-f1a8-4512-ae8d-dbc1f2b41e01",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5fb09ed2-7dc9-4a9d-9386-d92847dde67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5c5a8b-ead6-4ee2-b60a-f9c9e32825f6",
        "cursor": {
          "ref": "e7889498-73ba-4b1c-8eea-467736488d45",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "846a1288-d934-41fd-a039-71aa0fa731db"
        },
        "item": {
          "id": "1f5c5a8b-ead6-4ee2-b60a-f9c9e32825f6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6340cb89-722f-4a38-80dd-9a68c50b085b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f716bce-fe51-4b3d-863c-df26a5d05536",
        "cursor": {
          "ref": "99892c40-3c9d-4c15-85a4-e3f17c203d56",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aadbaf8b-1b18-451c-8e5f-d5053758adb7"
        },
        "item": {
          "id": "8f716bce-fe51-4b3d-863c-df26a5d05536",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "af9dcf15-d899-4739-91fa-14687d5737ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1264d197-5c11-495e-94a1-f15dfa11251d",
        "cursor": {
          "ref": "e31ac23c-dd1e-49f7-b953-0edfd4c51841",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f57f0efe-d0a4-41ce-8896-08fcef752c92"
        },
        "item": {
          "id": "1264d197-5c11-495e-94a1-f15dfa11251d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1eee569f-8070-434c-b871-72fcd9f71d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3de6b14-f76d-4c4f-85cf-1ff2a1d1770d",
        "cursor": {
          "ref": "433754f9-893e-4b33-919d-ffa14923b5e3",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "81d92ead-ef3a-4e28-a71a-90d397e9eb11"
        },
        "item": {
          "id": "d3de6b14-f76d-4c4f-85cf-1ff2a1d1770d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "10b267c7-5b76-4b54-8eb0-521b61b7f1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcc17e2-257e-4947-a5ef-f859ce9f91ed",
        "cursor": {
          "ref": "006da690-0f14-460a-a973-4f58f8f42a2f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dd381e6d-ff13-41e5-8c0b-e5ed6d83bd0e"
        },
        "item": {
          "id": "9bcc17e2-257e-4947-a5ef-f859ce9f91ed",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f2489089-20fc-47a9-8bd1-8375ab60b684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e95599c-0d1a-4207-a98f-c12f85b79df9",
        "cursor": {
          "ref": "2f1fe52a-8504-424b-b733-b0e719318bd0",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1e9d80e4-130b-460e-857a-6629ed409594"
        },
        "item": {
          "id": "3e95599c-0d1a-4207-a98f-c12f85b79df9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "522961df-d857-4aea-aa10-deab71bd8902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11096d48-990a-451f-863c-06c3b3b020f3",
        "cursor": {
          "ref": "a7d251f4-a296-417a-9094-be8da56f59e8",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a5aba9d3-4cb5-4806-8c09-056a77ac27b1"
        },
        "item": {
          "id": "11096d48-990a-451f-863c-06c3b3b020f3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3ba2a38d-4b5e-416e-b923-fd4c4f689450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11296ba7-1ca5-4dab-b38a-1c2936d64655",
        "cursor": {
          "ref": "df8fedba-b3b6-4d6f-a555-0e430346df39",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a3cff6f1-21b0-4e2a-b759-1f06bd060b93"
        },
        "item": {
          "id": "11296ba7-1ca5-4dab-b38a-1c2936d64655",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8acfd4dd-364e-4cf6-ac11-f9ff885b7ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d25a66-9162-4a16-849d-d49573a8fca1",
        "cursor": {
          "ref": "41704ffe-0d61-4b1e-9ef5-6f540bf68947",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f857bfe-aedc-4070-ab8b-933f19bb9c38"
        },
        "item": {
          "id": "e3d25a66-9162-4a16-849d-d49573a8fca1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b5a9b1b2-5068-44aa-b5fa-5a4060844c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69918513-e67d-4221-aff4-054c6eb5ec5e",
        "cursor": {
          "ref": "9504e1f3-dc69-4f05-9426-2a744dea2853",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6704e2a1-0cee-41fd-b165-46c8fbf1a4b2"
        },
        "item": {
          "id": "69918513-e67d-4221-aff4-054c6eb5ec5e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "62ea8005-936d-4eb9-a228-4adcf4a4b470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e29edff-4253-4bc6-a2a9-91796e18d741",
        "cursor": {
          "ref": "9c110a61-4c18-43e0-adde-812b99fa14e4",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7103c7be-601a-4781-9558-0ec2429ee32a"
        },
        "item": {
          "id": "7e29edff-4253-4bc6-a2a9-91796e18d741",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1e5ef13f-e4f6-499c-a67a-3d15e6a9fa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0b175f-8c3d-4b79-8297-2de8ff6420ad",
        "cursor": {
          "ref": "92b96bad-643c-4f1e-a80a-8623a9090da5",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "45ce05f2-d816-4f36-b95a-c3cdd701fcd1"
        },
        "item": {
          "id": "ad0b175f-8c3d-4b79-8297-2de8ff6420ad",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "11bf275a-5c95-48b7-95e4-09b2fb16ffee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04849a6d-5aa4-4a24-8c3a-6ea8dd56e384",
        "cursor": {
          "ref": "5beb1bb0-39c7-4aac-92c2-9b25fc84e301",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "54136b39-081b-4dc1-a709-923b58ebd11b"
        },
        "item": {
          "id": "04849a6d-5aa4-4a24-8c3a-6ea8dd56e384",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "58eae303-461f-435d-a556-a7a3cca9d450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d6a2e9-1857-48f7-873a-d13c82938abd",
        "cursor": {
          "ref": "3247200e-e521-4c70-a0e6-2cbb19981401",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bb5e8f68-c87d-4602-9076-36778d67344e"
        },
        "item": {
          "id": "a8d6a2e9-1857-48f7-873a-d13c82938abd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "146f9842-b0fd-4a25-bd3c-8ab4433cc431",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0506fd-6b0a-4390-aabc-44c683f1977d",
        "cursor": {
          "ref": "745c6e32-5dd8-4a22-89b7-228a06b57f0a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7bdea862-e456-44b2-8ba5-fa11312a08cc"
        },
        "item": {
          "id": "db0506fd-6b0a-4390-aabc-44c683f1977d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "31e73024-2958-4a8e-ae5e-5e562a17d546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00456e9-b78e-44f8-990d-279350ec8550",
        "cursor": {
          "ref": "0ef7efca-f0c2-4129-8a49-4fb49f3ea2b6",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "380a75c8-c8d9-4554-a073-3b1fcf4b2ea4"
        },
        "item": {
          "id": "e00456e9-b78e-44f8-990d-279350ec8550",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9e517503-36e5-491e-b97f-b8d7308abdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4586da-6efc-492c-91d4-3997774f0dab",
        "cursor": {
          "ref": "02b762a2-1da2-4842-b1b0-91942176ba11",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "72ccc625-88a9-45ba-b908-f9c42225acac"
        },
        "item": {
          "id": "5d4586da-6efc-492c-91d4-3997774f0dab",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ea65c7fc-7c8c-4d9a-9374-8c44296e4c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6b3a21-341d-4165-8b78-4711683f1849",
        "cursor": {
          "ref": "7b83437f-e432-4d90-a843-843a77d6dfbc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f2de7137-3bcc-4af9-97c4-fa58d46cae9e"
        },
        "item": {
          "id": "da6b3a21-341d-4165-8b78-4711683f1849",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0cf9a72c-34d0-476c-bee1-1319d075e457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fedd48-1477-46d2-b522-204c57eec95a",
        "cursor": {
          "ref": "a09cf161-dbba-47c4-a53a-f290170d90e6",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c5e8cf1a-116a-4e00-96b1-bb5ebd474a02"
        },
        "item": {
          "id": "b8fedd48-1477-46d2-b522-204c57eec95a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7f047ec9-c5f1-4dd7-bca9-6f168e5a4bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e043f5d0-bad4-4c5a-b6e7-be69d76a5ba8",
        "cursor": {
          "ref": "31471fc3-a8a5-4607-a560-7471bda8c952",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "eda95baa-ee36-43e2-a830-30af36c267f6"
        },
        "item": {
          "id": "e043f5d0-bad4-4c5a-b6e7-be69d76a5ba8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "abe6213d-2b27-486b-ad97-054cfa3d88bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d338b6-e900-4e51-8456-5b12f4ac3be6",
        "cursor": {
          "ref": "9c5080a8-dffc-4841-90d5-84d584b4c567",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7d740d8b-f1a1-47a3-8cc5-89b708c493d1"
        },
        "item": {
          "id": "f8d338b6-e900-4e51-8456-5b12f4ac3be6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4cba29c6-3648-4cae-8626-4ce6e6e96cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2ea386-f6a2-4bb2-9aa3-3d983f2701f5",
        "cursor": {
          "ref": "ead4d815-653e-4535-89a8-d7d49070c922",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "81058267-8f1d-4f88-832c-867cc4f63c17"
        },
        "item": {
          "id": "fd2ea386-f6a2-4bb2-9aa3-3d983f2701f5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a3a1adcd-f826-4c84-8586-c10927b6469c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368017db-c3b7-4dfa-aea5-f91adf310bbd",
        "cursor": {
          "ref": "975d6a8b-c07a-45b8-b660-85f417f7c348",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "afa504b4-b93c-477c-aca3-5a5b2be1990b"
        },
        "item": {
          "id": "368017db-c3b7-4dfa-aea5-f91adf310bbd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3a0b1cf5-3229-4c3d-b928-447a0ac07d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fac2daa-178a-43c8-8bc8-5b3833536fbf",
        "cursor": {
          "ref": "f3d6a358-e14c-4ab5-a987-cc99f61fcc1a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4c22ba46-57c0-4f47-a235-dc3a9f96685e"
        },
        "item": {
          "id": "1fac2daa-178a-43c8-8bc8-5b3833536fbf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3a56e46d-5ad8-482e-bce8-0c7e2d09e1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2020c8d7-3ac9-450f-a428-2ba8a1402216",
        "cursor": {
          "ref": "b99ccff1-9337-4a09-805e-3ea84c29f802",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e36c2243-0c8d-4953-8d13-88dd4260567b"
        },
        "item": {
          "id": "2020c8d7-3ac9-450f-a428-2ba8a1402216",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5148d1e7-22d7-4d08-9080-f8cd5a831f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87e7d62-bd91-4240-902d-16321b39a384",
        "cursor": {
          "ref": "46cbd8e9-ca83-4a2e-adb6-7552b2ed8fcf",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9861e107-9c3f-4b4a-9a22-95e110399858"
        },
        "item": {
          "id": "b87e7d62-bd91-4240-902d-16321b39a384",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a2f0c1cf-618d-4997-a8d0-ae971ad07ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c06728c-c6c0-43be-92c5-b3bd58f5425c",
        "cursor": {
          "ref": "240f0f74-7025-493b-8ee0-96ac07becee7",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6262ef9c-28a6-4e38-9a97-794752d2d22c"
        },
        "item": {
          "id": "4c06728c-c6c0-43be-92c5-b3bd58f5425c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b0966007-b56b-44e9-8c52-1c63b0fd8fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b235d9-0bd1-4df7-9e30-a3eeac3cd0ab",
        "cursor": {
          "ref": "a39edd16-6e09-4e82-a88d-08ed9b130bb2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4b351777-2d9d-4669-a105-ffa2ea4f64ab"
        },
        "item": {
          "id": "81b235d9-0bd1-4df7-9e30-a3eeac3cd0ab",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6016a85c-3853-42cd-9d37-1803943f26f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb87deee-61cc-4b77-99ad-48983ade9caf",
        "cursor": {
          "ref": "29ac209c-d1e8-4c38-8901-4ab6da240bcc",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3cfd4c1b-860e-49a2-ad37-16cf830e4780"
        },
        "item": {
          "id": "eb87deee-61cc-4b77-99ad-48983ade9caf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a334bd81-c922-4f0b-8587-a63d4d15191b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9879f37-bf88-4d4e-825b-5d46c072980e",
        "cursor": {
          "ref": "ca5e8106-d158-4797-bef1-253747d3001b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8ca91a43-5e7a-4688-b752-3f0af33468fd"
        },
        "item": {
          "id": "c9879f37-bf88-4d4e-825b-5d46c072980e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "15d146cb-1f8e-45a5-91ff-386d9505c07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6b7a2e-2550-4793-962e-a7d0673b7649",
        "cursor": {
          "ref": "574e2b81-2812-4dbe-a6d1-01beb1cd5390",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fd778800-066a-47cf-b8f2-796dd8d28ecc"
        },
        "item": {
          "id": "4f6b7a2e-2550-4793-962e-a7d0673b7649",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d3edf18d-037d-42ad-9c08-61c304ae3180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb54f2f4-d613-467e-9d0e-e84872e99d0a",
        "cursor": {
          "ref": "c1a22036-f7ab-4f5e-b215-f06dcc005a0b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "721e6875-f9f5-458a-b9eb-3ef9d017f2b1"
        },
        "item": {
          "id": "fb54f2f4-d613-467e-9d0e-e84872e99d0a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "63c3b89f-585d-44f4-b852-57e0ef04098e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea3a156-5388-40cc-883f-4dfdebbdd5c6",
        "cursor": {
          "ref": "bb28a35e-f0d4-4610-ba80-df7417eeb672",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eec69eab-7e75-4833-8cb2-0b39d0ea73fa"
        },
        "item": {
          "id": "eea3a156-5388-40cc-883f-4dfdebbdd5c6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "40c3769f-a6f5-4ebb-ac67-d8c3179d0cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0b4472-f714-4c0e-a074-1fc14d49d9f8",
        "cursor": {
          "ref": "f268a4e0-9e82-4681-87dd-c34f9a9404d6",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7e063943-acd8-4b63-8847-a21a3a0789db"
        },
        "item": {
          "id": "0e0b4472-f714-4c0e-a074-1fc14d49d9f8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "41885804-76fa-4595-81e3-e82c6202a895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eee7f65-3c89-413a-9cdf-7fb6e47e9e1c",
        "cursor": {
          "ref": "f7f84c82-74d6-403f-a230-d46d325a5f2e",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3c31ff3f-e66f-46ba-80f0-e1283c8ae76b"
        },
        "item": {
          "id": "5eee7f65-3c89-413a-9cdf-7fb6e47e9e1c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f56dc61c-1f70-4fc2-8e8e-d65fba775329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f4fea1-46a2-40d1-b92c-995e3384d4d0",
        "cursor": {
          "ref": "5ad0693f-557a-46c8-ad97-0303801f90c9",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b4dadf81-5951-4912-9b83-7309b2b036d5"
        },
        "item": {
          "id": "82f4fea1-46a2-40d1-b92c-995e3384d4d0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "05debd40-d794-432c-bdf6-744900f7e528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804de9eb-f38c-40b3-a905-264497ac3e3f",
        "cursor": {
          "ref": "4718a02c-1b5c-4ff0-9060-5d65d7746b33",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bc133be9-e09a-417d-b3da-89c9ef836558"
        },
        "item": {
          "id": "804de9eb-f38c-40b3-a905-264497ac3e3f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "38470970-0fbd-4cdc-b81c-5de6aed54857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021e39d3-3037-4a57-bd9f-254a0252401c",
        "cursor": {
          "ref": "d84eba90-aa5f-4315-a19b-089fc5c56183",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b3115a7c-8fa6-4a31-841d-f3cab0cdaf6e"
        },
        "item": {
          "id": "021e39d3-3037-4a57-bd9f-254a0252401c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3306286c-b9ec-4ce3-8375-7321908fc301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56f51c6-999b-4f26-b074-4a6f2ed9dc4a",
        "cursor": {
          "ref": "0f551199-abc6-41fd-a0a2-fdae9032dc5d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9b467585-03e8-4a32-ad61-494125a2fca2"
        },
        "item": {
          "id": "f56f51c6-999b-4f26-b074-4a6f2ed9dc4a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d8890d4-49c4-4312-b454-616815d14b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc40b4b-f742-49cb-b909-19c1d3dcc8b0",
        "cursor": {
          "ref": "3bb21bde-d6de-4be7-b393-11e19ef8fb2c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "373ec4b3-6988-4a84-aa82-cf2dc58044a4"
        },
        "item": {
          "id": "edc40b4b-f742-49cb-b909-19c1d3dcc8b0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8d45c7ad-1442-48c4-809f-18d94b42523d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee4a74d-a603-4296-83aa-9eea55e56c99",
        "cursor": {
          "ref": "9d183572-e053-4341-8cff-d3e376e71962",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0161ee35-0a1a-4eec-9893-10b884f1bbe3"
        },
        "item": {
          "id": "cee4a74d-a603-4296-83aa-9eea55e56c99",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d885fd73-61f8-4206-b5b8-87d2c399d510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b427035-7b1d-41b9-95ce-d7abfabb120a",
        "cursor": {
          "ref": "8d185d99-882e-435e-b75b-0a1bd0006638",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ec2e0903-755d-4f28-958c-c4acfbcafa70"
        },
        "item": {
          "id": "3b427035-7b1d-41b9-95ce-d7abfabb120a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b896803d-3c85-4ccc-93b1-d47587ac3ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dbd4b2-9e11-40cd-af9c-534762d01f59",
        "cursor": {
          "ref": "bf2a8367-826c-4c88-953e-45f9481c8f21",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4f260217-9028-4d45-a905-9c8d3a076e7d"
        },
        "item": {
          "id": "82dbd4b2-9e11-40cd-af9c-534762d01f59",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "977e5cd2-fc5d-42e4-9bc3-6433038cc81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b299d4-60aa-4f1e-8aef-41267bfa0f18",
        "cursor": {
          "ref": "daef69f0-e5c6-4735-934a-0537f5544e24",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d4d178cd-4d0c-4381-80e6-661264c67ac7"
        },
        "item": {
          "id": "43b299d4-60aa-4f1e-8aef-41267bfa0f18",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "03361bc2-636f-4ee1-9001-88532501a429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af37104-1bdc-4bcb-876d-65466b58d210",
        "cursor": {
          "ref": "4a581668-9d28-4c94-81b8-62a86c5b056c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f3bed935-ae2d-4407-b992-e28aaa382bb9"
        },
        "item": {
          "id": "9af37104-1bdc-4bcb-876d-65466b58d210",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a0093350-1dab-4fe6-959a-48ec161f1cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee13f54-efcc-4a73-8beb-803030c38b33",
        "cursor": {
          "ref": "adf215ca-6ede-4982-b8ed-f875886a33e6",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "16f5e88f-deff-47b7-a3a8-1c0be3238cb6"
        },
        "item": {
          "id": "7ee13f54-efcc-4a73-8beb-803030c38b33",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2d9d33c4-8571-4c01-97c1-45731d5a025f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd49928-a154-46cc-98b4-199317b64ea8",
        "cursor": {
          "ref": "843ca74a-a42a-427d-83cb-eeec44399023",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "24591526-3f54-4094-8e8c-0ff8269a5923"
        },
        "item": {
          "id": "6bd49928-a154-46cc-98b4-199317b64ea8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "59ae2816-15d7-49ec-9a3b-4793b3296157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b37d1f-c64c-4e8d-83fe-11540f75585c",
        "cursor": {
          "ref": "94c129a8-c000-4766-b209-b55ee6137581",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4145e4b2-17dc-4d1c-8a3b-ae259d21626a"
        },
        "item": {
          "id": "f8b37d1f-c64c-4e8d-83fe-11540f75585c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0b5e2fc0-f28a-40f9-85bb-6f0fa87a5d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118ee95b-5f08-421b-97b8-6cba04e21ea6",
        "cursor": {
          "ref": "8942dee0-7ede-4eae-a8f0-c5835f7e7982",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7ca042c9-0fb2-4c36-87d5-27125cb78776"
        },
        "item": {
          "id": "118ee95b-5f08-421b-97b8-6cba04e21ea6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c0fdee2f-c96e-4ad0-9976-117f7e553ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae47eed0-0d5c-4c34-9c4c-8ff0b0d5453c",
        "cursor": {
          "ref": "522ae114-434f-422f-8368-a7507c09d8d7",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9ad32ee0-f53d-48d3-8078-a8e0274a43d5"
        },
        "item": {
          "id": "ae47eed0-0d5c-4c34-9c4c-8ff0b0d5453c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9f2529c5-a83e-4a26-ac42-d7e0fcaa93d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91ea80f-efbd-42d9-a7a5-728ece28f25d",
        "cursor": {
          "ref": "797bb7be-874a-440d-a1fd-1150f6aad171",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "16e299ac-e000-461e-a477-07e16970e17b"
        },
        "item": {
          "id": "a91ea80f-efbd-42d9-a7a5-728ece28f25d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "664cf441-2495-4ad5-b59c-53da3a523802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f89b188-4440-4385-a867-fba76d1d48c5",
        "cursor": {
          "ref": "2e9d7bd1-d421-4ea9-bfbb-0c1c3103ed32",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "94bb978f-183b-4120-9d52-48be63cb8e8f"
        },
        "item": {
          "id": "0f89b188-4440-4385-a867-fba76d1d48c5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5a7f1c75-50a1-4844-8e94-ae1b511eb86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b532d0bb-7e19-4ee4-918d-3853ff1565c0",
        "cursor": {
          "ref": "2721de70-5614-4b7b-a078-9c154d5f622b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7cb25af3-21a5-4b23-9462-7130e95f0c98"
        },
        "item": {
          "id": "b532d0bb-7e19-4ee4-918d-3853ff1565c0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7eeb5075-d099-4c3b-aa7c-7d90d6a7dbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505a3e9d-2107-4d69-859d-ba7a4c0d172f",
        "cursor": {
          "ref": "56e2a670-096d-4547-8430-84508dca6ab2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "976a8828-84e3-42d1-b35b-ea97c1c3a285"
        },
        "item": {
          "id": "505a3e9d-2107-4d69-859d-ba7a4c0d172f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "50a4012c-bedb-445d-95d1-890c874c230d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77887797-de00-4fc7-b8de-8278faf396e8",
        "cursor": {
          "ref": "9512e975-dc49-41c7-a22c-117ba50d2c5d",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "945ed4ed-0d49-4f0d-b5a2-43ebdc6e3652"
        },
        "item": {
          "id": "77887797-de00-4fc7-b8de-8278faf396e8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b8a3aa3b-f80f-4e57-a4f8-03285504e5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45c753e-3ff4-4714-a64d-c9f62340394a",
        "cursor": {
          "ref": "e46ff7ed-30ff-4465-9745-8a56a38bd333",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2893946a-5b98-49b0-ba24-5acb6dc704f2"
        },
        "item": {
          "id": "e45c753e-3ff4-4714-a64d-c9f62340394a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "97381732-c182-4016-9ba1-d75fe3ab59c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865d0e4d-5bfa-4f2b-b169-3b9bc280cdf2",
        "cursor": {
          "ref": "18c01055-1c35-4293-a98b-422ffb173b59",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d97158ce-9b49-4932-9106-256dbbb973c1"
        },
        "item": {
          "id": "865d0e4d-5bfa-4f2b-b169-3b9bc280cdf2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ca394eeb-5f16-4d78-99e5-b9f4851522d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22ad39b-8aef-40f9-a3df-e5a096650eb1",
        "cursor": {
          "ref": "3b0630ff-3995-42d9-864f-7637eac0fb4e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b14f4a25-2a00-43de-9180-f6538024b250"
        },
        "item": {
          "id": "b22ad39b-8aef-40f9-a3df-e5a096650eb1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "55c98eb6-28ea-4ea2-9d61-56e50e54c596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7aaf912-4826-4281-ac55-d227e6e9f68d",
        "cursor": {
          "ref": "d304c6f6-3b50-48bd-b98c-49d24071fd94",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "82867e4b-ace9-434a-b97a-5bb2fcdaa51a"
        },
        "item": {
          "id": "d7aaf912-4826-4281-ac55-d227e6e9f68d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "99770ae9-920e-425f-8923-8bf929889ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fa6eac-360b-43a9-a296-86a125309f5e",
        "cursor": {
          "ref": "4ac01835-01b6-4a2f-9fe2-f92d9923c199",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f5602ce1-c97b-4b29-a85d-d2ea33a82ccb"
        },
        "item": {
          "id": "48fa6eac-360b-43a9-a296-86a125309f5e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4becc5e9-f2d4-4a24-a228-66ca5b40d4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e153291-3e53-4b8f-91d5-8b63fb4a7ae4",
        "cursor": {
          "ref": "703aca04-e922-41e9-8813-74d0e90d8e73",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "40871ef3-dd60-4527-9390-ff89cabdee72"
        },
        "item": {
          "id": "3e153291-3e53-4b8f-91d5-8b63fb4a7ae4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "eef9a87a-221f-4f83-b756-1ca39dfdf93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fba4589-f6bc-4123-92a5-10bfdab4379a",
        "cursor": {
          "ref": "8bddf5f0-f0e9-44be-a186-fa121f6bd56e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3efd1d9b-28e6-4714-a25d-d558a60342e1"
        },
        "item": {
          "id": "8fba4589-f6bc-4123-92a5-10bfdab4379a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f399a59d-1a34-4417-b045-97d8c10db04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f206cf-fb03-455a-b226-d9fec2ae169c",
        "cursor": {
          "ref": "d2fef304-da2c-494a-b626-6bdde855b6c6",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8a6d5f6f-8382-4a9f-89bd-a7407422785d"
        },
        "item": {
          "id": "94f206cf-fb03-455a-b226-d9fec2ae169c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6b09f091-3b37-4cdd-ba40-dc88400f6e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6148ff7c-a3a5-4ad6-9b65-9d184f1acdcb",
        "cursor": {
          "ref": "c1389ba2-075a-467f-bfe9-23e2ab802ee0",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "97004f1e-32ea-49a8-b8f5-5d3f38f160cf"
        },
        "item": {
          "id": "6148ff7c-a3a5-4ad6-9b65-9d184f1acdcb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7682a876-9996-40b8-b316-11a76741fe65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f01525-9eb2-40d5-8242-71246f84bea6",
        "cursor": {
          "ref": "089ad9f3-edf6-49a3-9f89-bba21f35dd31",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "626ef226-97c2-4f0d-a093-7bf87da46b9f"
        },
        "item": {
          "id": "a6f01525-9eb2-40d5-8242-71246f84bea6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e37e1a26-d065-4f40-a476-a39993f764ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b4526f-ac6d-476d-8db1-7278771494ce",
        "cursor": {
          "ref": "4db286eb-20d9-41a8-8a36-49b555c47a13",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1eeff0ca-cc54-4214-9d27-736aa5b5a5a3"
        },
        "item": {
          "id": "a3b4526f-ac6d-476d-8db1-7278771494ce",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6a385326-5b36-4530-8969-ee271635370f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12e03ea-5adc-4115-9d8c-ac502765bd3c",
        "cursor": {
          "ref": "ea344f5f-fa5e-4a0b-9afa-607af36a9dbd",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3091ca9e-93e5-4033-8238-823c058cfc3f"
        },
        "item": {
          "id": "a12e03ea-5adc-4115-9d8c-ac502765bd3c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "428708dd-daa6-4e93-934c-4cc0e5b0a4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2287658b-3477-4601-a3cb-99c94bc225a4",
        "cursor": {
          "ref": "9aed9f68-6c18-4bf9-a9c6-77b8cc6f0446",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ae87fa88-8202-4cea-b168-8d994bd71ea4"
        },
        "item": {
          "id": "2287658b-3477-4601-a3cb-99c94bc225a4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "50b4fa7f-7404-4f6b-8dbf-605ee5cadea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60008d58-5b63-4e96-a4e4-a6e4f2944492",
        "cursor": {
          "ref": "b72b5202-05b5-4f49-98b8-a10a2d07a9ce",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "56a12550-b0c7-401b-b2fa-cd30139a2cda"
        },
        "item": {
          "id": "60008d58-5b63-4e96-a4e4-a6e4f2944492",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "62282b5a-9cf0-4089-a233-7f530bd87c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2adae2-cbbc-43ed-ad33-9f6ee1bf5027",
        "cursor": {
          "ref": "6534de0e-0611-4dc5-91ed-cd71686af1dd",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a7009984-d33d-4e4b-a4c5-b92c58b3e6f9"
        },
        "item": {
          "id": "ee2adae2-cbbc-43ed-ad33-9f6ee1bf5027",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d4dacad6-85a0-4393-a5fa-b3791c7ed1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a04863-15f3-4314-8c7a-fbb35e8e800d",
        "cursor": {
          "ref": "3c6197f2-c5d9-41c6-bcbf-0f88d237a532",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "50b9913a-5e15-4f03-8506-7bbe2ad57469"
        },
        "item": {
          "id": "54a04863-15f3-4314-8c7a-fbb35e8e800d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4dbcb7ac-c94a-4a3e-9709-c62ec27e1af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e58ed31-b32f-4d68-aae8-f86efb73b5f2",
        "cursor": {
          "ref": "c1286a90-0532-45b1-9e01-0c17393e5e07",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eb316a94-b951-47ea-976f-786d2a885d91"
        },
        "item": {
          "id": "5e58ed31-b32f-4d68-aae8-f86efb73b5f2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "18153c46-3c2e-41bd-aeb8-da06c314b1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b4f38d-4a8d-4c66-bf1b-81eb8ca254e5",
        "cursor": {
          "ref": "005bd9e7-956b-4626-994d-d050b194d626",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e0c8c8c3-b5a0-49fe-ba4d-de08bb0582d5"
        },
        "item": {
          "id": "f1b4f38d-4a8d-4c66-bf1b-81eb8ca254e5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ed847d6f-7fd3-4fac-825d-8a3ad4437c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7cefe3-afce-49b0-8d29-e3ac947de257",
        "cursor": {
          "ref": "15ef5e23-8934-4163-a58a-77723c7650a6",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c9443117-fd2b-44fc-bc92-d3421d527f08"
        },
        "item": {
          "id": "5e7cefe3-afce-49b0-8d29-e3ac947de257",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d547c497-99da-4e47-9869-505de447c186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3ebfae-8ae9-4510-8b71-1a65647b8c66",
        "cursor": {
          "ref": "f20f026d-f02c-40a7-b521-78ac1f1b5a50",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "945dbd4f-1f0c-468f-bdd2-f08914c5520c"
        },
        "item": {
          "id": "2c3ebfae-8ae9-4510-8b71-1a65647b8c66",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "af8ad55c-a1a6-4678-889c-03a9d499de93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1417af8f-3c98-4972-90bc-2be8d593ac4f",
        "cursor": {
          "ref": "d1002d9f-0852-4f0e-9938-72b53b75d0bf",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d50505a6-8b33-4630-acf7-b4ae8cda0129"
        },
        "item": {
          "id": "1417af8f-3c98-4972-90bc-2be8d593ac4f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2e755738-6ecc-4e9a-8496-fd5bb0912d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f287618-29c6-4950-b699-cdd53faebd13",
        "cursor": {
          "ref": "19be1d7f-af26-4d16-b57f-3da7ec986e8a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "42d5b686-bfee-439f-b8b8-dd62d089b618"
        },
        "item": {
          "id": "7f287618-29c6-4950-b699-cdd53faebd13",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "848b0c1d-e56d-4b48-86a8-a65fe39968d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4429264c-c6f9-4643-a6eb-1294fe5b723e",
        "cursor": {
          "ref": "e64553de-e73c-4023-a69b-bf6709f15b2a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b4bee5f3-9f62-4608-8044-e9a8d0a4abfa"
        },
        "item": {
          "id": "4429264c-c6f9-4643-a6eb-1294fe5b723e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2b18127a-b35d-460e-9edf-6698800525b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1281f0c2-1ebb-4be6-8393-6f103c4d5eae",
        "cursor": {
          "ref": "07fa0c5a-260c-484f-ab96-21793a5df85a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dff00a60-a3c4-4926-83bf-10ccccd323f2"
        },
        "item": {
          "id": "1281f0c2-1ebb-4be6-8393-6f103c4d5eae",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "424bb14e-7725-4094-b9d6-bb42630db6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab04e33-ad3b-4b52-97c2-19e2864ff3bf",
        "cursor": {
          "ref": "fffc2a65-5680-451b-bc58-ea015ab814e9",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ad25d634-faf7-4bd2-be07-8f981fe9919f"
        },
        "item": {
          "id": "8ab04e33-ad3b-4b52-97c2-19e2864ff3bf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2600ad26-e52e-4025-8d36-4a08b4dfebd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4446c087-e43f-40c5-82ee-016670927b8a",
        "cursor": {
          "ref": "79086cfb-1e7c-4b7b-a490-bcca93ca6498",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "97731dcb-fd02-41d3-8a11-25ec0b415fb0"
        },
        "item": {
          "id": "4446c087-e43f-40c5-82ee-016670927b8a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d672c047-0495-4835-977f-501ea731c00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d1525a-7157-4746-8570-2814b00e5aef",
        "cursor": {
          "ref": "e84a396b-ccaf-4f41-b1f5-36d78852c560",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "abf42725-d5f7-4daf-adf2-f82ed24e0fbb"
        },
        "item": {
          "id": "f5d1525a-7157-4746-8570-2814b00e5aef",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "badd4072-989f-43d3-b002-dd10115d3cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cc5b16-e334-45b8-8d28-17195ca32819",
        "cursor": {
          "ref": "e4164ef7-ade1-4ced-8b58-e64598a5997b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "832ac622-3d53-43fc-9cc1-90b09bc09a3f"
        },
        "item": {
          "id": "b3cc5b16-e334-45b8-8d28-17195ca32819",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7a737d70-6abc-400d-bf78-90ffe1960d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1e54fd-b906-4fa6-b209-2954a28825eb",
        "cursor": {
          "ref": "ea10780b-66cb-4d7b-95ee-7297274c49bc",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1ec14d6e-030a-4c89-add9-364045d3d924"
        },
        "item": {
          "id": "5d1e54fd-b906-4fa6-b209-2954a28825eb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "521e322c-ddcc-459b-b6e6-21fd624d094e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d73cef-b847-434a-b03a-449505a0c1b0",
        "cursor": {
          "ref": "36218388-c664-47bb-91b8-bf0ad839ffbc",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d42f0dd5-3151-4f08-ae87-c81a6eda4912"
        },
        "item": {
          "id": "e7d73cef-b847-434a-b03a-449505a0c1b0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b6ca6b4b-ca97-44b3-bf5c-798a60903a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e415286a-5c9c-488b-9769-4b39d083f616",
        "cursor": {
          "ref": "7458cc97-fb25-4016-8d49-dcfb4c4dcce2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6ca58965-5626-4257-a5d0-575d54297579"
        },
        "item": {
          "id": "e415286a-5c9c-488b-9769-4b39d083f616",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "698fd9d7-e5b4-4519-946b-bb0570a53915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7d0092-83ef-46ed-bd8b-75bd60f2c4d2",
        "cursor": {
          "ref": "5cf20d0a-37c8-46a6-a2c9-32786b6b6711",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cdc5869b-01e2-438f-a7f1-525a89c8b77a"
        },
        "item": {
          "id": "9f7d0092-83ef-46ed-bd8b-75bd60f2c4d2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5c4d569e-cd1c-46be-99be-dae7689d694c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb0b6f7-a4e5-4bb3-94e7-a5b88874489b",
        "cursor": {
          "ref": "01d6223f-e39c-4c6d-ad99-2ee55ebc5a98",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1e78b8e4-6360-4443-9e24-b87f4beaecea"
        },
        "item": {
          "id": "aeb0b6f7-a4e5-4bb3-94e7-a5b88874489b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "04a3b904-ab9e-469e-a784-fa3beaa8e57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddbcdfb-7a48-453f-9ba4-2319ba1cce36",
        "cursor": {
          "ref": "8460415f-7a12-4367-bda8-159a9be809f8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9391fe5d-607d-4945-9a08-47b8e91d4b3e"
        },
        "item": {
          "id": "6ddbcdfb-7a48-453f-9ba4-2319ba1cce36",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bade4531-96c9-4d62-b6b3-ad5a6d251a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26bc221-827c-469b-bacc-010f093d7a99",
        "cursor": {
          "ref": "5fbc018d-5215-425b-8362-ebf6363857c2",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d6c92e01-2062-470c-b257-aca3e42425e7"
        },
        "item": {
          "id": "b26bc221-827c-469b-bacc-010f093d7a99",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "edc5d4cc-163e-428c-acce-76d769e925aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddd17b3-a3ea-4ebc-8262-5e656207da13",
        "cursor": {
          "ref": "54cea5f2-dc91-436b-9fc5-02b4c64663eb",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "46042817-2b07-4f8f-b46e-5c1f9bdef763"
        },
        "item": {
          "id": "0ddd17b3-a3ea-4ebc-8262-5e656207da13",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f7d380b1-4382-40cd-b71e-203af867ffcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e83fd4e-ff4f-494f-a656-9af15135c828",
        "cursor": {
          "ref": "e056f966-618f-40cf-931a-7357d23f0bbd",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f89dec0d-30d7-462d-8492-90e81569537c"
        },
        "item": {
          "id": "0e83fd4e-ff4f-494f-a656-9af15135c828",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4c89170b-b779-488a-9a65-fe1768aa4231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80326cd-61ee-4a24-9b2a-7c5f06317394",
        "cursor": {
          "ref": "2f4a236a-cd14-4dc5-b85d-0f3c20f5d552",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f0fbc453-de99-4d23-8211-145b3b8efcd1"
        },
        "item": {
          "id": "f80326cd-61ee-4a24-9b2a-7c5f06317394",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "79dca0ee-3734-4dcf-8d59-f3ee3127a39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd04c15f-01c3-45e5-9402-69792c0115e4",
        "cursor": {
          "ref": "93388215-2b1b-4bc1-9985-d5c938d433ec",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3a19e696-6491-4c7b-8d53-7f742b9fb5a5"
        },
        "item": {
          "id": "dd04c15f-01c3-45e5-9402-69792c0115e4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d922b522-cf50-4c19-bcfd-720bf6443f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e836274-1ae3-4a82-98b9-7c3624c20bd8",
        "cursor": {
          "ref": "9646a0c8-540f-4954-bf1f-0cd16311d7ba",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ecac477e-9a68-4147-b48d-915b0a3eac78"
        },
        "item": {
          "id": "3e836274-1ae3-4a82-98b9-7c3624c20bd8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ad9d1d8e-0632-4922-ba0f-b1613658ae15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47cf09c-7882-43ca-bcad-f6ee09330de4",
        "cursor": {
          "ref": "c7804e49-4500-45ce-a815-ad2061bd346e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2702f555-e245-4ca6-a84b-eeaf9d5c3b1f"
        },
        "item": {
          "id": "d47cf09c-7882-43ca-bcad-f6ee09330de4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bdc514df-425a-4e60-874b-6f5f09fd5197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20e3815-f322-437d-bb96-0b72de8843d6",
        "cursor": {
          "ref": "801117b8-5489-4b11-b8d8-5ce575858d7c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d1b36fc4-512c-4f0c-b797-5e729bd65369"
        },
        "item": {
          "id": "d20e3815-f322-437d-bb96-0b72de8843d6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "793b8be3-35ef-4a7a-9c80-92d0922d1500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39ad6b6-f3bb-4668-b9c8-c45af5987c44",
        "cursor": {
          "ref": "1b563aae-1e5d-4a16-b9fc-825029af540c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3fb86dbf-aa3c-4722-aaa6-5dc1ba812ba6"
        },
        "item": {
          "id": "b39ad6b6-f3bb-4668-b9c8-c45af5987c44",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d74f7974-ba08-41bd-8048-5ae49f7aaa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25210b4d-1b10-4ab9-9eb8-6f5bdd3272b1",
        "cursor": {
          "ref": "b335188c-b3ea-407e-a950-1575dac1491d",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fa8c7eb8-9913-4dad-bf86-e4f8802b2ada"
        },
        "item": {
          "id": "25210b4d-1b10-4ab9-9eb8-6f5bdd3272b1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "41a7ccf8-b05e-4e4b-b691-eebab65d242e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d658ad54-21a6-412d-a1ea-ff6223b4f64b",
        "cursor": {
          "ref": "995a3fa9-78e1-44d9-b345-77cb6f5b9ca4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5924c8b2-f34e-47e2-b0f9-44f0b72c5d89"
        },
        "item": {
          "id": "d658ad54-21a6-412d-a1ea-ff6223b4f64b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "840c4cc7-471a-49f7-bef1-b8436b5a368f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c50505-40d1-4816-8da4-1e20249f0032",
        "cursor": {
          "ref": "f044b8e0-d23f-431a-9998-30c939319869",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5a768e78-12c4-4142-a932-0d540eb85383"
        },
        "item": {
          "id": "f7c50505-40d1-4816-8da4-1e20249f0032",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8a0e6aa4-f453-40fd-9798-7c6b529754fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56ba750-0d43-46f9-84f1-0fecac01bf64",
        "cursor": {
          "ref": "1e6f4343-89b0-41bb-b1ea-3d9c8c23331c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "937e4cdc-cef7-4faa-bd06-c6fcc4b70862"
        },
        "item": {
          "id": "e56ba750-0d43-46f9-84f1-0fecac01bf64",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "31f682bc-4627-4941-951e-d5a60ad656a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc41d86b-b8a8-4994-8b3b-2ab61d339c8b",
        "cursor": {
          "ref": "13da3b25-56a3-43cc-a8ad-7ae517cc934b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8cc2dddd-82ef-4777-8b5a-25ea493a7710"
        },
        "item": {
          "id": "cc41d86b-b8a8-4994-8b3b-2ab61d339c8b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7dc3dd74-1966-4878-8b9b-6fb2767ee5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7187c0ca-df6a-4ac2-9ae3-6a3f0137f7d4",
        "cursor": {
          "ref": "50a66563-ac04-4c4b-b158-1376626662ea",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fc50012b-fa39-4eb2-8b39-84829625b435"
        },
        "item": {
          "id": "7187c0ca-df6a-4ac2-9ae3-6a3f0137f7d4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "462c76d5-9290-412c-8a82-936e1690b4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52191007-23a8-4d04-a62a-68d0622da6b6",
        "cursor": {
          "ref": "754ff207-9239-4fd0-935a-64544f5cd220",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4330d594-57cf-4afd-a60d-3c4993246db4"
        },
        "item": {
          "id": "52191007-23a8-4d04-a62a-68d0622da6b6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7c3d12ab-f486-4445-a8a8-35cfbd6edb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001efded-35bc-422a-8ee3-11d4f5352f5a",
        "cursor": {
          "ref": "e0c1c88b-b08a-471e-b89f-2212ad641641",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3a283dd2-3f4f-4523-be81-ebba5e449c07"
        },
        "item": {
          "id": "001efded-35bc-422a-8ee3-11d4f5352f5a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ba144f8a-a17a-4840-83b9-c2041049daeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f660747a-465a-492f-b49b-c69cfed9845b",
        "cursor": {
          "ref": "80f71e4b-3b15-48b1-a8cb-a0c65b960905",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "716b23d6-58ab-4474-a4db-316a0a5e7abd"
        },
        "item": {
          "id": "f660747a-465a-492f-b49b-c69cfed9845b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5ef38b85-1cc5-4ec5-8295-ae79c5d1fcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5d278a-b31c-4894-b326-6a65b194c276",
        "cursor": {
          "ref": "420e65c4-64f5-4b09-a0db-2ba5e417c758",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "91237858-f0a1-499e-8718-7a7aac886c09"
        },
        "item": {
          "id": "9d5d278a-b31c-4894-b326-6a65b194c276",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "81c73e88-2b0c-4731-847b-864016f9b1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22c7eeb-7758-4ba1-90e1-0e933eb8483e",
        "cursor": {
          "ref": "b07471e6-f0d3-458a-af6c-9c4a0935e548",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "555cff1e-8c5b-4171-87d7-38236c1e00de"
        },
        "item": {
          "id": "d22c7eeb-7758-4ba1-90e1-0e933eb8483e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bb214dbe-4b88-42de-9ed9-3a99a7cd0dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb89d2b-ccc7-4d68-b906-8e73e8d7e0d4",
        "cursor": {
          "ref": "b27291f4-ddf5-4826-b33a-2718bc95b804",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2326ed1c-19da-4a2d-b0a4-7df5408c5e40"
        },
        "item": {
          "id": "6bb89d2b-ccc7-4d68-b906-8e73e8d7e0d4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a947f46c-871d-4dc1-9c4c-ac7bbb0b8c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4975b63-f586-44da-8fd9-34fea57b0f75",
        "cursor": {
          "ref": "b4a93e4b-b357-4408-a40c-11a71bdc3ce8",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "bd0fe445-b4ee-43fc-8d7b-1a279c8194ec"
        },
        "item": {
          "id": "e4975b63-f586-44da-8fd9-34fea57b0f75",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f5999e24-48d1-49c8-b644-aadc47f336b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468247cc-cd0f-4ceb-aab3-d0b06745b390",
        "cursor": {
          "ref": "4b375c5d-2903-4856-9e63-f7615d9c1a45",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "699a63c1-594b-4c2e-8fdd-30f27c7baf9a"
        },
        "item": {
          "id": "468247cc-cd0f-4ceb-aab3-d0b06745b390",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b670f8a4-f38f-48f6-be97-e2a8f9aa949e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d24d9d5-48b6-4f2a-a55b-cb2e345b969d",
        "cursor": {
          "ref": "6972ddcf-7993-4ae4-85f7-e6a101eead0e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a69441a5-6fdb-4146-8f04-7b5af19a649d"
        },
        "item": {
          "id": "5d24d9d5-48b6-4f2a-a55b-cb2e345b969d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ea57a954-ecb5-446b-ab26-ed32e60bfb21",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f3fe2c-ae19-4ffb-a6b3-24e057ab7d12",
        "cursor": {
          "ref": "a2b5d944-72bb-4f6a-96da-9a870c7f2862",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ba7be183-61df-402b-b1e5-64f75740f1f6"
        },
        "item": {
          "id": "85f3fe2c-ae19-4ffb-a6b3-24e057ab7d12",
          "name": "credentials_verify"
        },
        "response": {
          "id": "eeef0b70-a93c-4191-af4e-76c4f4e88b96",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dca2765-8d54-45f7-ae9e-7e2c8482727d",
        "cursor": {
          "ref": "65740f7e-adbd-4034-812a-e5b05a7d8ec4",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6826fb31-0f88-48ab-bbff-3938e9ec4f69"
        },
        "item": {
          "id": "9dca2765-8d54-45f7-ae9e-7e2c8482727d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b6ec4d4c-d9f3-4a7b-bcfd-997357c75050",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b2f0fd-dd39-411d-8834-d95441da2c11",
        "cursor": {
          "ref": "3cf2663a-0672-4a9d-8a9b-620da1cb5dee",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "52313214-3abc-4187-afab-2c8f6daef608"
        },
        "item": {
          "id": "78b2f0fd-dd39-411d-8834-d95441da2c11",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2dab7ea-f743-46fa-9d3e-4ddf27a97ecf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b2f0fd-dd39-411d-8834-d95441da2c11",
        "cursor": {
          "ref": "3cf2663a-0672-4a9d-8a9b-620da1cb5dee",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "52313214-3abc-4187-afab-2c8f6daef608"
        },
        "item": {
          "id": "78b2f0fd-dd39-411d-8834-d95441da2c11",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2dab7ea-f743-46fa-9d3e-4ddf27a97ecf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e68e41-2c6a-4d0f-9da7-a32f6e1b9c66",
        "cursor": {
          "ref": "50abbdf7-44c9-45a6-9a9a-a73878793507",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "02b0edc5-ab4e-402f-953f-4a50adf556d0"
        },
        "item": {
          "id": "45e68e41-2c6a-4d0f-9da7-a32f6e1b9c66",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "edfec387-8d98-4c9d-b5e6-4ca14e75e837",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571f44cd-13b6-485b-8bbf-1fea3606f5d8",
        "cursor": {
          "ref": "2c138b16-dbfd-418b-9848-b6be779bfb0e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "91d3413d-b3c6-4c3f-bc12-6d63f51c0dd3"
        },
        "item": {
          "id": "571f44cd-13b6-485b-8bbf-1fea3606f5d8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4f82728c-d53b-4a61-a842-348fc0731bcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}